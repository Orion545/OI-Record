
;; Function void __tcf_2() (__tcf_2, funcdef_no=6108, decl_uid=80894, symbol_order=3645)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 5 (    1)


void __tcf_2()

Dataflow summary:
def_info->table_size = 0, use_info->table_size = 22
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 29 [mm0] 30 [mm1] 31 [mm2]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 7[sp] 17[flags]
;;  ref usage 	r0={2d} r1={2d} r2={2d} r6={1d,4u} r7={1d,7u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,3u} r17={2d,1u} r18={1d} r19={1d} r20={1d,4u} r21={2d} r22={2d} r23={2d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={2d} r30={2d} r31={2d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r83={1d,2u} 
;;    total ref usage 106{85d,21u,0e} in 5{4 regular + 1 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(6){ }d-1(7){ }d-1(16){ }d-1(20){ }d-1(21){ }d-1(22){ }d-1(23){ }d-1(29){ }d-1(30){ }d-1(31){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 29 [mm0] 30 [mm1] 31 [mm2]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 29 [mm0] 30 [mm1] 31 [mm2]
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

( 0 )->[2]->( 3 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 83
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 17 [flags] 83 84
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83

( 2 )->[3]->( 4 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u7(6){ }u8(7){ }u9(16){ }u10(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83
;; live  gen 	
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

( 3 2 )->[4]->( 1 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u15(6){ }u16(7){ }u17(16){ }u18(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

( 4 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u19(6){ }u20(7){ }u21(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 8 to worklist
  Adding insn 11 to worklist
  Adding insn 10 to worklist
Finished finding needed instructions:
processing block 4 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame]
processing block 3 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame]
processing block 2 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 83
  Adding insn 7 to worklist
  Adding insn 6 to worklist
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 5 (    1)
changing bb of uid 16
  unscanned insn
verify found no changes in insn with uid = 8.
Edge 2->4 redirected to 5
Implicit set of reg 83 in basic block 5
Found 1 implicit sets
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 6 (    1)


void __tcf_2()

Dataflow summary:
def_info->table_size = 0, use_info->table_size = 22
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 29 [mm0] 30 [mm1] 31 [mm2]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 7[sp] 17[flags]
;;  ref usage 	r0={2d} r1={2d} r2={2d} r6={1d,5u} r7={1d,8u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,4u} r17={2d,1u} r18={1d} r19={1d} r20={1d,5u} r21={2d} r22={2d} r23={2d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={2d} r30={2d} r31={2d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r83={1d,2u} 
;;    total ref usage 110{85d,25u,0e} in 5{4 regular + 1 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(6){ }d-1(7){ }d-1(16){ }d-1(20){ }d-1(21){ }d-1(22){ }d-1(23){ }d-1(29){ }d-1(30){ }d-1(31){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 29 [mm0] 30 [mm1] 31 [mm2]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 29 [mm0] 30 [mm1] 31 [mm2]
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

( 0 )->[2]->( 3 5 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 83
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 17 [flags] 83
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83

( 2 )->[5]->( 4 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
;; live  in  	
;; live  gen 	
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	

( 2 )->[3]->( 4 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u7(6){ }u8(7){ }u9(16){ }u10(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83
;; live  gen 	
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

( 3 5 )->[4]->( 1 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u15(6){ }u16(7){ }u17(16){ }u18(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

( 4 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u19(6){ }u20(7){ }u21(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 8 to worklist
  Adding insn 11 to worklist
  Adding insn 10 to worklist
Finished finding needed instructions:
processing block 4 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame]
processing block 3 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame]
processing block 5 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame]
processing block 2 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 83
  Adding insn 7 to worklist
  Adding insn 6 to worklist
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 6 (    1)
SET hash table (11 buckets, 1 entries)
Index 0 (hash value 6)
  (reg/f:SI 83 [ D.83037 ]) := (const_int 0 [0])

CPROP of void __tcf_2(), 6 basic blocks, 56 bytes needed, 0 local const props, 0 local copy props, 0 global const props, 0 global copy props



try_optimize_cfg iteration 1

verify found no changes in insn with uid = 8.
Edge 2->3 redirected to 5
deleting block 3


try_optimize_cfg iteration 2



try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns


void __tcf_2()

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 29 [mm0] 30 [mm1] 31 [mm2]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 7[sp] 17[flags]
;;  ref usage 	r0={2d} r1={2d} r2={2d} r6={1d,4u} r7={1d,7u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,3u} r17={2d,1u} r18={1d} r19={1d} r20={1d,4u} r21={2d} r22={2d} r23={2d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={2d} r30={2d} r31={2d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r83={1d,2u} 
;;    total ref usage 106{85d,21u,0e} in 5{4 regular + 1 call} insns.
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 4, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 83
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 17 [flags] 83
;; live  kill	
(note 3 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 2 7 2 (set (reg/f:SI 83 [ D.83037 ])
        (mem/f/c:SI (symbol_ref:SI ("num") [flags 0x2]  <var_decl 06e5dae0 num>) [6 MEM[(int * *)&num]+0 S4 A32])) 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 84)
        (nil)))
(insn 7 6 8 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:SI 83 [ D.83037 ])
            (const_int 0 [0]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_vector.h:177 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 8 7 9 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 14)
            (pc))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_vector.h:177 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 2165 (nil)))
 -> 14)
;;  succ:       4 [78.3%]  (FALLTHRU)
;;              5 [21.6%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83

;; basic block 4, loop depth 0, count 0, freq 7835, maybe hot
;;  prev block 2, next block 5, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [78.3%]  (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u7(6){ }u8(7){ }u9(16){ }u10(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83
;; live  gen 	
;; live  kill	
(note 9 8 10 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 10 9 11 4 (set (mem:SI (reg/f:SI 7 sp) [0  S4 A32])
        (reg/f:SI 83 [ D.83037 ])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/ext/new_allocator.h:110 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 83 [ D.83037 ])
        (nil)))
(call_insn 11 10 14 4 (call (mem:QI (symbol_ref:SI ("_ZdlPv") [flags 0x43]  <function_decl 01938e00 operator delete>) [0 operator delete S1 A8])
        (const_int 4 [0x4])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/ext/new_allocator.h:110 641 {*call}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (mem/f:SI (reg/f:SI 7 sp) [0  S4 A32]))
        (nil)))
;;  succ:       5 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 4, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       4 [100.0%]  (FALLTHRU)
;;              2 [21.6%] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u15(6){ }u16(7){ }u17(16){ }u18(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	
;; live  kill	
(code_label 14 11 15 5 1 "" [1 uses])
(note 15 14 0 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function int printf(const char*, ...) (_ZL6printfPKcz, funcdef_no=417, decl_uid=944, symbol_order=134)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


int printf(const char*, ...)

Dataflow summary:
def_info->table_size = 0, use_info->table_size = 24
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 29 [mm0] 30 [mm1] 31 [mm2]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 7[sp] 17[flags]
;;  ref usage 	r0={3d,3u} r1={2d} r2={2d} r6={1d,2u} r7={1d,7u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,3u,1e} r17={2d} r18={1d} r19={1d} r20={1d,2u} r21={2d} r22={2d} r23={2d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={2d} r30={2d} r31={2d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r83={1d,1u} r86={1d,1u} r87={1d,1u} 
;;    total ref usage 109{88d,20u,1e} in 8{7 regular + 1 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(6){ }d-1(7){ }d-1(16){ }d-1(20){ }d-1(21){ }d-1(22){ }d-1(23){ }d-1(29){ }d-1(30){ }d-1(31){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 29 [mm0] 30 [mm1] 31 [mm2]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 29 [mm0] 30 [mm1] 31 [mm2]
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 83 86 87
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 0 [ax] 83 84 85 86 87
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u20(0){ }u21(6){ }u22(7){ }u23(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 17 to worklist
  Adding insn 10 to worklist
  Adding insn 9 to worklist
  Adding insn 8 to worklist
Finished finding needed instructions:
processing block 2 lr out =  0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
  Adding insn 16 to worklist
  Adding insn 11 to worklist
  Adding insn 6 to worklist
  Adding insn 2 to worklist
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
starting the processing of deferred insns
ending the processing of deferred insns


int printf(const char*, ...)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 29 [mm0] 30 [mm1] 31 [mm2]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 7[sp] 17[flags]
;;  ref usage 	r0={3d,3u} r1={2d} r2={2d} r6={1d,2u} r7={1d,7u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,3u,1e} r17={2d} r18={1d} r19={1d} r20={1d,2u} r21={2d} r22={2d} r23={2d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={2d} r30={2d} r31={2d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r83={1d,1u} r86={1d,1u} r87={1d,1u} 
;;    total ref usage 109{88d,20u,1e} in 8{7 regular + 1 call} insns.
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 83 86 87
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 0 [ax] 83 86 87
;; live  kill	 17 [flags]
(note 4 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (reg/v/f:SI 86 [ __format ])
        (mem/f/c:SI (reg/f:SI 16 argp) [6 __format+0 S4 A32])) D:/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/stdio.h:297 90 {*movsi_internal}
     (expr_list:REG_EQUIV (mem/f/c:SI (reg/f:SI 16 argp) [6 __format+0 S4 A32])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 8 2 (parallel [
            (set (reg/f:SI 87)
                (plus:SI (reg/f:SI 16 argp)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) D:/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/stdio.h:299 220 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 8 6 9 2 (set (mem:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [0  S4 A32])
        (reg/f:SI 87)) D:/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/stdio.h:300 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 87)
        (nil)))
(insn 9 8 10 2 (set (mem:SI (reg/f:SI 7 sp) [0  S4 A32])
        (reg/v/f:SI 86 [ __format ])) D:/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/stdio.h:300 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v/f:SI 86 [ __format ])
        (nil)))
(call_insn 10 9 11 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("__mingw_vprintf") [flags 0x43]  <function_decl 02668200 __mingw_vprintf>) [0 __mingw_vprintf S1 A8])
            (const_int 8 [0x8]))) D:/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/stdio.h:300 648 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (mem/f:SI (reg/f:SI 7 sp) [0  S4 A32]))
        (expr_list:SI (use (mem/f:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 4 [0x4])) [0  S4 A32]))
            (nil))))
(insn 11 10 16 2 (set (reg/v:SI 83 [ __retval ])
        (reg:SI 0 ax)) D:/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/stdio.h:300 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 16 11 17 2 (set (reg/i:SI 0 ax)
        (reg/v:SI 83 [ __retval ])) D:/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/stdio.h:303 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 83 [ __retval ])
        (nil)))
(insn 17 16 0 2 (use (reg/i:SI 0 ax)) D:/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/stdio.h:303 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void __tcf_0() (__tcf_0, funcdef_no=6103, decl_uid=80872, symbol_order=3640)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
starting the processing of deferred insns
ending the processing of deferred insns


void __tcf_0()

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 29 [mm0] 30 [mm1] 31 [mm2]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 2[cx] 7[sp]
;;  ref usage 	r0={2d} r1={2d} r2={3d,1u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,2u} r21={2d} r22={2d} r23={2d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={2d} r30={2d} r31={2d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} 
;;    total ref usage 93{84d,9u,0e} in 2{1 regular + 1 call} insns.
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 2 [cx]
;; live  kill	
(note 3 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:SI 2 cx)
        (symbol_ref:SI ("_ZStL8__ioinit") [flags 0x2]  <var_decl 035d1180 __ioinit>)) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/iostream:74 90 {*movsi_internal}
     (nil))
(call_insn/j 6 5 0 2 (call (mem:QI (symbol_ref:SI ("_ZNSt8ios_base4InitD1Ev") [flags 0x43]  <function_decl 032bbc80 __comp_dtor >) [0 __comp_dtor  S1 A8])
        (const_int 0 [0])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/iostream:74 644 {*sibcall}
     (expr_list:REG_DEAD (reg:SI 2 cx)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:SI (use (reg:SI 2 cx))
        (nil)))
;;  succ:       EXIT [100.0%]  (ABNORMAL,SIBCALL)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function long long unsigned int qpow(long long unsigned int, long long unsigned int) (_Z4qpowyy, funcdef_no=5705, decl_uid=72664, symbol_order=3171)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 9 n_edges 11 count 10 (  1.1)


long long unsigned int qpow(long long unsigned int, long long unsigned int)

Dataflow summary:
def_info->table_size = 0, use_info->table_size = 74
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 29 [mm0] 30 [mm1] 31 [mm2]
;;  exit block uses 	 0 [ax] 1 [dx] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 17[flags]
;;  ref usage 	r0={2d,2u} r1={2d,2u} r2={1d} r6={1d,8u} r7={1d,8u} r16={1d,9u} r17={16d,3u} r20={1d,8u} r21={1d} r22={1d} r23={1d} r29={1d} r30={1d} r31={1d} r83={4d,6u} r86={3d,9u} r87={2d,6u} r88={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} r101={1d,1u} 
;;    total ref usage 121{50d,71u,0e} in 27{27 regular + 0 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(6){ }d-1(7){ }d-1(16){ }d-1(20){ }d-1(21){ }d-1(22){ }d-1(23){ }d-1(29){ }d-1(30){ }d-1(31){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 29 [mm0] 30 [mm1] 31 [mm2]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 29 [mm0] 30 [mm1] 31 [mm2]
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

( 0 )->[2]->( 3 7 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 86 87 88
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 17 [flags] 86 87 88
;; live  kill	 17 [flags]
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 87
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 87

( 2 )->[3]->( 4 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u10(6){ }u11(7){ }u12(16){ }u13(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 87
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 83
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 87
;; live  gen 	 83
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 86 87
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 86 87

( 3 6 )->[4]->( 5 6 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u14(6){ }u15(7){ }u16(16){ }u17(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 86 87
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; lr  def 	 17 [flags] 101
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 86 87
;; live  gen 	 17 [flags] 90 101 102
;; live  kill	 17 [flags]
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 86 87
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 86 87

( 4 )->[5]->( 6 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u22(6){ }u23(7){ }u24(16){ }u25(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 86 87
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 86
;; lr  def 	 17 [flags] 83 91 92 93 94
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 86 87
;; live  gen 	 83 91 92 93 94
;; live  kill	 17 [flags]
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 86 87
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 86 87

( 4 5 )->[6]->( 4 8 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u38(6){ }u39(7){ }u40(16){ }u41(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 86 87
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 87
;; lr  def 	 17 [flags] 86 87 95 97 98 99
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 86 87
;; live  gen 	 17 [flags] 86 87 95 96 97 98 99
;; live  kill	 17 [flags]
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 86 87
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 86 87

( 2 )->[7]->( 8 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u57(6){ }u58(7){ }u59(16){ }u60(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 83
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 83
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83

( 7 6 )->[8]->( 1 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u61(6){ }u62(7){ }u63(16){ }u64(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83
;; lr  def 	 0 [ax] 1 [dx]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83
;; live  gen 	 0 [ax] 1 [dx] 85
;; live  kill	
;; lr  out 	 0 [ax] 1 [dx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 1 [dx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

( 8 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u69(0){ }u70(1){ }u71(6){ }u72(7){ }u73(20){ }}
;; lr  in  	 0 [ax] 1 [dx] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 0 [ax] 1 [dx] 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 0 [ax] 1 [dx] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 11 to worklist
  Adding insn 18 to worklist
  Adding insn 40 to worklist
  Adding insn 48 to worklist
Finished finding needed instructions:
processing block 8 lr out =  0 [ax] 1 [dx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
  Adding insn 47 to worklist
processing block 6 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 86 87
  Adding insn 39 to worklist
  Adding insn 38 to worklist
  Adding insn 36 to worklist
  Adding insn 34 to worklist
  Adding insn 33 to worklist
  Adding insn 32 to worklist
  Adding insn 31 to worklist
  Adding insn 29 to worklist
processing block 5 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 86 87
  Adding insn 25 to worklist
  Adding insn 24 to worklist
  Adding insn 23 to worklist
  Adding insn 22 to worklist
  Adding insn 21 to worklist
  Adding insn 20 to worklist
processing block 4 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 86 87
  Adding insn 17 to worklist
  Adding insn 14 to worklist
processing block 3 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 86 87
  Adding insn 5 to worklist
processing block 7 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 83
  Adding insn 6 to worklist
processing block 2 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 87
  Adding insn 10 to worklist
  Adding insn 9 to worklist
  Adding insn 3 to worklist
  Adding insn 2 to worklist
df_worklist_dataflow_doublequeue:n_basic_blocks 9 n_edges 11 count 10 (  1.1)
Implicit set of reg 88 in basic block 7
changing bb of uid 55
  unscanned insn
verify found no changes in insn with uid = 18.
Edge 4->6 redirected to 9
Implicit set of reg 101 in basic block 9
changing bb of uid 57
  unscanned insn
Redirecting fallthru edge 6->8 to 10
Implicit set of reg 99 in basic block 10
Found 3 implicit sets
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 11 n_edges 13 count 12 (  1.1)


long long unsigned int qpow(long long unsigned int, long long unsigned int)

Dataflow summary:
def_info->table_size = 0, use_info->table_size = 74
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 29 [mm0] 30 [mm1] 31 [mm2]
;;  exit block uses 	 0 [ax] 1 [dx] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 17[flags]
;;  ref usage 	r0={2d,2u} r1={2d,2u} r2={1d} r6={1d,10u} r7={1d,10u} r16={1d,11u} r17={16d,3u} r20={1d,10u} r21={1d} r22={1d} r23={1d} r29={1d} r30={1d} r31={1d} r83={4d,6u} r86={3d,9u} r87={2d,6u} r88={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} r101={1d,1u} 
;;    total ref usage 129{50d,79u,0e} in 27{27 regular + 0 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(6){ }d-1(7){ }d-1(16){ }d-1(20){ }d-1(21){ }d-1(22){ }d-1(23){ }d-1(29){ }d-1(30){ }d-1(31){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 29 [mm0] 30 [mm1] 31 [mm2]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 29 [mm0] 30 [mm1] 31 [mm2]
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

( 0 )->[2]->( 3 7 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 86 87 88
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 17 [flags] 86 87 88
;; live  kill	 17 [flags]
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 87
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 87

( 2 )->[3]->( 4 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u10(6){ }u11(7){ }u12(16){ }u13(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 87
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 83
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 87
;; live  gen 	 83
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 86 87
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 86 87

( 3 6 )->[4]->( 5 9 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u14(6){ }u15(7){ }u16(16){ }u17(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 86 87
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; lr  def 	 17 [flags] 101
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 86 87
;; live  gen 	 17 [flags] 101
;; live  kill	 17 [flags]
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 86 87
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 86 87

( 4 )->[9]->( 6 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 86 87
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
;; live  in  	
;; live  gen 	
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 86 87
;; live  out 	

( 4 )->[5]->( 6 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u22(6){ }u23(7){ }u24(16){ }u25(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 86 87
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 86
;; lr  def 	 17 [flags] 83 91 92 93 94
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 86 87
;; live  gen 	 83 91 92 93 94
;; live  kill	 17 [flags]
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 86 87
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 86 87

( 9 5 )->[6]->( 4 10 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u38(6){ }u39(7){ }u40(16){ }u41(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 86 87
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 87
;; lr  def 	 17 [flags] 86 87 95 97 98 99
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 86 87
;; live  gen 	 17 [flags] 86 87 95 97 98 99
;; live  kill	 17 [flags]
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 86 87
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 86 87

( 6 )->[10]->( 8 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
;; live  in  	
;; live  gen 	
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83
;; live  out 	

( 2 )->[7]->( 8 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u57(6){ }u58(7){ }u59(16){ }u60(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 83
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 83
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83

( 7 10 )->[8]->( 1 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u61(6){ }u62(7){ }u63(16){ }u64(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83
;; lr  def 	 0 [ax] 1 [dx]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83
;; live  gen 	 0 [ax] 1 [dx]
;; live  kill	
;; lr  out 	 0 [ax] 1 [dx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 1 [dx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

( 8 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u69(0){ }u70(1){ }u71(6){ }u72(7){ }u73(20){ }}
;; lr  in  	 0 [ax] 1 [dx] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 0 [ax] 1 [dx] 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 0 [ax] 1 [dx] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 11 to worklist
  Adding insn 18 to worklist
  Adding insn 40 to worklist
  Adding insn 48 to worklist
Finished finding needed instructions:
processing block 8 lr out =  0 [ax] 1 [dx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
  Adding insn 47 to worklist
processing block 10 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 83
processing block 6 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 86 87
  Adding insn 39 to worklist
  Adding insn 38 to worklist
  Adding insn 36 to worklist
  Adding insn 34 to worklist
  Adding insn 33 to worklist
  Adding insn 32 to worklist
  Adding insn 31 to worklist
  Adding insn 29 to worklist
processing block 5 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 86 87
  Adding insn 25 to worklist
  Adding insn 24 to worklist
  Adding insn 23 to worklist
  Adding insn 22 to worklist
  Adding insn 21 to worklist
  Adding insn 20 to worklist
processing block 9 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 86 87
processing block 4 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 86 87
  Adding insn 17 to worklist
  Adding insn 14 to worklist
processing block 3 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 86 87
  Adding insn 5 to worklist
processing block 7 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 83
  Adding insn 6 to worklist
processing block 2 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 87
  Adding insn 10 to worklist
  Adding insn 9 to worklist
  Adding insn 3 to worklist
  Adding insn 2 to worklist
df_worklist_dataflow_doublequeue:n_basic_blocks 11 n_edges 13 count 12 (  1.1)
SET hash table (15 buckets, 4 entries)
Index 0 (hash value 8)
  (reg/v:DI 83 [ re ]) := (const_int 1 [0x1])
Index 1 (hash value 11)
  (reg:SI 101 [ D.83044 ]) := (const_int 0 [0])
Index 2 (hash value 9)
  (reg:SI 99) := (const_int 0 [0])
Index 3 (hash value 13)
  (reg:SI 88) := (const_int 0 [0])

CPROP of long long unsigned int qpow(long long unsigned int, long long unsigned int), 11 basic blocks, 240 bytes needed, 0 local const props, 0 local copy props, 0 global const props, 0 global copy props



try_optimize_cfg iteration 1

verify found no changes in insn with uid = 18.
Edge 4->5 redirected to 7
deleting block 5
Redirecting fallthru edge 7->8 to 10
deleting block 8


try_optimize_cfg iteration 2



try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns


long long unsigned int qpow(long long unsigned int, long long unsigned int)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 29 [mm0] 30 [mm1] 31 [mm2]
;;  exit block uses 	 0 [ax] 1 [dx] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 17[flags]
;;  ref usage 	r0={2d,2u} r1={2d,2u} r2={1d} r6={1d,8u} r7={1d,8u} r16={1d,9u} r17={16d,3u} r20={1d,8u} r21={1d} r22={1d} r23={1d} r29={1d} r30={1d} r31={1d} r83={4d,6u} r86={3d,9u} r87={2d,6u} r88={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} r101={1d,1u} 
;;    total ref usage 121{50d,71u,0e} in 27{27 regular + 0 call} insns.
;; basic block 2, loop depth 0, count 0, freq 900, maybe hot
;;  prev block 0, next block 3, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 86 87 88
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 17 [flags] 86 87 88
;; live  kill	 17 [flags]
(note 7 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (reg/v:DI 86 [ a ])
        (mem/c:DI (reg/f:SI 16 argp) [34 a+0 S8 A32])) D:\LHX\7.5 contest\t1.cpp:24 89 {*movdi_internal}
     (nil))
(insn 3 2 4 2 (set (reg/v:DI 87 [ b ])
        (mem/c:DI (plus:SI (reg/f:SI 16 argp)
                (const_int 8 [0x8])) [34 b+0 S8 A32])) D:\LHX\7.5 contest\t1.cpp:24 89 {*movdi_internal}
     (nil))
(note 4 3 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 4 10 2 (parallel [
            (set (reg:SI 88)
                (ior:SI (subreg:SI (reg/v:DI 87 [ b ]) 4)
                    (subreg:SI (reg/v:DI 87 [ b ]) 0)))
            (clobber (reg:CC 17 flags))
        ]) D:\LHX\7.5 contest\t1.cpp:26 388 {*iorsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 10 9 11 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 88)
            (const_int 0 [0]))) D:\LHX\7.5 contest\t1.cpp:26 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 88)
        (nil)))
(jump_insn 11 10 12 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 54)
            (pc))) D:\LHX\7.5 contest\t1.cpp:26 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 900 (nil)))
 -> 54)
;;  succ:       3 [91.0%]  (FALLTHRU)
;;              9 [9.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 87
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 87

;; basic block 3, loop depth 0, count 0, freq 819, maybe hot
;;  prev block 2, next block 4, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [91.0%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u10(6){ }u11(7){ }u12(16){ }u13(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 87
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 83
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 87
;; live  gen 	 83
;; live  kill	
(note 12 11 5 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 5 12 37 3 (set (reg/v:DI 83 [ re ])
        (const_int 1 [0x1])) D:\LHX\7.5 contest\t1.cpp:26 89 {*movdi_internal}
     (nil))
;;  succ:       4 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 86 87
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 86 87

;; basic block 4, loop depth 1, count 0, freq 9100, maybe hot
;;  prev block 3, next block 6, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       3 [100.0%]  (FALLTHRU)
;;              7 [91.0%]  (DFS_BACK)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u14(6){ }u15(7){ }u16(16){ }u17(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 86 87
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; lr  def 	 17 [flags] 101
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 86 87
;; live  gen 	 17 [flags] 101
;; live  kill	 17 [flags]
(code_label 37 5 13 4 16 "" [1 uses])
(note 13 37 14 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 14 13 17 4 (parallel [
            (set (reg:SI 101 [ D.83044 ])
                (and:SI (subreg:SI (reg/v:DI 87 [ b ]) 0)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) D:\LHX\7.5 contest\t1.cpp:27 370 {*andsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 17 14 18 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 101 [ D.83044 ])
            (const_int 0 [0]))) D:\LHX\7.5 contest\t1.cpp:27 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 101 [ D.83044 ])
        (nil)))
(jump_insn 18 17 19 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 27)
            (pc))) D:\LHX\7.5 contest\t1.cpp:27 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 27)
;;  succ:       6 [50.0%]  (FALLTHRU)
;;              7 [50.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 86 87
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 86 87

;; basic block 6, loop depth 1, count 0, freq 4550, maybe hot
;;  prev block 4, next block 7, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       4 [50.0%]  (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u22(6){ }u23(7){ }u24(16){ }u25(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 86 87
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 86
;; lr  def 	 17 [flags] 83 91 92 93 94
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 86 87
;; live  gen 	 83 91 92 93 94
;; live  kill	 17 [flags]
(note 19 18 20 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 20 19 21 6 (parallel [
            (set (reg:SI 91)
                (mult:SI (subreg:SI (reg/v:DI 83 [ re ]) 4)
                    (subreg:SI (reg/v:DI 86 [ a ]) 0)))
            (clobber (reg:CC 17 flags))
        ]) D:\LHX\7.5 contest\t1.cpp:27 306 {*mulsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 21 20 22 6 (parallel [
            (set (reg:SI 92)
                (mult:SI (subreg:SI (reg/v:DI 86 [ a ]) 4)
                    (subreg:SI (reg/v:DI 83 [ re ]) 0)))
            (clobber (reg:CC 17 flags))
        ]) D:\LHX\7.5 contest\t1.cpp:27 306 {*mulsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 22 21 23 6 (parallel [
            (set (reg:SI 93)
                (plus:SI (reg:SI 91)
                    (reg:SI 92)))
            (clobber (reg:CC 17 flags))
        ]) D:\LHX\7.5 contest\t1.cpp:27 220 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 92)
        (expr_list:REG_DEAD (reg:SI 91)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 23 22 24 6 (parallel [
            (set (reg/v:DI 83 [ re ])
                (mult:DI (zero_extend:DI (subreg:SI (reg/v:DI 83 [ re ]) 0))
                    (zero_extend:DI (subreg:SI (reg/v:DI 86 [ a ]) 0))))
            (clobber (reg:CC 17 flags))
        ]) D:\LHX\7.5 contest\t1.cpp:27 323 {*umulsidi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 24 23 25 6 (parallel [
            (set (reg:SI 94)
                (plus:SI (reg:SI 93)
                    (subreg:SI (reg/v:DI 83 [ re ]) 4)))
            (clobber (reg:CC 17 flags))
        ]) D:\LHX\7.5 contest\t1.cpp:27 220 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 93)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 25 24 27 6 (set (subreg:SI (reg/v:DI 83 [ re ]) 4)
        (reg:SI 94)) D:\LHX\7.5 contest\t1.cpp:27 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 94)
        (nil)))
;;  succ:       7 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 86 87
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 86 87

;; basic block 7, loop depth 1, count 0, freq 9100, maybe hot
;;  prev block 6, next block 9, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       4 [50.0%] 
;;              6 [100.0%]  (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u38(6){ }u39(7){ }u40(16){ }u41(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 86 87
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 87
;; lr  def 	 17 [flags] 86 87 95 97 98 99
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 86 87
;; live  gen 	 17 [flags] 86 87 95 97 98 99
;; live  kill	 17 [flags]
(code_label 27 25 28 7 15 "" [1 uses])
(note 28 27 29 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 29 28 31 7 (parallel [
            (set (reg:SI 95)
                (mult:SI (subreg:SI (reg/v:DI 86 [ a ]) 4)
                    (subreg:SI (reg/v:DI 86 [ a ]) 0)))
            (clobber (reg:CC 17 flags))
        ]) D:\LHX\7.5 contest\t1.cpp:28 306 {*mulsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 31 29 32 7 (parallel [
            (set (reg:SI 97)
                (ashift:SI (reg:SI 95)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) D:\LHX\7.5 contest\t1.cpp:28 496 {*ashlsi3_1}
     (expr_list:REG_DEAD (reg:SI 95)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 32 31 33 7 (parallel [
            (set (reg/v:DI 86 [ a ])
                (mult:DI (zero_extend:DI (subreg:SI (reg/v:DI 86 [ a ]) 0))
                    (zero_extend:DI (subreg:SI (reg/v:DI 86 [ a ]) 0))))
            (clobber (reg:CC 17 flags))
        ]) D:\LHX\7.5 contest\t1.cpp:28 323 {*umulsidi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 33 32 34 7 (parallel [
            (set (reg:SI 98)
                (plus:SI (reg:SI 97)
                    (subreg:SI (reg/v:DI 86 [ a ]) 4)))
            (clobber (reg:CC 17 flags))
        ]) D:\LHX\7.5 contest\t1.cpp:28 220 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 97)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 34 33 36 7 (set (subreg:SI (reg/v:DI 86 [ a ]) 4)
        (reg:SI 98)) D:\LHX\7.5 contest\t1.cpp:28 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 98)
        (nil)))
(insn 36 34 38 7 (parallel [
            (set (reg/v:DI 87 [ b ])
                (lshiftrt:DI (reg/v:DI 87 [ b ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) D:\LHX\7.5 contest\t1.cpp:28 516 {*lshrdi3_doubleword}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 38 36 39 7 (parallel [
            (set (reg:SI 99)
                (ior:SI (subreg:SI (reg/v:DI 87 [ b ]) 4)
                    (subreg:SI (reg/v:DI 87 [ b ]) 0)))
            (clobber (reg:CC 17 flags))
        ]) D:\LHX\7.5 contest\t1.cpp:26 388 {*iorsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 39 38 40 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 99)
            (const_int 0 [0]))) D:\LHX\7.5 contest\t1.cpp:26 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 99)
        (nil)))
(jump_insn 40 39 54 7 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 37)
            (pc))) D:\LHX\7.5 contest\t1.cpp:26 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 9100 (nil)))
 -> 37)
;;  succ:       4 [91.0%]  (DFS_BACK)
;;              10 [9.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 86 87
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 86 87

;; basic block 9, loop depth 0, count 0, freq 81, maybe hot
;;  prev block 7, next block 10, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [9.0%] 
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u57(6){ }u58(7){ }u59(16){ }u60(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 83
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 83
;; live  kill	
(code_label 54 40 53 9 17 "" [1 uses])
(note 53 54 6 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 6 53 41 9 (set (reg/v:DI 83 [ re ])
        (const_int 1 [0x1])) D:\LHX\7.5 contest\t1.cpp:25 89 {*movdi_internal}
     (nil))
;;  succ:       10 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83

;; basic block 10, loop depth 0, count 0, freq 900, maybe hot
;;  prev block 9, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       9 [100.0%]  (FALLTHRU)
;;              7 [9.0%]  (FALLTHRU)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u61(6){ }u62(7){ }u63(16){ }u64(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83
;; lr  def 	 0 [ax] 1 [dx]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83
;; live  gen 	 0 [ax] 1 [dx]
;; live  kill	
(code_label 41 6 42 10 14 "" [0 uses])
(note 42 41 47 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 47 42 48 10 (set (reg/i:DI 0 ax)
        (reg/v:DI 83 [ re ])) D:\LHX\7.5 contest\t1.cpp:31 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v:DI 83 [ re ])
        (nil)))
(insn 48 47 0 10 (use (reg/i:DI 0 ax)) D:\LHX\7.5 contest\t1.cpp:31 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 1 [dx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 1 [dx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void std::vector<_Tp, _Alloc>::_M_emplace_back_aux(_Args&& ...) [with _Args = {const int&}; _Tp = int; _Alloc = std::allocator<int>] (_ZNSt6vectorIiSaIiEE19_M_emplace_back_auxIIRKiEEEvDpOT_, funcdef_no=5879, decl_uid=75856, symbol_order=3371)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 22 n_edges 30 count 23 (    1)


void std::vector<_Tp, _Alloc>::_M_emplace_back_aux(_Args&& ...) [with _Args = {const int&}; _Tp = int; _Alloc = std::allocator<int>]

Dataflow summary:
def_info->table_size = 0, use_info->table_size = 160
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 29 [mm0] 30 [mm1] 31 [mm2]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 2[cx] 7[sp] 17[flags]
;;  ref usage 	r0={3d,1u} r1={3d} r2={3d,1u} r6={1d,21u} r7={1d,27u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,21u,1e} r17={28d,9u} r18={2d} r19={2d} r20={1d,21u} r21={3d} r22={3d} r23={3d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={3d} r30={3d} r31={3d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r85={1d,1u} r87={1d,2u} r91={2d,6u} r92={2d,3u} r93={2d,7u} r94={1d,1u} r95={1d,1u} r97={2d,3u} r98={2d,5u} r104={4d,2u} r105={1d,3u} r109={3d,1u} r111={2d,2u,1e} r115={1d,7u} r116={1d,1u} r117={1d,4u} r118={1d,1u} r119={1d,1u,1e} r120={1d,1u} r121={1d,1u} r122={1d,1u} r123={1d,1u} 
;;    total ref usage 371{212d,156u,3e} in 60{58 regular + 2 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(6){ }d-1(7){ }d-1(16){ }d-1(20){ }d-1(21){ }d-1(22){ }d-1(23){ }d-1(29){ }d-1(30){ }d-1(31){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 29 [mm0] 30 [mm1] 31 [mm2]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 29 [mm0] 30 [mm1] 31 [mm2]
;; live  kill	
;; lr  out 	 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

( 0 )->[2]->( 6 3 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 93 98 111 115 116 117
;; live  in  	 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 17 [flags] 93 98 102 111 115 116 117
;; live  kill	 17 [flags]
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 93 98 111 115 116 117
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 93 98 111 115 116 117

( 2 )->[3]->( 7 4 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u16(6){ }u17(7){ }u18(16){ }u19(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 93 98 111 115 116 117
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 117
;; lr  def 	 17 [flags] 105
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 93 98 111 115 116 117
;; live  gen 	 17 [flags] 105
;; live  kill	 17 [flags]
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 93 98 105 111 115 116 117
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 93 98 105 111 115 116 117

( 3 )->[4]->( 8 5 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u24(6){ }u25(7){ }u26(16){ }u27(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 93 98 105 111 115 116 117
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 93 98 105 111 115 116 117
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 93 98 105 111 115 116 117
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 93 98 105 111 115 116 117

( 4 )->[5]->( 9 10 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u30(6){ }u31(7){ }u32(16){ }u33(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 93 98 105 111 115 116 117
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 117
;; lr  def 	 17 [flags] 104
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 93 98 105 111 115 116 117
;; live  gen 	 17 [flags] 104
;; live  kill	 17 [flags]
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 93 98 104 111 115 116
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 93 98 104 111 115 116

( 2 )->[6]->( 9 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u37(6){ }u38(7){ }u39(16){ }u40(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 115 116
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 104
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 115 116
;; live  gen 	 104
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104 115 116
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104 115 116

( 3 )->[7]->( 9 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u41(6){ }u42(7){ }u43(16){ }u44(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 115 116
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 104
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 115 116
;; live  gen 	 104
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104 115 116
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104 115 116

( 4 )->[8]->( 9 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u45(6){ }u46(7){ }u47(16){ }u48(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 115 116
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 104
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 115 116
;; live  gen 	 104
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104 115 116
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104 115 116

( 8 5 6 7 )->[9]->( 11 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u49(6){ }u50(7){ }u51(16){ }u52(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104 115 116
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104 115
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 91 93 98 109 111
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104 115 116
;; live  gen 	 0 [ax] 91 93 98 109 111
;; live  kill	 17 [flags]
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 93 98 104 109 111 115 116
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 93 98 104 109 111 115 116

( 5 )->[10]->( 11 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u63(6){ }u64(7){ }u65(16){ }u66(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 93 98 104 111 115 116
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 91 109
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 93 98 104 111 115 116
;; live  gen 	 91 109
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 93 98 104 109 111 115 116
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 93 98 104 109 111 115 116

( 10 9 )->[11]->( 12 13 )
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u67(6){ }u68(7){ }u69(16){ }u70(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 93 98 104 109 111 115 116
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 111 116
;; lr  def 	 17 [flags] 87 94
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 93 98 104 109 111 115 116
;; live  gen 	 17 [flags] 87 94
;; live  kill	 17 [flags]
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 91 93 94 98 104 109 115
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 91 93 94 98 104 109 115

( 11 )->[12]->( 13 )
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u76(6){ }u77(7){ }u78(16){ }u79(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 91 93 94 98 104 109 115
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 94
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 91 93 94 98 104 109 115
;; live  gen 	
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 93 98 104 109 115
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 93 98 104 109 115

( 11 12 )->[13]->( 14 19 )
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u82(6){ }u83(7){ }u84(16){ }u85(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 93 98 104 109 115
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 93 98
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 93 98 104 109 115
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 93 98 104 109 115
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 93 98 104 109 115

( 13 )->[14]->( 15 )
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u89(6){ }u90(7){ }u91(16){ }u92(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 93 98 104 115
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 93
;; lr  def 	 92 97
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 93 98 104 115
;; live  gen 	 92 97
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 92 93 97 98 104 115
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 92 93 97 98 104 115

( 14 17 )->[15]->( 16 17 )
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u95(6){ }u96(7){ }u97(16){ }u98(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 92 93 97 98 104 115
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92 97
;; lr  def 	 17 [flags] 95
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 92 93 97 98 104 115
;; live  gen 	 17 [flags] 95
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 92 93 95 97 98 104 115
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 92 93 95 97 98 104 115

( 15 )->[16]->( 17 )
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u102(6){ }u103(7){ }u104(16){ }u105(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 92 93 95 97 98 104 115
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 95 97
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 92 93 95 97 98 104 115
;; live  gen 	
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 92 93 97 98 104 115
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 92 93 97 98 104 115

( 15 16 )->[17]->( 15 18 )
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u108(6){ }u109(7){ }u110(16){ }u111(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 92 93 97 98 104 115
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92 97 98
;; lr  def 	 17 [flags] 92 97
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 92 93 97 98 104 115
;; live  gen 	 17 [flags] 92 97
;; live  kill	 17 [flags]
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 92 93 97 98 104 115
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 92 93 97 98 104 115

( 17 )->[18]->( 19 )
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u117(6){ }u118(7){ }u119(16){ }u120(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 93 98 104 115
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 93 98
;; lr  def 	 17 [flags] 85 109 118 119 120 121 122
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 93 98 104 115
;; live  gen 	 85 109 118 119 120 121 122
;; live  kill	 17 [flags]
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 93 104 109 115
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 93 104 109 115

( 18 13 )->[19]->( 20 21 )
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u131(6){ }u132(7){ }u133(16){ }u134(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 93 104 109 115
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 93
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 93 104 109 115
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 93 104 109 115
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 93 104 109 115

( 19 )->[20]->( 21 )
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u137(6){ }u138(7){ }u139(16){ }u140(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 93 104 109 115
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 93
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 93 104 109 115
;; live  gen 	
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 104 109 115
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 104 109 115

( 20 19 )->[21]->( 1 )
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u145(6){ }u146(7){ }u147(16){ }u148(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 104 109 115
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 104 109 115
;; lr  def 	 17 [flags] 123
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 104 109 115
;; live  gen 	 123
;; live  kill	 17 [flags]
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

( 21 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u157(6){ }u158(7){ }u159(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 19 to worklist
  Adding insn 23 to worklist
  Adding insn 26 to worklist
  Adding insn 30 to worklist
  Adding insn 34 to worklist
  Adding insn 33 to worklist
  Adding insn 45 to worklist
  Adding insn 47 to worklist
  Adding insn 51 to worklist
  Adding insn 57 to worklist
  Adding insn 59 to worklist
  Adding insn 66 to worklist
  Adding insn 79 to worklist
  Adding insn 82 to worklist
  Adding insn 81 to worklist
  Adding insn 88 to worklist
  Adding insn 86 to worklist
  Adding insn 85 to worklist
Finished finding needed instructions:
processing block 21 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame]
  Adding insn 87 to worklist
processing block 20 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 104 109 115
processing block 19 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 93 104 109 115
  Adding insn 78 to worklist
processing block 18 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 93 104 109 115
  Adding insn 75 to worklist
  Adding insn 74 to worklist
  Adding insn 72 to worklist
  Adding insn 71 to worklist
  Adding insn 70 to worklist
  Adding insn 69 to worklist
  Adding insn 68 to worklist
processing block 17 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 92 93 97 98 104 115
  Adding insn 65 to worklist
  Adding insn 63 to worklist
  Adding insn 62 to worklist
processing block 16 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 92 93 97 98 104 115
processing block 15 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 92 93 95 97 98 104 115
  Adding insn 56 to worklist
  Adding insn 55 to worklist
processing block 14 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 92 93 97 98 104 115
  Adding insn 10 to worklist
  Adding insn 53 to worklist
processing block 13 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 93 98 104 109 115
  Adding insn 50 to worklist
processing block 12 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 93 98 104 109 115
processing block 11 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 91 93 94 98 104 109 115
  Adding insn 44 to worklist
  Adding insn 43 to worklist
  Adding insn 42 to worklist
processing block 9 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 93 98 104 109 111 115 116
  Adding insn 39 to worklist
  Adding insn 38 to worklist
  Adding insn 37 to worklist
  Adding insn 36 to worklist
  Adding insn 35 to worklist
processing block 6 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 104 115 116
  Adding insn 7 to worklist
processing block 7 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 104 115 116
  Adding insn 6 to worklist
processing block 8 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 104 115 116
  Adding insn 5 to worklist
processing block 10 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 93 98 104 109 111 115 116
  Adding insn 9 to worklist
  Adding insn 8 to worklist
processing block 5 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 93 98 104 111 115 116
  Adding insn 29 to worklist
  Adding insn 28 to worklist
processing block 4 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 93 98 105 111 115 116 117
  Adding insn 25 to worklist
processing block 3 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 93 98 105 111 115 116 117
  Adding insn 22 to worklist
  Adding insn 21 to worklist
processing block 2 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 93 98 111 115 116 117
  Adding insn 18 to worklist
  Adding insn 16 to worklist
  Adding insn 15 to worklist
  Adding insn 14 to worklist
  Adding insn 13 to worklist
  Adding insn 3 to worklist
  Adding insn 2 to worklist
df_worklist_dataflow_doublequeue:n_basic_blocks 22 n_edges 30 count 23 (    1)
Implicit set of reg 117 in basic block 6
Implicit set of reg 105 in basic block 10
changing bb of uid 108
  unscanned insn
verify found no changes in insn with uid = 45.
Edge 11->13 redirected to 22
Implicit set of reg 87 in basic block 22
changing bb of uid 110
  unscanned insn
verify found no changes in insn with uid = 57.
Edge 15->17 redirected to 23
Implicit set of reg 97 in basic block 23
changing bb of uid 112
  unscanned insn
verify found no changes in insn with uid = 79.
Edge 19->21 redirected to 24
Implicit set of reg 93 in basic block 24
Found 5 implicit sets
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 25 n_edges 33 count 26 (    1)


void std::vector<_Tp, _Alloc>::_M_emplace_back_aux(_Args&& ...) [with _Args = {const int&}; _Tp = int; _Alloc = std::allocator<int>]

Dataflow summary:
def_info->table_size = 0, use_info->table_size = 160
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 29 [mm0] 30 [mm1] 31 [mm2]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 2[cx] 7[sp] 17[flags]
;;  ref usage 	r0={3d,1u} r1={3d} r2={3d,1u} r6={1d,24u} r7={1d,30u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,24u,1e} r17={28d,9u} r18={2d} r19={2d} r20={1d,24u} r21={3d} r22={3d} r23={3d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={3d} r30={3d} r31={3d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r85={1d,1u} r87={1d,2u} r91={2d,6u} r92={2d,3u} r93={2d,7u} r94={1d,1u} r95={1d,1u} r97={2d,3u} r98={2d,5u} r104={4d,2u} r105={1d,3u} r109={3d,1u} r111={2d,2u,1e} r115={1d,7u} r116={1d,1u} r117={1d,4u} r118={1d,1u} r119={1d,1u,1e} r120={1d,1u} r121={1d,1u} r122={1d,1u} r123={1d,1u} 
;;    total ref usage 383{212d,168u,3e} in 60{58 regular + 2 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(6){ }d-1(7){ }d-1(16){ }d-1(20){ }d-1(21){ }d-1(22){ }d-1(23){ }d-1(29){ }d-1(30){ }d-1(31){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 29 [mm0] 30 [mm1] 31 [mm2]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 29 [mm0] 30 [mm1] 31 [mm2]
;; live  kill	
;; lr  out 	 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

( 0 )->[2]->( 6 3 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 93 98 111 115 116 117
;; live  in  	 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 17 [flags] 93 98 111 115 116 117
;; live  kill	 17 [flags]
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 93 98 111 115 116 117
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 93 98 111 115 116 117

( 2 )->[3]->( 7 4 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u16(6){ }u17(7){ }u18(16){ }u19(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 93 98 111 115 116 117
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 117
;; lr  def 	 17 [flags] 105
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 93 98 111 115 116 117
;; live  gen 	 17 [flags] 105
;; live  kill	 17 [flags]
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 93 98 105 111 115 116 117
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 93 98 105 111 115 116 117

( 3 )->[4]->( 8 5 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u24(6){ }u25(7){ }u26(16){ }u27(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 93 98 105 111 115 116 117
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 93 98 105 111 115 116 117
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 93 98 105 111 115 116 117
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 93 98 105 111 115 116 117

( 4 )->[5]->( 9 10 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u30(6){ }u31(7){ }u32(16){ }u33(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 93 98 105 111 115 116 117
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 117
;; lr  def 	 17 [flags] 104
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 93 98 105 111 115 116 117
;; live  gen 	 17 [flags] 104
;; live  kill	 17 [flags]
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 93 98 104 111 115 116
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 93 98 104 111 115 116

( 2 )->[6]->( 9 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u37(6){ }u38(7){ }u39(16){ }u40(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 115 116
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 104
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 115 116
;; live  gen 	 104
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104 115 116
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104 115 116

( 3 )->[7]->( 9 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u41(6){ }u42(7){ }u43(16){ }u44(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 115 116
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 104
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 115 116
;; live  gen 	 104
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104 115 116
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104 115 116

( 4 )->[8]->( 9 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u45(6){ }u46(7){ }u47(16){ }u48(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 115 116
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 104
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 115 116
;; live  gen 	 104
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104 115 116
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104 115 116

( 8 5 6 7 )->[9]->( 11 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u49(6){ }u50(7){ }u51(16){ }u52(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104 115 116
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104 115
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 91 93 98 109 111
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104 115 116
;; live  gen 	 0 [ax] 91 93 98 109 111
;; live  kill	 17 [flags]
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 93 98 104 109 111 115 116
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 93 98 104 109 111 115 116

( 5 )->[10]->( 11 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u63(6){ }u64(7){ }u65(16){ }u66(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 93 98 104 111 115 116
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 91 109
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 93 98 104 111 115 116
;; live  gen 	 91 109
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 93 98 104 109 111 115 116
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 93 98 104 109 111 115 116

( 10 9 )->[11]->( 12 22 )
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u67(6){ }u68(7){ }u69(16){ }u70(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 93 98 104 109 111 115 116
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 111 116
;; lr  def 	 17 [flags] 87 94
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 93 98 104 109 111 115 116
;; live  gen 	 17 [flags] 87 94
;; live  kill	 17 [flags]
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 91 93 94 98 104 109 115
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 91 93 94 98 104 109 115

( 11 )->[22]->( 13 )
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 93 98 104 109 115
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
;; live  in  	
;; live  gen 	
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 93 98 104 109 115
;; live  out 	

( 11 )->[12]->( 13 )
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u76(6){ }u77(7){ }u78(16){ }u79(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 91 93 94 98 104 109 115
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 94
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 91 93 94 98 104 109 115
;; live  gen 	
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 93 98 104 109 115
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 93 98 104 109 115

( 22 12 )->[13]->( 14 19 )
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u82(6){ }u83(7){ }u84(16){ }u85(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 93 98 104 109 115
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 93 98
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 93 98 104 109 115
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 93 98 104 109 115
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 93 98 104 109 115

( 13 )->[14]->( 15 )
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u89(6){ }u90(7){ }u91(16){ }u92(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 93 98 104 115
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 93
;; lr  def 	 92 97
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 93 98 104 115
;; live  gen 	 92 97
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 92 93 97 98 104 115
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 92 93 97 98 104 115

( 14 17 )->[15]->( 16 23 )
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u95(6){ }u96(7){ }u97(16){ }u98(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 92 93 97 98 104 115
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92 97
;; lr  def 	 17 [flags] 95
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 92 93 97 98 104 115
;; live  gen 	 17 [flags] 95
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 92 93 95 97 98 104 115
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 92 93 95 97 98 104 115

( 15 )->[23]->( 17 )
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 92 93 97 98 104 115
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
;; live  in  	
;; live  gen 	
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 92 93 97 98 104 115
;; live  out 	

( 15 )->[16]->( 17 )
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u102(6){ }u103(7){ }u104(16){ }u105(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 92 93 95 97 98 104 115
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 95 97
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 92 93 95 97 98 104 115
;; live  gen 	
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 92 93 97 98 104 115
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 92 93 97 98 104 115

( 23 16 )->[17]->( 15 18 )
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u108(6){ }u109(7){ }u110(16){ }u111(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 92 93 97 98 104 115
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92 97 98
;; lr  def 	 17 [flags] 92 97
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 92 93 97 98 104 115
;; live  gen 	 17 [flags] 92 97
;; live  kill	 17 [flags]
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 92 93 97 98 104 115
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 92 93 97 98 104 115

( 17 )->[18]->( 19 )
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u117(6){ }u118(7){ }u119(16){ }u120(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 93 98 104 115
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 93 98
;; lr  def 	 17 [flags] 85 109 118 119 120 121 122
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 93 98 104 115
;; live  gen 	 85 109 118 119 120 121 122
;; live  kill	 17 [flags]
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 93 104 109 115
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 93 104 109 115

( 18 13 )->[19]->( 20 24 )
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u131(6){ }u132(7){ }u133(16){ }u134(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 93 104 109 115
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 93
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 93 104 109 115
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 93 104 109 115
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 93 104 109 115

( 19 )->[24]->( 21 )
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 104 109 115
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
;; live  in  	
;; live  gen 	
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 104 109 115
;; live  out 	

( 19 )->[20]->( 21 )
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u137(6){ }u138(7){ }u139(16){ }u140(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 93 104 109 115
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 93
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 93 104 109 115
;; live  gen 	
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 104 109 115
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 104 109 115

( 20 24 )->[21]->( 1 )
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u145(6){ }u146(7){ }u147(16){ }u148(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 104 109 115
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 104 109 115
;; lr  def 	 17 [flags] 123
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 104 109 115
;; live  gen 	 123
;; live  kill	 17 [flags]
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

( 21 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u157(6){ }u158(7){ }u159(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 19 to worklist
  Adding insn 23 to worklist
  Adding insn 26 to worklist
  Adding insn 30 to worklist
  Adding insn 34 to worklist
  Adding insn 33 to worklist
  Adding insn 45 to worklist
  Adding insn 47 to worklist
  Adding insn 51 to worklist
  Adding insn 57 to worklist
  Adding insn 59 to worklist
  Adding insn 66 to worklist
  Adding insn 79 to worklist
  Adding insn 82 to worklist
  Adding insn 81 to worklist
  Adding insn 88 to worklist
  Adding insn 86 to worklist
  Adding insn 85 to worklist
Finished finding needed instructions:
processing block 21 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame]
  Adding insn 87 to worklist
processing block 20 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 104 109 115
processing block 24 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 104 109 115
processing block 19 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 93 104 109 115
  Adding insn 78 to worklist
processing block 18 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 93 104 109 115
  Adding insn 75 to worklist
  Adding insn 74 to worklist
  Adding insn 72 to worklist
  Adding insn 71 to worklist
  Adding insn 70 to worklist
  Adding insn 69 to worklist
  Adding insn 68 to worklist
processing block 17 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 92 93 97 98 104 115
  Adding insn 65 to worklist
  Adding insn 63 to worklist
  Adding insn 62 to worklist
processing block 16 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 92 93 97 98 104 115
processing block 23 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 92 93 97 98 104 115
processing block 15 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 92 93 95 97 98 104 115
  Adding insn 56 to worklist
  Adding insn 55 to worklist
processing block 14 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 92 93 97 98 104 115
  Adding insn 10 to worklist
  Adding insn 53 to worklist
processing block 13 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 93 98 104 109 115
  Adding insn 50 to worklist
processing block 12 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 93 98 104 109 115
processing block 22 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 93 98 104 109 115
processing block 11 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 91 93 94 98 104 109 115
  Adding insn 44 to worklist
  Adding insn 43 to worklist
  Adding insn 42 to worklist
processing block 9 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 93 98 104 109 111 115 116
  Adding insn 39 to worklist
  Adding insn 38 to worklist
  Adding insn 37 to worklist
  Adding insn 36 to worklist
  Adding insn 35 to worklist
processing block 6 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 104 115 116
  Adding insn 7 to worklist
processing block 7 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 104 115 116
  Adding insn 6 to worklist
processing block 8 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 104 115 116
  Adding insn 5 to worklist
processing block 10 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 93 98 104 109 111 115 116
  Adding insn 9 to worklist
  Adding insn 8 to worklist
processing block 5 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 93 98 104 111 115 116
  Adding insn 29 to worklist
  Adding insn 28 to worklist
processing block 4 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 93 98 105 111 115 116 117
  Adding insn 25 to worklist
processing block 3 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 93 98 105 111 115 116 117
  Adding insn 22 to worklist
  Adding insn 21 to worklist
processing block 2 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 93 98 111 115 116 117
  Adding insn 18 to worklist
  Adding insn 16 to worklist
  Adding insn 15 to worklist
  Adding insn 14 to worklist
  Adding insn 13 to worklist
  Adding insn 3 to worklist
  Adding insn 2 to worklist
df_worklist_dataflow_doublequeue:n_basic_blocks 25 n_edges 33 count 26 (    1)
SET hash table (29 buckets, 11 entries)
Index 0 (hash value 17)
  (reg:SI 104 [ D.83065 ]) := (const_int 4 [0x4])
Index 1 (hash value 1)
  (reg:SI 117 [ D.83069 ]) := (const_int 0 [0])
Index 2 (hash value 17)
  (reg:SI 104 [ D.83065 ]) := (const_int -4 [0xfffffffffffffffc])
Index 3 (hash value 4)
  (reg/v/f:SI 91 [ __new_finish ]) := (const_int 0 [0])
Index 4 (hash value 22)
  (reg/f:SI 109 [ D.83071 ]) := (const_int 4 [0x4])
Index 5 (hash value 18)
  (reg/v:SI 105 [ __len ]) := (const_int 0 [0])
Index 6 (hash value 0)
  (reg/f:SI 87 [ D.83066 ]) := (const_int 0 [0])
Index 7 (hash value 10)
  (reg/v/f:SI 97 [ __new_finish ]) := (reg/v/f:SI 91 [ __new_finish ])
Index 8 (hash value 5)
  (reg:SI 92 [ ivtmp.296 ]) := (reg/f:SI 93 [ D.83068 ])
Index 9 (hash value 10)
  (reg/v/f:SI 97 [ __new_finish ]) := (const_int 0 [0])
Index 10 (hash value 6)
  (reg/f:SI 93 [ D.83068 ]) := (const_int 0 [0])

CPROP of void std::vector<_Tp, _Alloc>::_M_emplace_back_aux(_Args&& ...) [with _Args = {const int&}; _Tp = int; _Alloc = std::allocator<int>], 25 basic blocks, 632 bytes needed, 0 local const props, 0 local copy props, 0 global const props, 0 global copy props



try_optimize_cfg iteration 1

verify found no changes in insn with uid = 45.
Edge 11->12 redirected to 14
deleting block 12
verify found no changes in insn with uid = 57.
Edge 16->17 redirected to 19
deleting block 17
verify found no changes in insn with uid = 79.
Edge 21->22 redirected to 24
deleting block 22


try_optimize_cfg iteration 2



try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns


void std::vector<_Tp, _Alloc>::_M_emplace_back_aux(_Args&& ...) [with _Args = {const int&}; _Tp = int; _Alloc = std::allocator<int>]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 29 [mm0] 30 [mm1] 31 [mm2]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 2[cx] 7[sp] 17[flags]
;;  ref usage 	r0={3d,1u} r1={3d} r2={3d,1u} r6={1d,21u} r7={1d,27u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,21u,1e} r17={28d,9u} r18={2d} r19={2d} r20={1d,21u} r21={3d} r22={3d} r23={3d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={3d} r30={3d} r31={3d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r85={1d,1u} r87={1d,2u} r91={2d,6u} r92={2d,3u} r93={2d,7u} r94={1d,1u} r95={1d,1u} r97={2d,3u} r98={2d,5u} r104={4d,2u} r105={1d,3u} r109={3d,1u} r111={2d,2u,1e} r115={1d,7u} r116={1d,1u} r117={1d,4u} r118={1d,1u} r119={1d,1u,1e} r120={1d,1u} r121={1d,1u} r122={1d,1u} r123={1d,1u} 
;;    total ref usage 371{212d,156u,3e} in 60{58 regular + 2 call} insns.
;; basic block 2, loop depth 0, count 0, freq 900, maybe hot
;;  prev block 0, next block 3, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 93 98 111 115 116 117
;; live  in  	 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 17 [flags] 93 98 111 115 116 117
;; live  kill	 17 [flags]
(note 11 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 11 3 2 (set (reg/f:SI 115 [ this ])
        (reg:SI 2 cx [ this ])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/vector.tcc:407 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 2 cx [ this ])
        (nil)))
(insn 3 2 4 2 (set (reg/v/f:SI 116 [ __args#0 ])
        (mem/f/c:SI (reg/f:SI 16 argp) [6 __args#0+0 S4 A32])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/vector.tcc:407 90 {*movsi_internal}
     (expr_list:REG_EQUIV (mem/f/c:SI (reg/f:SI 16 argp) [6 __args#0+0 S4 A32])
        (nil)))
(note 4 3 13 2 NOTE_INSN_FUNCTION_BEG)
(insn 13 4 14 2 (set (reg/f:SI 93 [ D.83068 ])
        (mem/f:SI (reg/f:SI 115 [ this ]) [6 MEM[(int * *)this_2(D)]+0 S4 A32])) 90 {*movsi_internal}
     (nil))
(insn 14 13 15 2 (set (reg/f:SI 98 [ D.83068 ])
        (mem/f:SI (plus:SI (reg/f:SI 115 [ this ])
                (const_int 4 [0x4])) [6 MEM[(int * *)this_2(D) + 4B]+0 S4 A32])) 90 {*movsi_internal}
     (nil))
(insn 15 14 16 2 (parallel [
            (set (reg:SI 111 [ D.83069 ])
                (minus:SI (reg/f:SI 98 [ D.83068 ])
                    (reg/f:SI 93 [ D.83068 ])))
            (clobber (reg:CC 17 flags))
        ]) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_vector.h:655 263 {*subsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 16 15 18 2 (parallel [
            (set (reg:SI 117 [ D.83069 ])
                (ashiftrt:SI (reg:SI 111 [ D.83069 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_vector.h:655 530 {*ashrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUAL (div:SI (reg:SI 111 [ D.83069 ])
                (const_int 4 [0x4]))
            (nil))))
(insn 18 16 19 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 117 [ D.83069 ])
            (const_int 0 [0]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_algobase.h:222 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 19 18 20 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 95)
            (pc))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_algobase.h:222 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 95)
;;  succ:       6 [50.0%] 
;;              3 [50.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 93 98 111 115 116 117
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 93 98 111 115 116 117

;; basic block 3, loop depth 0, count 0, freq 450, maybe hot
;;  prev block 2, next block 4, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [50.0%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u16(6){ }u17(7){ }u18(16){ }u19(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 93 98 111 115 116 117
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 117
;; lr  def 	 17 [flags] 105
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 93 98 111 115 116 117
;; live  gen 	 17 [flags] 105
;; live  kill	 17 [flags]
(note 20 19 21 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 21 20 22 3 (parallel [
            (set (reg/v:SI 105 [ __len ])
                (ashift:SI (reg:SI 117 [ D.83069 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_vector.h:1427 496 {*ashlsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 22 21 23 3 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 117 [ D.83069 ])
            (reg/v:SI 105 [ __len ]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_vector.h:1428 7 {*cmpsi_1}
     (nil))
(jump_insn 23 22 24 3 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 99)
            (pc))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_vector.h:1428 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 10000 (nil)))
 -> 99)
;;  succ:       7 [100.0%] 
;;              4 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 93 98 105 111 115 116 117
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 93 98 105 111 115 116 117

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u24(6){ }u25(7){ }u26(16){ }u27(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 93 98 105 111 115 116 117
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 93 98 105 111 115 116 117
;; live  gen 	 17 [flags]
;; live  kill	
(note 24 23 25 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 25 24 26 4 (set (reg:CC 17 flags)
        (compare:CC (reg/v:SI 105 [ __len ])
            (const_int 1073741823 [0x3fffffff]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_vector.h:1428 7 {*cmpsi_1}
     (nil))
(jump_insn 26 25 27 4 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 103)
            (pc))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_vector.h:1428 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 10000 (nil)))
 -> 103)
;;  succ:       8 [100.0%] 
;;              5 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 93 98 105 111 115 116 117
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 93 98 105 111 115 116 117

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u30(6){ }u31(7){ }u32(16){ }u33(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 93 98 105 111 115 116 117
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 117
;; lr  def 	 17 [flags] 104
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 93 98 105 111 115 116 117
;; live  gen 	 17 [flags] 104
;; live  kill	 17 [flags]
(note 27 26 28 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 28 27 29 5 (parallel [
            (set (reg:SI 104 [ D.83065 ])
                (ashift:SI (reg:SI 117 [ D.83069 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) 496 {*ashlsi3_1}
     (expr_list:REG_DEAD (reg:SI 117 [ D.83069 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 29 28 30 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 105 [ __len ])
            (const_int 0 [0]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_vector.h:170 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg/v:SI 105 [ __len ])
        (nil)))
(jump_insn 30 29 95 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 107)
            (pc))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_vector.h:170 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 10000 (nil)))
 -> 107)
;;  succ:       9 (FALLTHRU)
;;              10 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 93 98 104 111 115 116
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 93 98 104 111 115 116

;; basic block 6, loop depth 0, count 0, freq 450, maybe hot
;;  prev block 5, next block 7, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [50.0%] 
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u37(6){ }u38(7){ }u39(16){ }u40(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 115 116
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 104
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 115 116
;; live  gen 	 104
;; live  kill	
(code_label 95 30 94 6 31 "" [1 uses])
(note 94 95 7 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 7 94 99 6 (set (reg:SI 104 [ D.83065 ])
        (const_int 4 [0x4])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_algobase.h:222 90 {*movsi_internal}
     (nil))
;;  succ:       9 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104 115 116
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104 115 116

;; basic block 7, loop depth 0, count 0, freq 450, maybe hot
;;  prev block 6, next block 8, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       3 [100.0%] 
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u41(6){ }u42(7){ }u43(16){ }u44(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 115 116
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 104
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 115 116
;; live  gen 	 104
;; live  kill	
(code_label 99 7 98 7 32 "" [1 uses])
(note 98 99 6 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 6 98 103 7 (set (reg:SI 104 [ D.83065 ])
        (const_int -4 [0xfffffffffffffffc])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_vector.h:1428 90 {*movsi_internal}
     (nil))
;;  succ:       9 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104 115 116
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104 115 116

;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       4 [100.0%] 
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u45(6){ }u46(7){ }u47(16){ }u48(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 115 116
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 104
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 115 116
;; live  gen 	 104
;; live  kill	
(code_label 103 6 102 8 33 "" [1 uses])
(note 102 103 5 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 5 102 31 8 (set (reg:SI 104 [ D.83065 ])
        (const_int -4 [0xfffffffffffffffc])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_vector.h:1428 90 {*movsi_internal}
     (nil))
;;  succ:       9 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104 115 116
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104 115 116

;; basic block 9, loop depth 0, count 0, freq 261, maybe hot
;; Invalid sum of incoming frequencies 900, should be 261
;;  prev block 8, next block 10, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       8 [100.0%]  (FALLTHRU)
;;              5 (FALLTHRU)
;;              6 [100.0%]  (FALLTHRU)
;;              7 [100.0%]  (FALLTHRU)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u49(6){ }u50(7){ }u51(16){ }u52(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104 115 116
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104 115
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 91 93 98 109 111
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104 115 116
;; live  gen 	 0 [ax] 91 93 98 109 111
;; live  kill	 17 [flags]
(code_label 31 5 32 9 24 "" [0 uses])
(note 32 31 33 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 33 32 34 9 (set (mem:SI (reg/f:SI 7 sp) [0  S4 A32])
        (reg:SI 104 [ D.83065 ])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/ext/new_allocator.h:104 90 {*movsi_internal}
     (nil))
(call_insn 34 33 35 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("_Znwj") [flags 0x43]  <function_decl 01938d00 operator new>) [0 operator new S1 A8])
            (const_int 4 [0x4]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/ext/new_allocator.h:104 648 {*call_value}
     (nil)
    (expr_list:SI (use (mem:SI (reg/f:SI 7 sp) [0  S4 A32]))
        (nil)))
(insn 35 34 36 9 (set (reg/v/f:SI 91 [ __new_finish ])
        (reg:SI 0 ax)) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/ext/new_allocator.h:104 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 36 35 37 9 (set (reg/f:SI 93 [ D.83068 ])
        (mem/f:SI (reg/f:SI 115 [ this ]) [6 MEM[(int * *)this_2(D)]+0 S4 A32])) 90 {*movsi_internal}
     (nil))
(insn 37 36 38 9 (set (reg/f:SI 98 [ D.83068 ])
        (mem/f:SI (plus:SI (reg/f:SI 115 [ this ])
                (const_int 4 [0x4])) [6 MEM[(int * *)this_2(D) + 4B]+0 S4 A32])) 90 {*movsi_internal}
     (nil))
(insn 38 37 39 9 (parallel [
            (set (reg:SI 111 [ D.83069 ])
                (minus:SI (reg/f:SI 98 [ D.83068 ])
                    (reg/f:SI 93 [ D.83068 ])))
            (clobber (reg:CC 17 flags))
        ]) 263 {*subsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 39 38 107 9 (parallel [
            (set (reg/f:SI 109 [ D.83071 ])
                (plus:SI (reg/v/f:SI 91 [ __new_finish ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) 220 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
;;  succ:       11 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 93 98 104 109 111 115 116
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 93 98 104 109 111 115 116

;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 11, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       5 [100.0%] 
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u63(6){ }u64(7){ }u65(16){ }u66(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 93 98 104 111 115 116
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 91 109
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 93 98 104 111 115 116
;; live  gen 	 91 109
;; live  kill	
(code_label 107 39 106 10 34 "" [1 uses])
(note 106 107 8 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 8 106 9 10 (set (reg/f:SI 109 [ D.83071 ])
        (const_int 4 [0x4])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_vector.h:170 90 {*movsi_internal}
     (nil))
(insn 9 8 40 10 (set (reg/v/f:SI 91 [ __new_finish ])
        (const_int 0 [0])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_vector.h:170 90 {*movsi_internal}
     (nil))
;;  succ:       11 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 93 98 104 109 111 115 116
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 93 98 104 109 111 115 116

;; basic block 11, loop depth 0, count 0, freq 900, maybe hot
;; Invalid sum of incoming frequencies 261, should be 900
;;  prev block 10, next block 13, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       10 [100.0%]  (FALLTHRU)
;;              9 [100.0%]  (FALLTHRU)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u67(6){ }u68(7){ }u69(16){ }u70(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 93 98 104 109 111 115 116
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 111 116
;; lr  def 	 17 [flags] 87 94
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 93 98 104 109 111 115 116
;; live  gen 	 17 [flags] 87 94
;; live  kill	 17 [flags]
(code_label 40 9 41 11 25 "" [0 uses])
(note 41 40 42 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 42 41 43 11 (parallel [
            (set (reg/f:SI 87 [ D.83066 ])
                (plus:SI (reg/v/f:SI 91 [ __new_finish ])
                    (reg:SI 111 [ D.83069 ])))
            (clobber (reg:CC 17 flags))
        ]) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/vector.tcc:417 220 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 111 [ D.83069 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 43 42 44 11 (set (reg:SI 94 [ D.83069 ])
        (mem:SI (reg/v/f:SI 116 [ __args#0 ]) [21 *__args#0_5(D)+0 S4 A32])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/ext/new_allocator.h:120 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v/f:SI 116 [ __args#0 ])
        (nil)))
(insn 44 43 45 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:SI 87 [ D.83066 ])
            (const_int 0 [0]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/ext/new_allocator.h:120 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 45 44 46 11 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 48)
            (pc))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/ext/new_allocator.h:120 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 1500 (nil)))
 -> 48)
;;  succ:       13 [85.0%]  (FALLTHRU)
;;              14 [15.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 91 93 94 98 104 109 115
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 91 93 94 98 104 109 115

;; basic block 13, loop depth 0, count 0, freq 765, maybe hot
;;  prev block 11, next block 14, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       11 [85.0%]  (FALLTHRU)
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u76(6){ }u77(7){ }u78(16){ }u79(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 91 93 94 98 104 109 115
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 94
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 91 93 94 98 104 109 115
;; live  gen 	
;; live  kill	
(note 46 45 47 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 47 46 48 13 (set (mem:SI (reg/f:SI 87 [ D.83066 ]) [21 *_9+0 S4 A32])
        (reg:SI 94 [ D.83069 ])) 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 94 [ D.83069 ])
        (expr_list:REG_DEAD (reg/f:SI 87 [ D.83066 ])
            (nil))))
;;  succ:       14 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 93 98 104 109 115
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 93 98 104 109 115

;; basic block 14, loop depth 0, count 0, freq 900, maybe hot
;;  prev block 13, next block 15, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       11 [15.0%] 
;;              13 [100.0%]  (FALLTHRU)
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u82(6){ }u83(7){ }u84(16){ }u85(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 93 98 104 109 115
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 93 98
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 93 98 104 109 115
;; live  gen 	 17 [flags]
;; live  kill	
(code_label 48 47 49 14 26 "" [1 uses])
(note 49 48 50 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 50 49 51 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:SI 93 [ D.83068 ])
            (reg/f:SI 98 [ D.83068 ]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_uninitialized.h:74 7 {*cmpsi_1}
     (nil))
(jump_insn 51 50 52 14 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 76)
            (pc))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_uninitialized.h:74 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 900 (nil)))
 -> 76)
;;  succ:       15 [91.0%]  (FALLTHRU)
;;              21 [9.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 93 98 104 109 115
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 93 98 104 109 115

;; basic block 15, loop depth 0, count 0, freq 819, maybe hot
;;  prev block 14, next block 16, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       14 [91.0%]  (FALLTHRU)
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u89(6){ }u90(7){ }u91(16){ }u92(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 93 98 104 115
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 93
;; lr  def 	 92 97
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 93 98 104 115
;; live  gen 	 92 97
;; live  kill	
(note 52 51 53 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 53 52 10 15 (set (reg:SI 92 [ ivtmp.296 ])
        (reg/f:SI 93 [ D.83068 ])) 90 {*movsi_internal}
     (nil))
(insn 10 53 64 15 (set (reg/v/f:SI 97 [ __new_finish ])
        (reg/v/f:SI 91 [ __new_finish ])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_uninitialized.h:74 90 {*movsi_internal}
     (nil))
;;  succ:       16 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 92 93 97 98 104 115
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 92 93 97 98 104 115

;; basic block 16, loop depth 1, count 0, freq 9100, maybe hot
;;  prev block 15, next block 18, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       15 [100.0%]  (FALLTHRU)
;;              19 [91.0%]  (DFS_BACK)
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u95(6){ }u96(7){ }u97(16){ }u98(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 92 93 97 98 104 115
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92 97
;; lr  def 	 17 [flags] 95
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 92 93 97 98 104 115
;; live  gen 	 17 [flags] 95
;; live  kill	
(code_label 64 10 54 16 29 "" [1 uses])
(note 54 64 55 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 55 54 56 16 (set (reg:SI 95 [ D.83069 ])
        (mem:SI (reg:SI 92 [ ivtmp.296 ]) [21 MEM[base: _3, offset: 0]+0 S4 A32])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_construct.h:75 90 {*movsi_internal}
     (nil))
(insn 56 55 57 16 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:SI 97 [ __new_finish ])
            (const_int 0 [0]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_construct.h:75 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 57 56 58 16 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 60)
            (pc))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_construct.h:75 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 1500 (nil)))
 -> 60)
;;  succ:       18 [85.0%]  (FALLTHRU)
;;              19 [15.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 92 93 95 97 98 104 115
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 92 93 95 97 98 104 115

;; basic block 18, loop depth 1, count 0, freq 7735, maybe hot
;;  prev block 16, next block 19, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       16 [85.0%]  (FALLTHRU)
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u102(6){ }u103(7){ }u104(16){ }u105(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 92 93 95 97 98 104 115
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 95 97
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 92 93 95 97 98 104 115
;; live  gen 	
;; live  kill	
(note 58 57 59 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 59 58 60 18 (set (mem:SI (reg/v/f:SI 97 [ __new_finish ]) [21 MEM[base: __new_finish_57, offset: 0B]+0 S4 A32])
        (reg:SI 95 [ D.83069 ])) 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 95 [ D.83069 ])
        (nil)))
;;  succ:       19 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 92 93 97 98 104 115
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 92 93 97 98 104 115

;; basic block 19, loop depth 1, count 0, freq 9100, maybe hot
;;  prev block 18, next block 20, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       16 [15.0%] 
;;              18 [100.0%]  (FALLTHRU)
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u108(6){ }u109(7){ }u110(16){ }u111(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 92 93 97 98 104 115
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92 97 98
;; lr  def 	 17 [flags] 92 97
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 92 93 97 98 104 115
;; live  gen 	 17 [flags] 92 97
;; live  kill	 17 [flags]
(code_label 60 59 61 19 28 "" [1 uses])
(note 61 60 62 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 62 61 63 19 (parallel [
            (set (reg/v/f:SI 97 [ __new_finish ])
                (plus:SI (reg/v/f:SI 97 [ __new_finish ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_uninitialized.h:74 220 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 63 62 65 19 (parallel [
            (set (reg:SI 92 [ ivtmp.296 ])
                (plus:SI (reg:SI 92 [ ivtmp.296 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) 220 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 65 63 66 19 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:SI 98 [ D.83068 ])
            (reg:SI 92 [ ivtmp.296 ]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_uninitialized.h:74 7 {*cmpsi_1}
     (nil))
(jump_insn 66 65 67 19 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 64)
            (pc))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_uninitialized.h:74 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 9100 (nil)))
 -> 64)
;;  succ:       16 [91.0%]  (DFS_BACK)
;;              20 [9.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 92 93 97 98 104 115
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 92 93 97 98 104 115

;; basic block 20, loop depth 0, count 0, freq 819, maybe hot
;;  prev block 19, next block 21, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       19 [9.0%]  (FALLTHRU)
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u117(6){ }u118(7){ }u119(16){ }u120(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 93 98 104 115
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 93 98
;; lr  def 	 17 [flags] 85 109 118 119 120 121 122
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 93 98 104 115
;; live  gen 	 85 109 118 119 120 121 122
;; live  kill	 17 [flags]
(note 67 66 68 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 68 67 69 20 (parallel [
            (set (reg/f:SI 118 [ D.83066 ])
                (plus:SI (reg/f:SI 93 [ D.83068 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) 220 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 69 68 70 20 (parallel [
            (set (reg:SI 119 [ D.83067 ])
                (minus:SI (reg/f:SI 98 [ D.83068 ])
                    (reg/f:SI 118 [ D.83066 ])))
            (clobber (reg:CC 17 flags))
        ]) 263 {*subsi_1}
     (expr_list:REG_DEAD (reg/f:SI 118 [ D.83066 ])
        (expr_list:REG_DEAD (reg/f:SI 98 [ D.83068 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 70 69 71 20 (parallel [
            (set (reg:SI 120 [ D.83067 ])
                (lshiftrt:SI (reg:SI 119 [ D.83067 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) 529 {*lshrsi3_1}
     (expr_list:REG_DEAD (reg:SI 119 [ D.83067 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (lshiftrt:SI (reg:SI 119 [ D.83067 ])
                    (const_int 2 [0x2]))
                (nil)))))
(insn 71 70 72 20 (parallel [
            (set (reg:SI 121 [ D.83064 ])
                (plus:SI (reg:SI 120 [ D.83067 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 220 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 120 [ D.83067 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 72 71 74 20 (parallel [
            (set (reg:SI 85 [ D.83064 ])
                (ashift:SI (reg:SI 121 [ D.83064 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) 496 {*ashlsi3_1}
     (expr_list:REG_DEAD (reg:SI 121 [ D.83064 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 74 72 75 20 (parallel [
            (set (reg:SI 122 [ D.83064 ])
                (plus:SI (reg:SI 85 [ D.83064 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) 220 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 85 [ D.83064 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 75 74 76 20 (parallel [
            (set (reg/f:SI 109 [ D.83071 ])
                (plus:SI (reg/v/f:SI 91 [ __new_finish ])
                    (reg:SI 122 [ D.83064 ])))
            (clobber (reg:CC 17 flags))
        ]) 220 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 122 [ D.83064 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
;;  succ:       21 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 93 104 109 115
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 93 104 109 115

;; basic block 21, loop depth 0, count 0, freq 900, maybe hot
;;  prev block 20, next block 23, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       20 [100.0%]  (FALLTHRU)
;;              14 [9.0%] 
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u131(6){ }u132(7){ }u133(16){ }u134(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 93 104 109 115
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 93
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 93 104 109 115
;; live  gen 	 17 [flags]
;; live  kill	
(code_label 76 75 77 21 27 "" [1 uses])
(note 77 76 78 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 78 77 79 21 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:SI 93 [ D.83068 ])
            (const_int 0 [0]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_vector.h:177 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 79 78 80 21 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 83)
            (pc))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_vector.h:177 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 2165 (nil)))
 -> 83)
;;  succ:       23 [78.3%]  (FALLTHRU)
;;              24 [21.6%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 93 104 109 115
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 93 104 109 115

;; basic block 23, loop depth 0, count 0, freq 705, maybe hot
;;  prev block 21, next block 24, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       21 [78.3%]  (FALLTHRU)
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u137(6){ }u138(7){ }u139(16){ }u140(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 93 104 109 115
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 93
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 93 104 109 115
;; live  gen 	
;; live  kill	
(note 80 79 81 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 81 80 82 23 (set (mem:SI (reg/f:SI 7 sp) [0  S4 A32])
        (reg/f:SI 93 [ D.83068 ])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/ext/new_allocator.h:110 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 93 [ D.83068 ])
        (nil)))
(call_insn 82 81 83 23 (call (mem:QI (symbol_ref:SI ("_ZdlPv") [flags 0x43]  <function_decl 01938e00 operator delete>) [0 operator delete S1 A8])
        (const_int 4 [0x4])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/ext/new_allocator.h:110 641 {*call}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (mem/f:SI (reg/f:SI 7 sp) [0  S4 A32]))
        (nil)))
;;  succ:       24 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 104 109 115
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 104 109 115

;; basic block 24, loop depth 0, count 0, freq 900, maybe hot
;;  prev block 23, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       23 [100.0%]  (FALLTHRU)
;;              21 [21.6%] 
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u145(6){ }u146(7){ }u147(16){ }u148(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 104 109 115
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 104 109 115
;; lr  def 	 17 [flags] 123
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 104 109 115
;; live  gen 	 123
;; live  kill	 17 [flags]
(code_label 83 82 84 24 30 "" [1 uses])
(note 84 83 85 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 85 84 86 24 (set (mem/f:SI (reg/f:SI 115 [ this ]) [6 this_2(D)->D.72607._M_impl._M_start+0 S4 A32])
        (reg/v/f:SI 91 [ __new_finish ])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/vector.tcc:441 90 {*movsi_internal}
     (nil))
(insn 86 85 87 24 (set (mem/f:SI (plus:SI (reg/f:SI 115 [ this ])
                (const_int 4 [0x4])) [6 this_2(D)->D.72607._M_impl._M_finish+0 S4 A32])
        (reg/f:SI 109 [ D.83071 ])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/vector.tcc:442 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 109 [ D.83071 ])
        (nil)))
(insn 87 86 88 24 (parallel [
            (set (reg:SI 123)
                (plus:SI (reg/v/f:SI 91 [ __new_finish ])
                    (reg:SI 104 [ D.83065 ])))
            (clobber (reg:CC 17 flags))
        ]) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/vector.tcc:443 220 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 104 [ D.83065 ])
        (expr_list:REG_DEAD (reg/v/f:SI 91 [ __new_finish ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 88 87 0 24 (set (mem/f:SI (plus:SI (reg/f:SI 115 [ this ])
                (const_int 8 [0x8])) [6 this_2(D)->D.72607._M_impl._M_end_of_storage+0 S4 A32])
        (reg:SI 123)) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/vector.tcc:443 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 123)
        (expr_list:REG_DEAD (reg/f:SI 115 [ this ])
            (nil))))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void std::vector<_Tp, _Alloc>::push_back(const value_type&) [with _Tp = int; _Alloc = std::allocator<int>; std::vector<_Tp, _Alloc>::value_type = int] (_ZNSt6vectorIiSaIiEE9push_backERKi, funcdef_no=5790, decl_uid=72197, symbol_order=3279)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
changing bb of uid 33
  unscanned insn
verify found no changes in insn with uid = 13.
Edge 3->5 redirected to 8
Implicit set of reg 83 in basic block 8
Found 1 implicit sets
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 9 n_edges 10 count 9 (    1)


void std::vector<_Tp, _Alloc>::push_back(const value_type&) [with _Tp = int; _Alloc = std::allocator<int>; std::vector<_Tp, _Alloc>::value_type = int]

Dataflow summary:
def_info->table_size = 0, use_info->table_size = 49
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 29 [mm0] 30 [mm1] 31 [mm2]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 2[cx] 7[sp] 17[flags]
;;  ref usage 	r0={2d} r1={2d} r2={3d,2u} r6={1d,8u} r7={2d,11u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,10u} r17={4d,2u} r18={1d} r19={1d} r20={1d,8u} r21={2d} r22={2d} r23={2d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={2d} r30={2d} r31={2d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r83={1d,4u} r86={1d,1u} r87={1d,4u} r88={1d,2u} r89={1d,1u} 
;;    total ref usage 146{93d,53u,0e} in 14{13 regular + 1 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(6){ }d-1(7){ }d-1(16){ }d-1(20){ }d-1(21){ }d-1(22){ }d-1(23){ }d-1(29){ }d-1(30){ }d-1(31){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 29 [mm0] 30 [mm1] 31 [mm2]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 29 [mm0] 30 [mm1] 31 [mm2]
;; live  kill	
;; lr  out 	 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

( 0 )->[2]->( 3 6 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 83 87 88
;; live  in  	 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 17 [flags] 83 87 88
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 87 88
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 87 88

( 2 )->[3]->( 4 8 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u10(6){ }u11(7){ }u12(16){ }u13(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 87 88
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 88
;; lr  def 	 17 [flags] 86
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 87 88
;; live  gen 	 17 [flags] 86
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 86 87
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 86 87

( 3 )->[8]->( 5 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 87
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
;; live  in  	
;; live  gen 	
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 87
;; live  out 	

( 3 )->[4]->( 5 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u17(6){ }u18(7){ }u19(16){ }u20(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 86 87
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 86
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 86 87
;; live  gen 	
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 87
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 87

( 4 8 )->[5]->( 7 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u23(6){ }u24(7){ }u25(16){ }u26(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 87
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 87
;; lr  def 	 17 [flags] 89
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 87
;; live  gen 	 89
;; live  kill	 17 [flags]
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

( 2 )->[6]->( 1 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u30(6){ }u31(7){ }u32(16){ }u33(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 88
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 88
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 88
;; live  gen 	 2 [cx] 7 [sp]
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

( 5 )->[7]->( 1 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u42(6){ }u43(7){ }u44(16){ }u45(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

( 6 7 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u46(6){ }u47(7){ }u48(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 9 to worklist
  Adding insn 13 to worklist
  Adding insn 15 to worklist
  Adding insn 19 to worklist
  Adding insn 26 to worklist
  Adding insn 24 to worklist
Finished finding needed instructions:
processing block 7 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame]
processing block 5 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame]
  Adding insn 18 to worklist
processing block 4 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 87
processing block 8 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 87
processing block 3 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 86 87
  Adding insn 12 to worklist
  Adding insn 11 to worklist
processing block 6 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame]
  Adding insn 25 to worklist
processing block 2 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 87 88
  Adding insn 8 to worklist
  Adding insn 7 to worklist
  Adding insn 3 to worklist
  Adding insn 2 to worklist
df_worklist_dataflow_doublequeue:n_basic_blocks 9 n_edges 10 count 9 (    1)
SET hash table (11 buckets, 1 entries)
Index 0 (hash value 6)
  (reg/f:SI 83 [ D.83074 ]) := (const_int 0 [0])

CPROP of void std::vector<_Tp, _Alloc>::push_back(const value_type&) [with _Tp = int; _Alloc = std::allocator<int>; std::vector<_Tp, _Alloc>::value_type = int], 9 basic blocks, 56 bytes needed, 0 local const props, 0 local copy props, 0 global const props, 0 global copy props



try_optimize_cfg iteration 1

verify found no changes in insn with uid = 13.
Edge 3->4 redirected to 6
deleting block 4


try_optimize_cfg iteration 2



try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns


void std::vector<_Tp, _Alloc>::push_back(const value_type&) [with _Tp = int; _Alloc = std::allocator<int>; std::vector<_Tp, _Alloc>::value_type = int]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 29 [mm0] 30 [mm1] 31 [mm2]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 2[cx] 7[sp] 17[flags]
;;  ref usage 	r0={2d} r1={2d} r2={3d,2u} r6={1d,7u} r7={2d,10u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,9u} r17={4d,2u} r18={1d} r19={1d} r20={1d,7u} r21={2d} r22={2d} r23={2d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={2d} r30={2d} r31={2d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r83={1d,4u} r86={1d,1u} r87={1d,4u} r88={1d,2u} r89={1d,1u} 
;;    total ref usage 142{93d,49u,0e} in 14{13 regular + 1 call} insns.
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 3, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 83 87 88
;; live  in  	 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 17 [flags] 83 87 88
;; live  kill	
(note 5 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (reg/f:SI 87 [ this ])
        (reg:SI 2 cx [ this ])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_vector.h:913 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 2 cx [ this ])
        (nil)))
(insn 3 2 4 2 (set (reg/v/f:SI 88 [ __x ])
        (mem/f/c:SI (reg/f:SI 16 argp) [6 __x+0 S4 A32])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_vector.h:913 90 {*movsi_internal}
     (nil))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg/f:SI 83 [ D.83074 ])
        (mem/f:SI (plus:SI (reg/f:SI 87 [ this ])
                (const_int 4 [0x4])) [6 this_3(D)->D.72607._M_impl._M_finish+0 S4 A32])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_vector.h:915 90 {*movsi_internal}
     (nil))
(insn 8 7 9 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:SI 83 [ D.83074 ])
            (mem/f:SI (plus:SI (reg/f:SI 87 [ this ])
                    (const_int 8 [0x8])) [6 this_3(D)->D.72607._M_impl._M_end_of_storage+0 S4 A32]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_vector.h:915 7 {*cmpsi_1}
     (nil))
(jump_insn 9 8 10 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 22)
            (pc))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_vector.h:915 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 672 (nil)))
 -> 22)
;;  succ:       3 [93.3%]  (FALLTHRU)
;;              7 [6.7%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 87 88
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 87 88

;; basic block 3, loop depth 0, count 0, freq 9328, maybe hot
;;  prev block 2, next block 5, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [93.3%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u10(6){ }u11(7){ }u12(16){ }u13(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 87 88
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 88
;; lr  def 	 17 [flags] 86
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 87 88
;; live  gen 	 17 [flags] 86
;; live  kill	
(note 10 9 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 11 10 12 3 (set (reg:SI 86 [ D.83075 ])
        (mem:SI (reg/v/f:SI 88 [ __x ]) [21 MEM[(const int &)__x_6(D)]+0 S4 A32])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/ext/new_allocator.h:120 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v/f:SI 88 [ __x ])
        (nil)))
(insn 12 11 13 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:SI 83 [ D.83074 ])
            (const_int 0 [0]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/ext/new_allocator.h:120 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 13 12 14 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 16)
            (pc))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/ext/new_allocator.h:120 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 1014 (nil)))
 -> 16)
;;  succ:       5 [89.9%]  (FALLTHRU)
;;              6 [10.1%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 86 87
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 86 87

;; basic block 5, loop depth 0, count 0, freq 8382, maybe hot
;;  prev block 3, next block 6, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       3 [89.9%]  (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u17(6){ }u18(7){ }u19(16){ }u20(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 86 87
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 86
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 86 87
;; live  gen 	
;; live  kill	
(note 14 13 15 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 15 14 16 5 (set (mem:SI (reg/f:SI 83 [ D.83074 ]) [21 *_4+0 S4 A32])
        (reg:SI 86 [ D.83075 ])) 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 86 [ D.83075 ])
        (nil)))
;;  succ:       6 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 87
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 87

;; basic block 6, loop depth 0, count 0, freq 9328, maybe hot
;;  prev block 5, next block 7, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       5 [100.0%]  (FALLTHRU)
;;              3 [10.1%] 
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u23(6){ }u24(7){ }u25(16){ }u26(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 87
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 87
;; lr  def 	 17 [flags] 89
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 87
;; live  gen 	 89
;; live  kill	 17 [flags]
(code_label 16 15 17 6 49 "" [1 uses])
(note 17 16 18 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 18 17 19 6 (parallel [
            (set (reg/f:SI 89)
                (plus:SI (reg/f:SI 83 [ D.83074 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_vector.h:919 220 {*addsi_1}
     (expr_list:REG_DEAD (reg/f:SI 83 [ D.83074 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 19 18 22 6 (set (mem/f:SI (plus:SI (reg/f:SI 87 [ this ])
                (const_int 4 [0x4])) [6 this_3(D)->D.72607._M_impl._M_finish+0 S4 A32])
        (reg/f:SI 89)) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_vector.h:919 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 89)
        (expr_list:REG_DEAD (reg/f:SI 87 [ this ])
            (nil))))
;;  succ:       8 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 7, loop depth 0, count 0, freq 672, maybe hot
;;  prev block 6, next block 8, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [6.7%] 
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u30(6){ }u31(7){ }u32(16){ }u33(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 88
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 88
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 88
;; live  gen 	 2 [cx] 7 [sp]
;; live  kill	
(code_label 22 19 23 7 48 "" [1 uses])
(note 23 22 24 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 24 23 25 7 (set (mem:SI (reg/f:SI 16 argp) [0  S4 A32])
        (reg/v/f:SI 88 [ __x ])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_vector.h:923 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v/f:SI 88 [ __x ])
        (nil)))
(insn 25 24 26 7 (set (reg:SI 2 cx)
        (reg/f:SI 87 [ this ])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_vector.h:923 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 87 [ this ])
        (nil)))
(call_insn/j 26 25 32 7 (parallel [
            (call (mem:QI (symbol_ref:SI ("_ZNSt6vectorIiSaIiEE19_M_emplace_back_auxIIRKiEEEvDpOT_") [flags 0x3]  <function_decl 07016d00 _M_emplace_back_aux>) [0 _M_emplace_back_aux S1 A8])
                (const_int 4 [0x4]))
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 4 [0x4])))
        ]) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_vector.h:923 647 {*sibcall_pop}
     (expr_list:REG_DEAD (reg:SI 2 cx)
        (expr_list:REG_ARGS_SIZE (const_int -4 [0xfffffffffffffffc])
            (nil)))
    (expr_list:SI (use (reg:SI 2 cx))
        (expr_list:SI (use (mem/f:SI (reg/f:SI 16 argp) [0  S4 A32]))
            (nil))))
;;  succ:       EXIT [100.0%]  (ABNORMAL,SIBCALL)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 8, loop depth 0, count 0, freq 9328, maybe hot
;;  prev block 7, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       6 [100.0%]  (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u42(6){ }u43(7){ }u44(16){ }u45(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	
;; live  kill	
(note 32 26 0 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_erase(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type) [with _Key = long long unsigned int; _Val = std::pair<const long long unsigned int, int>; _KeyOfValue = std::_Select1st<std::pair<const long long unsigned int, int> >; _Compare = std::less<long long unsigned int>; _Alloc = std::allocator<std::pair<const long long unsigned int, int> >; std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type = std::_Rb_tree_node<std::pair<const long long unsigned int, int> >*] (_ZNSt8_Rb_treeIySt4pairIKyiESt10_Select1stIS2_ESt4lessIyESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E, funcdef_no=5921, decl_uid=70302, symbol_order=3414)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 7 count 6 (    1)


void std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_erase(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type) [with _Key = long long unsigned int; _Val = std::pair<const long long unsigned int, int>; _KeyOfValue = std::_Select1st<std::pair<const long long unsigned int, int> >; _Compare = std::less<long long unsigned int>; _Alloc = std::allocator<std::pair<const long long unsigned int, int> >; std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type = std::_Rb_tree_node<std::pair<const long long unsigned int, int> >*]

Dataflow summary:
def_info->table_size = 0, use_info->table_size = 44
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 29 [mm0] 30 [mm1] 31 [mm2]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 2[cx] 7[sp] 17[flags]
;;  ref usage 	r0={3d} r1={3d} r2={4d,2u} r6={1d,5u} r7={3d,15u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,5u,1e} r17={5d,2u} r18={2d} r19={2d} r20={1d,5u} r21={3d} r22={3d} r23={3d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={3d} r30={3d} r31={3d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r84={1d,2u} r85={1d,1u} r86={2d,4u} r87={1d,1u} 
;;    total ref usage 207{164d,42u,1e} in 15{13 regular + 2 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(6){ }d-1(7){ }d-1(16){ }d-1(20){ }d-1(21){ }d-1(22){ }d-1(23){ }d-1(29){ }d-1(30){ }d-1(31){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 29 [mm0] 30 [mm1] 31 [mm2]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 29 [mm0] 30 [mm1] 31 [mm2]
;; live  kill	
;; lr  out 	 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

( 0 )->[2]->( 3 5 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 85 86
;; live  in  	 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 17 [flags] 85 86
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 86
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 86

( 2 )->[3]->( 4 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u9(6){ }u10(7){ }u11(16){ }u12(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 86
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 86
;; live  gen 	
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 86
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 86

( 3 4 )->[4]->( 4 5 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u13(6){ }u14(7){ }u15(16){ }u16(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 86
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 86
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 84 86 87
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 86
;; live  gen 	 2 [cx] 7 [sp] 17 [flags] 84 86 87
;; live  kill	 17 [flags]
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 86
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 86

( 2 4 )->[5]->( 1 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u36(6){ }u37(7){ }u38(16){ }u39(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

( 5 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u40(6){ }u41(7){ }u42(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 8 to worklist
  Adding insn 26 to worklist
  Adding insn 22 to worklist
  Adding insn 21 to worklist
  Adding insn 18 to worklist
  Adding insn 16 to worklist
Finished finding needed instructions:
processing block 5 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame]
processing block 4 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 86
  Adding insn 25 to worklist
  Adding insn 23 to worklist
  Adding insn 20 to worklist
  Adding insn 19 to worklist
  Adding insn 17 to worklist
  Adding insn 15 to worklist
processing block 3 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 86
processing block 2 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 86
  Adding insn 7 to worklist
  Adding insn 3 to worklist
  Adding insn 2 to worklist
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 7 count 7 (  1.2)
changing bb of uid 33
  unscanned insn
Redirecting fallthru edge 2->5 to 6
Implicit set of reg 86 in basic block 6
changing bb of uid 34
  unscanned insn
Redirecting fallthru edge 4->5 to 7
Implicit set of reg 84 in basic block 7
Found 2 implicit sets
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 8 n_edges 9 count 8 (    1)


void std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_erase(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type) [with _Key = long long unsigned int; _Val = std::pair<const long long unsigned int, int>; _KeyOfValue = std::_Select1st<std::pair<const long long unsigned int, int> >; _Compare = std::less<long long unsigned int>; _Alloc = std::allocator<std::pair<const long long unsigned int, int> >; std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type = std::_Rb_tree_node<std::pair<const long long unsigned int, int> >*]

Dataflow summary:
def_info->table_size = 0, use_info->table_size = 44
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 29 [mm0] 30 [mm1] 31 [mm2]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 2[cx] 7[sp] 17[flags]
;;  ref usage 	r0={3d} r1={3d} r2={4d,2u} r6={1d,7u} r7={3d,17u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,7u,1e} r17={5d,2u} r18={2d} r19={2d} r20={1d,7u} r21={3d} r22={3d} r23={3d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={3d} r30={3d} r31={3d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r84={1d,2u} r85={1d,1u} r86={2d,4u} r87={1d,1u} 
;;    total ref usage 215{164d,50u,1e} in 15{13 regular + 2 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(6){ }d-1(7){ }d-1(16){ }d-1(20){ }d-1(21){ }d-1(22){ }d-1(23){ }d-1(29){ }d-1(30){ }d-1(31){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 29 [mm0] 30 [mm1] 31 [mm2]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 29 [mm0] 30 [mm1] 31 [mm2]
;; live  kill	
;; lr  out 	 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

( 0 )->[2]->( 3 6 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 85 86
;; live  in  	 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 17 [flags] 85 86
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 86
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 86

( 2 )->[6]->( 5 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
;; live  in  	
;; live  gen 	
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	

( 2 )->[3]->( 4 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u9(6){ }u10(7){ }u11(16){ }u12(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 86
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 86
;; live  gen 	
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 86
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 86

( 3 4 )->[4]->( 4 7 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u13(6){ }u14(7){ }u15(16){ }u16(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 86
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 86
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 84 86 87
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 86
;; live  gen 	 2 [cx] 7 [sp] 17 [flags] 84 86 87
;; live  kill	 17 [flags]
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 86
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 86

( 4 )->[7]->( 5 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
;; live  in  	
;; live  gen 	
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	

( 6 7 )->[5]->( 1 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u36(6){ }u37(7){ }u38(16){ }u39(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

( 5 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u40(6){ }u41(7){ }u42(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 8 to worklist
  Adding insn 26 to worklist
  Adding insn 22 to worklist
  Adding insn 21 to worklist
  Adding insn 18 to worklist
  Adding insn 16 to worklist
Finished finding needed instructions:
processing block 5 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame]
processing block 7 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame]
processing block 4 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 86
  Adding insn 25 to worklist
  Adding insn 23 to worklist
  Adding insn 20 to worklist
  Adding insn 19 to worklist
  Adding insn 17 to worklist
  Adding insn 15 to worklist
processing block 3 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 86
processing block 6 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame]
processing block 2 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 86
  Adding insn 7 to worklist
  Adding insn 3 to worklist
  Adding insn 2 to worklist
df_worklist_dataflow_doublequeue:n_basic_blocks 8 n_edges 9 count 9 (  1.1)
SET hash table (11 buckets, 3 entries)
Index 0 (hash value 9)
  (reg/v/f:SI 86 [ __x ]) := (const_int 0 [0])
Index 1 (hash value 9)
  (reg/v/f:SI 86 [ __x ]) := (reg/v/f:SI 84 [ __x ])
Index 2 (hash value 7)
  (reg/v/f:SI 84 [ __x ]) := (const_int 0 [0])

CPROP of void std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_erase(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type) [with _Key = long long unsigned int; _Val = std::pair<const long long unsigned int, int>; _KeyOfValue = std::_Select1st<std::pair<const long long unsigned int, int> >; _Compare = std::less<long long unsigned int>; _Alloc = std::allocator<std::pair<const long long unsigned int, int> >; std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type = std::_Rb_tree_node<std::pair<const long long unsigned int, int> >*], 8 basic blocks, 168 bytes needed, 0 local const props, 0 local copy props, 0 global const props, 0 global copy props



try_optimize_cfg iteration 1

Redirecting fallthru edge 2->3 to 7
deleting block 3
Redirecting fallthru edge 5->6 to 7
deleting block 6


try_optimize_cfg iteration 2



try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns


void std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_erase(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type) [with _Key = long long unsigned int; _Val = std::pair<const long long unsigned int, int>; _KeyOfValue = std::_Select1st<std::pair<const long long unsigned int, int> >; _Compare = std::less<long long unsigned int>; _Alloc = std::allocator<std::pair<const long long unsigned int, int> >; std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type = std::_Rb_tree_node<std::pair<const long long unsigned int, int> >*]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 29 [mm0] 30 [mm1] 31 [mm2]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 2[cx] 7[sp] 17[flags]
;;  ref usage 	r0={3d} r1={3d} r2={4d,2u} r6={1d,5u} r7={3d,15u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,5u,1e} r17={5d,2u} r18={2d} r19={2d} r20={1d,5u} r21={3d} r22={3d} r23={3d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={3d} r30={3d} r31={3d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r84={1d,2u} r85={1d,1u} r86={2d,4u} r87={1d,1u} 
;;    total ref usage 207{164d,42u,1e} in 15{13 regular + 2 call} insns.
;; basic block 2, loop depth 0, count 0, freq 900, maybe hot
;;  prev block 0, next block 4, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 85 86
;; live  in  	 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 17 [flags] 85 86
;; live  kill	
(note 5 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (reg/f:SI 85 [ this ])
        (reg:SI 2 cx [ this ])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1239 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 2 cx [ this ])
        (nil)))
(insn 3 2 4 2 (set (reg/v/f:SI 86 [ __x ])
        (mem/f/c:SI (reg/f:SI 16 argp) [6 __x+0 S4 A32])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1239 90 {*movsi_internal}
     (expr_list:REG_EQUIV (mem/f/c:SI (reg/f:SI 16 argp) [6 __x+0 S4 A32])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:SI 86 [ __x ])
            (const_int 0 [0]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1243 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 8 7 12 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 12)
            (pc))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1243 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 9100 (nil)))
 -> 12)
;;  succ:       4 [91.0%] 
;;              7 [9.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 86
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 86

;; basic block 4, loop depth 0, count 0, freq 819, maybe hot
;;  prev block 2, next block 5, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [91.0%] 
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u9(6){ }u10(7){ }u11(16){ }u12(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 86
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 86
;; live  gen 	
;; live  kill	
(code_label 12 8 13 4 57 "" [1 uses])
(note 13 12 24 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
;;  succ:       5 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 86
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 86

;; basic block 5, loop depth 1, count 0, freq 9100, maybe hot
;;  prev block 4, next block 7, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       4 [100.0%]  (FALLTHRU)
;;              5 [91.0%]  (DFS_BACK)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u13(6){ }u14(7){ }u15(16){ }u16(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 86
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 86
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 84 86 87
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 86
;; live  gen 	 2 [cx] 7 [sp] 17 [flags] 84 86 87
;; live  kill	 17 [flags]
(code_label 24 13 14 5 58 "" [1 uses])
(note 14 24 15 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 15 14 16 5 (set (reg/f:SI 87 [ MEM[(struct _Rb_tree_node_base * *)__x_12 + 12B] ])
        (mem/f:SI (plus:SI (reg/v/f:SI 86 [ __x ])
                (const_int 12 [0xc])) [6 MEM[(struct _Rb_tree_node_base * *)__x_12 + 12B]+0 S4 A32])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1245 90 {*movsi_internal}
     (nil))
(insn 16 15 17 5 (set (mem:SI (reg/f:SI 7 sp) [0  S4 A32])
        (reg/f:SI 87 [ MEM[(struct _Rb_tree_node_base * *)__x_12 + 12B] ])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1245 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 87 [ MEM[(struct _Rb_tree_node_base * *)__x_12 + 12B] ])
        (nil)))
(insn 17 16 18 5 (set (reg:SI 2 cx)
        (reg/f:SI 85 [ this ])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1245 90 {*movsi_internal}
     (nil))
(call_insn 18 17 19 5 (parallel [
            (call (mem:QI (symbol_ref:SI ("_ZNSt8_Rb_treeIySt4pairIKyiESt10_Select1stIS2_ESt4lessIyESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E") [flags 0x3]  <function_decl 06e20200 _M_erase>) [0 _M_erase S1 A8])
                (const_int 4 [0x4]))
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 4 [0x4])))
        ]) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1245 646 {*call_pop}
     (expr_list:REG_DEAD (reg:SI 2 cx)
        (expr_list:REG_ARGS_SIZE (const_int -4 [0xfffffffffffffffc])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 2 cx))
        (expr_list:SI (use (mem/f:SI (reg/f:SI 7 sp) [0  S4 A32]))
            (nil))))
(insn 19 18 20 5 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1245 220 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 20 19 21 5 (set (reg/v/f:SI 84 [ __x ])
        (mem/f:SI (plus:SI (reg/v/f:SI 86 [ __x ])
                (const_int 8 [0x8])) [6 MEM[(struct _Rb_tree_node_base * *)__x_12 + 8B]+0 S4 A32])) 90 {*movsi_internal}
     (nil))
(insn 21 20 22 5 (set (mem:SI (reg/f:SI 7 sp) [0  S4 A32])
        (reg/v/f:SI 86 [ __x ])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/ext/new_allocator.h:110 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v/f:SI 86 [ __x ])
        (nil)))
(call_insn 22 21 23 5 (call (mem:QI (symbol_ref:SI ("_ZdlPv") [flags 0x43]  <function_decl 01938e00 operator delete>) [0 operator delete S1 A8])
        (const_int 4 [0x4])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/ext/new_allocator.h:110 641 {*call}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (mem/f:SI (reg/f:SI 7 sp) [0  S4 A32]))
        (nil)))
(insn 23 22 25 5 (set (reg/v/f:SI 86 [ __x ])
        (reg/v/f:SI 84 [ __x ])) 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v/f:SI 84 [ __x ])
        (nil)))
(insn 25 23 26 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:SI 84 [ __x ])
            (const_int 0 [0]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1243 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 26 25 31 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 24)
            (pc))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1243 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 9100 (nil)))
 -> 24)
;;  succ:       5 [91.0%]  (DFS_BACK)
;;              7 [9.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 86
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 86

;; basic block 7, loop depth 0, count 0, freq 900, maybe hot
;;  prev block 5, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [9.0%]  (FALLTHRU)
;;              5 [9.0%]  (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u36(6){ }u37(7){ }u38(16){ }u39(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	
;; live  kill	
(code_label 31 26 32 7 56 "" [0 uses])
(note 32 31 0 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void __tcf_1() (__tcf_1, funcdef_no=6107, decl_uid=80892, symbol_order=3644)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


void __tcf_1()

Dataflow summary:
def_info->table_size = 0, use_info->table_size = 17
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 29 [mm0] 30 [mm1] 31 [mm2]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 2[cx] 7[sp] 17[flags]
;;  ref usage 	r0={2d} r1={2d} r2={3d,1u} r6={1d,2u} r7={3d,9u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={2d} r18={1d} r19={1d} r20={1d,2u} r21={2d} r22={2d} r23={2d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={2d} r30={2d} r31={2d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r85={1d,1u} 
;;    total ref usage 104{88d,16u,0e} in 5{4 regular + 1 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(6){ }d-1(7){ }d-1(16){ }d-1(20){ }d-1(21){ }d-1(22){ }d-1(23){ }d-1(29){ }d-1(30){ }d-1(31){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 29 [mm0] 30 [mm1] 31 [mm2]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 29 [mm0] 30 [mm1] 31 [mm2]
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 85
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 2 [cx] 7 [sp] 84 85
;; live  kill	 17 [flags]
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u14(6){ }u15(7){ }u16(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 9 to worklist
  Adding insn 7 to worklist
Finished finding needed instructions:
processing block 2 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame]
  Adding insn 10 to worklist
  Adding insn 8 to worklist
  Adding insn 6 to worklist
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
starting the processing of deferred insns
ending the processing of deferred insns


void __tcf_1()

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 29 [mm0] 30 [mm1] 31 [mm2]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 2[cx] 7[sp] 17[flags]
;;  ref usage 	r0={2d} r1={2d} r2={3d,1u} r6={1d,2u} r7={3d,9u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={2d} r18={1d} r19={1d} r20={1d,2u} r21={2d} r22={2d} r23={2d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={2d} r30={2d} r31={2d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r85={1d,1u} 
;;    total ref usage 104{88d,16u,0e} in 5{4 regular + 1 call} insns.
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 85
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 2 [cx] 7 [sp] 85
;; live  kill	 17 [flags]
(note 3 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 2 7 2 (set (reg/f:SI 85 [ MEM[(struct _Rb_tree_node_base * *)&s + 8B] ])
        (mem/f/c:SI (const:SI (plus:SI (symbol_ref:SI ("s") [flags 0x2]  <var_decl 06d9cd20 s>)
                    (const_int 8 [0x8]))) [6 MEM[(struct _Rb_tree_node_base * *)&s + 8B]+0 S4 A32])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:715 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 84)
        (nil)))
(insn 7 6 8 2 (set (mem:SI (reg/f:SI 7 sp) [0  S4 A32])
        (reg/f:SI 85 [ MEM[(struct _Rb_tree_node_base * *)&s + 8B] ])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:715 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 85 [ MEM[(struct _Rb_tree_node_base * *)&s + 8B] ])
        (nil)))
(insn 8 7 9 2 (set (reg:SI 2 cx)
        (symbol_ref:SI ("s") [flags 0x2]  <var_decl 06d9cd20 s>)) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:715 90 {*movsi_internal}
     (nil))
(call_insn 9 8 10 2 (parallel [
            (call (mem:QI (symbol_ref:SI ("_ZNSt8_Rb_treeIySt4pairIKyiESt10_Select1stIS2_ESt4lessIyESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E") [flags 0x3]  <function_decl 06e20200 _M_erase>) [0 _M_erase S1 A8])
                (const_int 4 [0x4]))
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 4 [0x4])))
        ]) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:715 646 {*call_pop}
     (expr_list:REG_DEAD (reg:SI 2 cx)
        (expr_list:REG_ARGS_SIZE (const_int -4 [0xfffffffffffffffc])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 2 cx))
        (expr_list:SI (use (mem/f:SI (reg/f:SI 7 sp) [0  S4 A32]))
            (nil))))
(insn 10 9 0 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:715 220 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function std::pair<std::_Rb_tree_node_base*, std::_Rb_tree_node_base*> std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_get_insert_unique_pos(const key_type&) [with _Key = long long unsigned int; _Val = std::pair<const long long unsigned int, int>; _KeyOfValue = std::_Select1st<std::pair<const long long unsigned int, int> >; _Compare = std::less<long long unsigned int>; _Alloc = std::allocator<std::pair<const long long unsigned int, int> >; std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::key_type = long long unsigned int] (_ZNSt8_Rb_treeIySt4pairIKyiESt10_Select1stIS2_ESt4lessIyESaIS2_EE24_M_get_insert_unique_posERS1_, funcdef_no=5998, decl_uid=70242, symbol_order=3498)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 23 n_edges 32 count 25 (  1.1)


std::pair<std::_Rb_tree_node_base*, std::_Rb_tree_node_base*> std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_get_insert_unique_pos(const key_type&) [with _Key = long long unsigned int; _Val = std::pair<const long long unsigned int, int>; _KeyOfValue = std::_Select1st<std::pair<const long long unsigned int, int> >; _Compare = std::less<long long unsigned int>; _Alloc = std::allocator<std::pair<const long long unsigned int, int> >; std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::key_type = long long unsigned int]

Dataflow summary:
def_info->table_size = 0, use_info->table_size = 150
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 29 [mm0] 30 [mm1] 31 [mm2]
;;  exit block uses 	 0 [ax] 1 [dx] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 7[sp] 17[flags]
;;  ref usage 	r0={3d,3u} r1={3d,2u} r2={2d,1u} r6={1d,22u} r7={1d,25u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,22u,1e} r17={12d,10u} r18={1d} r19={1d} r20={1d,22u} r21={2d} r22={2d} r23={2d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={2d} r30={2d} r31={2d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r83={2d,1u} r84={2d,2u} r85={1d,1u} r86={4d,11u} r88={1d,3u} r90={2d,1u} r93={1d,3u} r94={1d,4u} r96={2d,2u} r97={2d,4u} r98={2d,2u} r99={2d,4u} r100={3d,1u} r101={3d,1u} 
;;    total ref usage 272{124d,147u,1e} in 53{52 regular + 1 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(6){ }d-1(7){ }d-1(16){ }d-1(20){ }d-1(21){ }d-1(22){ }d-1(23){ }d-1(29){ }d-1(30){ }d-1(31){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 29 [mm0] 30 [mm1] 31 [mm2]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 29 [mm0] 30 [mm1] 31 [mm2]
;; live  kill	
;; lr  out 	 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

( 0 )->[2]->( 4 3 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 86 93 94
;; live  in  	 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 17 [flags] 86 93 94
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 93 94
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 93 94

( 2 )->[3]->( 13 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u10(6){ }u11(7){ }u12(16){ }u13(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 93 94
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 93
;; lr  def 	 17 [flags] 86
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 93 94
;; live  gen 	 86
;; live  kill	 17 [flags]
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 93 94
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 93 94

( 2 )->[4]->( 6 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u15(6){ }u16(7){ }u17(16){ }u18(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 93 94
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 94
;; lr  def 	 96 97
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 93 94
;; live  gen 	 96 97
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 93 94 96 97
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 93 94 96 97

( 11 )->[5]->( 6 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u21(6){ }u22(7){ }u23(16){ }u24(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 93 94 96 97
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84
;; lr  def 	 86
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 93 94 96 97
;; live  gen 	 86
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 93 94 96 97
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 93 94 96 97

( 5 4 )->[6]->( 10 7 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u26(6){ }u27(7){ }u28(16){ }u29(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 93 94 96 97
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 97
;; lr  def 	 17 [flags] 98 99
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 93 94 96 97
;; live  gen 	 17 [flags] 98 99
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 93 94 96 97 98 99
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 93 94 96 97 98 99

( 6 )->[7]->( 9 8 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u35(6){ }u36(7){ }u37(16){ }u38(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 93 94 96 97 98 99
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 97 99
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 93 94 96 97 98 99
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 93 94 96 97 98 99
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 93 94 96 97 98 99

( 7 )->[8]->( 10 9 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u42(6){ }u43(7){ }u44(16){ }u45(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 93 94 96 97 98 99
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 96 98
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 93 94 96 97 98 99
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 93 94 96 97 98 99
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 93 94 96 97 98 99

( 8 7 )->[9]->( 11 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u49(6){ }u50(7){ }u51(16){ }u52(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 93 94 96 97 98 99
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86
;; lr  def 	 83 84
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 93 94 96 97 98 99
;; live  gen 	 83 84
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 84 86 93 94 96 97 98 99
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 84 86 93 94 96 97 98 99

( 6 8 )->[10]->( 11 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u54(6){ }u55(7){ }u56(16){ }u57(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 93 94 96 97 98 99
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86
;; lr  def 	 83 84
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 93 94 96 97 98 99
;; live  gen 	 83 84
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 84 86 93 94 96 97 98 99
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 84 86 93 94 96 97 98 99

( 9 10 )->[11]->( 5 12 )
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u59(6){ }u60(7){ }u61(16){ }u62(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 84 86 93 94 96 97 98 99
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 84 86 93 94 96 97 98 99
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 84 86 93 94 96 97 98 99
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 84 86 93 94 96 97 98 99

( 11 )->[12]->( 13 16 )
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u65(6){ }u66(7){ }u67(16){ }u68(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 86 93 94 96 97 98 99
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 86 93 94 96 97 98 99
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 93 94 96 97 98 99
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 93 94 96 97 98 99

( 12 3 )->[13]->( 14 15 )
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u71(6){ }u72(7){ }u73(16){ }u74(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 93 94
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 93
;; lr  def 	 17 [flags] 85
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 93 94
;; live  gen 	 17 [flags] 85
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 94
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 94

( 13 )->[14]->( 22 )
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u79(6){ }u80(7){ }u81(16){ }u82(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86
;; lr  def 	 100 101
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86
;; live  gen 	 100 101
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 101
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 101

( 13 )->[15]->( 17 )
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u84(6){ }u85(7){ }u86(16){ }u87(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 94
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 94
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 86 88 90 96 97 98 99
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 94
;; live  gen 	 0 [ax] 86 88 90 96 97 98 99
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 90 96 97 98 99
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 90 96 97 98 99

( 12 )->[16]->( 17 )
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u99(6){ }u100(7){ }u101(16){ }u102(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 96 97 98 99
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86
;; lr  def 	 90
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 96 97 98 99
;; live  gen 	 90
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 90 96 97 98 99
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 90 96 97 98 99

( 16 15 )->[17]->( 21 18 )
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u104(6){ }u105(7){ }u106(16){ }u107(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 90 96 97 98 99
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 97 99
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 90 96 97 98 99
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 90 96 97 98 99
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 90 96 97 98 99

( 17 )->[18]->( 20 19 )
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u111(6){ }u112(7){ }u113(16){ }u114(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 90 96 97 98 99
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 97 99
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 90 96 97 98 99
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 90 96 98
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 90 96 98

( 18 )->[19]->( 21 20 )
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u118(6){ }u119(7){ }u120(16){ }u121(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 90 96 98
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 96 98
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 90 96 98
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 90
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 90

( 19 18 )->[20]->( 22 )
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u125(6){ }u126(7){ }u127(16){ }u128(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 90
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 90
;; lr  def 	 100 101
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 90
;; live  gen 	 100 101
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 101
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 101

( 17 19 )->[21]->( 22 )
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u130(6){ }u131(7){ }u132(16){ }u133(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86
;; lr  def 	 100 101
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86
;; live  gen 	 100 101
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 101
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 101

( 14 20 21 )->[22]->( 1 )
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u135(6){ }u136(7){ }u137(16){ }u138(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 101
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 101
;; lr  def 	 0 [ax] 1 [dx]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 101
;; live  gen 	 0 [ax] 1 [dx] 102 103
;; live  kill	
;; lr  out 	 0 [ax] 1 [dx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 1 [dx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

( 22 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u145(0){ }u146(1){ }u147(6){ }u148(7){ }u149(20){ }}
;; lr  in  	 0 [ax] 1 [dx] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 0 [ax] 1 [dx] 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 0 [ax] 1 [dx] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 15 to worklist
  Adding insn 26 to worklist
  Adding insn 28 to worklist
  Adding insn 30 to worklist
  Adding insn 43 to worklist
  Adding insn 46 to worklist
  Adding insn 51 to worklist
  Adding insn 60 to worklist
  Adding insn 59 to worklist
  Adding insn 67 to worklist
  Adding insn 69 to worklist
  Adding insn 71 to worklist
  Adding insn 89 to worklist
Finished finding needed instructions:
processing block 5 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 93 94 96 97
  Adding insn 5 to worklist
processing block 22 lr out =  0 [ax] 1 [dx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
  Adding insn 118 to worklist
  Adding insn 117 to worklist
processing block 14 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 101
  Adding insn 54 to worklist
  Adding insn 53 to worklist
processing block 21 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 101
  Adding insn 81 to worklist
  Adding insn 80 to worklist
processing block 20 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 101
  Adding insn 75 to worklist
  Adding insn 74 to worklist
processing block 19 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 90
  Adding insn 70 to worklist
processing block 18 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 90 96 98
  Adding insn 68 to worklist
processing block 17 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 90 96 97 98 99
  Adding insn 66 to worklist
processing block 15 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 90 96 97 98 99
  Adding insn 10 to worklist
  Adding insn 9 to worklist
  Adding insn 114 to worklist
  Adding insn 113 to worklist
  Adding insn 112 to worklist
  Adding insn 111 to worklist
  Adding insn 61 to worklist
processing block 13 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 94
  Adding insn 50 to worklist
  Adding insn 49 to worklist
processing block 16 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 90 96 97 98 99
  Adding insn 8 to worklist
processing block 12 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 93 94 96 97 98 99
  Adding insn 45 to worklist
processing block 11 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 84 86 93 94 96 97 98 99
  Adding insn 42 to worklist
processing block 10 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 84 86 93 94 96 97 98 99
  Adding insn 7 to worklist
  Adding insn 38 to worklist
processing block 9 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 84 86 93 94 96 97 98 99
  Adding insn 6 to worklist
  Adding insn 33 to worklist
processing block 8 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 93 94 96 97 98 99
  Adding insn 29 to worklist
processing block 7 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 93 94 96 97 98 99
  Adding insn 27 to worklist
processing block 6 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 93 94 96 97 98 99
  Adding insn 25 to worklist
  Adding insn 110 to worklist
  Adding insn 109 to worklist
processing block 4 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 93 94 96 97
  Adding insn 108 to worklist
  Adding insn 107 to worklist
processing block 3 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 93 94
  Adding insn 17 to worklist
processing block 2 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 93 94
  Adding insn 14 to worklist
  Adding insn 13 to worklist
  Adding insn 3 to worklist
  Adding insn 2 to worklist
df_worklist_dataflow_doublequeue:n_basic_blocks 23 n_edges 32 count 25 (  1.1)
Implicit set of reg 86 in basic block 3
Implicit set of reg 84 in basic block 12
Implicit set of reg 83 in basic block 16
Found 3 implicit sets
SET hash table (29 buckets, 11 entries)
Index 0 (hash value 28)
  (reg/f:SI 86 [ __j ]) := (reg/f:SI 84 [ __j ])
Index 1 (hash value 25)
  (reg/v:QI 83 [ __comp ]) := (const_int 1 [0x1])
Index 2 (hash value 25)
  (reg/v:QI 83 [ __comp ]) := (const_int 0 [0])
Index 3 (hash value 26)
  (reg/f:SI 84 [ __j ]) := (const_int 0 [0])
Index 4 (hash value 14)
  (reg:SI 101 [ D.81357+4 ]) := (reg/f:SI 86 [ __j ])
Index 5 (hash value 13)
  (reg:SI 100 [ D.81357 ]) := (const_int 0 [0])
Index 6 (hash value 28)
  (reg/f:SI 86 [ __j ]) := (reg/f:SI 88 [ __j ])
Index 7 (hash value 3)
  (reg/f:SI 90 [ __j ]) := (reg/f:SI 86 [ __j ])
Index 8 (hash value 14)
  (reg:SI 101 [ D.81357+4 ]) := (reg/f:SI 90 [ __j ])
Index 9 (hash value 14)
  (reg:SI 101 [ D.81357+4 ]) := (const_int 0 [0])
Index 10 (hash value 13)
  (reg:SI 100 [ D.81357 ]) := (reg/f:SI 86 [ __j ])

CPROP of std::pair<std::_Rb_tree_node_base*, std::_Rb_tree_node_base*> std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_get_insert_unique_pos(const key_type&) [with _Key = long long unsigned int; _Val = std::pair<const long long unsigned int, int>; _KeyOfValue = std::_Select1st<std::pair<const long long unsigned int, int> >; _Compare = std::less<long long unsigned int>; _Alloc = std::allocator<std::pair<const long long unsigned int, int> >; std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::key_type = long long unsigned int], 23 basic blocks, 648 bytes needed, 0 local const props, 0 local copy props, 0 global const props, 0 global copy props

starting the processing of deferred insns
ending the processing of deferred insns


std::pair<std::_Rb_tree_node_base*, std::_Rb_tree_node_base*> std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_get_insert_unique_pos(const key_type&) [with _Key = long long unsigned int; _Val = std::pair<const long long unsigned int, int>; _KeyOfValue = std::_Select1st<std::pair<const long long unsigned int, int> >; _Compare = std::less<long long unsigned int>; _Alloc = std::allocator<std::pair<const long long unsigned int, int> >; std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::key_type = long long unsigned int]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 29 [mm0] 30 [mm1] 31 [mm2]
;;  exit block uses 	 0 [ax] 1 [dx] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 7[sp] 17[flags]
;;  ref usage 	r0={3d,3u} r1={3d,2u} r2={2d,1u} r6={1d,22u} r7={1d,25u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,22u,1e} r17={12d,10u} r18={1d} r19={1d} r20={1d,22u} r21={2d} r22={2d} r23={2d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={2d} r30={2d} r31={2d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r83={2d,1u} r84={2d,2u} r85={1d,1u} r86={4d,11u} r88={1d,3u} r90={2d,1u} r93={1d,3u} r94={1d,4u} r96={2d,2u} r97={2d,4u} r98={2d,2u} r99={2d,4u} r100={3d,1u} r101={3d,1u} 
;;    total ref usage 272{124d,147u,1e} in 53{52 regular + 1 call} insns.
;; basic block 2, loop depth 0, count 0, freq 900, maybe hot
;;  prev block 0, next block 3, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 86 93 94
;; live  in  	 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 17 [flags] 86 93 94
;; live  kill	
(note 11 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 11 3 2 (set (reg/f:SI 93 [ this ])
        (reg:SI 2 cx [ this ])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1435 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 2 cx [ this ])
        (nil)))
(insn 3 2 4 2 (set (reg/v/f:SI 94 [ __k ])
        (mem/f/c:SI (reg/f:SI 16 argp) [6 __k+0 S4 A32])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1435 90 {*movsi_internal}
     (expr_list:REG_EQUIV (mem/f/c:SI (reg/f:SI 16 argp) [6 __k+0 S4 A32])
        (nil)))
(note 4 3 13 2 NOTE_INSN_FUNCTION_BEG)
(insn 13 4 14 2 (set (reg/f:SI 86 [ __j ])
        (mem/f:SI (plus:SI (reg/f:SI 93 [ this ])
                (const_int 8 [0x8])) [6 MEM[(struct _Rb_tree_node_base * *)this_6(D) + 8B]+0 S4 A32])) 90 {*movsi_internal}
     (nil))
(insn 14 13 15 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:SI 86 [ __j ])
            (const_int 0 [0]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1442 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 15 14 16 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 20)
            (pc))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1442 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 9100 (nil)))
 -> 20)
;;  succ:       4 [91.0%] 
;;              3 [9.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 93 94
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 93 94

;; basic block 3, loop depth 0, count 0, freq 81, maybe hot
;;  prev block 2, next block 4, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [9.0%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u10(6){ }u11(7){ }u12(16){ }u13(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 93 94
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 93
;; lr  def 	 17 [flags] 86
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 93 94
;; live  gen 	 86
;; live  kill	 17 [flags]
(note 16 15 17 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 17 16 20 3 (parallel [
            (set (reg/f:SI 86 [ __j ])
                (plus:SI (reg/f:SI 93 [ this ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:529 220 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
;;  succ:       13 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 93 94
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 93 94

;; basic block 4, loop depth 0, count 0, freq 819, maybe hot
;;  prev block 3, next block 5, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [91.0%] 
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u15(6){ }u16(7){ }u17(16){ }u18(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 93 94
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 94
;; lr  def 	 96 97
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 93 94
;; live  gen 	 96 97
;; live  kill	
(code_label 20 17 21 4 66 "" [1 uses])
(note 21 20 107 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 107 21 108 4 (set (reg:SI 96 [ D.83085 ])
        (mem:SI (reg/v/f:SI 94 [ __k ]) [34 MEM[(const long long unsigned int &)__k_8(D)]+0 S4 A64])) 90 {*movsi_internal}
     (nil))
(insn 108 107 94 4 (set (reg:SI 97 [ D.83085+4 ])
        (mem:SI (plus:SI (reg/v/f:SI 94 [ __k ])
                (const_int 4 [0x4])) [34 MEM[(const long long unsigned int &)__k_8(D)]+4 S4 A32])) 90 {*movsi_internal}
     (nil))
;;  succ:       6 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 93 94 96 97
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 93 94 96 97

;; basic block 5, loop depth 1, count 0, freq 8281, maybe hot
;;  prev block 4, next block 6, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       11 [91.0%] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u21(6){ }u22(7){ }u23(16){ }u24(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 93 94 96 97
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84
;; lr  def 	 86
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84 93 94 96 97
;; live  gen 	 86
;; live  kill	
(code_label 94 108 93 5 77 "" [1 uses])
(note 93 94 5 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 5 93 41 5 (set (reg/f:SI 86 [ __j ])
        (reg/f:SI 84 [ __j ])) 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 84 [ __j ])
        (nil)))
;;  succ:       6 [100.0%]  (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 93 94 96 97
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 93 94 96 97

;; basic block 6, loop depth 1, count 0, freq 9100, maybe hot
;;  prev block 5, next block 7, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       5 [100.0%]  (FALLTHRU,DFS_BACK)
;;              4 [100.0%]  (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u26(6){ }u27(7){ }u28(16){ }u29(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 93 94 96 97
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 97
;; lr  def 	 17 [flags] 98 99
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 93 94 96 97
;; live  gen 	 17 [flags] 98 99
;; live  kill	
(code_label 41 5 23 6 71 "" [0 uses])
(note 23 41 109 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 109 23 110 6 (set (reg:SI 98 [ D.83085 ])
        (mem:SI (plus:SI (reg/f:SI 86 [ __j ])
                (const_int 16 [0x10])) [34 MEM[(const long long unsigned int &)__j_43 + 16]+0 S4 A64])) 90 {*movsi_internal}
     (nil))
(insn 110 109 25 6 (set (reg:SI 99 [ D.83085+4 ])
        (mem:SI (plus:SI (reg/f:SI 86 [ __j ])
                (const_int 20 [0x14])) [34 MEM[(const long long unsigned int &)__j_43 + 16]+4 S4 A32])) 90 {*movsi_internal}
     (nil))
(insn 25 110 26 6 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 99 [ D.83085+4 ])
            (reg:SI 97 [ D.83085+4 ]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1446 7 {*cmpsi_1}
     (nil))
(jump_insn 26 25 99 6 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 36)
            (pc))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1446 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 36)
;;  succ:       10 [50.0%] 
;;              7 [50.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 93 94 96 97 98 99
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 93 94 96 97 98 99

;; basic block 7, loop depth 1, count 0, freq 4550, maybe hot
;;  prev block 6, next block 8, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       6 [50.0%]  (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u35(6){ }u36(7){ }u37(16){ }u38(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 93 94 96 97 98 99
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 97 99
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 93 94 96 97 98 99
;; live  gen 	 17 [flags]
;; live  kill	
(note 99 26 27 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 27 99 28 7 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 99 [ D.83085+4 ])
            (reg:SI 97 [ D.83085+4 ]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1446 7 {*cmpsi_1}
     (nil))
(jump_insn 28 27 100 7 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 105)
            (pc))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1446 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 105)
;;  succ:       9 [50.0%] 
;;              8 [50.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 93 94 96 97 98 99
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 93 94 96 97 98 99

;; basic block 8, loop depth 1, count 0, freq 2275, maybe hot
;;  prev block 7, next block 9, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       7 [50.0%]  (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u42(6){ }u43(7){ }u44(16){ }u45(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 93 94 96 97 98 99
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 96 98
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 93 94 96 97 98 99
;; live  gen 	 17 [flags]
;; live  kill	
(note 100 28 29 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 29 100 30 8 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 98 [ D.83085 ])
            (reg:SI 96 [ D.83085 ]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1446 7 {*cmpsi_1}
     (nil))
(jump_insn 30 29 105 8 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 36)
            (pc))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1446 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 36)
;;  succ:       10 [50.0%] 
;;              9 [50.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 93 94 96 97 98 99
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 93 94 96 97 98 99

;; basic block 9, loop depth 1, count 0, freq 4550, maybe hot
;; Invalid sum of incoming frequencies 3413, should be 4550
;;  prev block 8, next block 10, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       8 [50.0%]  (FALLTHRU)
;;              7 [50.0%] 
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u49(6){ }u50(7){ }u51(16){ }u52(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 93 94 96 97 98 99
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86
;; lr  def 	 83 84
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 93 94 96 97 98 99
;; live  gen 	 83 84
;; live  kill	
(code_label 105 30 32 9 79 "" [1 uses])
(note 32 105 33 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 33 32 6 9 (set (reg/f:SI 84 [ __j ])
        (mem/f:SI (plus:SI (reg/f:SI 86 [ __j ])
                (const_int 8 [0x8])) [6 MEM[(struct _Rb_tree_node_base * *)__j_43 + 8B]+0 S4 A32])) 90 {*movsi_internal}
     (nil))
(insn 6 33 36 9 (set (reg/v:QI 83 [ __comp ])
        (const_int 1 [0x1])) 93 {*movqi_internal}
     (nil))
;;  succ:       11 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 84 86 93 94 96 97 98 99
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 84 86 93 94 96 97 98 99

;; basic block 10, loop depth 1, count 0, freq 4550, maybe hot
;; Invalid sum of incoming frequencies 5688, should be 4550
;;  prev block 9, next block 11, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       6 [50.0%] 
;;              8 [50.0%] 
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u54(6){ }u55(7){ }u56(16){ }u57(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 93 94 96 97 98 99
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86
;; lr  def 	 83 84
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 93 94 96 97 98 99
;; live  gen 	 83 84
;; live  kill	
(code_label 36 6 37 10 68 "" [2 uses])
(note 37 36 38 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 38 37 7 10 (set (reg/f:SI 84 [ __j ])
        (mem/f:SI (plus:SI (reg/f:SI 86 [ __j ])
                (const_int 12 [0xc])) [6 MEM[(struct _Rb_tree_node_base * *)__j_43 + 12B]+0 S4 A32])) 90 {*movsi_internal}
     (nil))
(insn 7 38 39 10 (set (reg/v:QI 83 [ __comp ])
        (const_int 0 [0])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1446 93 {*movqi_internal}
     (nil))
;;  succ:       11 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 84 86 93 94 96 97 98 99
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 84 86 93 94 96 97 98 99

;; basic block 11, loop depth 1, count 0, freq 9100, maybe hot
;;  prev block 10, next block 12, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       9 [100.0%]  (FALLTHRU)
;;              10 [100.0%]  (FALLTHRU)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u59(6){ }u60(7){ }u61(16){ }u62(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 84 86 93 94 96 97 98 99
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 84
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 84 86 93 94 96 97 98 99
;; live  gen 	 17 [flags]
;; live  kill	
(code_label 39 7 40 11 70 "" [0 uses])
(note 40 39 42 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 42 40 43 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:SI 84 [ __j ])
            (const_int 0 [0]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1442 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 43 42 44 11 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 94)
            (pc))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1442 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 9100 (nil)))
 -> 94)
;;  succ:       5 [91.0%] 
;;              12 [9.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 84 86 93 94 96 97 98 99
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 84 86 93 94 96 97 98 99

;; basic block 12, loop depth 0, count 0, freq 819, maybe hot
;;  prev block 11, next block 13, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       11 [9.0%]  (FALLTHRU)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u65(6){ }u66(7){ }u67(16){ }u68(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 86 93 94 96 97 98 99
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 86 93 94 96 97 98 99
;; live  gen 	 17 [flags]
;; live  kill	
(note 44 43 45 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 45 44 46 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:QI 83 [ __comp ])
            (const_int 0 [0]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1449 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg/v:QI 83 [ __comp ])
        (nil)))
(jump_insn 46 45 47 12 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 98)
            (pc))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1449 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 5495 (nil)))
 -> 98)
;;  succ:       13 [45.0%]  (FALLTHRU)
;;              16 [55.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 93 94 96 97 98 99
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 93 94 96 97 98 99

;; basic block 13, loop depth 0, count 0, freq 450, maybe hot
;;  prev block 12, next block 14, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       12 [45.0%]  (FALLTHRU)
;;              3 [100.0%]  (FALLTHRU)
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u71(6){ }u72(7){ }u73(16){ }u74(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 93 94
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 93
;; lr  def 	 17 [flags] 85
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 93 94
;; live  gen 	 17 [flags] 85
;; live  kill	
(code_label 47 46 48 13 67 "" [0 uses])
(note 48 47 49 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 49 48 50 13 (set (reg/f:SI 85 [ D.83084 ])
        (mem/f:SI (plus:SI (reg/f:SI 93 [ this ])
                (const_int 12 [0xc])) [6 MEM[(struct _Rb_tree_node_base * *)this_6(D) + 12B]+0 S4 A32])) 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 93 [ this ])
        (nil)))
(insn 50 49 51 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:SI 85 [ D.83084 ])
            (reg/f:SI 86 [ __j ]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1451 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg/f:SI 85 [ D.83084 ])
        (nil)))
(jump_insn 51 50 52 13 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 57)
            (pc))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1451 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 8986 (nil)))
 -> 57)
;;  succ:       14 [10.1%]  (FALLTHRU)
;;              15 [89.9%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 94
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 94

;; basic block 14, loop depth 0, count 0, freq 46, maybe hot
;;  prev block 13, next block 15, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       13 [10.1%]  (FALLTHRU)
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u79(6){ }u80(7){ }u81(16){ }u82(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86
;; lr  def 	 100 101
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86
;; live  gen 	 100 101
;; live  kill	
(note 52 51 53 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 53 52 54 14 (set (reg:SI 100 [ D.81357 ])
        (const_int 0 [0])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1452 90 {*movsi_internal}
     (nil))
(insn 54 53 57 14 (set (reg:SI 101 [ D.81357+4 ])
        (reg/f:SI 86 [ __j ])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1452 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 86 [ __j ])
        (nil)))
;;  succ:       22 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 101
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 101

;; basic block 15, loop depth 0, count 0, freq 404, maybe hot
;;  prev block 14, next block 16, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       13 [89.9%] 
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u84(6){ }u85(7){ }u86(16){ }u87(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 94
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 94
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 86 88 90 96 97 98 99
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 94
;; live  gen 	 0 [ax] 86 88 90 96 97 98 99
;; live  kill	
(code_label 57 54 58 15 73 "" [1 uses])
(note 58 57 59 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 59 58 60 15 (set (mem:SI (reg/f:SI 7 sp) [0  S4 A32])
        (reg/f:SI 86 [ __j ])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:218 90 {*movsi_internal}
     (nil))
(call_insn/i 60 59 61 15 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base") [flags 0x43]  <function_decl 06b62500 _Rb_tree_decrement>) [0 _Rb_tree_decrement S1 A8])
            (const_int 4 [0x4]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:218 648 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (mem/f:SI (reg/f:SI 7 sp) [0  S4 A32]))
        (nil)))
(insn 61 60 111 15 (set (reg/f:SI 88 [ __j ])
        (reg:SI 0 ax)) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:218 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 111 61 112 15 (set (reg:SI 96 [ D.83085 ])
        (mem:SI (reg/v/f:SI 94 [ __k ]) [34 MEM[(const long long unsigned int &)__k_8(D)]+0 S4 A64])) 90 {*movsi_internal}
     (nil))
(insn 112 111 113 15 (set (reg:SI 97 [ D.83085+4 ])
        (mem:SI (plus:SI (reg/v/f:SI 94 [ __k ])
                (const_int 4 [0x4])) [34 MEM[(const long long unsigned int &)__k_8(D)]+4 S4 A32])) 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v/f:SI 94 [ __k ])
        (nil)))
(insn 113 112 114 15 (set (reg:SI 98 [ D.83085 ])
        (mem:SI (plus:SI (reg/f:SI 88 [ __j ])
                (const_int 16 [0x10])) [34 MEM[(const long long unsigned int &)__j_25 + 16]+0 S4 A64])) 90 {*movsi_internal}
     (nil))
(insn 114 113 9 15 (set (reg:SI 99 [ D.83085+4 ])
        (mem:SI (plus:SI (reg/f:SI 88 [ __j ])
                (const_int 20 [0x14])) [34 MEM[(const long long unsigned int &)__j_25 + 16]+4 S4 A32])) 90 {*movsi_internal}
     (nil))
(insn 9 114 10 15 (set (reg/f:SI 90 [ __j ])
        (reg/f:SI 86 [ __j ])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:218 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 86 [ __j ])
        (nil)))
(insn 10 9 98 15 (set (reg/f:SI 86 [ __j ])
        (reg/f:SI 88 [ __j ])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:218 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 88 [ __j ])
        (nil)))
;;  succ:       17 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 90 96 97 98 99
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 90 96 97 98 99

;; basic block 16, loop depth 0, count 0, freq 450, maybe hot
;;  prev block 15, next block 17, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       12 [55.0%] 
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u99(6){ }u100(7){ }u101(16){ }u102(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 96 97 98 99
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86
;; lr  def 	 90
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 96 97 98 99
;; live  gen 	 90
;; live  kill	
(code_label 98 10 97 16 78 "" [1 uses])
(note 97 98 8 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 8 97 64 16 (set (reg/f:SI 90 [ __j ])
        (reg/f:SI 86 [ __j ])) 90 {*movsi_internal}
     (nil))
;;  succ:       17 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 90 96 97 98 99
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 90 96 97 98 99

;; basic block 17, loop depth 0, count 0, freq 854, maybe hot
;;  prev block 16, next block 18, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       16 [100.0%]  (FALLTHRU)
;;              15 [100.0%]  (FALLTHRU)
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u104(6){ }u105(7){ }u106(16){ }u107(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 90 96 97 98 99
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 97 99
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 90 96 97 98 99
;; live  gen 	 17 [flags]
;; live  kill	
(code_label 64 8 65 17 72 "" [0 uses])
(note 65 64 66 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 66 65 67 17 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 99 [ D.83085+4 ])
            (reg:SI 97 [ D.83085+4 ]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1456 7 {*cmpsi_1}
     (nil))
(jump_insn 67 66 102 17 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 78)
            (pc))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1456 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 78)
;;  succ:       21 [50.0%] 
;;              18 [50.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 90 96 97 98 99
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 90 96 97 98 99

;; basic block 18, loop depth 0, count 0, freq 427, maybe hot
;;  prev block 17, next block 19, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       17 [50.0%]  (FALLTHRU)
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u111(6){ }u112(7){ }u113(16){ }u114(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 90 96 97 98 99
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 97 99
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 90 96 97 98 99
;; live  gen 	 17 [flags]
;; live  kill	
(note 102 67 68 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 68 102 69 18 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 99 [ D.83085+4 ])
            (reg:SI 97 [ D.83085+4 ]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1456 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 99 [ D.83085+4 ])
        (expr_list:REG_DEAD (reg:SI 97 [ D.83085+4 ])
            (nil))))
(jump_insn 69 68 103 18 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 106)
            (pc))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1456 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 106)
;;  succ:       20 [50.0%] 
;;              19 [50.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 90 96 98
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 90 96 98

;; basic block 19, loop depth 0, count 0, freq 214, maybe hot
;;  prev block 18, next block 20, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       18 [50.0%]  (FALLTHRU)
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u118(6){ }u119(7){ }u120(16){ }u121(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 90 96 98
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 96 98
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 90 96 98
;; live  gen 	 17 [flags]
;; live  kill	
(note 103 69 70 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 70 103 71 19 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 98 [ D.83085 ])
            (reg:SI 96 [ D.83085 ]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1456 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 98 [ D.83085 ])
        (expr_list:REG_DEAD (reg:SI 96 [ D.83085 ])
            (nil))))
(jump_insn 71 70 106 19 (set (pc)
        (if_then_else (geu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 78)
            (pc))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1456 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 78)
;;  succ:       21 [50.0%] 
;;              20 [50.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 90
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86 90

;; basic block 20, loop depth 0, count 0, freq 333, maybe hot
;;  prev block 19, next block 21, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       19 [50.0%]  (FALLTHRU)
;;              18 [50.0%] 
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u125(6){ }u126(7){ }u127(16){ }u128(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 90
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 90
;; lr  def 	 100 101
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 90
;; live  gen 	 100 101
;; live  kill	
(code_label 106 71 73 20 80 "" [1 uses])
(note 73 106 74 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 74 73 75 20 (set (reg:SI 100 [ D.81357 ])
        (const_int 0 [0])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1457 90 {*movsi_internal}
     (nil))
(insn 75 74 78 20 (set (reg:SI 101 [ D.81357+4 ])
        (reg/f:SI 90 [ __j ])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1457 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 90 [ __j ])
        (nil)))
;;  succ:       22 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 101
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 101

;; basic block 21, loop depth 0, count 0, freq 521, maybe hot
;;  prev block 20, next block 22, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       17 [50.0%] 
;;              19 [50.0%] 
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u130(6){ }u131(7){ }u132(16){ }u133(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86
;; lr  def 	 100 101
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 86
;; live  gen 	 100 101
;; live  kill	
(code_label 78 75 79 21 75 "" [2 uses])
(note 79 78 80 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 80 79 81 21 (set (reg:SI 100 [ D.81357 ])
        (reg/f:SI 86 [ __j ])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1458 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 86 [ __j ])
        (nil)))
(insn 81 80 82 21 (set (reg:SI 101 [ D.81357+4 ])
        (const_int 0 [0])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1458 90 {*movsi_internal}
     (nil))
;;  succ:       22 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 101
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 101

;; basic block 22, loop depth 0, count 0, freq 900, maybe hot
;;  prev block 21, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       14 [100.0%]  (FALLTHRU)
;;              20 [100.0%]  (FALLTHRU)
;;              21 [100.0%]  (FALLTHRU)
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u135(6){ }u136(7){ }u137(16){ }u138(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 101
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 101
;; lr  def 	 0 [ax] 1 [dx]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 101
;; live  gen 	 0 [ax] 1 [dx]
;; live  kill	
(code_label 82 81 83 22 74 "" [0 uses])
(note 83 82 117 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 117 83 118 22 (set (reg:SI 0 ax)
        (reg:SI 100 [ D.81357 ])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1459 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 100 [ D.81357 ])
        (nil)))
(insn 118 117 89 22 (set (reg:SI 1 dx [+4 ])
        (reg:SI 101 [ D.81357+4 ])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1459 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 101 [ D.81357+4 ])
        (nil)))
(insn 89 118 0 22 (use (reg/i:DI 0 ax)) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1459 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 1 [dx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 1 [dx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function std::pair<std::_Rb_tree_node_base*, std::_Rb_tree_node_base*> std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_get_insert_hint_unique_pos(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::const_iterator, const key_type&) [with _Key = long long unsigned int; _Val = std::pair<const long long unsigned int, int>; _KeyOfValue = std::_Select1st<std::pair<const long long unsigned int, int> >; _Compare = std::less<long long unsigned int>; _Alloc = std::allocator<std::pair<const long long unsigned int, int> >; std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::const_iterator = std::_Rb_tree_const_iterator<std::pair<const long long unsigned int, int> >; std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::key_type = long long unsigned int] (_ZNSt8_Rb_treeIySt4pairIKyiESt10_Select1stIS2_ESt4lessIyESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERS1_, funcdef_no=5939, decl_uid=70248, symbol_order=3443)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 33 n_edges 52 count 33 (    1)


std::pair<std::_Rb_tree_node_base*, std::_Rb_tree_node_base*> std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_get_insert_hint_unique_pos(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::const_iterator, const key_type&) [with _Key = long long unsigned int; _Val = std::pair<const long long unsigned int, int>; _KeyOfValue = std::_Select1st<std::pair<const long long unsigned int, int> >; _Compare = std::less<long long unsigned int>; _Alloc = std::allocator<std::pair<const long long unsigned int, int> >; std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::const_iterator = std::_Rb_tree_const_iterator<std::pair<const long long unsigned int, int> >; std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::key_type = long long unsigned int]

Dataflow summary:
def_info->table_size = 0, use_info->table_size = 262
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 29 [mm0] 30 [mm1] 31 [mm2]
;;  exit block uses 	 0 [ax] 1 [dx] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 7[sp] 17[flags]
;;  ref usage 	r0={5d,5u} r1={6d,3u} r2={5d,2u} r6={1d,32u} r7={3d,45u} r8={3d} r9={3d} r10={3d} r11={3d} r12={3d} r13={3d} r14={3d} r15={3d} r16={1d,33u,2e} r17={26d,20u} r18={3d} r19={3d} r20={1d,32u} r21={4d} r22={4d} r23={4d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={4d} r30={4d} r31={4d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={3d} r38={3d} r39={3d} r40={3d} r41={3d} r42={3d} r43={3d} r44={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r76={3d} r85={1d,3u} r90={1d,1u} r93={1d,1u} r97={1d,5u} r98={1d,5u} r101={1d,6u} r102={1d,15u} r103={1d,6u} r104={1d,1u} r107={1d,4u} r108={1d,8u} r109={1d,2u} r110={1d,4u} r111={9d,1u} r112={9d,1u} r115={1d,1u} r116={1d,2u} 
;;    total ref usage 525{285d,238u,2e} in 85{82 regular + 3 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(6){ }d-1(7){ }d-1(16){ }d-1(20){ }d-1(21){ }d-1(22){ }d-1(23){ }d-1(29){ }d-1(30){ }d-1(31){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 29 [mm0] 30 [mm1] 31 [mm2]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 29 [mm0] 30 [mm1] 31 [mm2]
;; live  kill	
;; lr  out 	 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

( 0 )->[2]->( 3 7 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 101 102 103 104
;; live  in  	 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 17 [flags] 96 101 102 103 104
;; live  kill	 17 [flags]
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 101 102 103
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 96 101 103

( 2 )->[3]->( 4 18 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u14(6){ }u15(7){ }u16(16){ }u17(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 101 103
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 101
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 101 103
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 101 103
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 101 103

( 3 )->[4]->( 31 5 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u20(6){ }u21(7){ }u22(16){ }u23(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 101 103
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 101 103
;; lr  def 	 17 [flags] 85 115 116
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 101 103
;; live  gen 	 17 [flags] 85 115 116
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 101 103 115 116
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 101 103 115 116

( 4 )->[5]->( 18 6 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u30(6){ }u31(7){ }u32(16){ }u33(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 101 103 115 116
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 103 116
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 101 103 115 116
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 101 103 115
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 101 103 115

( 5 )->[6]->( 31 18 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u37(6){ }u38(7){ }u39(16){ }u40(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 101 103 115
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 103 115
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 101 103 115
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 101 103
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 101 103

( 2 )->[7]->( 21 8 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u44(6){ }u45(7){ }u46(16){ }u47(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 101 102 103
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 102 103
;; lr  def 	 17 [flags] 107 108 109 110
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 96 101 103
;; live  gen 	 17 [flags] 107 108 109 110
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 101 102 103 107 108 109 110
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 96 101 103 107 108 109 110

( 7 )->[8]->( 10 9 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u55(6){ }u56(7){ }u57(16){ }u58(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 101 102 103 107 108 109 110
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 108 110
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 96 101 103 107 108 109 110
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 101 102 103 107 108 109 110
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 96 101 103 107 108 109 110

( 8 )->[9]->( 19 10 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u62(6){ }u63(7){ }u64(16){ }u65(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 101 102 103 107 108 109 110
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 107 109
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 96 101 103 107 108 109 110
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 101 102 103 107 108 109 110
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 96 101 103 107 108 109 110

( 9 8 )->[10]->( 11 12 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u69(6){ }u70(7){ }u71(16){ }u72(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 101 102 103 107 108
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 101 102
;; lr  def 	 17 [flags] 90
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 96 101 103 107 108
;; live  gen 	 17 [flags] 90
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 101 102 103 107 108
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 96 101 103 107 108

( 10 )->[11]->( 30 )
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u77(6){ }u78(7){ }u79(16){ }u80(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 102
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 102
;; lr  def 	 111 112
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 96
;; live  gen 	 111 112
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 111 112
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 111 112

( 10 )->[12]->( 18 13 )
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u83(6){ }u84(7){ }u85(16){ }u86(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 101 102 103 107 108
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 102 108
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 97
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 96 101 103 107 108
;; live  gen 	 0 [ax] 17 [flags] 97
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 97 101 102 103 107 108
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 96 97 101 103 107 108

( 12 )->[13]->( 15 14 )
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u95(6){ }u96(7){ }u97(16){ }u98(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 97 101 102 103 107 108
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 97 108
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 96 97 101 103 107 108
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 97 101 102 103 107
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 96 97 101 103 107

( 13 )->[14]->( 18 15 )
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u102(6){ }u103(7){ }u104(16){ }u105(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 97 101 102 103 107
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 97 107
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 96 97 101 103 107
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 97 101 102 103
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 96 97 101 103

( 14 13 )->[15]->( 16 17 )
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u109(6){ }u110(7){ }u111(16){ }u112(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 97 102
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 97
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 96 97
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 97 102
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 96 97

( 15 )->[16]->( 30 )
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u115(6){ }u116(7){ }u117(16){ }u118(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 97
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 97
;; lr  def 	 111 112
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 97
;; live  gen 	 111 112
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 111 112
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 111 112

( 15 )->[17]->( 30 )
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u120(6){ }u121(7){ }u122(16){ }u123(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 102
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 102
;; lr  def 	 111 112
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 96
;; live  gen 	 111 112
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 111 112
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 111 112

( 6 3 12 14 23 25 5 )->[18]->( 30 )
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u126(6){ }u127(7){ }u128(16){ }u129(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 101 103
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 101 103
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 111 112
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 101 103
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 7 [sp] 111 112
;; live  kill	 17 [flags]
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 111 112
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 111 112

( 9 )->[19]->( 21 20 )
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u142(6){ }u143(7){ }u144(16){ }u145(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 101 102 103 107 108 109 110
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 108 110
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 96 101 103 107 108 109 110
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 101 102 103 107 108 109
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 96 101 103 107 108 109

( 19 )->[20]->( 29 21 )
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u151(6){ }u152(7){ }u153(16){ }u154(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 101 102 103 107 108 109
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 107 109
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 96 101 103 107 108 109
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 101 102 103 107 108
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 96 101 103 107 108

( 20 19 7 )->[21]->( 22 23 )
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u158(6){ }u159(7){ }u160(16){ }u161(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 101 102 103 107 108
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 101 102
;; lr  def 	 17 [flags] 93
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 96 101 103 107 108
;; live  gen 	 17 [flags] 93
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 101 102 103 107 108
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 96 101 103 107 108

( 21 )->[22]->( 30 )
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u166(6){ }u167(7){ }u168(16){ }u169(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 102
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 102
;; lr  def 	 111 112
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 96
;; live  gen 	 111 112
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 111 112
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 111 112

( 21 )->[23]->( 18 24 )
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u171(6){ }u172(7){ }u173(16){ }u174(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 101 102 103 107 108
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 102 108
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 98
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 96 101 103 107 108
;; live  gen 	 0 [ax] 17 [flags] 98
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 98 101 102 103 107 108
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 96 98 101 103 107 108

( 23 )->[24]->( 26 25 )
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u183(6){ }u184(7){ }u185(16){ }u186(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 98 101 102 103 107 108
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 98 108
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 96 98 101 103 107 108
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 98 101 102 103 107
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 96 98 101 103 107

( 24 )->[25]->( 18 26 )
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u190(6){ }u191(7){ }u192(16){ }u193(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 98 101 102 103 107
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 98 107
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 96 98 101 103 107
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 98 101 102 103
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 96 98 101 103

( 25 24 )->[26]->( 27 28 )
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u197(6){ }u198(7){ }u199(16){ }u200(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 98 102
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 102
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 96 98
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 98 102
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 96 98

( 26 )->[27]->( 30 )
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u203(6){ }u204(7){ }u205(16){ }u206(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 102
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 102
;; lr  def 	 111 112
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 96
;; live  gen 	 111 112
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 111 112
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 111 112

( 26 )->[28]->( 30 )
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u208(6){ }u209(7){ }u210(16){ }u211(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 98
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 98
;; lr  def 	 111 112
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 98
;; live  gen 	 111 112
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 111 112
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 111 112

( 20 )->[29]->( 30 )
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u214(6){ }u215(7){ }u216(16){ }u217(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 102
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 102
;; lr  def 	 111 112
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 96
;; live  gen 	 111 112
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 111 112
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 111 112

( 31 18 16 27 29 22 17 28 11 )->[30]->( 32 )
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u219(6){ }u220(7){ }u221(16){ }u222(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 111 112
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 111 112
;; live  gen 	 113 114
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 111 112
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 111 112

( 4 6 )->[31]->( 30 )
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u225(6){ }u226(7){ }u227(16){ }u228(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85
;; lr  def 	 111 112
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85
;; live  gen 	 111 112
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 111 112
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 111 112

( 30 )->[32]->( 1 )
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u230(6){ }u231(7){ }u232(16){ }u233(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 111 112
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 111 112
;; lr  def 	 0 [ax] 1 [dx]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 111 112
;; live  gen 	 0 [ax] 1 [dx]
;; live  kill	
;; lr  out 	 0 [ax] 1 [dx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 1 [dx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

( 32 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u238(0){ }u239(1){ }u240(6){ }u241(7){ }u242(20){ }}
;; lr  in  	 0 [ax] 1 [dx] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 0 [ax] 1 [dx] 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 0 [ax] 1 [dx] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 11 to worklist
  Adding insn 14 to worklist
  Adding insn 19 to worklist
  Adding insn 21 to worklist
  Adding insn 23 to worklist
  Adding insn 33 to worklist
  Adding insn 35 to worklist
  Adding insn 37 to worklist
  Adding insn 42 to worklist
  Adding insn 54 to worklist
  Adding insn 51 to worklist
  Adding insn 50 to worklist
  Adding insn 56 to worklist
  Adding insn 58 to worklist
  Adding insn 62 to worklist
  Adding insn 78 to worklist
  Adding insn 76 to worklist
  Adding insn 88 to worklist
  Adding insn 90 to worklist
  Adding insn 95 to worklist
  Adding insn 107 to worklist
  Adding insn 104 to worklist
  Adding insn 103 to worklist
  Adding insn 109 to worklist
  Adding insn 111 to worklist
  Adding insn 115 to worklist
  Adding insn 144 to worklist
Finished finding needed instructions:
processing block 32 lr out =  0 [ax] 1 [dx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
  Adding insn 176 to worklist
  Adding insn 175 to worklist
processing block 30 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 111 112
processing block 31 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 111 112
  Adding insn 139 to worklist
  Adding insn 138 to worklist
processing block 18 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 111 112
  Adding insn 172 to worklist
  Adding insn 171 to worklist
  Adding insn 79 to worklist
  Adding insn 77 to worklist
processing block 6 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 101 103
  Adding insn 22 to worklist
processing block 5 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 101 103 115
  Adding insn 20 to worklist
processing block 4 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 101 103 115 116
  Adding insn 18 to worklist
  Adding insn 166 to worklist
  Adding insn 165 to worklist
  Adding insn 16 to worklist
processing block 3 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 101 103
  Adding insn 13 to worklist
processing block 22 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 111 112
  Adding insn 98 to worklist
  Adding insn 97 to worklist
processing block 27 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 111 112
  Adding insn 118 to worklist
  Adding insn 117 to worklist
processing block 28 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 111 112
  Adding insn 124 to worklist
  Adding insn 123 to worklist
processing block 26 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 98 102
  Adding insn 114 to worklist
processing block 25 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 98 101 102 103
  Adding insn 110 to worklist
processing block 24 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 98 101 102 103 107
  Adding insn 108 to worklist
processing block 23 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 98 101 102 103 107 108
  Adding insn 106 to worklist
  Adding insn 105 to worklist
processing block 21 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 101 102 103 107 108
  Adding insn 94 to worklist
  Adding insn 93 to worklist
processing block 11 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 111 112
  Adding insn 45 to worklist
  Adding insn 44 to worklist
processing block 16 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 111 112
  Adding insn 65 to worklist
  Adding insn 64 to worklist
processing block 17 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 111 112
  Adding insn 71 to worklist
  Adding insn 70 to worklist
processing block 15 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 97 102
  Adding insn 61 to worklist
processing block 14 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 97 101 102 103
  Adding insn 57 to worklist
processing block 13 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 97 101 102 103 107
  Adding insn 55 to worklist
processing block 12 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 97 101 102 103 107 108
  Adding insn 53 to worklist
  Adding insn 52 to worklist
processing block 10 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 101 102 103 107 108
  Adding insn 41 to worklist
  Adding insn 40 to worklist
processing block 29 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 111 112
  Adding insn 130 to worklist
  Adding insn 129 to worklist
processing block 20 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 101 102 103 107 108
  Adding insn 89 to worklist
processing block 19 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 101 102 103 107 108 109
  Adding insn 87 to worklist
processing block 9 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 101 102 103 107 108 109 110
  Adding insn 36 to worklist
processing block 8 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 101 102 103 107 108 109 110
  Adding insn 34 to worklist
processing block 7 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 101 102 103 107 108 109 110
  Adding insn 32 to worklist
  Adding insn 170 to worklist
  Adding insn 169 to worklist
  Adding insn 168 to worklist
  Adding insn 167 to worklist
processing block 2 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 101 102 103
  Adding insn 10 to worklist
  Adding insn 9 to worklist
  Adding insn 4 to worklist
  Adding insn 3 to worklist
  Adding insn 2 to worklist
DCE: Deleting insn 85
deleting insn with uid = 85.
df_worklist_dataflow_doublequeue:n_basic_blocks 33 n_edges 52 count 33 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 33 n_edges 52 count 33 (    1)
Found 0 implicit sets
SET hash table (45 buckets, 8 entries)
Index 0 (hash value 22)
  (reg:SI 112 [ D.81243+4 ]) := (reg/v:SI 102 [ __position ])
Index 1 (hash value 21)
  (reg:SI 111 [ D.81243 ]) := (reg/v:SI 102 [ __position ])
Index 2 (hash value 22)
  (reg:SI 112 [ D.81243+4 ]) := (reg/f:SI 97 [ D.83090 ])
Index 3 (hash value 21)
  (reg:SI 111 [ D.81243 ]) := (const_int 0 [0])
Index 4 (hash value 22)
  (reg:SI 112 [ D.81243+4 ]) := (reg/f:SI 98 [ D.83090 ])
Index 5 (hash value 21)
  (reg:SI 111 [ D.81243 ]) := (reg/f:SI 98 [ D.83090 ])
Index 6 (hash value 22)
  (reg:SI 112 [ D.81243+4 ]) := (const_int 0 [0])
Index 7 (hash value 22)
  (reg:SI 112 [ D.81243+4 ]) := (reg/f:SI 85 [ D.83090 ])

CPROP of std::pair<std::_Rb_tree_node_base*, std::_Rb_tree_node_base*> std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_get_insert_hint_unique_pos(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::const_iterator, const key_type&) [with _Key = long long unsigned int; _Val = std::pair<const long long unsigned int, int>; _KeyOfValue = std::_Select1st<std::pair<const long long unsigned int, int> >; _Compare = std::less<long long unsigned int>; _Alloc = std::allocator<std::pair<const long long unsigned int, int> >; std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::const_iterator = std::_Rb_tree_const_iterator<std::pair<const long long unsigned int, int> >; std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::key_type = long long unsigned int], 33 basic blocks, 576 bytes needed, 0 local const props, 0 local copy props, 0 global const props, 0 global copy props

starting the processing of deferred insns
ending the processing of deferred insns


std::pair<std::_Rb_tree_node_base*, std::_Rb_tree_node_base*> std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_get_insert_hint_unique_pos(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::const_iterator, const key_type&) [with _Key = long long unsigned int; _Val = std::pair<const long long unsigned int, int>; _KeyOfValue = std::_Select1st<std::pair<const long long unsigned int, int> >; _Compare = std::less<long long unsigned int>; _Alloc = std::allocator<std::pair<const long long unsigned int, int> >; std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::const_iterator = std::_Rb_tree_const_iterator<std::pair<const long long unsigned int, int> >; std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::key_type = long long unsigned int]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 29 [mm0] 30 [mm1] 31 [mm2]
;;  exit block uses 	 0 [ax] 1 [dx] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 7[sp] 17[flags]
;;  ref usage 	r0={5d,5u} r1={6d,3u} r2={5d,2u} r6={1d,32u} r7={3d,45u} r8={3d} r9={3d} r10={3d} r11={3d} r12={3d} r13={3d} r14={3d} r15={3d} r16={1d,33u,2e} r17={25d,20u} r18={3d} r19={3d} r20={1d,32u} r21={4d} r22={4d} r23={4d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={4d} r30={4d} r31={4d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={3d} r38={3d} r39={3d} r40={3d} r41={3d} r42={3d} r43={3d} r44={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r76={3d} r85={1d,3u} r90={1d,1u} r93={1d,1u} r97={1d,5u} r98={1d,5u} r101={1d,6u} r102={1d,15u} r103={1d,6u} r104={1d,1u} r107={1d,4u} r108={1d,7u} r109={1d,2u} r110={1d,3u} r111={9d,1u} r112={9d,1u} r115={1d,1u} r116={1d,2u} 
;;    total ref usage 522{284d,236u,2e} in 84{81 regular + 3 call} insns.
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 3, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 101 102 103 104
;; live  in  	 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 17 [flags] 101 102 103 104
;; live  kill	 17 [flags]
(note 6 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (reg/f:SI 101 [ this ])
        (reg:SI 2 cx [ this ])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1532 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 2 cx [ this ])
        (nil)))
(insn 3 2 4 2 (set (reg/v:SI 102 [ __position ])
        (mem/c:SI (reg/f:SI 16 argp) [36 __position+0 S4 A32])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1532 90 {*movsi_internal}
     (expr_list:REG_EQUIV (mem/c:SI (reg/f:SI 16 argp) [36 __position+0 S4 A32])
        (nil)))
(insn 4 3 5 2 (set (reg/v/f:SI 103 [ __k ])
        (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [6 __k+0 S4 A32])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1532 90 {*movsi_internal}
     (expr_list:REG_EQUIV (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [6 __k+0 S4 A32])
        (nil)))
(note 5 4 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 5 10 2 (parallel [
            (set (reg/f:SI 104 [ D.83088 ])
                (plus:SI (reg/f:SI 101 [ this ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:529 220 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 10 9 11 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 102 [ __position ])
            (reg/f:SI 104 [ D.83088 ]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1540 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg/f:SI 104 [ D.83088 ])
        (expr_list:REG_DEAD (reg/v:SI 102 [ __position ])
            (nil))))
(jump_insn 11 10 12 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 28)
            (pc))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1540 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 8500 (nil)))
 -> 28)
;;  succ:       3 [15.0%]  (FALLTHRU)
;;              7 [85.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 101 102 103
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 101 102 103

;; basic block 3, loop depth 0, count 0, freq 1500, maybe hot
;;  prev block 2, next block 4, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [15.0%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u14(6){ }u15(7){ }u16(16){ }u17(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 101 103
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 101
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 101 103
;; live  gen 	 17 [flags]
;; live  kill	
(note 12 11 13 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:SI (plus:SI (reg/f:SI 101 [ this ])
                    (const_int 20 [0x14])) [21 MEM[(unsigned int *)this_5(D) + 20B]+0 S4 A32])
            (const_int 0 [0]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1542 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 14 13 15 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 74)
            (pc))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1542 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 74)
;;  succ:       4 [50.0%]  (FALLTHRU)
;;              18 [50.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 101 103
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 101 103

;; basic block 4, loop depth 0, count 0, freq 750, maybe hot
;;  prev block 3, next block 5, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       3 [50.0%]  (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u20(6){ }u21(7){ }u22(16){ }u23(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 101 103
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 101 103
;; lr  def 	 17 [flags] 85 115 116
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 101 103
;; live  gen 	 17 [flags] 85 115 116
;; live  kill	
(note 15 14 16 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 16 15 165 4 (set (reg/f:SI 85 [ D.83090 ])
        (mem/f:SI (plus:SI (reg/f:SI 101 [ this ])
                (const_int 16 [0x10])) [6 MEM[(struct _Rb_tree_node_base * &)this_5(D) + 16]+0 S4 A32])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1543 90 {*movsi_internal}
     (nil))
(insn 165 16 166 4 (set (reg:SI 115 [ MEM[(const long long unsigned int &)_7 + 16] ])
        (mem:SI (plus:SI (reg/f:SI 85 [ D.83090 ])
                (const_int 16 [0x10])) [34 MEM[(const long long unsigned int &)_7 + 16]+0 S4 A64])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1542 90 {*movsi_internal}
     (nil))
(insn 166 165 18 4 (set (reg:SI 116 [+4 ])
        (mem:SI (plus:SI (reg/f:SI 85 [ D.83090 ])
                (const_int 20 [0x14])) [34 MEM[(const long long unsigned int &)_7 + 16]+4 S4 A32])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1542 90 {*movsi_internal}
     (nil))
(insn 18 166 19 4 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 116 [+4 ])
            (mem:SI (plus:SI (reg/v/f:SI 103 [ __k ])
                    (const_int 4 [0x4])) [34 MEM[(const long long unsigned int &)__k_9(D)]+4 S4 A32]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1542 7 {*cmpsi_1}
     (nil))
(jump_insn 19 18 146 4 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 136)
            (pc))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1542 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 136)
;;  succ:       31 [50.0%] 
;;              5 [50.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 101 103 115 116
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 101 103 115 116

;; basic block 5, loop depth 0, count 0, freq 375, maybe hot
;;  prev block 4, next block 6, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       4 [50.0%]  (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u30(6){ }u31(7){ }u32(16){ }u33(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 101 103 115 116
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 103 116
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 101 103 115 116
;; live  gen 	 17 [flags]
;; live  kill	
(note 146 19 20 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 20 146 21 5 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 116 [+4 ])
            (mem:SI (plus:SI (reg/v/f:SI 103 [ __k ])
                    (const_int 4 [0x4])) [34 MEM[(const long long unsigned int &)__k_9(D)]+4 S4 A32]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1542 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 116 [+4 ])
        (nil)))
(jump_insn 21 20 147 5 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 74)
            (pc))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1542 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 74)
;;  succ:       18 [50.0%] 
;;              6 [50.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 101 103 115
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 101 103 115

;; basic block 6, loop depth 0, count 0, freq 188, maybe hot
;;  prev block 5, next block 7, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       5 [50.0%]  (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u37(6){ }u38(7){ }u39(16){ }u40(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 101 103 115
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 103 115
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 101 103 115
;; live  gen 	 17 [flags]
;; live  kill	
(note 147 21 22 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 22 147 23 6 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 115 [ MEM[(const long long unsigned int &)_7 + 16] ])
            (mem:SI (reg/v/f:SI 103 [ __k ]) [34 MEM[(const long long unsigned int &)__k_9(D)]+0 S4 A64]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1542 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 115 [ MEM[(const long long unsigned int &)_7 + 16] ])
        (nil)))
(jump_insn 23 22 28 6 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 136)
            (pc))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1542 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 136)
;;  succ:       31 [50.0%] 
;;              18 [50.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 101 103
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85 101 103

;; basic block 7, loop depth 0, count 0, freq 8500, maybe hot
;;  prev block 6, next block 8, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [85.0%] 
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u44(6){ }u45(7){ }u46(16){ }u47(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 101 102 103
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 102 103
;; lr  def 	 17 [flags] 107 108 109 110
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 101 102 103
;; live  gen 	 17 [flags] 107 108 109 110
;; live  kill	
(code_label 28 23 29 7 89 "" [1 uses])
(note 29 28 167 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 167 29 168 7 (set (reg:SI 107 [ D.83091 ])
        (mem:SI (reg/v/f:SI 103 [ __k ]) [34 MEM[(const long long unsigned int &)__k_9(D)]+0 S4 A64])) 90 {*movsi_internal}
     (nil))
(insn 168 167 169 7 (set (reg:SI 108 [ D.83091+4 ])
        (mem:SI (plus:SI (reg/v/f:SI 103 [ __k ])
                (const_int 4 [0x4])) [34 MEM[(const long long unsigned int &)__k_9(D)]+4 S4 A32])) 90 {*movsi_internal}
     (nil))
(insn 169 168 170 7 (set (reg:SI 109 [ D.83091 ])
        (mem:SI (plus:SI (reg/v:SI 102 [ __position ])
                (const_int 16 [0x10])) [34 MEM[(const long long unsigned int &)_33 + 16]+0 S4 A64])) 90 {*movsi_internal}
     (nil))
(insn 170 169 32 7 (set (reg:SI 110 [ D.83091+4 ])
        (mem:SI (plus:SI (reg/v:SI 102 [ __position ])
                (const_int 20 [0x14])) [34 MEM[(const long long unsigned int &)_33 + 16]+4 S4 A32])) 90 {*movsi_internal}
     (nil))
(insn 32 170 33 7 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 108 [ D.83091+4 ])
            (reg:SI 110 [ D.83091+4 ]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1548 7 {*cmpsi_1}
     (nil))
(jump_insn 33 32 149 7 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 163)
            (pc))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1548 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 163)
;;  succ:       21 [50.0%] 
;;              8 [50.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 101 102 103 107 108 109 110
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 101 102 103 107 108 109 110

;; basic block 8, loop depth 0, count 0, freq 4250, maybe hot
;;  prev block 7, next block 9, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       7 [50.0%]  (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u55(6){ }u56(7){ }u57(16){ }u58(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 101 102 103 107 108 109 110
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 108 110
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 101 102 103 107 108 109 110
;; live  gen 	 17 [flags]
;; live  kill	
(note 149 33 34 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 34 149 35 8 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 108 [ D.83091+4 ])
            (reg:SI 110 [ D.83091+4 ]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1548 7 {*cmpsi_1}
     (nil))
(jump_insn 35 34 150 8 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 161)
            (pc))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1548 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 161)
;;  succ:       10 [50.0%] 
;;              9 [50.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 101 102 103 107 108 109 110
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 101 102 103 107 108 109 110

;; basic block 9, loop depth 0, count 0, freq 2125, maybe hot
;;  prev block 8, next block 10, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       8 [50.0%]  (FALLTHRU)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u62(6){ }u63(7){ }u64(16){ }u65(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 101 102 103 107 108 109 110
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 107 109
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 101 102 103 107 108 109 110
;; live  gen 	 17 [flags]
;; live  kill	
(note 150 35 36 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 36 150 37 9 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 107 [ D.83091 ])
            (reg:SI 109 [ D.83091 ]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1548 7 {*cmpsi_1}
     (nil))
(jump_insn 37 36 161 9 (set (pc)
        (if_then_else (geu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 83)
            (pc))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1548 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 83)
;;  succ:       19 [50.0%] 
;;              10 [50.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 101 102 103 107 108 109 110
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 101 102 103 107 108 109 110

;; basic block 10, loop depth 0, count 0, freq 4250, maybe hot
;; Invalid sum of incoming frequencies 3188, should be 4250
;;  prev block 9, next block 11, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       9 [50.0%]  (FALLTHRU)
;;              8 [50.0%] 
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u69(6){ }u70(7){ }u71(16){ }u72(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 101 102 103 107 108
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 101 102
;; lr  def 	 17 [flags] 90
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 101 102 103 107 108
;; live  gen 	 17 [flags] 90
;; live  kill	
(code_label 161 37 39 10 104 "" [1 uses])
(note 39 161 40 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 40 39 41 10 (set (reg/f:SI 90 [ D.83090 ])
        (mem/f:SI (plus:SI (reg/f:SI 101 [ this ])
                (const_int 12 [0xc])) [6 MEM[(struct _Rb_tree_node_base * &)this_5(D) + 12]+0 S4 A32])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1552 90 {*movsi_internal}
     (nil))
(insn 41 40 42 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:SI 90 [ D.83090 ])
            (reg/v:SI 102 [ __position ]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1552 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg/f:SI 90 [ D.83090 ])
        (nil)))
(jump_insn 42 41 43 10 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 48)
            (pc))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1552 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 8986 (nil)))
 -> 48)
;;  succ:       11 [10.1%]  (FALLTHRU)
;;              12 [89.9%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 101 102 103 107 108
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 101 102 103 107 108

;; basic block 11, loop depth 0, count 0, freq 431, maybe hot
;;  prev block 10, next block 12, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       10 [10.1%]  (FALLTHRU)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u77(6){ }u78(7){ }u79(16){ }u80(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 102
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 102
;; lr  def 	 111 112
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 102
;; live  gen 	 111 112
;; live  kill	
(note 43 42 44 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 44 43 45 11 (set (reg:SI 111 [ D.81243 ])
        (reg/v:SI 102 [ __position ])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1553 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 96 [ D.83093 ])
        (nil)))
(insn 45 44 48 11 (set (reg:SI 112 [ D.81243+4 ])
        (reg/v:SI 102 [ __position ])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1553 90 {*movsi_internal}
     (nil))
;;  succ:       30 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 111 112
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 111 112

;; basic block 12, loop depth 0, count 0, freq 3819, maybe hot
;;  prev block 11, next block 13, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       10 [89.9%] 
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u83(6){ }u84(7){ }u85(16){ }u86(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 101 102 103 107 108
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 102 108
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 97
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 101 102 103 107 108
;; live  gen 	 0 [ax] 17 [flags] 97
;; live  kill	
(code_label 48 45 49 12 95 "" [1 uses])
(note 49 48 50 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 50 49 51 12 (set (mem:SI (reg/f:SI 7 sp) [0  S4 A32])
        (reg/v:SI 102 [ __position ])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:218 90 {*movsi_internal}
     (nil))
(call_insn/i 51 50 52 12 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base") [flags 0x43]  <function_decl 06b62500 _Rb_tree_decrement>) [0 _Rb_tree_decrement S1 A8])
            (const_int 4 [0x4]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:218 648 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (mem/f:SI (reg/f:SI 7 sp) [0  S4 A32]))
        (nil)))
(insn 52 51 53 12 (set (reg/f:SI 97 [ D.83090 ])
        (reg:SI 0 ax)) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:218 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 53 52 54 12 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 108 [ D.83091+4 ])
            (mem:SI (plus:SI (reg/f:SI 97 [ D.83090 ])
                    (const_int 20 [0x14])) [34 MEM[(const long long unsigned int &)_35 + 16]+4 S4 A32]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1554 7 {*cmpsi_1}
     (nil))
(jump_insn 54 53 152 12 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 74)
            (pc))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1554 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 74)
;;  succ:       18 [50.0%] 
;;              13 [50.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 97 101 102 103 107 108
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 97 101 102 103 107 108

;; basic block 13, loop depth 0, count 0, freq 1910, maybe hot
;;  prev block 12, next block 14, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       12 [50.0%]  (FALLTHRU)
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u95(6){ }u96(7){ }u97(16){ }u98(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 97 101 102 103 107 108
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 97 108
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 97 101 102 103 107 108
;; live  gen 	 17 [flags]
;; live  kill	
(note 152 54 55 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 55 152 56 13 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 108 [ D.83091+4 ])
            (mem:SI (plus:SI (reg/f:SI 97 [ D.83090 ])
                    (const_int 20 [0x14])) [34 MEM[(const long long unsigned int &)_35 + 16]+4 S4 A32]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1554 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 108 [ D.83091+4 ])
        (nil)))
(jump_insn 56 55 153 13 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 162)
            (pc))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1554 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 162)
;;  succ:       15 [50.0%] 
;;              14 [50.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 97 101 102 103 107
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 97 101 102 103 107

;; basic block 14, loop depth 0, count 0, freq 955, maybe hot
;;  prev block 13, next block 15, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       13 [50.0%]  (FALLTHRU)
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u102(6){ }u103(7){ }u104(16){ }u105(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 97 101 102 103 107
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 97 107
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 97 101 102 103 107
;; live  gen 	 17 [flags]
;; live  kill	
(note 153 56 57 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 57 153 58 14 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 107 [ D.83091 ])
            (mem:SI (plus:SI (reg/f:SI 97 [ D.83090 ])
                    (const_int 16 [0x10])) [34 MEM[(const long long unsigned int &)_35 + 16]+0 S4 A64]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1554 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 107 [ D.83091 ])
        (nil)))
(jump_insn 58 57 162 14 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 74)
            (pc))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1554 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 74)
;;  succ:       18 [50.0%] 
;;              15 [50.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 97 101 102 103
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 97 101 102 103

;; basic block 15, loop depth 0, count 0, freq 3028, maybe hot
;; Invalid sum of incoming frequencies 1433, should be 3028
;;  prev block 14, next block 16, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       14 [50.0%]  (FALLTHRU)
;;              13 [50.0%] 
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u109(6){ }u110(7){ }u111(16){ }u112(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 97 102
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 97
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 97 102
;; live  gen 	 17 [flags]
;; live  kill	
(code_label 162 58 60 15 105 "" [1 uses])
(note 60 162 61 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 61 60 62 15 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f:SI (plus:SI (reg/f:SI 97 [ D.83090 ])
                    (const_int 12 [0xc])) [6 MEM[(struct _Rb_tree_node_base * *)_35 + 12B]+0 S4 A32])
            (const_int 0 [0]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1556 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 62 61 63 15 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 68)
            (pc))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1556 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 8500 (nil)))
 -> 68)
;;  succ:       16 [15.0%]  (FALLTHRU)
;;              17 [85.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 97 102
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 97 102

;; basic block 16, loop depth 0, count 0, freq 454, maybe hot
;;  prev block 15, next block 17, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       15 [15.0%]  (FALLTHRU)
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u115(6){ }u116(7){ }u117(16){ }u118(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 97
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 97
;; lr  def 	 111 112
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 97
;; live  gen 	 111 112
;; live  kill	
(note 63 62 64 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 64 63 65 16 (set (reg:SI 111 [ D.81243 ])
        (const_int 0 [0])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1557 90 {*movsi_internal}
     (nil))
(insn 65 64 68 16 (set (reg:SI 112 [ D.81243+4 ])
        (reg/f:SI 97 [ D.83090 ])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1557 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 97 [ D.83090 ])
        (nil)))
;;  succ:       30 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 111 112
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 111 112

;; basic block 17, loop depth 0, count 0, freq 2574, maybe hot
;;  prev block 16, next block 18, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       15 [85.0%] 
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u120(6){ }u121(7){ }u122(16){ }u123(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 102
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 102
;; lr  def 	 111 112
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 102
;; live  gen 	 111 112
;; live  kill	
(code_label 68 65 69 17 98 "" [1 uses])
(note 69 68 70 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 70 69 71 17 (set (reg:SI 111 [ D.81243 ])
        (reg/v:SI 102 [ __position ])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1559 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 96 [ D.83093 ])
        (nil)))
(insn 71 70 74 17 (set (reg:SI 112 [ D.81243+4 ])
        (reg/v:SI 102 [ __position ])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1559 90 {*movsi_internal}
     (nil))
;;  succ:       30 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 111 112
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 111 112

;; basic block 18, loop depth 0, count 0, freq 2311, maybe hot
;; Invalid sum of incoming frequencies 4614, should be 2311
;;  prev block 17, next block 19, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       6 [50.0%]  (FALLTHRU)
;;              3 [50.0%] 
;;              12 [50.0%] 
;;              14 [50.0%] 
;;              23 [50.0%] 
;;              25 [50.0%] 
;;              5 [50.0%] 
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u126(6){ }u127(7){ }u128(16){ }u129(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 101 103
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 101 103
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 111 112
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 101 103
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 7 [sp] 111 112
;; live  kill	 17 [flags]
(code_label 74 71 75 18 90 "" [6 uses])
(note 75 74 76 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 76 75 77 18 (set (mem:SI (reg/f:SI 7 sp) [0  S4 A32])
        (reg/v/f:SI 103 [ __k ])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1562 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v/f:SI 103 [ __k ])
        (nil)))
(insn 77 76 78 18 (set (reg:SI 2 cx)
        (reg/f:SI 101 [ this ])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1562 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 101 [ this ])
        (nil)))
(call_insn 78 77 79 18 (parallel [
            (set (reg:DI 0 ax)
                (call (mem:QI (symbol_ref:SI ("_ZNSt8_Rb_treeIySt4pairIKyiESt10_Select1stIS2_ESt4lessIyESaIS2_EE24_M_get_insert_unique_posERS1_") [flags 0x3]  <function_decl 06e17c80 _M_get_insert_unique_pos>) [0 _M_get_insert_unique_pos S1 A8])
                    (const_int 4 [0x4])))
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 4 [0x4])))
        ]) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1562 653 {*call_value_pop}
     (expr_list:REG_DEAD (reg:SI 2 cx)
        (expr_list:REG_ARGS_SIZE (const_int -4 [0xfffffffffffffffc])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 2 cx))
        (expr_list:SI (use (mem/f:SI (reg/f:SI 7 sp) [0  S4 A32]))
            (nil))))
(insn 79 78 171 18 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1562 220 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 171 79 172 18 (set (reg:SI 111 [ D.81243 ])
        (reg:SI 0 ax)) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1562 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 172 171 83 18 (set (reg:SI 112 [ D.81243+4 ])
        (reg:SI 1 dx [+4 ])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1562 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [+4 ])
        (nil)))
;;  succ:       30 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 111 112
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 111 112

;; basic block 19, loop depth 0, count 0, freq 0
;; Invalid sum of incoming frequencies 1063, should be 0
;;  prev block 18, next block 20, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       9 [50.0%] 
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u142(6){ }u143(7){ }u144(16){ }u145(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 101 102 103 107 108 109 110
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 108 110
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 101 102 103 107 108 109 110
;; live  gen 	 17 [flags]
;; live  kill	
(code_label 83 172 84 19 93 "" [1 uses])
(note 84 83 87 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 87 84 88 19 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 108 [ D.83091+4 ])
            (reg:SI 110 [ D.83091+4 ]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1564 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 110 [ D.83091+4 ])
        (nil)))
(jump_insn 88 87 156 19 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 163)
            (pc))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1564 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 0 (nil)))
 -> 163)
;;  succ:       21
;;              20 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 101 102 103 107 108 109
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 101 102 103 107 108 109

;; basic block 20, loop depth 0, count 0, freq 1063, maybe hot
;; Invalid sum of incoming frequencies 0, should be 1063
;;  prev block 19, next block 21, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       19 [100.0%]  (FALLTHRU)
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u151(6){ }u152(7){ }u153(16){ }u154(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 101 102 103 107 108 109
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 107 109
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 101 102 103 107 108 109
;; live  gen 	 17 [flags]
;; live  kill	
(note 156 88 89 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 89 156 90 20 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 107 [ D.83091 ])
            (reg:SI 109 [ D.83091 ]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1564 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 109 [ D.83091 ])
        (nil)))
(jump_insn 90 89 163 20 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 127)
            (pc))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1564 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 127)
;;  succ:       29 [50.0%] 
;;              21 [50.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 101 102 103 107 108
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 101 102 103 107 108

;; basic block 21, loop depth 0, count 0, freq 2125, maybe hot
;; Invalid sum of incoming frequencies 4782, should be 2125
;;  prev block 20, next block 22, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       20 [50.0%]  (FALLTHRU)
;;              19
;;              7 [50.0%] 
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u158(6){ }u159(7){ }u160(16){ }u161(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 101 102 103 107 108
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 101 102
;; lr  def 	 17 [flags] 93
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 101 102 103 107 108
;; live  gen 	 17 [flags] 93
;; live  kill	
(code_label 163 90 92 21 106 "" [2 uses])
(note 92 163 93 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 93 92 94 21 (set (reg/f:SI 93 [ D.83090 ])
        (mem/f:SI (plus:SI (reg/f:SI 101 [ this ])
                (const_int 16 [0x10])) [6 MEM[(struct _Rb_tree_node_base * &)this_5(D) + 16]+0 S4 A32])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1568 90 {*movsi_internal}
     (nil))
(insn 94 93 95 21 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:SI 93 [ D.83090 ])
            (reg/v:SI 102 [ __position ]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1568 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg/f:SI 93 [ D.83090 ])
        (nil)))
(jump_insn 95 94 96 21 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 101)
            (pc))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1568 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 8986 (nil)))
 -> 101)
;;  succ:       22 [10.1%]  (FALLTHRU)
;;              23 [89.9%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 101 102 103 107 108
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 101 102 103 107 108

;; basic block 22, loop depth 0, count 0, freq 215, maybe hot
;;  prev block 21, next block 23, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       21 [10.1%]  (FALLTHRU)
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u166(6){ }u167(7){ }u168(16){ }u169(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 102
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 102
;; lr  def 	 111 112
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 102
;; live  gen 	 111 112
;; live  kill	
(note 96 95 97 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 97 96 98 22 (set (reg:SI 111 [ D.81243 ])
        (const_int 0 [0])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1569 90 {*movsi_internal}
     (nil))
(insn 98 97 101 22 (set (reg:SI 112 [ D.81243+4 ])
        (reg/v:SI 102 [ __position ])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1569 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 96 [ D.83093 ])
        (nil)))
;;  succ:       30 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 111 112
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 111 112

;; basic block 23, loop depth 0, count 0, freq 1910, maybe hot
;;  prev block 22, next block 24, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       21 [89.9%] 
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u171(6){ }u172(7){ }u173(16){ }u174(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 101 102 103 107 108
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 102 108
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 98
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 101 102 103 107 108
;; live  gen 	 0 [ax] 17 [flags] 98
;; live  kill	
(code_label 101 98 102 23 101 "" [1 uses])
(note 102 101 103 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 103 102 104 23 (set (mem:SI (reg/f:SI 7 sp) [0  S4 A32])
        (reg/v:SI 102 [ __position ])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:203 90 {*movsi_internal}
     (nil))
(call_insn/i 104 103 105 23 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base") [flags 0x43]  <function_decl 06b62400 _Rb_tree_increment>) [0 _Rb_tree_increment S1 A8])
            (const_int 4 [0x4]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:203 648 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (mem/f:SI (reg/f:SI 7 sp) [0  S4 A32]))
        (nil)))
(insn 105 104 106 23 (set (reg/f:SI 98 [ D.83090 ])
        (reg:SI 0 ax)) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:203 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 106 105 107 23 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 108 [ D.83091+4 ])
            (mem:SI (plus:SI (reg/f:SI 98 [ D.83090 ])
                    (const_int 20 [0x14])) [34 MEM[(const long long unsigned int &)_36 + 16]+4 S4 A32]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1570 7 {*cmpsi_1}
     (nil))
(jump_insn 107 106 158 23 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 74)
            (pc))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1570 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 74)
;;  succ:       18 [50.0%] 
;;              24 [50.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 98 101 102 103 107 108
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 98 101 102 103 107 108

;; basic block 24, loop depth 0, count 0, freq 955, maybe hot
;;  prev block 23, next block 25, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       23 [50.0%]  (FALLTHRU)
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u183(6){ }u184(7){ }u185(16){ }u186(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 98 101 102 103 107 108
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 98 108
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 98 101 102 103 107 108
;; live  gen 	 17 [flags]
;; live  kill	
(note 158 107 108 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 108 158 109 24 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 108 [ D.83091+4 ])
            (mem:SI (plus:SI (reg/f:SI 98 [ D.83090 ])
                    (const_int 20 [0x14])) [34 MEM[(const long long unsigned int &)_36 + 16]+4 S4 A32]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1570 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 108 [ D.83091+4 ])
        (nil)))
(jump_insn 109 108 159 24 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 164)
            (pc))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1570 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 164)
;;  succ:       26 [50.0%] 
;;              25 [50.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 98 101 102 103 107
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 98 101 102 103 107

;; basic block 25, loop depth 0, count 0, freq 478, maybe hot
;;  prev block 24, next block 26, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       24 [50.0%]  (FALLTHRU)
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u190(6){ }u191(7){ }u192(16){ }u193(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 98 101 102 103 107
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 98 107
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 98 101 102 103 107
;; live  gen 	 17 [flags]
;; live  kill	
(note 159 109 110 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 110 159 111 25 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 107 [ D.83091 ])
            (mem:SI (plus:SI (reg/f:SI 98 [ D.83090 ])
                    (const_int 16 [0x10])) [34 MEM[(const long long unsigned int &)_36 + 16]+0 S4 A64]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1570 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 107 [ D.83091 ])
        (nil)))
(jump_insn 111 110 164 25 (set (pc)
        (if_then_else (geu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 74)
            (pc))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1570 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 74)
;;  succ:       18 [50.0%] 
;;              26 [50.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 98 101 102 103
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 98 101 102 103

;; basic block 26, loop depth 0, count 0, freq 1514, maybe hot
;; Invalid sum of incoming frequencies 717, should be 1514
;;  prev block 25, next block 27, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       25 [50.0%]  (FALLTHRU)
;;              24 [50.0%] 
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u197(6){ }u198(7){ }u199(16){ }u200(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 98 102
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 102
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 98 102
;; live  gen 	 17 [flags]
;; live  kill	
(code_label 164 111 113 26 107 "" [1 uses])
(note 113 164 114 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 114 113 115 26 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f:SI (plus:SI (reg/v:SI 102 [ __position ])
                    (const_int 12 [0xc])) [6 MEM[(struct _Rb_tree_node_base * *)_33 + 12B]+0 S4 A32])
            (const_int 0 [0]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1572 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 115 114 116 26 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 121)
            (pc))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1572 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 8500 (nil)))
 -> 121)
;;  succ:       27 [15.0%]  (FALLTHRU)
;;              28 [85.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 98 102
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 98 102

;; basic block 27, loop depth 0, count 0, freq 227, maybe hot
;;  prev block 26, next block 28, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       26 [15.0%]  (FALLTHRU)
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u203(6){ }u204(7){ }u205(16){ }u206(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 102
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 102
;; lr  def 	 111 112
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 102
;; live  gen 	 111 112
;; live  kill	
(note 116 115 117 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 117 116 118 27 (set (reg:SI 111 [ D.81243 ])
        (const_int 0 [0])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1573 90 {*movsi_internal}
     (nil))
(insn 118 117 121 27 (set (reg:SI 112 [ D.81243+4 ])
        (reg/v:SI 102 [ __position ])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1573 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 96 [ D.83093 ])
        (nil)))
;;  succ:       30 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 111 112
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 111 112

;; basic block 28, loop depth 0, count 0, freq 1287, maybe hot
;;  prev block 27, next block 29, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       26 [85.0%] 
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u208(6){ }u209(7){ }u210(16){ }u211(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 98
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 98
;; lr  def 	 111 112
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 98
;; live  gen 	 111 112
;; live  kill	
(code_label 121 118 122 28 103 "" [1 uses])
(note 122 121 123 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 123 122 124 28 (set (reg:SI 111 [ D.81243 ])
        (reg/f:SI 98 [ D.83090 ])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1575 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 98 [ D.83090 ])
        (nil)))
(insn 124 123 127 28 (set (reg:SI 112 [ D.81243+4 ])
        (reg/f:SI 98 [ D.83090 ])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1575 90 {*movsi_internal}
     (nil))
;;  succ:       30 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 111 112
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 111 112

;; basic block 29, loop depth 0, count 0, freq 2125, maybe hot
;; Invalid sum of incoming frequencies 532, should be 2125
;;  prev block 28, next block 30, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       20 [50.0%] 
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u214(6){ }u215(7){ }u216(16){ }u217(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 102
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 102
;; lr  def 	 111 112
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 102
;; live  gen 	 111 112
;; live  kill	
(code_label 127 124 128 29 99 "" [1 uses])
(note 128 127 129 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 129 128 130 29 (set (reg:SI 111 [ D.81243 ])
        (reg/v:SI 102 [ __position ])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1582 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 96 [ D.83093 ])
        (nil)))
(insn 130 129 131 29 (set (reg:SI 112 [ D.81243+4 ])
        (const_int 0 [0])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1582 90 {*movsi_internal}
     (nil))
;;  succ:       30 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 111 112
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 111 112

;; basic block 30, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 29, next block 31, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       31 [100.0%]  (FALLTHRU)
;;              18 [100.0%]  (FALLTHRU)
;;              16 [100.0%]  (FALLTHRU)
;;              27 [100.0%]  (FALLTHRU)
;;              29 [100.0%]  (FALLTHRU)
;;              22 [100.0%]  (FALLTHRU)
;;              17 [100.0%]  (FALLTHRU)
;;              28 [100.0%]  (FALLTHRU)
;;              11 [100.0%]  (FALLTHRU)
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u219(6){ }u220(7){ }u221(16){ }u222(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 111 112
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 111 112
;; live  gen 	
;; live  kill	
(code_label 131 130 132 30 96 "" [0 uses])
(note 132 131 136 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
;;  succ:       32 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 111 112
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 111 112

;; basic block 31, loop depth 0, count 0, freq 375, maybe hot
;;  prev block 30, next block 32, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       4 [50.0%] 
;;              6 [50.0%] 
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u225(6){ }u226(7){ }u227(16){ }u228(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85
;; lr  def 	 111 112
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 85
;; live  gen 	 111 112
;; live  kill	
(code_label 136 132 137 31 91 "" [2 uses])
(note 137 136 138 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 138 137 139 31 (set (reg:SI 111 [ D.81243 ])
        (const_int 0 [0])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1544 90 {*movsi_internal}
     (nil))
(insn 139 138 145 31 (set (reg:SI 112 [ D.81243+4 ])
        (reg/f:SI 85 [ D.83090 ])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1544 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 85 [ D.83090 ])
        (nil)))
;;  succ:       30 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 111 112
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 111 112

;; basic block 32, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 31, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       30 [100.0%]  (FALLTHRU)
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u230(6){ }u231(7){ }u232(16){ }u233(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 111 112
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 111 112
;; lr  def 	 0 [ax] 1 [dx]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 111 112
;; live  gen 	 0 [ax] 1 [dx]
;; live  kill	
(note 145 139 175 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(insn 175 145 176 32 (set (reg:SI 0 ax)
        (reg:SI 111 [ D.81243 ])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1583 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 111 [ D.81243 ])
        (nil)))
(insn 176 175 144 32 (set (reg:SI 1 dx [+4 ])
        (reg:SI 112 [ D.81243+4 ])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1583 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 112 [ D.81243+4 ])
        (nil)))
(insn 144 176 0 32 (use (reg/i:DI 0 ax)) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1583 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 1 [dx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 1 [dx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function int main() (main, funcdef_no=5706, decl_uid=72670, symbol_order=3172) (executed once)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 129 n_edges 201 count 142 (  1.1)


int main()

Dataflow summary:
def_info->table_size = 0, use_info->table_size = 1183
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 29 [mm0] 30 [mm1] 31 [mm2]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 7[sp] 17[flags]
;;  ref usage 	r0={26d,14u} r1={28d,3u} r2={31d,6u} r6={1d,128u} r7={13d,240u} r8={24d} r9={24d} r10={24d} r11={24d} r12={24d} r13={24d} r14={24d} r15={24d} r16={1d,127u} r17={200d,79u} r18={24d} r19={24d} r20={1d,136u,3e} r21={25d} r22={25d} r23={25d} r24={24d} r25={24d} r26={24d} r27={24d} r28={24d} r29={25d} r30={25d} r31={25d} r32={24d} r33={24d} r34={24d} r35={24d} r36={24d} r37={24d} r38={24d} r39={24d} r40={24d} r41={24d} r42={24d} r43={24d} r44={24d} r45={24d} r46={24d} r47={24d} r48={24d} r49={24d} r50={24d} r51={24d} r52={24d} r53={24d} r54={24d} r55={24d} r56={24d} r57={24d} r58={24d} r59={24d} r60={24d} r61={24d} r62={24d} r63={24d} r64={24d} r65={24d} r66={24d} r67={24d} r68={24d} r69={24d} r70={24d} r71={24d} r72={24d} r73={24d} r74={24d} r75={24d} r76={24d} r83={3d,4u} r84={1d,2u} r85={1d,1u} r87={2d,3u} r94={2d,6u,1e} r101={2d,6u,1e} r102={2d,3u} r104={2d,5u} r106={2d,6u} r112={1d,14u} r113={1d,1u} r117={1d,7u} r120={3d,1u} r122={2d,3u} r123={2d,5u} r125={2d,4u} r129={2d,3u} r132={2d,3u} r135={3d,9u} r136={4d,11u} r149={1d,2u} r150={1d,2u} r151={3d,2u} r158={1d,1u} r159={2d,5u} r160={1d,2u} r165={4d,8u} r166={1d,2u} r167={3d,2u} r174={1d,1u} r175={2d,5u} r176={1d,2u} r181={5d,13u} r183={1d,1u} r186={3d,6u} r187={3d,8u} r189={4d,8u} r192={1d,3u} r201={1d,1u} r203={5d,13u} r207={1d,3u} r209={2d,8u} r212={3d,1u} r218={1d,1u} r225={1d,3u} r229={3d,1u} r240={1d,1u} r247={1d,6u} r252={5d,4u} r254={1d,1u} r258={1d,1u} r261={1d,1u} r262={1d,1u} r263={1d,1u} r264={1d,1u} r265={1d,1u} r266={1d,1u} r267={1d,1u} r268={1d,1u} r269={1d,1u} r270={1d,1u} r271={1d,1u} r272={2d,4u} r273={1d,1u} r274={1d,1u} r275={1d,1u} r276={1d,1u} r277={1d,1u} r278={1d,1u} r279={1d,1u} r280={1d,1u} r281={1d,1u} r282={1d,1u} r283={1d,1u} r284={1d,1u} r285={1d,1u} r286={2d,3u} r287={1d,1u} r288={1d,1u} r289={1d,1u} r290={1d,1u} r291={1d,1u} r292={1d,2u,1e} r293={1d,1u} r294={1d,1u} r298={2d,3u} r299={1d,1u} r300={1d,1u} r301={1d,1u} r302={1d,1u} r303={1d,1u} r304={1d,1u} r305={1d,1u} r306={1d,2u,1e} r307={1d,1u} r308={1d,1u} r312={2d,3u} r313={1d,1u} r314={1d,1u} r315={1d,1u} r317={1d,1u} r318={1d} r319={1d,5u} r320={1d,1u} r325={1d,1u} r328={1d,1u} r329={1d,1u} r330={1d,1u} r331={1d,1u} r332={1d,1u} r334={1d,1u} r335={1d,1u} r336={1d,1u} r337={1d,4u} r339={1d,3u} r340={1d,1u} r341={1d,1u} r342={1d,1u} r343={1d,1u} r344={1d,1u} r345={2d,3u} r346={1d,1u} r347={1d,1u} r348={1d,3u} r350={1d,2u} r352={1d,1u} r354={1d,1u} r356={1d,1u} r357={1d,2u} r361={1d,1u} r362={1d,1u} r363={1d,1u} r364={1d,1u} r365={1d,1u} r366={2d,3u} r367={1d,1u} r368={1d,1u} r370={1d,1u} r372={1d,1u} r374={1d,1u} r375={1d,2u} r379={1d,1u} r380={1d,1u} r382={1d,1u} r384={1d,1u} r386={1d,1u} r387={1d,2u} r391={1d,1u} r392={1d,1u} r393={1d,1u} r394={1d,1u} r395={1d,2u} r397={1d,1u} r398={1d,1u} r399={1d,1u} r400={1d,1u} r403={1d,1u,1e} r404={1d,1u} r406={1d,1u} r409={1d,1u,1e} r410={1d,1u} r412={1d,1u} r414={1d,1u} r415={1d,2u} r417={1d,1u,1e} r418={1d,1u} r420={1d,1u} r421={1d,1u} r422={1d,1u} r423={1d,1u} r424={1d,1u} r425={1d,1u} r427={1d,2u} r428={1d,1u} r429={3d,2u} r430={3d,1u} r431={3d,2u} r432={3d,1u} r433={1d,2u} r434={1d,4u} r435={1d,2u} r436={1d,4u} r437={1d,2u} r438={1d,4u} r439={1d,1u} r441={1d,1u} r442={1d,2u} r443={1d,1u} r444={1d,2u} r445={1d,1u} r446={1d,2u} 
;;    total ref usage 3295{2149d,1136u,10e} in 502{478 regular + 24 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(6){ }d-1(7){ }d-1(16){ }d-1(20){ }d-1(21){ }d-1(22){ }d-1(23){ }d-1(29){ }d-1(30){ }d-1(31){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 29 [mm0] 30 [mm1] 31 [mm2]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 29 [mm0] 30 [mm1] 31 [mm2]
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

( 0 )->[2]->( 3 121 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 149 151 261
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 0 [ax] 17 [flags] 149 151 261
;; live  kill	 17 [flags]
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 151
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 151

( 2 )->[3]->( 4 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u11(6){ }u12(7){ }u13(16){ }u14(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 151
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 429 430
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 151
;; live  gen 	 429 430
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 151 429 430
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 151 429 430

( 3 6 )->[4]->( 5 6 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u15(6){ }u16(7){ }u17(16){ }u18(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 151 429 430
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 151
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 151 429 430
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 429 430
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 429 430

( 4 )->[5]->( 6 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u21(6){ }u22(7){ }u23(16){ }u24(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 429 430
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 429 430
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 429 430
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 429 430

( 4 5 )->[6]->( 4 122 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u25(6){ }u26(7){ }u27(16){ }u28(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 429 430
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 150 151 262
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 429 430
;; live  gen 	 0 [ax] 17 [flags] 150 151 262
;; live  kill	 17 [flags]
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 151 429 430
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 151 429 430

( 122 7 )->[7]->( 7 8 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u35(6){ }u36(7){ }u37(16){ }u38(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 151 159 429 430
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 151 159
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 151 158 159 160 263 264 265 266 267 268
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 151 159 429 430
;; live  gen 	 0 [ax] 17 [flags] 151 158 159 160 263 264 265 266 267 268
;; live  kill	 17 [flags]
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 151 159 429 430
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 151 159 429 430

( 7 )->[8]->( 9 125 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u54(6){ }u55(7){ }u56(16){ }u57(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 159 429 430
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 159 429 430
;; lr  def 	 17 [flags] 85 269 270 271 272 273
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 159 429 430
;; live  gen 	 17 [flags] 85 269 270 271 272 273
;; live  kill	 17 [flags]
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

( 8 )->[9]->( 10 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u74(6){ }u75(7){ }u76(16){ }u77(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 87
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 87
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87

( 9 16 )->[10]->( 11 123 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u78(6){ }u79(7){ }u80(16){ }u81(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 84 167 274
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; live  gen 	 0 [ax] 17 [flags] 84 167 274
;; live  kill	 17 [flags]
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 167
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 167

( 10 )->[11]->( 12 )
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u88(6){ }u89(7){ }u90(16){ }u91(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 167
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 431 432
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 167
;; live  gen 	 431 432
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 167 431 432
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 167 431 432

( 11 14 )->[12]->( 13 14 )
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u92(6){ }u93(7){ }u94(16){ }u95(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 167 431 432
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 167
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 167 431 432
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 431 432
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 431 432

( 12 )->[13]->( 14 )
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u98(6){ }u99(7){ }u100(16){ }u101(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 431 432
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; live  gen 	 431 432
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 431 432
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 431 432

( 12 13 )->[14]->( 12 124 )
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u102(6){ }u103(7){ }u104(16){ }u105(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 431 432
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 166 167 275
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 431 432
;; live  gen 	 0 [ax] 17 [flags] 166 167 275
;; live  kill	 17 [flags]
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 167 431 432
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 167 431 432

( 124 15 )->[15]->( 15 16 )
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u112(6){ }u113(7){ }u114(16){ }u115(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 167 175 431 432
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 167 175
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 167 174 175 176 276 277 278 279 280 281
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 167 175 431 432
;; live  gen 	 0 [ax] 17 [flags] 167 174 175 176 276 277 278 279 280 281
;; live  kill	 17 [flags]
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 167 175 431 432
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 167 175 431 432

( 15 )->[16]->( 10 17 )
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u131(6){ }u132(7){ }u133(16){ }u134(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 175 431 432
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 175 431 432
;; lr  def 	 17 [flags] 87 247 282 283 284 285 286 287
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 175 431 432
;; live  gen 	 17 [flags] 87 247 282 283 284 285 286 287
;; live  kill	 17 [flags]
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 247
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 247

( 16 )->[17]->( 18 22 )
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u154(6){ }u155(7){ }u156(16){ }u157(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 247
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 247
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 247
;; live  gen 	 17 [flags] 251
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 247
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 247

( 17 )->[18]->( 19 )
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u161(6){ }u162(7){ }u163(16){ }u164(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 247
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 247
;; lr  def 	 17 [flags] 94 240
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 247
;; live  gen 	 94 240
;; live  kill	 17 [flags]
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 94 240 247
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 94 240 247

( 18 19 )->[19]->( 19 20 )
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u166(6){ }u167(7){ }u168(16){ }u169(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 94 240 247
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 94 240
;; lr  def 	 17 [flags] 94 288 289 290 291 292 293 294 298 299 300 301
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 94 240 247
;; live  gen 	 17 [flags] 94 95 288 289 290 291 292 293 294 295 296 297 298 299 300 301
;; live  kill	 17 [flags]
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 94 240 247
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 94 240 247

( 19 )->[20]->( 21 )
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u196(6){ }u197(7){ }u198(16){ }u199(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 247
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 247
;; lr  def 	 101
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 247
;; live  gen 	 101
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 101 247
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 101 247

( 20 21 )->[21]->( 21 22 )
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u201(6){ }u202(7){ }u203(16){ }u204(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 101 247
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 101
;; lr  def 	 17 [flags] 101 302 303 304 305 306 307 308 312 313 314 315
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 101 247
;; live  gen 	 17 [flags] 101 246 302 303 304 305 306 307 308 309 310 311 312 313 314 315
;; live  kill	 17 [flags]
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 101 247
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 101 247

( 21 17 )->[22]->( 24 23 )
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u230(6){ }u231(7){ }u232(16){ }u233(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 247
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 247
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 247
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 247
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 247

( 22 125 )->[23]->( 107 )
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u237(6){ }u238(7){ }u239(16){ }u240(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 252
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 252
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 252
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 252

( 22 )->[24]->( 25 )
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u241(6){ }u242(7){ }u243(16){ }u244(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 247
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 247
;; lr  def 	 102 125 252
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 247
;; live  gen 	 102 125 252
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 102 125 252
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 102 125 252

( 24 106 )->[25]->( 106 26 )
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u246(6){ }u247(7){ }u248(16){ }u249(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 102 125 252
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 102 125 252
;; lr  def 	 17 [flags] 317 318
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 102 125 252
;; live  gen 	 17 [flags] 317 318
;; live  kill	 17 [flags]
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 252
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 252

( 25 )->[26]->( 27 31 )
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u257(6){ }u258(7){ }u259(16){ }u260(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 104 106 319 320 325
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 2 [cx] 7 [sp] 17 [flags] 104 106 319 320 321 322 323 324 325
;; live  kill	 17 [flags]
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104 106
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104 106

( 26 )->[27]->( 28 )
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u281(6){ }u282(7){ }u283(16){ }u284(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104 106
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 135 136
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104 106
;; live  gen 	 135 136
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104 106 135 136
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104 106 135 136

( 27 30 )->[28]->( 29 30 )
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u285(6){ }u286(7){ }u287(16){ }u288(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104 106 135 136
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104
;; lr  def 	 17 [flags] 439
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104 106 135 136
;; live  gen 	 17 [flags] 327 439 440
;; live  kill	 17 [flags]
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104 106 135 136
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104 106 135 136

( 28 )->[29]->( 30 )
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u293(6){ }u294(7){ }u295(16){ }u296(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104 106 135 136
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 135 136
;; lr  def 	 17 [flags] 136 328 329 330 331
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104 106 135 136
;; live  gen 	 136 328 329 330 331
;; live  kill	 17 [flags]
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104 106 135 136
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104 106 135 136

( 28 29 )->[30]->( 28 32 )
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u309(6){ }u310(7){ }u311(16){ }u312(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104 106 135 136
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104 135
;; lr  def 	 17 [flags] 104 135 332 334 335 336
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104 106 135 136
;; live  gen 	 17 [flags] 104 135 332 333 334 335 336
;; live  kill	 17 [flags]
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104 106 135 136
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104 106 135 136

( 26 )->[31]->( 32 )
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u328(6){ }u329(7){ }u330(16){ }u331(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 106
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 136
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 106
;; live  gen 	 136
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 106 136
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 106 136

( 31 30 )->[32]->( 33 101 )
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u332(6){ }u333(7){ }u334(16){ }u335(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 106 136
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 106
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 106 136
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 106 136
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 106 136

( 32 )->[33]->( 34 )
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u338(6){ }u339(7){ }u340(16){ }u341(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 106 136
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 106
;; lr  def 	 83 122 123 189
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 106 136
;; live  gen 	 83 122 123 189
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 106 122 123 136 189
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 106 122 123 136 189

( 33 100 )->[34]->( 35 111 )
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u343(6){ }u344(7){ }u345(16){ }u346(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 106 122 123 136 189
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 106 122 123 136 189
;; lr  def 	 17 [flags] 112 113 337 339 340 341 342 343 344 345 346 347 348 350 427 428
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 106 122 123 136 189
;; live  gen 	 17 [flags] 112 113 337 338 339 340 341 342 343 344 345 346 347 348 349 350 427 428
;; live  kill	 17 [flags]
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 189 427 428
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 189 427 428

( 34 )->[35]->( 36 )
;; bb 35 artificial_defs: { }
;; bb 35 artificial_uses: { u379(6){ }u380(7){ }u381(16){ }u382(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 189 427 428
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 203
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 189 427 428
;; live  gen 	 203
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 189 203 427 428
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 189 203 427 428

( 35 41 )->[36]->( 40 37 )
;; bb 36 artificial_defs: { }
;; bb 36 artificial_uses: { u383(6){ }u384(7){ }u385(16){ }u386(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 189 203 427 428
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 112 189
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 189 203 427 428
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 189 203 427 428
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 189 203 427 428

( 36 )->[37]->( 39 38 )
;; bb 37 artificial_defs: { }
;; bb 37 artificial_uses: { u390(6){ }u391(7){ }u392(16){ }u393(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 189 203 427 428
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 112 189
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 189 203 427 428
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 189 203 427 428
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 189 203 427 428

( 37 )->[38]->( 40 39 )
;; bb 38 artificial_defs: { }
;; bb 38 artificial_uses: { u397(6){ }u398(7){ }u399(16){ }u400(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 189 203 427 428
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 112 189
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 189 203 427 428
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 189 203 427 428
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 189 203 427 428

( 38 37 )->[39]->( 41 )
;; bb 39 artificial_defs: { }
;; bb 39 artificial_uses: { u404(6){ }u405(7){ }u406(16){ }u407(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 189 427 428
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 189
;; lr  def 	 183 189 203
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 189 427 428
;; live  gen 	 183 189 203
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 189 203 427 428
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 189 203 427 428

( 36 38 )->[40]->( 41 )
;; bb 40 artificial_defs: { }
;; bb 40 artificial_uses: { u411(6){ }u412(7){ }u413(16){ }u414(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 189 203 427 428
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 189
;; lr  def 	 189
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 189 203 427 428
;; live  gen 	 189
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 189 203 427 428
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 189 203 427 428

( 39 40 )->[41]->( 36 42 )
;; bb 41 artificial_defs: { }
;; bb 41 artificial_uses: { u416(6){ }u417(7){ }u418(16){ }u419(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 189 203 427 428
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 189
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 189 203 427 428
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 189 203 427 428
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 189 203 427 428

( 41 )->[42]->( 112 43 )
;; bb 42 artificial_defs: { }
;; bb 42 artificial_uses: { u422(6){ }u423(7){ }u424(16){ }u425(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 203 427 428
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 203
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 203 427 428
;; live  gen 	 17 [flags] 248
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 203 427 428
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 203 427 428

( 42 )->[43]->( 113 44 )
;; bb 43 artificial_defs: { }
;; bb 43 artificial_uses: { u429(6){ }u430(7){ }u431(16){ }u432(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 203 427 428
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 112 203
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 203 427 428
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 203 427 428
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 203 427 428

( 43 )->[44]->( 55 45 )
;; bb 44 artificial_defs: { }
;; bb 44 artificial_uses: { u436(6){ }u437(7){ }u438(16){ }u439(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 203 427 428
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 112 203
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 203 427 428
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 203 427 428
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 203 427 428

( 44 )->[45]->( 113 55 )
;; bb 45 artificial_defs: { }
;; bb 45 artificial_uses: { u443(6){ }u444(7){ }u445(16){ }u446(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 203 427 428
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 112 203
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 203 427 428
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 203 427 428
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 203 427 428

( 113 )->[46]->( 52 47 )
;; bb 46 artificial_defs: { }
;; bb 46 artificial_uses: { u450(6){ }u451(7){ }u452(16){ }u453(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 192 203 427 428 437 438
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 437
;; lr  def 	 17 [flags] 352
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 192 203 427 428 437
;; live  gen 	 17 [flags] 352
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 192 203 427 428 438
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 192 203 427 428

( 46 )->[47]->( 52 48 )
;; bb 47 artificial_defs: { }
;; bb 47 artificial_uses: { u458(6){ }u459(7){ }u460(16){ }u461(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 192 203 427 428 438
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 438
;; lr  def 	 17 [flags] 354
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 192 203 427 428
;; live  gen 	 17 [flags] 354
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 192 203 427 428 438
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 192 203 427 428

( 47 )->[48]->( 53 49 )
;; bb 48 artificial_defs: { }
;; bb 48 artificial_uses: { u466(6){ }u467(7){ }u468(16){ }u469(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 192 203 427 428 438
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 192 203
;; lr  def 	 17 [flags] 120 441 442
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 192 203 427 428
;; live  gen 	 17 [flags] 120 441 442
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 120 123 136 192 203 427 428 438 441 442
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 120 123 136 192 203 427 428 441 442

( 48 )->[49]->( 51 50 )
;; bb 49 artificial_defs: { }
;; bb 49 artificial_uses: { u475(6){ }u476(7){ }u477(16){ }u478(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 120 123 136 192 203 427 428 438 441 442
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 192 442
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 120 123 136 192 203 427 428 441 442
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 120 123 136 192 203 427 428 438 441
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 120 123 136 192 203 427 428 441

( 49 )->[50]->( 53 51 )
;; bb 50 artificial_defs: { }
;; bb 50 artificial_uses: { u482(6){ }u483(7){ }u484(16){ }u485(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 120 123 136 192 203 427 428 438 441
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 192 441
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 120 123 136 192 203 427 428 441
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 120 123 136 203 427 428 438
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 120 123 136 192 203 427 428

( 49 50 )->[51]->( 53 )
;; bb 51 artificial_defs: { }
;; bb 51 artificial_uses: { u489(6){ }u490(7){ }u491(16){ }u492(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 203 427 428 438
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 120
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 192 203 427 428
;; live  gen 	 120
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 120 123 136 203 427 428 438
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 120 123 136 192 203 427 428

( 47 46 )->[52]->( 53 )
;; bb 52 artificial_defs: { }
;; bb 52 artificial_uses: { u493(6){ }u494(7){ }u495(16){ }u496(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 203 427 428 438
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 120
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 192 203 427 428
;; live  gen 	 120
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 120 123 136 203 427 428 438
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 120 123 136 192 203 427 428

( 52 51 48 50 )->[53]->( 55 )
;; bb 53 artificial_defs: { }
;; bb 53 artificial_uses: { u497(6){ }u498(7){ }u499(16){ }u500(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 120 123 136 203 427 428 438
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 120 203 438
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 356 357 361 362
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 120 123 136 192 203 427 428
;; live  gen 	 356 357 358 361 362
;; live  kill	 17 [flags]
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 203 427 428
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 203 427 428

( 113 )->[54]->( 55 )
;; bb 54 artificial_defs: { }
;; bb 54 artificial_uses: { u518(6){ }u519(7){ }u520(16){ }u521(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 203 427 428 437
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 203 437
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 203
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 203 427 428 437
;; live  gen 	 203
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 203 427 428
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 203 427 428

( 54 45 44 53 )->[55]->( 56 99 )
;; bb 55 artificial_defs: { }
;; bb 55 artificial_uses: { u527(6){ }u528(7){ }u529(16){ }u530(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 203 427 428
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 203
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 203 427 428
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 427 428
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 427 428

( 55 )->[56]->( 57 114 )
;; bb 56 artificial_defs: { }
;; bb 56 artificial_uses: { u533(6){ }u534(7){ }u535(16){ }u536(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 427 428
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 113 136 427 428
;; lr  def 	 17 [flags] 117 187 363 364 365 366 367 368
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 427 428
;; live  gen 	 17 [flags] 117 187 363 364 365 366 367 368
;; live  kill	 17 [flags]
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 117 123 136 187
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 117 123 136 187

( 56 )->[57]->( 58 )
;; bb 57 artificial_defs: { }
;; bb 57 artificial_uses: { u554(6){ }u555(7){ }u556(16){ }u557(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 117 123 136 187
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 186
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 117 123 136 187
;; live  gen 	 186
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 117 123 136 186 187
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 117 123 136 186 187

( 57 63 )->[58]->( 62 59 )
;; bb 58 artificial_defs: { }
;; bb 58 artificial_uses: { u558(6){ }u559(7){ }u560(16){ }u561(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 117 123 136 186 187
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 117 187
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 117 123 136 186 187
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 117 123 136 186 187
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 117 123 136 186 187

( 58 )->[59]->( 61 60 )
;; bb 59 artificial_defs: { }
;; bb 59 artificial_uses: { u565(6){ }u566(7){ }u567(16){ }u568(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 117 123 136 186 187
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 117 187
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 117 123 136 186 187
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 117 123 136 186 187
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 117 123 136 186 187

( 59 )->[60]->( 62 61 )
;; bb 60 artificial_defs: { }
;; bb 60 artificial_uses: { u572(6){ }u573(7){ }u574(16){ }u575(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 117 123 136 186 187
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 117 187
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 117 123 136 186 187
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 117 123 136 186 187
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 117 123 136 186 187

( 60 59 )->[61]->( 63 )
;; bb 61 artificial_defs: { }
;; bb 61 artificial_uses: { u579(6){ }u580(7){ }u581(16){ }u582(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 117 123 136 187
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 187
;; lr  def 	 186 187 201
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 117 123 136 187
;; live  gen 	 186 187 201
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 117 123 136 186 187
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 117 123 136 186 187

( 58 60 )->[62]->( 63 )
;; bb 62 artificial_defs: { }
;; bb 62 artificial_uses: { u586(6){ }u587(7){ }u588(16){ }u589(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 117 123 136 186 187
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 187
;; lr  def 	 187
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 117 123 136 186 187
;; live  gen 	 187
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 117 123 136 186 187
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 117 123 136 186 187

( 61 62 )->[63]->( 58 64 )
;; bb 63 artificial_defs: { }
;; bb 63 artificial_uses: { u591(6){ }u592(7){ }u593(16){ }u594(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 117 123 136 186 187
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 187
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 117 123 136 186 187
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 117 123 136 186 187
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 117 123 136 186 187

( 63 )->[64]->( 115 65 )
;; bb 64 artificial_defs: { }
;; bb 64 artificial_uses: { u597(6){ }u598(7){ }u599(16){ }u600(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 117 123 136 186
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 186
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 117 123 136 186
;; live  gen 	 17 [flags] 249
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 117 123 136 186
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 117 123 136 186

( 64 )->[65]->( 116 66 )
;; bb 65 artificial_defs: { }
;; bb 65 artificial_uses: { u604(6){ }u605(7){ }u606(16){ }u607(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 117 123 136 186
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 117 186
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 117 123 136 186
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 117 123 136 186
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 117 123 136 186

( 65 )->[66]->( 127 67 )
;; bb 66 artificial_defs: { }
;; bb 66 artificial_uses: { u611(6){ }u612(7){ }u613(16){ }u614(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 117 123 136 186
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 117 186
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 117 123 136 186
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 117 123 136 186
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 117 123 136 186

( 66 )->[67]->( 116 127 )
;; bb 67 artificial_defs: { }
;; bb 67 artificial_uses: { u618(6){ }u619(7){ }u620(16){ }u621(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 117 123 136 186
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 117 186
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 117 123 136 186
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 117 123 136 186
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 117 123 136 186

( 116 )->[68]->( 74 69 )
;; bb 68 artificial_defs: { }
;; bb 68 artificial_uses: { u625(6){ }u626(7){ }u627(16){ }u628(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 207 209 435 436
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 435
;; lr  def 	 17 [flags] 370
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 207 209 435
;; live  gen 	 17 [flags] 370
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 207 209 436
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 207 209

( 68 )->[69]->( 74 70 )
;; bb 69 artificial_defs: { }
;; bb 69 artificial_uses: { u633(6){ }u634(7){ }u635(16){ }u636(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 207 209 436
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 436
;; lr  def 	 17 [flags] 372
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 207 209
;; live  gen 	 17 [flags] 372
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 207 209 436
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 207 209

( 69 )->[70]->( 75 71 )
;; bb 70 artificial_defs: { }
;; bb 70 artificial_uses: { u641(6){ }u642(7){ }u643(16){ }u644(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 207 209 436
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 207 209
;; lr  def 	 17 [flags] 212 443 444
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 207 209
;; live  gen 	 17 [flags] 212 443 444
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 207 209 212 436 443 444
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 207 209 212 443 444

( 70 )->[71]->( 73 72 )
;; bb 71 artificial_defs: { }
;; bb 71 artificial_uses: { u650(6){ }u651(7){ }u652(16){ }u653(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 207 209 212 436 443 444
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 207 444
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 207 209 212 443 444
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 207 209 212 436 443
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 207 209 212 443

( 71 )->[72]->( 75 73 )
;; bb 72 artificial_defs: { }
;; bb 72 artificial_uses: { u657(6){ }u658(7){ }u659(16){ }u660(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 207 209 212 436 443
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 207 443
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 207 209 212 443
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 209 212 436
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 207 209 212

( 71 72 )->[73]->( 75 )
;; bb 73 artificial_defs: { }
;; bb 73 artificial_uses: { u664(6){ }u665(7){ }u666(16){ }u667(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 209 436
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 212
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 207 209
;; live  gen 	 212
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 209 212 436
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 207 209 212

( 69 68 )->[74]->( 75 )
;; bb 74 artificial_defs: { }
;; bb 74 artificial_uses: { u668(6){ }u669(7){ }u670(16){ }u671(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 209 436
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 212
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 207 209
;; live  gen 	 212
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 209 212 436
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 207 209 212

( 74 73 70 72 )->[75]->( 77 )
;; bb 75 artificial_defs: { }
;; bb 75 artificial_uses: { u672(6){ }u673(7){ }u674(16){ }u675(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 209 212 436
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 209 212 436
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 374 375 379 380
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 207 209 212
;; live  gen 	 374 375 376 379 380
;; live  kill	 17 [flags]
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 209
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 209

( 116 )->[76]->( 77 )
;; bb 76 artificial_defs: { }
;; bb 76 artificial_uses: { u693(6){ }u694(7){ }u695(16){ }u696(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 209 435
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 209 435
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 209
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 209 435
;; live  gen 	 209
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 209
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 209

( 75 76 )->[77]->( 117 99 )
;; bb 77 artificial_defs: { }
;; bb 77 artificial_uses: { u702(6){ }u703(7){ }u704(16){ }u705(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 209
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 209
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 209
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136

( 117 126 )->[78]->( 79 )
;; bb 78 artificial_defs: { }
;; bb 78 artificial_uses: { u708(6){ }u709(7){ }u710(16){ }u711(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 165
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 181
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 165
;; live  gen 	 181
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 165 181
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 165 181

( 78 84 )->[79]->( 83 80 )
;; bb 79 artificial_defs: { }
;; bb 79 artificial_uses: { u712(6){ }u713(7){ }u714(16){ }u715(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 165 181
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 112 165
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 165 181
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 165 181
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 165 181

( 79 )->[80]->( 82 81 )
;; bb 80 artificial_defs: { }
;; bb 80 artificial_uses: { u719(6){ }u720(7){ }u721(16){ }u722(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 165 181
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 112 165
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 165 181
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 165 181
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 165 181

( 80 )->[81]->( 83 82 )
;; bb 81 artificial_defs: { }
;; bb 81 artificial_uses: { u726(6){ }u727(7){ }u728(16){ }u729(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 165 181
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 112 165
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 165 181
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 165 181
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 165 181

( 81 80 )->[82]->( 84 )
;; bb 82 artificial_defs: { }
;; bb 82 artificial_uses: { u733(6){ }u734(7){ }u735(16){ }u736(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 165
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 165
;; lr  def 	 165 181 218
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 165
;; live  gen 	 165 181 218
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 165 181
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 165 181

( 79 81 )->[83]->( 84 )
;; bb 83 artificial_defs: { }
;; bb 83 artificial_uses: { u740(6){ }u741(7){ }u742(16){ }u743(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 165 181
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 165
;; lr  def 	 165
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 165 181
;; live  gen 	 165
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 165 181
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 165 181

( 82 83 )->[84]->( 79 85 )
;; bb 84 artificial_defs: { }
;; bb 84 artificial_uses: { u745(6){ }u746(7){ }u747(16){ }u748(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 165 181
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 165
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 165 181
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 165 181
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 165 181

( 84 )->[85]->( 119 86 )
;; bb 85 artificial_defs: { }
;; bb 85 artificial_uses: { u751(6){ }u752(7){ }u753(16){ }u754(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 181
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 181
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 181
;; live  gen 	 17 [flags] 250
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 181
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 181

( 85 )->[86]->( 120 87 )
;; bb 86 artificial_defs: { }
;; bb 86 artificial_uses: { u758(6){ }u759(7){ }u760(16){ }u761(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 181
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 112 181
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 181
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 181
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 181

( 86 )->[87]->( 98 88 )
;; bb 87 artificial_defs: { }
;; bb 87 artificial_uses: { u765(6){ }u766(7){ }u767(16){ }u768(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 181
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 112 181
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 181
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 181
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 181

( 87 )->[88]->( 120 98 )
;; bb 88 artificial_defs: { }
;; bb 88 artificial_uses: { u772(6){ }u773(7){ }u774(16){ }u775(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 181
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 112 181
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 181
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 181
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 181

( 120 )->[89]->( 95 90 )
;; bb 89 artificial_defs: { }
;; bb 89 artificial_uses: { u779(6){ }u780(7){ }u781(16){ }u782(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 123 136 181 225 433 434
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 433
;; lr  def 	 17 [flags] 382
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 123 136 181 225 433
;; live  gen 	 17 [flags] 382
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 123 136 181 225 434
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 123 136 181 225

( 89 )->[90]->( 95 91 )
;; bb 90 artificial_defs: { }
;; bb 90 artificial_uses: { u787(6){ }u788(7){ }u789(16){ }u790(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 123 136 181 225 434
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 434
;; lr  def 	 17 [flags] 384
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 123 136 181 225
;; live  gen 	 17 [flags] 384
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 123 136 181 225 434
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 123 136 181 225

( 90 )->[91]->( 96 92 )
;; bb 91 artificial_defs: { }
;; bb 91 artificial_uses: { u795(6){ }u796(7){ }u797(16){ }u798(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 123 136 181 225 434
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 181 225
;; lr  def 	 17 [flags] 229 445 446
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 123 136 181 225
;; live  gen 	 17 [flags] 229 445 446
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 123 136 181 225 229 434 445 446
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 123 136 181 225 229 445 446

( 91 )->[92]->( 94 93 )
;; bb 92 artificial_defs: { }
;; bb 92 artificial_uses: { u804(6){ }u805(7){ }u806(16){ }u807(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 123 136 181 225 229 434 445 446
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 225 446
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 123 136 181 225 229 445 446
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 123 136 181 225 229 434 445
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 123 136 181 225 229 445

( 92 )->[93]->( 96 94 )
;; bb 93 artificial_defs: { }
;; bb 93 artificial_uses: { u811(6){ }u812(7){ }u813(16){ }u814(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 123 136 181 225 229 434 445
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 225 445
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 123 136 181 225 229 445
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 123 136 181 229 434
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 123 136 181 225 229

( 92 93 )->[94]->( 96 )
;; bb 94 artificial_defs: { }
;; bb 94 artificial_uses: { u818(6){ }u819(7){ }u820(16){ }u821(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 123 136 181 434
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 229
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 123 136 181 225
;; live  gen 	 229
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 123 136 181 229 434
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 123 136 181 225 229

( 90 89 )->[95]->( 96 )
;; bb 95 artificial_defs: { }
;; bb 95 artificial_uses: { u822(6){ }u823(7){ }u824(16){ }u825(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 123 136 181 434
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 229
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 123 136 181 225
;; live  gen 	 229
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 123 136 181 229 434
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 123 136 181 225 229

( 95 94 91 93 )->[96]->( 98 )
;; bb 96 artificial_defs: { }
;; bb 96 artificial_uses: { u826(6){ }u827(7){ }u828(16){ }u829(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 123 136 181 229 434
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 181 229 434
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 386 387 391 392
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 123 136 181 225 229
;; live  gen 	 386 387 388 391 392
;; live  kill	 17 [flags]
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 123 136 181
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 123 136 181

( 120 )->[97]->( 98 )
;; bb 97 artificial_defs: { }
;; bb 97 artificial_uses: { u847(6){ }u848(7){ }u849(16){ }u850(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 123 136 181 433
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 181 433
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 181
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 123 136 181 433
;; live  gen 	 181
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 123 136 181
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 123 136 181

( 97 88 87 96 )->[98]->( 99 )
;; bb 98 artificial_defs: { }
;; bb 98 artificial_uses: { u856(6){ }u857(7){ }u858(16){ }u859(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 123 136 181
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 181
;; lr  def 	 17 [flags] 83
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 123 136 181
;; live  gen 	 83
;; live  kill	 17 [flags]
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 123 136
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 123 136

( 127 98 55 77 )->[99]->( 100 102 )
;; bb 99 artificial_defs: { }
;; bb 99 artificial_uses: { u862(6){ }u863(7){ }u864(16){ }u865(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 123 136
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 123
;; lr  def 	 17 [flags] 106 122 123 393
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 123 136
;; live  gen 	 17 [flags] 106 122 123 393
;; live  kill	 17 [flags]
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 106 122 123 136
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 106 122 123 136

( 99 )->[100]->( 34 )
;; bb 100 artificial_defs: { }
;; bb 100 artificial_uses: { u874(6){ }u875(7){ }u876(16){ }u877(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 106 122 123 136
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 189 394
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 106 122 123 136
;; live  gen 	 189 394
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 106 122 123 136 189
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 106 122 123 136 189

( 32 )->[101]->( 102 )
;; bb 101 artificial_defs: { }
;; bb 101 artificial_uses: { u879(6){ }u880(7){ }u881(16){ }u882(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 83
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 83
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83

( 99 101 )->[102]->( 103 104 )
;; bb 102 artificial_defs: { }
;; bb 102 artificial_uses: { u883(6){ }u884(7){ }u885(16){ }u886(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83
;; lr  def 	 17 [flags] 252
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83
;; live  gen 	 17 [flags] 252
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 252
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 252

( 102 )->[103]->( 106 )
;; bb 103 artificial_defs: { }
;; bb 103 artificial_uses: { u890(6){ }u891(7){ }u892(16){ }u893(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 252 395 397 398
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83
;; live  gen 	 2 [cx] 7 [sp] 252 395 396 397 398
;; live  kill	 17 [flags]
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 252
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 252

( 102 )->[104]->( 105 106 )
;; bb 104 artificial_defs: { }
;; bb 104 artificial_uses: { u909(6){ }u910(7){ }u911(16){ }u912(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 252
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 252
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 252
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 252
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 252

( 104 )->[105]->( 106 )
;; bb 105 artificial_defs: { }
;; bb 105 artificial_uses: { u916(6){ }u917(7){ }u918(16){ }u919(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 252 399
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 2 [cx] 7 [sp] 252 399
;; live  kill	 17 [flags]
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 252
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 252

( 25 103 104 105 )->[106]->( 25 107 )
;; bb 106 artificial_defs: { }
;; bb 106 artificial_uses: { u931(6){ }u932(7){ }u933(16){ }u934(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 252
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 102 125 400
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 252
;; live  gen 	 17 [flags] 102 125 400
;; live  kill	 17 [flags]
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 102 125 252
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 102 125 252

( 106 23 )->[107]->( 109 108 )
;; bb 107 artificial_defs: { }
;; bb 107 artificial_uses: { u943(6){ }u944(7){ }u945(16){ }u946(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 252
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 252
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 129 403 404 406 409 410 412
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 252
;; live  gen 	 0 [ax] 17 [flags] 129 401 402 403 404 406 407 408 409 410 412
;; live  kill	 17 [flags]
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 129
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 129

( 107 110 )->[108]->( 128 )
;; bb 108 artificial_defs: { }
;; bb 108 artificial_uses: { u969(6){ }u970(7){ }u971(16){ }u972(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 260
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

( 107 )->[109]->( 110 )
;; bb 109 artificial_defs: { }
;; bb 109 artificial_uses: { u973(6){ }u974(7){ }u975(16){ }u976(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 129
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 132
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 129
;; live  gen 	 132
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 129 132
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 129 132

( 109 110 )->[110]->( 110 108 )
;; bb 110 artificial_defs: { }
;; bb 110 artificial_uses: { u977(6){ }u978(7){ }u979(16){ }u980(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 129 132
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 129 132
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 129 132 414 415 417 418 420
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 129 132
;; live  gen 	 0 [ax] 17 [flags] 129 132 414 415 416 417 418 420
;; live  kill	 17 [flags]
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 129 132
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 129 132

( 34 )->[111]->( 113 )
;; bb 111 artificial_defs: { }
;; bb 111 artificial_uses: { u999(6){ }u1000(7){ }u1001(16){ }u1002(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 427 428
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 203
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 427 428
;; live  gen 	 203
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 203 427 428
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 203 427 428

( 42 )->[112]->( 113 )
;; bb 112 artificial_defs: { }
;; bb 112 artificial_uses: { u1003(6){ }u1004(7){ }u1005(16){ }u1006(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 203 427 428
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 203 427 428
;; live  gen 	 203
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 203 427 428
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 203 427 428

( 111 112 43 45 )->[113]->( 46 54 )
;; bb 113 artificial_defs: { }
;; bb 113 artificial_uses: { u1008(6){ }u1009(7){ }u1010(16){ }u1011(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 203 427 428
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 112 203
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 192 203 258 421 437 438
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 203 427 428
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 7 [sp] 17 [flags] 191 192 203 258 421 437 438
;; live  kill	 17 [flags]
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 192 203 427 428 437 438
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 192 203 427 428 437

( 56 )->[114]->( 116 )
;; bb 114 artificial_defs: { }
;; bb 114 artificial_uses: { u1039(6){ }u1040(7){ }u1041(16){ }u1042(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 117 123 136
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 186
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 117 123 136
;; live  gen 	 186
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 117 123 136 186
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 117 123 136 186

( 64 )->[115]->( 116 )
;; bb 115 artificial_defs: { }
;; bb 115 artificial_uses: { u1043(6){ }u1044(7){ }u1045(16){ }u1046(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 117 123 136 186
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 117 123 136 186
;; live  gen 	 186
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 117 123 136 186
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 117 123 136 186

( 114 115 65 67 )->[116]->( 68 76 )
;; bb 116 artificial_defs: { }
;; bb 116 artificial_uses: { u1048(6){ }u1049(7){ }u1050(16){ }u1051(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 117 123 136 186
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 117 186
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 207 209 422 435 436
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 117 123 136 186
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 7 [sp] 17 [flags] 206 207 209 256 422 435 436
;; live  kill	 17 [flags]
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 207 209 435 436
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 207 209 435

( 77 )->[117]->( 78 118 )
;; bb 117 artificial_defs: { }
;; bb 117 artificial_uses: { u1079(6){ }u1080(7){ }u1081(16){ }u1082(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 165 423
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136
;; live  gen 	 17 [flags] 165 423
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 165
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 165

( 117 )->[118]->( 120 )
;; bb 118 artificial_defs: { }
;; bb 118 artificial_uses: { u1086(6){ }u1087(7){ }u1088(16){ }u1089(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 181
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136
;; live  gen 	 181
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 181
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 181

( 85 )->[119]->( 120 )
;; bb 119 artificial_defs: { }
;; bb 119 artificial_uses: { u1090(6){ }u1091(7){ }u1092(16){ }u1093(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 181
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 181
;; live  gen 	 181
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 181
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 181

( 118 119 86 88 )->[120]->( 89 97 )
;; bb 120 artificial_defs: { }
;; bb 120 artificial_uses: { u1095(6){ }u1096(7){ }u1097(16){ }u1098(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 181
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 112 181
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 181 225 254 424 433 434
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 181
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 7 [sp] 17 [flags] 181 224 225 254 424 433 434
;; live  kill	 17 [flags]
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 123 136 181 225 433 434
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 123 136 181 225 433

( 2 )->[121]->( 122 )
;; bb 121 artificial_defs: { }
;; bb 121 artificial_uses: { u1126(6){ }u1127(7){ }u1128(16){ }u1129(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 151
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 429 430
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 151
;; live  gen 	 429 430
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 151 429 430
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 151 429 430

( 121 6 )->[122]->( 7 )
;; bb 122 artificial_defs: { }
;; bb 122 artificial_uses: { u1130(6){ }u1131(7){ }u1132(16){ }u1133(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 151 429 430
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 159
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 151 429 430
;; live  gen 	 159
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 151 159 429 430
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 151 159 429 430

( 10 )->[123]->( 124 )
;; bb 123 artificial_defs: { }
;; bb 123 artificial_uses: { u1134(6){ }u1135(7){ }u1136(16){ }u1137(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 167
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 431 432
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 167
;; live  gen 	 431 432
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 167 431 432
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 167 431 432

( 123 14 )->[124]->( 15 )
;; bb 124 artificial_defs: { }
;; bb 124 artificial_uses: { u1138(6){ }u1139(7){ }u1140(16){ }u1141(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 167 431 432
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 175
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 167 431 432
;; live  gen 	 175
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 167 175 431 432
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 167 175 431 432

( 8 )->[125]->( 23 )
;; bb 125 artificial_defs: { }
;; bb 125 artificial_uses: { u1142(6){ }u1143(7){ }u1144(16){ }u1145(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

( 127 )->[126]->( 78 )
;; bb 126 artificial_defs: { }
;; bb 126 artificial_uses: { u1147(6){ }u1148(7){ }u1149(16){ }u1150(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 165 425
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136
;; live  gen 	 165 425
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 165
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 165

( 67 66 )->[127]->( 126 99 )
;; bb 127 artificial_defs: { }
;; bb 127 artificial_uses: { u1152(6){ }u1153(7){ }u1154(16){ }u1155(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 186
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 186
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 186
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136

( 108 )->[128]->( 1 )
;; bb 128 artificial_defs: { }
;; bb 128 artificial_uses: { u1158(6){ }u1159(7){ }u1160(16){ }u1161(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 0 [ax]
;; live  kill	
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

( 128 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u1163(0){ }u1164(6){ }u1165(7){ }u1166(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 58 to worklist
  Adding insn 53 to worklist
  Adding insn 3 to worklist
  Adding insn 62 to worklist
  Adding insn 72 to worklist
  Adding insn 66 to worklist
  Adding insn 91 to worklist
  Adding insn 85 to worklist
  Adding insn 103 to worklist
  Adding insn 101 to worklist
  Adding insn 110 to worklist
  Adding insn 105 to worklist
  Adding insn 114 to worklist
  Adding insn 124 to worklist
  Adding insn 118 to worklist
  Adding insn 143 to worklist
  Adding insn 137 to worklist
  Adding insn 158 to worklist
  Adding insn 153 to worklist
  Adding insn 161 to worklist
  Adding insn 186 to worklist
  Adding insn 182 to worklist
  Adding insn 209 to worklist
  Adding insn 205 to worklist
  Adding insn 214 to worklist
  Adding insn 212 to worklist
  Adding insn 225 to worklist
  Adding insn 245 to worklist
  Adding insn 240 to worklist
  Adding insn 238 to worklist
  Adding insn 236 to worklist
  Adding insn 234 to worklist
  Adding insn 231 to worklist
  Adding insn 229 to worklist
  Adding insn 252 to worklist
  Adding insn 274 to worklist
  Adding insn 278 to worklist
  Adding insn 301 to worklist
  Adding insn 305 to worklist
  Adding insn 307 to worklist
  Adding insn 309 to worklist
  Adding insn 322 to worklist
  Adding insn 325 to worklist
  Adding insn 328 to worklist
  Adding insn 330 to worklist
  Adding insn 332 to worklist
  Adding insn 341 to worklist
  Adding insn 345 to worklist
  Adding insn 350 to worklist
  Adding insn 352 to worklist
  Adding insn 354 to worklist
  Adding insn 373 to worklist
  Adding insn 365 to worklist
  Adding insn 364 to worklist
  Adding insn 362 to worklist
  Adding insn 361 to worklist
  Adding insn 360 to worklist
  Adding insn 378 to worklist
  Adding insn 377 to worklist
  Adding insn 384 to worklist
  Adding insn 397 to worklist
  Adding insn 401 to worklist
  Adding insn 403 to worklist
  Adding insn 405 to worklist
  Adding insn 418 to worklist
  Adding insn 421 to worklist
  Adding insn 424 to worklist
  Adding insn 426 to worklist
  Adding insn 428 to worklist
  Adding insn 437 to worklist
  Adding insn 441 to worklist
  Adding insn 446 to worklist
  Adding insn 448 to worklist
  Adding insn 450 to worklist
  Adding insn 469 to worklist
  Adding insn 461 to worklist
  Adding insn 460 to worklist
  Adding insn 458 to worklist
  Adding insn 457 to worklist
  Adding insn 456 to worklist
  Adding insn 474 to worklist
  Adding insn 473 to worklist
  Adding insn 478 to worklist
  Adding insn 485 to worklist
  Adding insn 487 to worklist
  Adding insn 489 to worklist
  Adding insn 502 to worklist
  Adding insn 505 to worklist
  Adding insn 508 to worklist
  Adding insn 510 to worklist
  Adding insn 512 to worklist
  Adding insn 521 to worklist
  Adding insn 525 to worklist
  Adding insn 530 to worklist
  Adding insn 532 to worklist
  Adding insn 534 to worklist
  Adding insn 553 to worklist
  Adding insn 545 to worklist
  Adding insn 544 to worklist
  Adding insn 542 to worklist
  Adding insn 541 to worklist
  Adding insn 540 to worklist
  Adding insn 558 to worklist
  Adding insn 557 to worklist
  Adding insn 563 to worklist
  Adding insn 571 to worklist
  Adding insn 582 to worklist
  Adding insn 592 to worklist
  Adding insn 590 to worklist
  Adding insn 588 to worklist
  Adding insn 584 to worklist
  Adding insn 600 to worklist
  Adding insn 605 to worklist
  Adding insn 603 to worklist
  Adding insn 616 to worklist
  Adding insn 612 to worklist
  Adding insn 635 to worklist
  Adding insn 627 to worklist
  Adding insn 626 to worklist
  Adding insn 625 to worklist
  Adding insn 624 to worklist
  Adding insn 656 to worklist
  Adding insn 646 to worklist
  Adding insn 645 to worklist
  Adding insn 644 to worklist
  Adding insn 680 to worklist
  Adding insn 673 to worklist
  Adding insn 671 to worklist
  Adding insn 670 to worklist
  Adding insn 668 to worklist
  Adding insn 667 to worklist
  Adding insn 665 to worklist
  Adding insn 664 to worklist
  Adding insn 704 to worklist
  Adding insn 697 to worklist
  Adding insn 695 to worklist
  Adding insn 694 to worklist
  Adding insn 692 to worklist
  Adding insn 691 to worklist
  Adding insn 689 to worklist
  Adding insn 688 to worklist
  Adding insn 715 to worklist
  Adding insn 743 to worklist
  Adding insn 736 to worklist
  Adding insn 734 to worklist
  Adding insn 733 to worklist
  Adding insn 731 to worklist
  Adding insn 730 to worklist
  Adding insn 728 to worklist
  Adding insn 727 to worklist
  Adding insn 758 to worklist
  Adding insn 771 to worklist
  Adding insn 777 to worklist
Finished finding needed instructions:
processing block 128 lr out =  0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
  Adding insn 776 to worklist
processing block 108 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame]
processing block 110 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 129 132
  Adding insn 655 to worklist
  Adding insn 654 to worklist
  Adding insn 653 to worklist
  Adding insn 652 to worklist
  Adding insn 649 to worklist
  Adding insn 648 to worklist
  Adding insn 647 to worklist
  Adding insn 643 to worklist
processing block 109 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 129 132
  Adding insn 42 to worklist
processing block 107 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 129
  Adding insn 634 to worklist
  Adding insn 633 to worklist
  Adding insn 632 to worklist
  Adding insn 631 to worklist
  Adding insn 629 to worklist
  Adding insn 623 to worklist
  Adding insn 622 to worklist
  Adding insn 621 to worklist
processing block 106 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 102 125 252
  Adding insn 615 to worklist
  Adding insn 613 to worklist
  Adding insn 611 to worklist
  Adding insn 610 to worklist
processing block 100 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 106 122 123 136 189
  Adding insn 574 to worklist
  Adding insn 573 to worklist
processing block 103 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 252
  Adding insn 594 to worklist
  Adding insn 593 to worklist
  Adding insn 591 to worklist
  Adding insn 589 to worklist
  Adding insn 587 to worklist
  Adding insn 585 to worklist
processing block 105 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 252
  Adding insn 607 to worklist
  Adding insn 606 to worklist
  Adding insn 604 to worklist
  Adding insn 602 to worklist
processing block 104 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 252
  Adding insn 599 to worklist
processing block 102 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 252
  Adding insn 581 to worklist
  Adding insn 580 to worklist
processing block 99 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 106 122 123 136
  Adding insn 570 to worklist
  Adding insn 569 to worklist
  Adding insn 568 to worklist
  Adding insn 567 to worklist
  Adding insn 566 to worklist
processing block 98 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 123 136
  Adding insn 564 to worklist
processing block 96 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 123 136 181
  Adding insn 552 to worklist
  Adding insn 551 to worklist
  Adding insn 546 to worklist
  Adding insn 543 to worklist
processing block 95 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 123 136 181 229 434
  Adding insn 39 to worklist
processing block 94 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 123 136 181 229 434
  Adding insn 536 to worklist
processing block 93 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 123 136 181 229 434
  Adding insn 533 to worklist
processing block 92 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 123 136 181 225 229 434 445
  Adding insn 531 to worklist
processing block 91 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 123 136 181 225 229 434 445 446
  Adding insn 529 to worklist
  Adding insn 870 to worklist
  Adding insn 869 to worklist
  Adding insn 527 to worklist
processing block 90 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 123 136 181 225 434
  Adding insn 524 to worklist
  Adding insn 523 to worklist
  Adding insn 522 to worklist
processing block 89 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 123 136 181 225 434
  Adding insn 520 to worklist
  Adding insn 519 to worklist
  Adding insn 518 to worklist
processing block 97 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 123 136 181
  Adding insn 40 to worklist
processing block 120 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 123 136 181 225 433 434
  Adding insn 742 to worklist
  Adding insn 740 to worklist
  Adding insn 876 to worklist
  Adding insn 875 to worklist
  Adding insn 737 to worklist
  Adding insn 735 to worklist
  Adding insn 732 to worklist
  Adding insn 729 to worklist
  Adding insn 726 to worklist
processing block 119 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 181
processing block 88 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 181
  Adding insn 511 to worklist
processing block 87 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 181
  Adding insn 509 to worklist
processing block 86 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 181
  Adding insn 507 to worklist
processing block 85 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 181
  Adding insn 504 to worklist
processing block 84 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 165 181
  Adding insn 501 to worklist
processing block 83 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 165 181
  Adding insn 497 to worklist
processing block 82 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 165 181
  Adding insn 37 to worklist
  Adding insn 36 to worklist
  Adding insn 492 to worklist
processing block 81 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 165 181
  Adding insn 488 to worklist
processing block 80 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 165 181
  Adding insn 486 to worklist
processing block 79 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 165 181
  Adding insn 484 to worklist
processing block 78 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 165 181
  Adding insn 35 to worklist
processing block 118 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 181
  Adding insn 48 to worklist
processing block 117 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 165
  Adding insn 714 to worklist
  Adding insn 712 to worklist
  Adding insn 711 to worklist
processing block 77 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136
  Adding insn 477 to worklist
processing block 75 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 209
  Adding insn 468 to worklist
  Adding insn 467 to worklist
  Adding insn 462 to worklist
  Adding insn 459 to worklist
processing block 74 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 209 212 436
  Adding insn 33 to worklist
processing block 73 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 209 212 436
  Adding insn 452 to worklist
processing block 72 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 209 212 436
  Adding insn 449 to worklist
processing block 71 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 207 209 212 436 443
  Adding insn 447 to worklist
processing block 70 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 207 209 212 436 443 444
  Adding insn 445 to worklist
  Adding insn 868 to worklist
  Adding insn 867 to worklist
  Adding insn 443 to worklist
processing block 69 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 207 209 436
  Adding insn 440 to worklist
  Adding insn 439 to worklist
  Adding insn 438 to worklist
processing block 68 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 207 209 436
  Adding insn 436 to worklist
  Adding insn 435 to worklist
  Adding insn 434 to worklist
processing block 76 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 209
  Adding insn 34 to worklist
processing block 116 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 207 209 435 436
  Adding insn 703 to worklist
  Adding insn 701 to worklist
  Adding insn 874 to worklist
  Adding insn 873 to worklist
  Adding insn 698 to worklist
  Adding insn 696 to worklist
  Adding insn 693 to worklist
  Adding insn 690 to worklist
processing block 115 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 117 123 136 186
processing block 126 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 165
  Adding insn 764 to worklist
  Adding insn 763 to worklist
processing block 127 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136
  Adding insn 770 to worklist
processing block 67 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 117 123 136 186
  Adding insn 427 to worklist
processing block 66 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 117 123 136 186
  Adding insn 425 to worklist
processing block 65 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 117 123 136 186
  Adding insn 423 to worklist
processing block 64 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 117 123 136 186
  Adding insn 420 to worklist
processing block 63 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 117 123 136 186 187
  Adding insn 417 to worklist
processing block 62 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 117 123 136 186 187
  Adding insn 413 to worklist
processing block 61 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 117 123 136 186 187
  Adding insn 31 to worklist
  Adding insn 30 to worklist
  Adding insn 408 to worklist
processing block 60 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 117 123 136 186 187
  Adding insn 404 to worklist
processing block 59 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 117 123 136 186 187
  Adding insn 402 to worklist
processing block 58 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 117 123 136 186 187
  Adding insn 400 to worklist
processing block 57 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 117 123 136 186 187
  Adding insn 29 to worklist
processing block 114 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 117 123 136 186
  Adding insn 46 to worklist
processing block 56 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 117 123 136 187
  Adding insn 396 to worklist
  Adding insn 395 to worklist
  Adding insn 394 to worklist
  Adding insn 393 to worklist
  Adding insn 391 to worklist
  Adding insn 390 to worklist
  Adding insn 389 to worklist
  Adding insn 388 to worklist
  Adding insn 387 to worklist
  Adding insn 386 to worklist
processing block 55 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 427 428
  Adding insn 383 to worklist
processing block 53 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 203 427 428
  Adding insn 372 to worklist
  Adding insn 371 to worklist
  Adding insn 366 to worklist
  Adding insn 363 to worklist
processing block 52 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 120 123 136 203 427 428 438
  Adding insn 27 to worklist
processing block 51 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 120 123 136 203 427 428 438
  Adding insn 356 to worklist
processing block 50 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 120 123 136 203 427 428 438
  Adding insn 353 to worklist
processing block 49 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 120 123 136 192 203 427 428 438 441
  Adding insn 351 to worklist
processing block 48 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 120 123 136 192 203 427 428 438 441 442
  Adding insn 349 to worklist
  Adding insn 866 to worklist
  Adding insn 865 to worklist
  Adding insn 347 to worklist
processing block 47 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 192 203 427 428 438
  Adding insn 344 to worklist
  Adding insn 343 to worklist
  Adding insn 342 to worklist
processing block 46 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 192 203 427 428 438
  Adding insn 340 to worklist
  Adding insn 339 to worklist
  Adding insn 338 to worklist
processing block 54 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 203 427 428
  Adding insn 28 to worklist
processing block 113 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 192 203 427 428 437 438
  Adding insn 679 to worklist
  Adding insn 677 to worklist
  Adding insn 872 to worklist
  Adding insn 871 to worklist
  Adding insn 674 to worklist
  Adding insn 672 to worklist
  Adding insn 669 to worklist
  Adding insn 666 to worklist
  Adding insn 663 to worklist
processing block 112 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 203 427 428
processing block 45 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 203 427 428
  Adding insn 331 to worklist
processing block 44 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 203 427 428
  Adding insn 329 to worklist
processing block 43 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 203 427 428
  Adding insn 327 to worklist
processing block 42 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 203 427 428
  Adding insn 324 to worklist
processing block 41 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 189 203 427 428
  Adding insn 321 to worklist
processing block 40 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 189 203 427 428
  Adding insn 317 to worklist
processing block 39 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 189 203 427 428
  Adding insn 25 to worklist
  Adding insn 24 to worklist
  Adding insn 312 to worklist
processing block 38 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 189 203 427 428
  Adding insn 308 to worklist
processing block 37 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 189 203 427 428
  Adding insn 306 to worklist
processing block 36 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 189 203 427 428
  Adding insn 304 to worklist
processing block 35 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 189 203 427 428
  Adding insn 23 to worklist
processing block 111 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 203 427 428
  Adding insn 44 to worklist
processing block 34 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 189 427 428
  Adding insn 300 to worklist
  Adding insn 864 to worklist
  Adding insn 863 to worklist
  Adding insn 298 to worklist
  Adding insn 296 to worklist
  Adding insn 295 to worklist
  Adding insn 294 to worklist
  Adding insn 293 to worklist
  Adding insn 291 to worklist
  Adding insn 290 to worklist
  Adding insn 289 to worklist
  Adding insn 288 to worklist
  Adding insn 287 to worklist
  Adding insn 286 to worklist
  Adding insn 285 to worklist
  Adding insn 284 to worklist
  Adding insn 283 to worklist
  Adding insn 281 to worklist
processing block 33 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 106 122 123 136 189
  Adding insn 22 to worklist
  Adding insn 21 to worklist
  Adding insn 20 to worklist
  Adding insn 19 to worklist
processing block 101 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 83
  Adding insn 41 to worklist
processing block 32 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 106 136
  Adding insn 277 to worklist
processing block 30 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 104 106 135 136
  Adding insn 273 to worklist
  Adding insn 272 to worklist
  Adding insn 270 to worklist
  Adding insn 268 to worklist
  Adding insn 267 to worklist
  Adding insn 266 to worklist
  Adding insn 265 to worklist
  Adding insn 263 to worklist
processing block 29 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 104 106 135 136
  Adding insn 259 to worklist
  Adding insn 258 to worklist
  Adding insn 257 to worklist
  Adding insn 256 to worklist
  Adding insn 255 to worklist
  Adding insn 254 to worklist
processing block 28 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 104 106 135 136
  Adding insn 251 to worklist
  Adding insn 248 to worklist
processing block 27 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 104 106 135 136
  Adding insn 17 to worklist
  Adding insn 16 to worklist
processing block 31 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 106 136
  Adding insn 18 to worklist
processing block 26 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 104 106
  Adding insn 244 to worklist
  Adding insn 243 to worklist
  Adding insn 242 to worklist
  Adding insn 241 to worklist
  Adding insn 232 to worklist
  Adding insn 230 to worklist
  Adding insn 228 to worklist
  Adding insn 227 to worklist
processing block 25 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 252
  Adding insn 224 to worklist
  Adding insn 223 to worklist
processing block 24 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 102 125 252
  Adding insn 15 to worklist
  Adding insn 14 to worklist
  Adding insn 221 to worklist
processing block 23 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 252
  Adding insn 216 to worklist
processing block 22 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 247
  Adding insn 213 to worklist
processing block 21 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 101 247
  Adding insn 208 to worklist
  Adding insn 206 to worklist
  Adding insn 204 to worklist
  Adding insn 202 to worklist
  Adding insn 201 to worklist
  Adding insn 200 to worklist
  Adding insn 199 to worklist
  Adding insn 195 to worklist
  Adding insn 194 to worklist
  Adding insn 193 to worklist
  Adding insn 192 to worklist
  Adding insn 191 to worklist
  Adding insn 190 to worklist
  Adding insn 189 to worklist
processing block 20 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 101 247
  Adding insn 13 to worklist
processing block 19 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 94 240 247
  Adding insn 185 to worklist
  Adding insn 183 to worklist
  Adding insn 181 to worklist
  Adding insn 179 to worklist
  Adding insn 178 to worklist
  Adding insn 177 to worklist
  Adding insn 176 to worklist
  Adding insn 172 to worklist
  Adding insn 171 to worklist
  Adding insn 170 to worklist
  Adding insn 169 to worklist
  Adding insn 168 to worklist
  Adding insn 167 to worklist
  Adding insn 166 to worklist
processing block 18 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 94 240 247
  Adding insn 12 to worklist
  Adding insn 163 to worklist
processing block 17 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 247
  Adding insn 160 to worklist
processing block 16 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 247
  Adding insn 157 to worklist
  Adding insn 155 to worklist
  Adding insn 154 to worklist
  Adding insn 151 to worklist
  Adding insn 150 to worklist
  Adding insn 149 to worklist
  Adding insn 148 to worklist
  Adding insn 147 to worklist
  Adding insn 146 to worklist
  Adding insn 145 to worklist
processing block 15 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 167 175 431 432
  Adding insn 142 to worklist
  Adding insn 141 to worklist
  Adding insn 139 to worklist
  Adding insn 138 to worklist
  Adding insn 136 to worklist
  Adding insn 135 to worklist
  Adding insn 134 to worklist
  Adding insn 133 to worklist
  Adding insn 131 to worklist
  Adding insn 130 to worklist
  Adding insn 129 to worklist
processing block 124 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 167 175 431 432
  Adding insn 10 to worklist
processing block 14 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 167 431 432
  Adding insn 123 to worklist
  Adding insn 122 to worklist
  Adding insn 120 to worklist
  Adding insn 119 to worklist
processing block 13 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 431 432
  Adding insn 862 to worklist
  Adding insn 861 to worklist
processing block 12 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 431 432
  Adding insn 113 to worklist
processing block 11 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 167 431 432
  Adding insn 860 to worklist
  Adding insn 859 to worklist
processing block 123 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 167 431 432
  Adding insn 880 to worklist
  Adding insn 879 to worklist
processing block 10 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 167
  Adding insn 109 to worklist
  Adding insn 108 to worklist
  Adding insn 107 to worklist
  Adding insn 106 to worklist
processing block 9 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
  Adding insn 7 to worklist
processing block 125 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame]
processing block 8 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame]
  Adding insn 102 to worklist
  Adding insn 100 to worklist
  Adding insn 98 to worklist
  Adding insn 97 to worklist
  Adding insn 96 to worklist
  Adding insn 95 to worklist
  Adding insn 94 to worklist
  Adding insn 93 to worklist
processing block 7 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 151 159 429 430
  Adding insn 90 to worklist
  Adding insn 89 to worklist
  Adding insn 87 to worklist
  Adding insn 86 to worklist
  Adding insn 84 to worklist
  Adding insn 83 to worklist
  Adding insn 82 to worklist
  Adding insn 81 to worklist
  Adding insn 79 to worklist
  Adding insn 78 to worklist
  Adding insn 77 to worklist
processing block 122 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 151 159 429 430
  Adding insn 6 to worklist
processing block 6 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 151 429 430
  Adding insn 71 to worklist
  Adding insn 70 to worklist
  Adding insn 68 to worklist
  Adding insn 67 to worklist
processing block 5 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 429 430
  Adding insn 858 to worklist
  Adding insn 857 to worklist
processing block 4 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 429 430
  Adding insn 61 to worklist
processing block 3 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 151 429 430
  Adding insn 856 to worklist
  Adding insn 855 to worklist
processing block 121 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 151 429 430
  Adding insn 878 to worklist
  Adding insn 877 to worklist
processing block 2 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 151
  Adding insn 57 to worklist
  Adding insn 56 to worklist
  Adding insn 55 to worklist
  Adding insn 54 to worklist
df_worklist_dataflow_doublequeue:n_basic_blocks 129 n_edges 201 count 144 (  1.1)
rescanning insn with uid = 153.
LOCAL CONST-PROP: Replacing reg 282 in insn 153 with constant (symbol_ref:SI ("a") [flags 0x2]  <var_decl 06e5d780 a>)
rescanning insn with uid = 168.
LOCAL CONST-PROP: Replacing reg 289 in insn 168 with constant (symbol_ref:SI ("a") [flags 0x2]  <var_decl 06e5d780 a>)
rescanning insn with uid = 171.
LOCAL CONST-PROP: Replacing reg 292 in insn 171 with constant (const:SI (plus:SI (symbol_ref:SI ("pre") [flags 0x2]  <var_decl 06e5d8a0 pre>)
        (const_int -8 [0xfffffffffffffff8])))
rescanning insn with uid = 177.
LOCAL CONST-PROP: Replacing reg 292 in insn 177 with constant (const:SI (plus:SI (symbol_ref:SI ("pre") [flags 0x2]  <var_decl 06e5d8a0 pre>)
        (const_int -8 [0xfffffffffffffff8])))
rescanning insn with uid = 182.
LOCAL CONST-PROP: Replacing reg 288 in insn 182 with constant (symbol_ref:SI ("pre") [flags 0x2]  <var_decl 06e5d8a0 pre>)
rescanning insn with uid = 191.
LOCAL CONST-PROP: Replacing reg 303 in insn 191 with constant (symbol_ref:SI ("a") [flags 0x2]  <var_decl 06e5d780 a>)
rescanning insn with uid = 194.
LOCAL CONST-PROP: Replacing reg 306 in insn 194 with constant (const:SI (plus:SI (symbol_ref:SI ("suf") [flags 0x2]  <var_decl 06e5d9c0 suf>)
        (const_int 8 [0x8])))
rescanning insn with uid = 200.
LOCAL CONST-PROP: Replacing reg 306 in insn 200 with constant (const:SI (plus:SI (symbol_ref:SI ("suf") [flags 0x2]  <var_decl 06e5d9c0 suf>)
        (const_int 8 [0x8])))
rescanning insn with uid = 205.
LOCAL CONST-PROP: Replacing reg 302 in insn 205 with constant (symbol_ref:SI ("suf") [flags 0x2]  <var_decl 06e5d9c0 suf>)
rescanning insn with uid = 228.
LOCAL CONST-PROP: Replacing reg 319 in insn 228 with constant (symbol_ref:SI ("s") [flags 0x2]  <var_decl 06d9cd20 s>)
rescanning insn with uid = 234.
LOCAL CONST-PROP: Replacing reg 319 in insn 234 with constant (symbol_ref:SI ("s") [flags 0x2]  <var_decl 06d9cd20 s>)
rescanning insn with uid = 236.
LOCAL CONST-PROP: Replacing reg 319 in insn 236 with constant (symbol_ref:SI ("s") [flags 0x2]  <var_decl 06d9cd20 s>)
rescanning insn with uid = 238.
LOCAL CONST-PROP: Replacing reg 319 in insn 238 with constant (symbol_ref:SI ("s") [flags 0x2]  <var_decl 06d9cd20 s>)
rescanning insn with uid = 240.
LOCAL CONST-PROP: Replacing reg 319 in insn 240 with constant (symbol_ref:SI ("s") [flags 0x2]  <var_decl 06d9cd20 s>)
rescanning insn with uid = 284.
LOCAL CONST-PROP: Replacing reg 337 in insn 284 with constant (symbol_ref:SI ("pre") [flags 0x2]  <var_decl 06e5d8a0 pre>)
rescanning insn with uid = 286.
LOCAL CONST-PROP: Replacing reg 337 in insn 286 with constant (symbol_ref:SI ("pre") [flags 0x2]  <var_decl 06e5d8a0 pre>)
rescanning insn with uid = 289.
LOCAL CONST-PROP: Replacing reg 337 in insn 289 with constant (symbol_ref:SI ("pre") [flags 0x2]  <var_decl 06e5d8a0 pre>)
rescanning insn with uid = 293.
LOCAL CONST-PROP: Replacing reg 337 in insn 293 with constant (symbol_ref:SI ("pre") [flags 0x2]  <var_decl 06e5d8a0 pre>)
rescanning insn with uid = 296.
LOCAL CONST-PROP: Replacing reg 348 in insn 296 with constant (symbol_ref:SI ("suf") [flags 0x2]  <var_decl 06e5d9c0 suf>)
rescanning insn with uid = 863.
LOCAL CONST-PROP: Replacing reg 348 in insn 863 with constant (symbol_ref:SI ("suf") [flags 0x2]  <var_decl 06e5d9c0 suf>)
rescanning insn with uid = 864.
LOCAL CONST-PROP: Replacing reg 348 in insn 864 with constant (symbol_ref:SI ("suf") [flags 0x2]  <var_decl 06e5d9c0 suf>)
rescanning insn with uid = 371.
LOCAL CONST-PROP: Replacing reg 357 in insn 371 with constant (symbol_ref:SI ("s") [flags 0x2]  <var_decl 06d9cd20 s>)
rescanning insn with uid = 373.
LOCAL CONST-PROP: Replacing reg 357 in insn 373 with constant (symbol_ref:SI ("s") [flags 0x2]  <var_decl 06d9cd20 s>)
rescanning insn with uid = 395.
LOCAL CONST-PROP: Replacing reg 368 in insn 395 with constant (symbol_ref:SI ("s") [flags 0x2]  <var_decl 06d9cd20 s>)
rescanning insn with uid = 467.
LOCAL CONST-PROP: Replacing reg 375 in insn 467 with constant (symbol_ref:SI ("s") [flags 0x2]  <var_decl 06d9cd20 s>)
rescanning insn with uid = 469.
LOCAL CONST-PROP: Replacing reg 375 in insn 469 with constant (symbol_ref:SI ("s") [flags 0x2]  <var_decl 06d9cd20 s>)
rescanning insn with uid = 551.
LOCAL CONST-PROP: Replacing reg 387 in insn 551 with constant (symbol_ref:SI ("s") [flags 0x2]  <var_decl 06d9cd20 s>)
rescanning insn with uid = 553.
LOCAL CONST-PROP: Replacing reg 387 in insn 553 with constant (symbol_ref:SI ("s") [flags 0x2]  <var_decl 06d9cd20 s>)
rescanning insn with uid = 574.
LOCAL CONST-PROP: Replacing reg 394 in insn 574 with constant (symbol_ref:SI ("s") [flags 0x2]  <var_decl 06d9cd20 s>)
rescanning insn with uid = 587.
LOCAL CONST-PROP: Replacing reg 395 in insn 587 with constant (symbol_ref:SI ("num") [flags 0x2]  <var_decl 06e5dae0 num>)
rescanning insn with uid = 588.
LOCAL CONST-PROP: Replacing reg 395 in insn 588 with constant (symbol_ref:SI ("num") [flags 0x2]  <var_decl 06e5dae0 num>)
rescanning insn with uid = 649.
LOCAL CONST-PROP: Replacing reg 415 in insn 649 with constant (symbol_ref:SI ("num") [flags 0x2]  <var_decl 06e5dae0 num>)
rescanning insn with uid = 652.
LOCAL CONST-PROP: Replacing reg 415 in insn 652 with constant (symbol_ref:SI ("num") [flags 0x2]  <var_decl 06e5dae0 num>)
rescanning insn with uid = 712.
LOCAL CONST-PROP: Replacing reg 423 in insn 712 with constant (symbol_ref:SI ("s") [flags 0x2]  <var_decl 06d9cd20 s>)
rescanning insn with uid = 764.
LOCAL CONST-PROP: Replacing reg 425 in insn 764 with constant (symbol_ref:SI ("s") [flags 0x2]  <var_decl 06d9cd20 s>)
Implicit set of reg 151 in basic block 5
Implicit set of reg 167 in basic block 13
Implicit set of reg 325 in basic block 31
changing bb of uid 881
  unscanned insn
verify found no changes in insn with uid = 252.
Edge 28->30 redirected to 129
Implicit set of reg 439 in basic block 129
changing bb of uid 883
  unscanned insn
Redirecting fallthru edge 30->32 to 130
Implicit set of reg 336 in basic block 130
Implicit set of reg 189 in basic block 111
Implicit set of reg 189 in basic block 42
Implicit set of reg 203 in basic block 112
Implicit set of reg 352 in basic block 47
Implicit set of reg 354 in basic block 48
Implicit set of reg 187 in basic block 114
Implicit set of reg 187 in basic block 64
Implicit set of reg 186 in basic block 115
Implicit set of reg 370 in basic block 69
Implicit set of reg 372 in basic block 70
Implicit set of reg 165 in basic block 85
Implicit set of reg 181 in basic block 119
Implicit set of reg 382 in basic block 90
Implicit set of reg 384 in basic block 91
changing bb of uid 884
  unscanned insn
Redirecting fallthru edge 107->108 to 131
Implicit set of reg 412 in basic block 131
Implicit set of reg 438 in basic block 54
Implicit set of reg 436 in basic block 76
Implicit set of reg 165 in basic block 118
Implicit set of reg 434 in basic block 97
Found 24 implicit sets
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 132 n_edges 204 count 145 (  1.1)


int main()

Dataflow summary:
def_info->table_size = 0, use_info->table_size = 1183
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 29 [mm0] 30 [mm1] 31 [mm2]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 7[sp] 17[flags]
;;  ref usage 	r0={26d,14u} r1={28d,3u} r2={31d,6u} r6={1d,131u} r7={13d,243u} r8={24d} r9={24d} r10={24d} r11={24d} r12={24d} r13={24d} r14={24d} r15={24d} r16={1d,130u} r17={200d,79u} r18={24d} r19={24d} r20={1d,139u,3e} r21={25d} r22={25d} r23={25d} r24={24d} r25={24d} r26={24d} r27={24d} r28={24d} r29={25d} r30={25d} r31={25d} r32={24d} r33={24d} r34={24d} r35={24d} r36={24d} r37={24d} r38={24d} r39={24d} r40={24d} r41={24d} r42={24d} r43={24d} r44={24d} r45={24d} r46={24d} r47={24d} r48={24d} r49={24d} r50={24d} r51={24d} r52={24d} r53={24d} r54={24d} r55={24d} r56={24d} r57={24d} r58={24d} r59={24d} r60={24d} r61={24d} r62={24d} r63={24d} r64={24d} r65={24d} r66={24d} r67={24d} r68={24d} r69={24d} r70={24d} r71={24d} r72={24d} r73={24d} r74={24d} r75={24d} r76={24d} r83={3d,4u} r84={1d,2u} r85={1d,1u} r87={2d,3u} r94={2d,6u,1e} r101={2d,6u,1e} r102={2d,3u} r104={2d,5u} r106={2d,6u} r112={1d,14u} r113={1d,1u} r117={1d,7u} r120={3d,1u} r122={2d,3u} r123={2d,5u} r125={2d,4u} r129={2d,3u} r132={2d,3u} r135={3d,9u} r136={4d,11u} r149={1d,2u} r150={1d,2u} r151={3d,2u} r158={1d,1u} r159={2d,5u} r160={1d,2u} r165={4d,8u} r166={1d,2u} r167={3d,2u} r174={1d,1u} r175={2d,5u} r176={1d,2u} r181={5d,13u} r183={1d,1u} r186={3d,6u} r187={3d,8u} r189={4d,8u} r192={1d,3u} r201={1d,1u} r203={5d,13u} r207={1d,3u} r209={2d,8u} r212={3d,1u} r218={1d,1u} r225={1d,3u} r229={3d,1u} r240={1d,1u} r247={1d,6u} r252={5d,4u} r254={1d,1u} r258={1d,1u} r261={1d,1u} r262={1d,1u} r263={1d,1u} r264={1d,1u} r265={1d,1u} r266={1d,1u} r267={1d,1u} r268={1d,1u} r269={1d,1u} r270={1d,1u} r271={1d,1u} r272={2d,4u} r273={1d,1u} r274={1d,1u} r275={1d,1u} r276={1d,1u} r277={1d,1u} r278={1d,1u} r279={1d,1u} r280={1d,1u} r281={1d,1u} r282={1d} r283={1d,1u} r284={1d,1u} r285={1d,1u} r286={2d,3u} r287={1d,1u} r288={1d} r289={1d} r290={1d,1u} r291={1d,1u} r292={1d} r293={1d,1u} r294={1d,1u} r298={2d,3u} r299={1d,1u} r300={1d,1u} r301={1d,1u} r302={1d} r303={1d} r304={1d,1u} r305={1d,1u} r306={1d} r307={1d,1u} r308={1d,1u} r312={2d,3u} r313={1d,1u} r314={1d,1u} r315={1d,1u} r317={1d,1u} r318={1d} r319={1d} r320={1d,1u} r325={1d,1u} r328={1d,1u} r329={1d,1u} r330={1d,1u} r331={1d,1u} r332={1d,1u} r334={1d,1u} r335={1d,1u} r336={1d,1u} r337={1d} r339={1d,3u} r340={1d,1u} r341={1d,1u} r342={1d,1u} r343={1d,1u} r344={1d,1u} r345={2d,3u} r346={1d,1u} r347={1d,1u} r348={1d} r350={1d,2u} r352={1d,1u} r354={1d,1u} r356={1d,1u} r357={1d} r361={1d,1u} r362={1d,1u} r363={1d,1u} r364={1d,1u} r365={1d,1u} r366={2d,3u} r367={1d,1u} r368={1d} r370={1d,1u} r372={1d,1u} r374={1d,1u} r375={1d} r379={1d,1u} r380={1d,1u} r382={1d,1u} r384={1d,1u} r386={1d,1u} r387={1d} r391={1d,1u} r392={1d,1u} r393={1d,1u} r394={1d} r395={1d} r397={1d,1u} r398={1d,1u} r399={1d,1u} r400={1d,1u} r403={1d,1u,1e} r404={1d,1u} r406={1d,1u} r409={1d,1u,1e} r410={1d,1u} r412={1d,1u} r414={1d,1u} r415={1d} r417={1d,1u,1e} r418={1d,1u} r420={1d,1u} r421={1d,1u} r422={1d,1u} r423={1d} r424={1d,1u} r425={1d} r427={1d,2u} r428={1d,1u} r429={3d,2u} r430={3d,1u} r431={3d,2u} r432={3d,1u} r433={1d,2u} r434={1d,4u} r435={1d,2u} r436={1d,4u} r437={1d,2u} r438={1d,4u} r439={1d,1u} r441={1d,1u} r442={1d,2u} r443={1d,1u} r444={1d,2u} r445={1d,1u} r446={1d,2u} 
;;    total ref usage 3270{2149d,1113u,8e} in 502{478 regular + 24 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(6){ }d-1(7){ }d-1(16){ }d-1(20){ }d-1(21){ }d-1(22){ }d-1(23){ }d-1(29){ }d-1(30){ }d-1(31){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 29 [mm0] 30 [mm1] 31 [mm2]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 29 [mm0] 30 [mm1] 31 [mm2]
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

( 0 )->[2]->( 3 121 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 149 151 261
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 0 [ax] 17 [flags] 149 151 261
;; live  kill	 17 [flags]
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 151
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 151

( 2 )->[3]->( 4 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u11(6){ }u12(7){ }u13(16){ }u14(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 151
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 429 430
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 151
;; live  gen 	 429 430
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 151 429 430
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 151 429 430

( 3 6 )->[4]->( 5 6 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u15(6){ }u16(7){ }u17(16){ }u18(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 151 429 430
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 151
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 151 429 430
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 429 430
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 429 430

( 4 )->[5]->( 6 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u21(6){ }u22(7){ }u23(16){ }u24(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 429 430
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 429 430
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 429 430
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 429 430

( 4 5 )->[6]->( 4 122 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u25(6){ }u26(7){ }u27(16){ }u28(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 429 430
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 150 151 262
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 429 430
;; live  gen 	 0 [ax] 17 [flags] 150 151 262
;; live  kill	 17 [flags]
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 151 429 430
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 151 429 430

( 122 7 )->[7]->( 7 8 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u35(6){ }u36(7){ }u37(16){ }u38(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 151 159 429 430
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 151 159
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 151 158 159 160 263 264 265 266 267 268
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 151 159 429 430
;; live  gen 	 0 [ax] 17 [flags] 151 158 159 160 263 264 265 266 267 268
;; live  kill	 17 [flags]
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 151 159 429 430
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 151 159 429 430

( 7 )->[8]->( 9 125 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u54(6){ }u55(7){ }u56(16){ }u57(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 159 429 430
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 159 429 430
;; lr  def 	 17 [flags] 85 269 270 271 272 273
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 159 429 430
;; live  gen 	 17 [flags] 85 269 270 271 272 273
;; live  kill	 17 [flags]
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

( 8 )->[9]->( 10 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u74(6){ }u75(7){ }u76(16){ }u77(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 87
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 87
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87

( 9 16 )->[10]->( 11 123 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u78(6){ }u79(7){ }u80(16){ }u81(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 84 167 274
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; live  gen 	 0 [ax] 17 [flags] 84 167 274
;; live  kill	 17 [flags]
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 167
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 167

( 10 )->[11]->( 12 )
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u88(6){ }u89(7){ }u90(16){ }u91(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 167
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 431 432
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 167
;; live  gen 	 431 432
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 167 431 432
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 167 431 432

( 11 14 )->[12]->( 13 14 )
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u92(6){ }u93(7){ }u94(16){ }u95(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 167 431 432
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 167
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 167 431 432
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 431 432
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 431 432

( 12 )->[13]->( 14 )
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u98(6){ }u99(7){ }u100(16){ }u101(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 431 432
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; live  gen 	 431 432
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 431 432
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 431 432

( 12 13 )->[14]->( 12 124 )
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u102(6){ }u103(7){ }u104(16){ }u105(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 431 432
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 166 167 275
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 431 432
;; live  gen 	 0 [ax] 17 [flags] 166 167 275
;; live  kill	 17 [flags]
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 167 431 432
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 167 431 432

( 124 15 )->[15]->( 15 16 )
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u112(6){ }u113(7){ }u114(16){ }u115(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 167 175 431 432
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 167 175
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 167 174 175 176 276 277 278 279 280 281
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 167 175 431 432
;; live  gen 	 0 [ax] 17 [flags] 167 174 175 176 276 277 278 279 280 281
;; live  kill	 17 [flags]
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 167 175 431 432
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 167 175 431 432

( 15 )->[16]->( 10 17 )
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u131(6){ }u132(7){ }u133(16){ }u134(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 175 431 432
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 175 431 432
;; lr  def 	 17 [flags] 87 247 282 283 284 285 286 287
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 175 431 432
;; live  gen 	 17 [flags] 87 247 282 283 284 285 286 287
;; live  kill	 17 [flags]
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 247
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 247

( 16 )->[17]->( 18 22 )
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u154(6){ }u155(7){ }u156(16){ }u157(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 247
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 247
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 247
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 247
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 247

( 17 )->[18]->( 19 )
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u161(6){ }u162(7){ }u163(16){ }u164(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 247
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 247
;; lr  def 	 17 [flags] 94 240
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 247
;; live  gen 	 94 240
;; live  kill	 17 [flags]
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 94 240 247
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 94 240 247

( 18 19 )->[19]->( 19 20 )
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u166(6){ }u167(7){ }u168(16){ }u169(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 94 240 247
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 94 240
;; lr  def 	 17 [flags] 94 288 289 290 291 292 293 294 298 299 300 301
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 94 240 247
;; live  gen 	 17 [flags] 94 288 289 290 291 292 293 294 298 299 300 301
;; live  kill	 17 [flags]
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 94 240 247
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 94 240 247

( 19 )->[20]->( 21 )
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u196(6){ }u197(7){ }u198(16){ }u199(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 247
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 247
;; lr  def 	 101
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 247
;; live  gen 	 101
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 101 247
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 101 247

( 20 21 )->[21]->( 21 22 )
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u201(6){ }u202(7){ }u203(16){ }u204(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 101 247
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 101
;; lr  def 	 17 [flags] 101 302 303 304 305 306 307 308 312 313 314 315
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 101 247
;; live  gen 	 17 [flags] 101 302 303 304 305 306 307 308 312 313 314 315
;; live  kill	 17 [flags]
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 101 247
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 101 247

( 21 17 )->[22]->( 24 23 )
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u230(6){ }u231(7){ }u232(16){ }u233(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 247
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 247
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 247
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 247
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 247

( 22 125 )->[23]->( 107 )
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u237(6){ }u238(7){ }u239(16){ }u240(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 252
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 252
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 252
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 252

( 22 )->[24]->( 25 )
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u241(6){ }u242(7){ }u243(16){ }u244(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 247
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 247
;; lr  def 	 102 125 252
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 247
;; live  gen 	 102 125 252
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 102 125 252
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 102 125 252

( 24 106 )->[25]->( 106 26 )
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u246(6){ }u247(7){ }u248(16){ }u249(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 102 125 252
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 102 125 252
;; lr  def 	 17 [flags] 317 318
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 102 125 252
;; live  gen 	 17 [flags] 317 318
;; live  kill	 17 [flags]
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 252
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 252

( 25 )->[26]->( 27 31 )
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u257(6){ }u258(7){ }u259(16){ }u260(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 104 106 319 320 325
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 2 [cx] 7 [sp] 17 [flags] 104 106 319 320 325
;; live  kill	 17 [flags]
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104 106
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104 106

( 26 )->[27]->( 28 )
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u281(6){ }u282(7){ }u283(16){ }u284(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104 106
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 135 136
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104 106
;; live  gen 	 135 136
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104 106 135 136
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104 106 135 136

( 27 30 )->[28]->( 29 129 )
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u285(6){ }u286(7){ }u287(16){ }u288(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104 106 135 136
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104
;; lr  def 	 17 [flags] 439
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104 106 135 136
;; live  gen 	 17 [flags] 439
;; live  kill	 17 [flags]
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104 106 135 136
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104 106 135 136

( 28 )->[129]->( 30 )
;; bb 129 artificial_defs: { }
;; bb 129 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104 106 135 136
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
;; live  in  	
;; live  gen 	
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104 106 135 136
;; live  out 	

( 28 )->[29]->( 30 )
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u293(6){ }u294(7){ }u295(16){ }u296(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104 106 135 136
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 135 136
;; lr  def 	 17 [flags] 136 328 329 330 331
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104 106 135 136
;; live  gen 	 136 328 329 330 331
;; live  kill	 17 [flags]
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104 106 135 136
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104 106 135 136

( 129 29 )->[30]->( 28 130 )
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u309(6){ }u310(7){ }u311(16){ }u312(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104 106 135 136
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104 135
;; lr  def 	 17 [flags] 104 135 332 334 335 336
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104 106 135 136
;; live  gen 	 17 [flags] 104 135 332 334 335 336
;; live  kill	 17 [flags]
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104 106 135 136
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104 106 135 136

( 30 )->[130]->( 32 )
;; bb 130 artificial_defs: { }
;; bb 130 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 106 136
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
;; live  in  	
;; live  gen 	
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 106 136
;; live  out 	

( 26 )->[31]->( 32 )
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u328(6){ }u329(7){ }u330(16){ }u331(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 106
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 136
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 106
;; live  gen 	 136
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 106 136
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 106 136

( 31 130 )->[32]->( 33 101 )
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u332(6){ }u333(7){ }u334(16){ }u335(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 106 136
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 106
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 106 136
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 106 136
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 106 136

( 32 )->[33]->( 34 )
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u338(6){ }u339(7){ }u340(16){ }u341(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 106 136
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 106
;; lr  def 	 83 122 123 189
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 106 136
;; live  gen 	 83 122 123 189
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 106 122 123 136 189
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 106 122 123 136 189

( 33 100 )->[34]->( 35 111 )
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u343(6){ }u344(7){ }u345(16){ }u346(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 106 122 123 136 189
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 106 122 123 136 189
;; lr  def 	 17 [flags] 112 113 337 339 340 341 342 343 344 345 346 347 348 350 427 428
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 106 122 123 136 189
;; live  gen 	 17 [flags] 112 113 337 339 340 341 342 343 344 345 346 347 348 350 427 428
;; live  kill	 17 [flags]
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 189 427 428
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 189 427 428

( 34 )->[35]->( 36 )
;; bb 35 artificial_defs: { }
;; bb 35 artificial_uses: { u379(6){ }u380(7){ }u381(16){ }u382(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 189 427 428
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 203
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 189 427 428
;; live  gen 	 203
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 189 203 427 428
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 189 203 427 428

( 35 41 )->[36]->( 40 37 )
;; bb 36 artificial_defs: { }
;; bb 36 artificial_uses: { u383(6){ }u384(7){ }u385(16){ }u386(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 189 203 427 428
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 112 189
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 189 203 427 428
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 189 203 427 428
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 189 203 427 428

( 36 )->[37]->( 39 38 )
;; bb 37 artificial_defs: { }
;; bb 37 artificial_uses: { u390(6){ }u391(7){ }u392(16){ }u393(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 189 203 427 428
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 112 189
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 189 203 427 428
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 189 203 427 428
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 189 203 427 428

( 37 )->[38]->( 40 39 )
;; bb 38 artificial_defs: { }
;; bb 38 artificial_uses: { u397(6){ }u398(7){ }u399(16){ }u400(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 189 203 427 428
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 112 189
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 189 203 427 428
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 189 203 427 428
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 189 203 427 428

( 38 37 )->[39]->( 41 )
;; bb 39 artificial_defs: { }
;; bb 39 artificial_uses: { u404(6){ }u405(7){ }u406(16){ }u407(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 189 427 428
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 189
;; lr  def 	 183 189 203
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 189 427 428
;; live  gen 	 183 189 203
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 189 203 427 428
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 189 203 427 428

( 36 38 )->[40]->( 41 )
;; bb 40 artificial_defs: { }
;; bb 40 artificial_uses: { u411(6){ }u412(7){ }u413(16){ }u414(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 189 203 427 428
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 189
;; lr  def 	 189
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 189 203 427 428
;; live  gen 	 189
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 189 203 427 428
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 189 203 427 428

( 39 40 )->[41]->( 36 42 )
;; bb 41 artificial_defs: { }
;; bb 41 artificial_uses: { u416(6){ }u417(7){ }u418(16){ }u419(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 189 203 427 428
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 189
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 189 203 427 428
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 189 203 427 428
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 189 203 427 428

( 41 )->[42]->( 112 43 )
;; bb 42 artificial_defs: { }
;; bb 42 artificial_uses: { u422(6){ }u423(7){ }u424(16){ }u425(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 203 427 428
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 203
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 203 427 428
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 203 427 428
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 203 427 428

( 42 )->[43]->( 113 44 )
;; bb 43 artificial_defs: { }
;; bb 43 artificial_uses: { u429(6){ }u430(7){ }u431(16){ }u432(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 203 427 428
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 112 203
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 203 427 428
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 203 427 428
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 203 427 428

( 43 )->[44]->( 55 45 )
;; bb 44 artificial_defs: { }
;; bb 44 artificial_uses: { u436(6){ }u437(7){ }u438(16){ }u439(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 203 427 428
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 112 203
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 203 427 428
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 203 427 428
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 203 427 428

( 44 )->[45]->( 113 55 )
;; bb 45 artificial_defs: { }
;; bb 45 artificial_uses: { u443(6){ }u444(7){ }u445(16){ }u446(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 203 427 428
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 112 203
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 203 427 428
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 203 427 428
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 203 427 428

( 113 )->[46]->( 52 47 )
;; bb 46 artificial_defs: { }
;; bb 46 artificial_uses: { u450(6){ }u451(7){ }u452(16){ }u453(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 192 203 427 428 437 438
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 437
;; lr  def 	 17 [flags] 352
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 192 203 427 428 437 438
;; live  gen 	 17 [flags] 352
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 192 203 427 428 438
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 192 203 427 428 438

( 46 )->[47]->( 52 48 )
;; bb 47 artificial_defs: { }
;; bb 47 artificial_uses: { u458(6){ }u459(7){ }u460(16){ }u461(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 192 203 427 428 438
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 438
;; lr  def 	 17 [flags] 354
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 192 203 427 428 438
;; live  gen 	 17 [flags] 354
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 192 203 427 428 438
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 192 203 427 428 438

( 47 )->[48]->( 53 49 )
;; bb 48 artificial_defs: { }
;; bb 48 artificial_uses: { u466(6){ }u467(7){ }u468(16){ }u469(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 192 203 427 428 438
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 192 203
;; lr  def 	 17 [flags] 120 441 442
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 192 203 427 428 438
;; live  gen 	 17 [flags] 120 441 442
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 120 123 136 192 203 427 428 438 441 442
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 120 123 136 192 203 427 428 438 441 442

( 48 )->[49]->( 51 50 )
;; bb 49 artificial_defs: { }
;; bb 49 artificial_uses: { u475(6){ }u476(7){ }u477(16){ }u478(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 120 123 136 192 203 427 428 438 441 442
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 192 442
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 120 123 136 192 203 427 428 438 441 442
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 120 123 136 192 203 427 428 438 441
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 120 123 136 192 203 427 428 438 441

( 49 )->[50]->( 53 51 )
;; bb 50 artificial_defs: { }
;; bb 50 artificial_uses: { u482(6){ }u483(7){ }u484(16){ }u485(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 120 123 136 192 203 427 428 438 441
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 192 441
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 120 123 136 192 203 427 428 438 441
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 120 123 136 203 427 428 438
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 120 123 136 203 427 428 438

( 49 50 )->[51]->( 53 )
;; bb 51 artificial_defs: { }
;; bb 51 artificial_uses: { u489(6){ }u490(7){ }u491(16){ }u492(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 203 427 428 438
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 120
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 203 427 428 438
;; live  gen 	 120
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 120 123 136 203 427 428 438
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 120 123 136 203 427 428 438

( 47 46 )->[52]->( 53 )
;; bb 52 artificial_defs: { }
;; bb 52 artificial_uses: { u493(6){ }u494(7){ }u495(16){ }u496(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 203 427 428 438
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 120
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 203 427 428 438
;; live  gen 	 120
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 120 123 136 203 427 428 438
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 120 123 136 203 427 428 438

( 52 51 48 50 )->[53]->( 55 )
;; bb 53 artificial_defs: { }
;; bb 53 artificial_uses: { u497(6){ }u498(7){ }u499(16){ }u500(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 120 123 136 203 427 428 438
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 120 203 438
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 356 357 361 362
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 120 123 136 203 427 428 438
;; live  gen 	 356 357 361 362
;; live  kill	 17 [flags]
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 203 427 428
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 203 427 428

( 113 )->[54]->( 55 )
;; bb 54 artificial_defs: { }
;; bb 54 artificial_uses: { u518(6){ }u519(7){ }u520(16){ }u521(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 203 427 428 437
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 203 437
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 203
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 203 427 428 437
;; live  gen 	 203
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 203 427 428
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 203 427 428

( 54 45 44 53 )->[55]->( 56 99 )
;; bb 55 artificial_defs: { }
;; bb 55 artificial_uses: { u527(6){ }u528(7){ }u529(16){ }u530(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 203 427 428
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 203
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 203 427 428
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 427 428
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 427 428

( 55 )->[56]->( 57 114 )
;; bb 56 artificial_defs: { }
;; bb 56 artificial_uses: { u533(6){ }u534(7){ }u535(16){ }u536(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 427 428
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 113 136 427 428
;; lr  def 	 17 [flags] 117 187 363 364 365 366 367 368
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 427 428
;; live  gen 	 17 [flags] 117 187 363 364 365 366 367 368
;; live  kill	 17 [flags]
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 117 123 136 187
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 117 123 136 187

( 56 )->[57]->( 58 )
;; bb 57 artificial_defs: { }
;; bb 57 artificial_uses: { u554(6){ }u555(7){ }u556(16){ }u557(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 117 123 136 187
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 186
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 117 123 136 187
;; live  gen 	 186
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 117 123 136 186 187
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 117 123 136 186 187

( 57 63 )->[58]->( 62 59 )
;; bb 58 artificial_defs: { }
;; bb 58 artificial_uses: { u558(6){ }u559(7){ }u560(16){ }u561(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 117 123 136 186 187
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 117 187
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 117 123 136 186 187
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 117 123 136 186 187
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 117 123 136 186 187

( 58 )->[59]->( 61 60 )
;; bb 59 artificial_defs: { }
;; bb 59 artificial_uses: { u565(6){ }u566(7){ }u567(16){ }u568(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 117 123 136 186 187
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 117 187
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 117 123 136 186 187
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 117 123 136 186 187
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 117 123 136 186 187

( 59 )->[60]->( 62 61 )
;; bb 60 artificial_defs: { }
;; bb 60 artificial_uses: { u572(6){ }u573(7){ }u574(16){ }u575(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 117 123 136 186 187
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 117 187
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 117 123 136 186 187
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 117 123 136 186 187
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 117 123 136 186 187

( 60 59 )->[61]->( 63 )
;; bb 61 artificial_defs: { }
;; bb 61 artificial_uses: { u579(6){ }u580(7){ }u581(16){ }u582(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 117 123 136 187
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 187
;; lr  def 	 186 187 201
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 117 123 136 187
;; live  gen 	 186 187 201
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 117 123 136 186 187
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 117 123 136 186 187

( 58 60 )->[62]->( 63 )
;; bb 62 artificial_defs: { }
;; bb 62 artificial_uses: { u586(6){ }u587(7){ }u588(16){ }u589(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 117 123 136 186 187
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 187
;; lr  def 	 187
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 117 123 136 186 187
;; live  gen 	 187
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 117 123 136 186 187
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 117 123 136 186 187

( 61 62 )->[63]->( 58 64 )
;; bb 63 artificial_defs: { }
;; bb 63 artificial_uses: { u591(6){ }u592(7){ }u593(16){ }u594(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 117 123 136 186 187
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 187
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 117 123 136 186 187
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 117 123 136 186 187
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 117 123 136 186 187

( 63 )->[64]->( 115 65 )
;; bb 64 artificial_defs: { }
;; bb 64 artificial_uses: { u597(6){ }u598(7){ }u599(16){ }u600(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 117 123 136 186
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 186
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 117 123 136 186
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 117 123 136 186
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 117 123 136 186

( 64 )->[65]->( 116 66 )
;; bb 65 artificial_defs: { }
;; bb 65 artificial_uses: { u604(6){ }u605(7){ }u606(16){ }u607(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 117 123 136 186
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 117 186
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 117 123 136 186
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 117 123 136 186
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 117 123 136 186

( 65 )->[66]->( 127 67 )
;; bb 66 artificial_defs: { }
;; bb 66 artificial_uses: { u611(6){ }u612(7){ }u613(16){ }u614(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 117 123 136 186
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 117 186
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 117 123 136 186
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 117 123 136 186
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 117 123 136 186

( 66 )->[67]->( 116 127 )
;; bb 67 artificial_defs: { }
;; bb 67 artificial_uses: { u618(6){ }u619(7){ }u620(16){ }u621(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 117 123 136 186
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 117 186
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 117 123 136 186
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 117 123 136 186
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 117 123 136 186

( 116 )->[68]->( 74 69 )
;; bb 68 artificial_defs: { }
;; bb 68 artificial_uses: { u625(6){ }u626(7){ }u627(16){ }u628(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 207 209 435 436
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 435
;; lr  def 	 17 [flags] 370
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 207 209 435 436
;; live  gen 	 17 [flags] 370
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 207 209 436
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 207 209 436

( 68 )->[69]->( 74 70 )
;; bb 69 artificial_defs: { }
;; bb 69 artificial_uses: { u633(6){ }u634(7){ }u635(16){ }u636(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 207 209 436
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 436
;; lr  def 	 17 [flags] 372
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 207 209 436
;; live  gen 	 17 [flags] 372
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 207 209 436
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 207 209 436

( 69 )->[70]->( 75 71 )
;; bb 70 artificial_defs: { }
;; bb 70 artificial_uses: { u641(6){ }u642(7){ }u643(16){ }u644(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 207 209 436
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 207 209
;; lr  def 	 17 [flags] 212 443 444
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 207 209 436
;; live  gen 	 17 [flags] 212 443 444
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 207 209 212 436 443 444
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 207 209 212 436 443 444

( 70 )->[71]->( 73 72 )
;; bb 71 artificial_defs: { }
;; bb 71 artificial_uses: { u650(6){ }u651(7){ }u652(16){ }u653(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 207 209 212 436 443 444
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 207 444
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 207 209 212 436 443 444
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 207 209 212 436 443
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 207 209 212 436 443

( 71 )->[72]->( 75 73 )
;; bb 72 artificial_defs: { }
;; bb 72 artificial_uses: { u657(6){ }u658(7){ }u659(16){ }u660(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 207 209 212 436 443
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 207 443
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 207 209 212 436 443
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 209 212 436
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 209 212 436

( 71 72 )->[73]->( 75 )
;; bb 73 artificial_defs: { }
;; bb 73 artificial_uses: { u664(6){ }u665(7){ }u666(16){ }u667(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 209 436
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 212
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 209 436
;; live  gen 	 212
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 209 212 436
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 209 212 436

( 69 68 )->[74]->( 75 )
;; bb 74 artificial_defs: { }
;; bb 74 artificial_uses: { u668(6){ }u669(7){ }u670(16){ }u671(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 209 436
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 212
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 209 436
;; live  gen 	 212
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 209 212 436
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 209 212 436

( 74 73 70 72 )->[75]->( 77 )
;; bb 75 artificial_defs: { }
;; bb 75 artificial_uses: { u672(6){ }u673(7){ }u674(16){ }u675(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 209 212 436
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 209 212 436
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 374 375 379 380
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 209 212 436
;; live  gen 	 374 375 379 380
;; live  kill	 17 [flags]
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 209
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 209

( 116 )->[76]->( 77 )
;; bb 76 artificial_defs: { }
;; bb 76 artificial_uses: { u693(6){ }u694(7){ }u695(16){ }u696(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 209 435
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 209 435
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 209
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 209 435
;; live  gen 	 209
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 209
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 209

( 75 76 )->[77]->( 117 99 )
;; bb 77 artificial_defs: { }
;; bb 77 artificial_uses: { u702(6){ }u703(7){ }u704(16){ }u705(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 209
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 209
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 209
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136

( 117 126 )->[78]->( 79 )
;; bb 78 artificial_defs: { }
;; bb 78 artificial_uses: { u708(6){ }u709(7){ }u710(16){ }u711(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 165
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 181
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 165
;; live  gen 	 181
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 165 181
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 165 181

( 78 84 )->[79]->( 83 80 )
;; bb 79 artificial_defs: { }
;; bb 79 artificial_uses: { u712(6){ }u713(7){ }u714(16){ }u715(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 165 181
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 112 165
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 165 181
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 165 181
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 165 181

( 79 )->[80]->( 82 81 )
;; bb 80 artificial_defs: { }
;; bb 80 artificial_uses: { u719(6){ }u720(7){ }u721(16){ }u722(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 165 181
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 112 165
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 165 181
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 165 181
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 165 181

( 80 )->[81]->( 83 82 )
;; bb 81 artificial_defs: { }
;; bb 81 artificial_uses: { u726(6){ }u727(7){ }u728(16){ }u729(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 165 181
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 112 165
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 165 181
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 165 181
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 165 181

( 81 80 )->[82]->( 84 )
;; bb 82 artificial_defs: { }
;; bb 82 artificial_uses: { u733(6){ }u734(7){ }u735(16){ }u736(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 165
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 165
;; lr  def 	 165 181 218
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 165
;; live  gen 	 165 181 218
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 165 181
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 165 181

( 79 81 )->[83]->( 84 )
;; bb 83 artificial_defs: { }
;; bb 83 artificial_uses: { u740(6){ }u741(7){ }u742(16){ }u743(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 165 181
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 165
;; lr  def 	 165
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 165 181
;; live  gen 	 165
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 165 181
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 165 181

( 82 83 )->[84]->( 79 85 )
;; bb 84 artificial_defs: { }
;; bb 84 artificial_uses: { u745(6){ }u746(7){ }u747(16){ }u748(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 165 181
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 165
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 165 181
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 165 181
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 165 181

( 84 )->[85]->( 119 86 )
;; bb 85 artificial_defs: { }
;; bb 85 artificial_uses: { u751(6){ }u752(7){ }u753(16){ }u754(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 181
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 181
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 181
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 181
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 181

( 85 )->[86]->( 120 87 )
;; bb 86 artificial_defs: { }
;; bb 86 artificial_uses: { u758(6){ }u759(7){ }u760(16){ }u761(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 181
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 112 181
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 181
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 181
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 181

( 86 )->[87]->( 98 88 )
;; bb 87 artificial_defs: { }
;; bb 87 artificial_uses: { u765(6){ }u766(7){ }u767(16){ }u768(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 181
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 112 181
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 181
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 181
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 181

( 87 )->[88]->( 120 98 )
;; bb 88 artificial_defs: { }
;; bb 88 artificial_uses: { u772(6){ }u773(7){ }u774(16){ }u775(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 181
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 112 181
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 181
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 181
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 181

( 120 )->[89]->( 95 90 )
;; bb 89 artificial_defs: { }
;; bb 89 artificial_uses: { u779(6){ }u780(7){ }u781(16){ }u782(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 123 136 181 225 433 434
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 433
;; lr  def 	 17 [flags] 382
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 123 136 181 225 433 434
;; live  gen 	 17 [flags] 382
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 123 136 181 225 434
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 123 136 181 225 434

( 89 )->[90]->( 95 91 )
;; bb 90 artificial_defs: { }
;; bb 90 artificial_uses: { u787(6){ }u788(7){ }u789(16){ }u790(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 123 136 181 225 434
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 434
;; lr  def 	 17 [flags] 384
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 123 136 181 225 434
;; live  gen 	 17 [flags] 384
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 123 136 181 225 434
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 123 136 181 225 434

( 90 )->[91]->( 96 92 )
;; bb 91 artificial_defs: { }
;; bb 91 artificial_uses: { u795(6){ }u796(7){ }u797(16){ }u798(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 123 136 181 225 434
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 181 225
;; lr  def 	 17 [flags] 229 445 446
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 123 136 181 225 434
;; live  gen 	 17 [flags] 229 445 446
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 123 136 181 225 229 434 445 446
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 123 136 181 225 229 434 445 446

( 91 )->[92]->( 94 93 )
;; bb 92 artificial_defs: { }
;; bb 92 artificial_uses: { u804(6){ }u805(7){ }u806(16){ }u807(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 123 136 181 225 229 434 445 446
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 225 446
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 123 136 181 225 229 434 445 446
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 123 136 181 225 229 434 445
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 123 136 181 225 229 434 445

( 92 )->[93]->( 96 94 )
;; bb 93 artificial_defs: { }
;; bb 93 artificial_uses: { u811(6){ }u812(7){ }u813(16){ }u814(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 123 136 181 225 229 434 445
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 225 445
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 123 136 181 225 229 434 445
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 123 136 181 229 434
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 123 136 181 229 434

( 92 93 )->[94]->( 96 )
;; bb 94 artificial_defs: { }
;; bb 94 artificial_uses: { u818(6){ }u819(7){ }u820(16){ }u821(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 123 136 181 434
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 229
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 123 136 181 434
;; live  gen 	 229
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 123 136 181 229 434
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 123 136 181 229 434

( 90 89 )->[95]->( 96 )
;; bb 95 artificial_defs: { }
;; bb 95 artificial_uses: { u822(6){ }u823(7){ }u824(16){ }u825(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 123 136 181 434
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 229
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 123 136 181 434
;; live  gen 	 229
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 123 136 181 229 434
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 123 136 181 229 434

( 95 94 91 93 )->[96]->( 98 )
;; bb 96 artificial_defs: { }
;; bb 96 artificial_uses: { u826(6){ }u827(7){ }u828(16){ }u829(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 123 136 181 229 434
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 181 229 434
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 386 387 391 392
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 123 136 181 229 434
;; live  gen 	 386 387 391 392
;; live  kill	 17 [flags]
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 123 136 181
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 123 136 181

( 120 )->[97]->( 98 )
;; bb 97 artificial_defs: { }
;; bb 97 artificial_uses: { u847(6){ }u848(7){ }u849(16){ }u850(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 123 136 181 433
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 181 433
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 181
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 123 136 181 433
;; live  gen 	 181
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 123 136 181
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 123 136 181

( 97 88 87 96 )->[98]->( 99 )
;; bb 98 artificial_defs: { }
;; bb 98 artificial_uses: { u856(6){ }u857(7){ }u858(16){ }u859(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 123 136 181
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 181
;; lr  def 	 17 [flags] 83
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 123 136 181
;; live  gen 	 83
;; live  kill	 17 [flags]
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 123 136
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 123 136

( 127 98 55 77 )->[99]->( 100 102 )
;; bb 99 artificial_defs: { }
;; bb 99 artificial_uses: { u862(6){ }u863(7){ }u864(16){ }u865(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 123 136
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 123
;; lr  def 	 17 [flags] 106 122 123 393
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 123 136
;; live  gen 	 17 [flags] 106 122 123 393
;; live  kill	 17 [flags]
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 106 122 123 136
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 106 122 123 136

( 99 )->[100]->( 34 )
;; bb 100 artificial_defs: { }
;; bb 100 artificial_uses: { u874(6){ }u875(7){ }u876(16){ }u877(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 106 122 123 136
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 189 394
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 106 122 123 136
;; live  gen 	 189 394
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 106 122 123 136 189
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 106 122 123 136 189

( 32 )->[101]->( 102 )
;; bb 101 artificial_defs: { }
;; bb 101 artificial_uses: { u879(6){ }u880(7){ }u881(16){ }u882(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 83
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 83
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83

( 99 101 )->[102]->( 103 104 )
;; bb 102 artificial_defs: { }
;; bb 102 artificial_uses: { u883(6){ }u884(7){ }u885(16){ }u886(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83
;; lr  def 	 17 [flags] 252
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83
;; live  gen 	 17 [flags] 252
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 252
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 252

( 102 )->[103]->( 106 )
;; bb 103 artificial_defs: { }
;; bb 103 artificial_uses: { u890(6){ }u891(7){ }u892(16){ }u893(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 252 395 397 398
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83
;; live  gen 	 2 [cx] 7 [sp] 252 395 397 398
;; live  kill	 17 [flags]
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 252
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 252

( 102 )->[104]->( 105 106 )
;; bb 104 artificial_defs: { }
;; bb 104 artificial_uses: { u909(6){ }u910(7){ }u911(16){ }u912(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 252
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 252
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 252
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 252
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 252

( 104 )->[105]->( 106 )
;; bb 105 artificial_defs: { }
;; bb 105 artificial_uses: { u916(6){ }u917(7){ }u918(16){ }u919(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 252 399
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 2 [cx] 7 [sp] 252 399
;; live  kill	 17 [flags]
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 252
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 252

( 25 103 104 105 )->[106]->( 25 107 )
;; bb 106 artificial_defs: { }
;; bb 106 artificial_uses: { u931(6){ }u932(7){ }u933(16){ }u934(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 252
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 102 125 400
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 252
;; live  gen 	 17 [flags] 102 125 400
;; live  kill	 17 [flags]
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 102 125 252
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 102 125 252

( 106 23 )->[107]->( 109 131 )
;; bb 107 artificial_defs: { }
;; bb 107 artificial_uses: { u943(6){ }u944(7){ }u945(16){ }u946(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 252
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 252
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 129 403 404 406 409 410 412
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 252
;; live  gen 	 0 [ax] 17 [flags] 129 403 404 406 409 410 412
;; live  kill	 17 [flags]
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 129
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 129

( 107 )->[131]->( 108 )
;; bb 131 artificial_defs: { }
;; bb 131 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
;; live  in  	
;; live  gen 	
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	

( 131 110 )->[108]->( 128 )
;; bb 108 artificial_defs: { }
;; bb 108 artificial_uses: { u969(6){ }u970(7){ }u971(16){ }u972(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

( 107 )->[109]->( 110 )
;; bb 109 artificial_defs: { }
;; bb 109 artificial_uses: { u973(6){ }u974(7){ }u975(16){ }u976(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 129
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 132
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 129
;; live  gen 	 132
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 129 132
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 129 132

( 109 110 )->[110]->( 110 108 )
;; bb 110 artificial_defs: { }
;; bb 110 artificial_uses: { u977(6){ }u978(7){ }u979(16){ }u980(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 129 132
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 129 132
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 129 132 414 415 417 418 420
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 129 132
;; live  gen 	 0 [ax] 17 [flags] 129 132 414 415 417 418 420
;; live  kill	 17 [flags]
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 129 132
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 129 132

( 34 )->[111]->( 113 )
;; bb 111 artificial_defs: { }
;; bb 111 artificial_uses: { u999(6){ }u1000(7){ }u1001(16){ }u1002(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 427 428
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 203
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 427 428
;; live  gen 	 203
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 203 427 428
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 203 427 428

( 42 )->[112]->( 113 )
;; bb 112 artificial_defs: { }
;; bb 112 artificial_uses: { u1003(6){ }u1004(7){ }u1005(16){ }u1006(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 203 427 428
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 203 427 428
;; live  gen 	
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 203 427 428
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 203 427 428

( 111 112 43 45 )->[113]->( 46 54 )
;; bb 113 artificial_defs: { }
;; bb 113 artificial_uses: { u1008(6){ }u1009(7){ }u1010(16){ }u1011(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 203 427 428
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 112 203
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 192 203 258 421 437 438
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 203 427 428
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 7 [sp] 17 [flags] 192 203 258 421 437 438
;; live  kill	 17 [flags]
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 192 203 427 428 437 438
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 192 203 427 428 437 438

( 56 )->[114]->( 116 )
;; bb 114 artificial_defs: { }
;; bb 114 artificial_uses: { u1039(6){ }u1040(7){ }u1041(16){ }u1042(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 117 123 136
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 186
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 117 123 136
;; live  gen 	 186
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 117 123 136 186
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 117 123 136 186

( 64 )->[115]->( 116 )
;; bb 115 artificial_defs: { }
;; bb 115 artificial_uses: { u1043(6){ }u1044(7){ }u1045(16){ }u1046(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 117 123 136 186
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 117 123 136 186
;; live  gen 	
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 117 123 136 186
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 117 123 136 186

( 114 115 65 67 )->[116]->( 68 76 )
;; bb 116 artificial_defs: { }
;; bb 116 artificial_uses: { u1048(6){ }u1049(7){ }u1050(16){ }u1051(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 117 123 136 186
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 117 186
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 207 209 422 435 436
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 117 123 136 186
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 7 [sp] 17 [flags] 207 209 422 435 436
;; live  kill	 17 [flags]
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 207 209 435 436
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 207 209 435 436

( 77 )->[117]->( 78 118 )
;; bb 117 artificial_defs: { }
;; bb 117 artificial_uses: { u1079(6){ }u1080(7){ }u1081(16){ }u1082(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 165 423
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136
;; live  gen 	 17 [flags] 165 423
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 165
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 165

( 117 )->[118]->( 120 )
;; bb 118 artificial_defs: { }
;; bb 118 artificial_uses: { u1086(6){ }u1087(7){ }u1088(16){ }u1089(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 181
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136
;; live  gen 	 181
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 181
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 181

( 85 )->[119]->( 120 )
;; bb 119 artificial_defs: { }
;; bb 119 artificial_uses: { u1090(6){ }u1091(7){ }u1092(16){ }u1093(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 181
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 181
;; live  gen 	
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 181
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 181

( 118 119 86 88 )->[120]->( 89 97 )
;; bb 120 artificial_defs: { }
;; bb 120 artificial_uses: { u1095(6){ }u1096(7){ }u1097(16){ }u1098(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 181
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 112 181
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 181 225 254 424 433 434
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 181
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 7 [sp] 17 [flags] 181 225 254 424 433 434
;; live  kill	 17 [flags]
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 123 136 181 225 433 434
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 123 136 181 225 433 434

( 2 )->[121]->( 122 )
;; bb 121 artificial_defs: { }
;; bb 121 artificial_uses: { u1126(6){ }u1127(7){ }u1128(16){ }u1129(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 151
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 429 430
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 151
;; live  gen 	 429 430
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 151 429 430
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 151 429 430

( 121 6 )->[122]->( 7 )
;; bb 122 artificial_defs: { }
;; bb 122 artificial_uses: { u1130(6){ }u1131(7){ }u1132(16){ }u1133(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 151 429 430
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 159
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 151 429 430
;; live  gen 	 159
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 151 159 429 430
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 151 159 429 430

( 10 )->[123]->( 124 )
;; bb 123 artificial_defs: { }
;; bb 123 artificial_uses: { u1134(6){ }u1135(7){ }u1136(16){ }u1137(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 167
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 431 432
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 167
;; live  gen 	 431 432
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 167 431 432
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 167 431 432

( 123 14 )->[124]->( 15 )
;; bb 124 artificial_defs: { }
;; bb 124 artificial_uses: { u1138(6){ }u1139(7){ }u1140(16){ }u1141(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 167 431 432
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 175
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 167 431 432
;; live  gen 	 175
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 167 175 431 432
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 167 175 431 432

( 8 )->[125]->( 23 )
;; bb 125 artificial_defs: { }
;; bb 125 artificial_uses: { u1142(6){ }u1143(7){ }u1144(16){ }u1145(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

( 127 )->[126]->( 78 )
;; bb 126 artificial_defs: { }
;; bb 126 artificial_uses: { u1147(6){ }u1148(7){ }u1149(16){ }u1150(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 165 425
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136
;; live  gen 	 165 425
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 165
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 165

( 67 66 )->[127]->( 126 99 )
;; bb 127 artificial_defs: { }
;; bb 127 artificial_uses: { u1152(6){ }u1153(7){ }u1154(16){ }u1155(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 186
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 186
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 186
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136

( 108 )->[128]->( 1 )
;; bb 128 artificial_defs: { }
;; bb 128 artificial_uses: { u1158(6){ }u1159(7){ }u1160(16){ }u1161(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 0 [ax]
;; live  kill	
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

( 128 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u1163(0){ }u1164(6){ }u1165(7){ }u1166(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 58 to worklist
  Adding insn 53 to worklist
  Adding insn 3 to worklist
  Adding insn 62 to worklist
  Adding insn 72 to worklist
  Adding insn 66 to worklist
  Adding insn 91 to worklist
  Adding insn 85 to worklist
  Adding insn 103 to worklist
  Adding insn 101 to worklist
  Adding insn 110 to worklist
  Adding insn 105 to worklist
  Adding insn 114 to worklist
  Adding insn 124 to worklist
  Adding insn 118 to worklist
  Adding insn 143 to worklist
  Adding insn 137 to worklist
  Adding insn 158 to worklist
  Adding insn 153 to worklist
  Adding insn 161 to worklist
  Adding insn 186 to worklist
  Adding insn 182 to worklist
  Adding insn 209 to worklist
  Adding insn 205 to worklist
  Adding insn 214 to worklist
  Adding insn 212 to worklist
  Adding insn 225 to worklist
  Adding insn 245 to worklist
  Adding insn 240 to worklist
  Adding insn 238 to worklist
  Adding insn 236 to worklist
  Adding insn 234 to worklist
  Adding insn 231 to worklist
  Adding insn 229 to worklist
  Adding insn 252 to worklist
  Adding insn 274 to worklist
  Adding insn 278 to worklist
  Adding insn 301 to worklist
  Adding insn 305 to worklist
  Adding insn 307 to worklist
  Adding insn 309 to worklist
  Adding insn 322 to worklist
  Adding insn 325 to worklist
  Adding insn 328 to worklist
  Adding insn 330 to worklist
  Adding insn 332 to worklist
  Adding insn 341 to worklist
  Adding insn 345 to worklist
  Adding insn 350 to worklist
  Adding insn 352 to worklist
  Adding insn 354 to worklist
  Adding insn 373 to worklist
  Adding insn 365 to worklist
  Adding insn 364 to worklist
  Adding insn 362 to worklist
  Adding insn 361 to worklist
  Adding insn 360 to worklist
  Adding insn 378 to worklist
  Adding insn 377 to worklist
  Adding insn 384 to worklist
  Adding insn 397 to worklist
  Adding insn 401 to worklist
  Adding insn 403 to worklist
  Adding insn 405 to worklist
  Adding insn 418 to worklist
  Adding insn 421 to worklist
  Adding insn 424 to worklist
  Adding insn 426 to worklist
  Adding insn 428 to worklist
  Adding insn 437 to worklist
  Adding insn 441 to worklist
  Adding insn 446 to worklist
  Adding insn 448 to worklist
  Adding insn 450 to worklist
  Adding insn 469 to worklist
  Adding insn 461 to worklist
  Adding insn 460 to worklist
  Adding insn 458 to worklist
  Adding insn 457 to worklist
  Adding insn 456 to worklist
  Adding insn 474 to worklist
  Adding insn 473 to worklist
  Adding insn 478 to worklist
  Adding insn 485 to worklist
  Adding insn 487 to worklist
  Adding insn 489 to worklist
  Adding insn 502 to worklist
  Adding insn 505 to worklist
  Adding insn 508 to worklist
  Adding insn 510 to worklist
  Adding insn 512 to worklist
  Adding insn 521 to worklist
  Adding insn 525 to worklist
  Adding insn 530 to worklist
  Adding insn 532 to worklist
  Adding insn 534 to worklist
  Adding insn 553 to worklist
  Adding insn 545 to worklist
  Adding insn 544 to worklist
  Adding insn 542 to worklist
  Adding insn 541 to worklist
  Adding insn 540 to worklist
  Adding insn 558 to worklist
  Adding insn 557 to worklist
  Adding insn 563 to worklist
  Adding insn 571 to worklist
  Adding insn 582 to worklist
  Adding insn 592 to worklist
  Adding insn 590 to worklist
  Adding insn 588 to worklist
  Adding insn 584 to worklist
  Adding insn 600 to worklist
  Adding insn 605 to worklist
  Adding insn 603 to worklist
  Adding insn 616 to worklist
  Adding insn 612 to worklist
  Adding insn 635 to worklist
  Adding insn 627 to worklist
  Adding insn 626 to worklist
  Adding insn 625 to worklist
  Adding insn 624 to worklist
  Adding insn 656 to worklist
  Adding insn 646 to worklist
  Adding insn 645 to worklist
  Adding insn 644 to worklist
  Adding insn 680 to worklist
  Adding insn 673 to worklist
  Adding insn 671 to worklist
  Adding insn 670 to worklist
  Adding insn 668 to worklist
  Adding insn 667 to worklist
  Adding insn 665 to worklist
  Adding insn 664 to worklist
  Adding insn 704 to worklist
  Adding insn 697 to worklist
  Adding insn 695 to worklist
  Adding insn 694 to worklist
  Adding insn 692 to worklist
  Adding insn 691 to worklist
  Adding insn 689 to worklist
  Adding insn 688 to worklist
  Adding insn 715 to worklist
  Adding insn 743 to worklist
  Adding insn 736 to worklist
  Adding insn 734 to worklist
  Adding insn 733 to worklist
  Adding insn 731 to worklist
  Adding insn 730 to worklist
  Adding insn 728 to worklist
  Adding insn 727 to worklist
  Adding insn 758 to worklist
  Adding insn 771 to worklist
  Adding insn 777 to worklist
Finished finding needed instructions:
processing block 128 lr out =  0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
  Adding insn 776 to worklist
processing block 108 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame]
processing block 110 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 129 132
  Adding insn 655 to worklist
  Adding insn 654 to worklist
  Adding insn 653 to worklist
  Adding insn 652 to worklist
  Adding insn 649 to worklist
  Adding insn 647 to worklist
  Adding insn 643 to worklist
processing block 109 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 129 132
  Adding insn 42 to worklist
processing block 131 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame]
processing block 107 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 129
  Adding insn 634 to worklist
  Adding insn 633 to worklist
  Adding insn 632 to worklist
  Adding insn 631 to worklist
  Adding insn 629 to worklist
  Adding insn 623 to worklist
  Adding insn 622 to worklist
  Adding insn 621 to worklist
processing block 106 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 102 125 252
  Adding insn 615 to worklist
  Adding insn 613 to worklist
  Adding insn 611 to worklist
  Adding insn 610 to worklist
processing block 100 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 106 122 123 136 189
  Adding insn 574 to worklist
processing block 103 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 252
  Adding insn 594 to worklist
  Adding insn 593 to worklist
  Adding insn 591 to worklist
  Adding insn 589 to worklist
  Adding insn 587 to worklist
processing block 105 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 252
  Adding insn 607 to worklist
  Adding insn 606 to worklist
  Adding insn 604 to worklist
  Adding insn 602 to worklist
processing block 104 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 252
  Adding insn 599 to worklist
processing block 102 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 252
  Adding insn 581 to worklist
  Adding insn 580 to worklist
processing block 99 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 106 122 123 136
  Adding insn 570 to worklist
  Adding insn 569 to worklist
  Adding insn 568 to worklist
  Adding insn 567 to worklist
  Adding insn 566 to worklist
processing block 98 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 123 136
  Adding insn 564 to worklist
processing block 96 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 123 136 181
  Adding insn 552 to worklist
  Adding insn 551 to worklist
  Adding insn 543 to worklist
processing block 95 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 123 136 181 229 434
  Adding insn 39 to worklist
processing block 94 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 123 136 181 229 434
  Adding insn 536 to worklist
processing block 93 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 123 136 181 229 434
  Adding insn 533 to worklist
processing block 92 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 123 136 181 225 229 434 445
  Adding insn 531 to worklist
processing block 91 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 123 136 181 225 229 434 445 446
  Adding insn 529 to worklist
  Adding insn 870 to worklist
  Adding insn 869 to worklist
  Adding insn 527 to worklist
processing block 90 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 123 136 181 225 434
  Adding insn 524 to worklist
  Adding insn 523 to worklist
  Adding insn 522 to worklist
processing block 89 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 123 136 181 225 434
  Adding insn 520 to worklist
  Adding insn 519 to worklist
  Adding insn 518 to worklist
processing block 97 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 123 136 181
  Adding insn 40 to worklist
processing block 120 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 123 136 181 225 433 434
  Adding insn 742 to worklist
  Adding insn 740 to worklist
  Adding insn 876 to worklist
  Adding insn 875 to worklist
  Adding insn 737 to worklist
  Adding insn 735 to worklist
  Adding insn 732 to worklist
  Adding insn 729 to worklist
  Adding insn 726 to worklist
processing block 119 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 181
processing block 88 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 181
  Adding insn 511 to worklist
processing block 87 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 181
  Adding insn 509 to worklist
processing block 86 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 181
  Adding insn 507 to worklist
processing block 85 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 181
  Adding insn 504 to worklist
processing block 84 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 165 181
  Adding insn 501 to worklist
processing block 83 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 165 181
  Adding insn 497 to worklist
processing block 82 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 165 181
  Adding insn 37 to worklist
  Adding insn 36 to worklist
  Adding insn 492 to worklist
processing block 81 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 165 181
  Adding insn 488 to worklist
processing block 80 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 165 181
  Adding insn 486 to worklist
processing block 79 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 165 181
  Adding insn 484 to worklist
processing block 78 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 165 181
  Adding insn 35 to worklist
processing block 118 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 181
  Adding insn 48 to worklist
processing block 117 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 165
  Adding insn 714 to worklist
  Adding insn 712 to worklist
processing block 77 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136
  Adding insn 477 to worklist
processing block 75 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 209
  Adding insn 468 to worklist
  Adding insn 467 to worklist
  Adding insn 459 to worklist
processing block 74 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 209 212 436
  Adding insn 33 to worklist
processing block 73 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 209 212 436
  Adding insn 452 to worklist
processing block 72 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 209 212 436
  Adding insn 449 to worklist
processing block 71 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 207 209 212 436 443
  Adding insn 447 to worklist
processing block 70 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 207 209 212 436 443 444
  Adding insn 445 to worklist
  Adding insn 868 to worklist
  Adding insn 867 to worklist
  Adding insn 443 to worklist
processing block 69 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 207 209 436
  Adding insn 440 to worklist
  Adding insn 439 to worklist
  Adding insn 438 to worklist
processing block 68 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 207 209 436
  Adding insn 436 to worklist
  Adding insn 435 to worklist
  Adding insn 434 to worklist
processing block 76 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 209
  Adding insn 34 to worklist
processing block 116 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 207 209 435 436
  Adding insn 703 to worklist
  Adding insn 701 to worklist
  Adding insn 874 to worklist
  Adding insn 873 to worklist
  Adding insn 698 to worklist
  Adding insn 696 to worklist
  Adding insn 693 to worklist
  Adding insn 690 to worklist
processing block 115 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 117 123 136 186
processing block 126 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 165
  Adding insn 764 to worklist
processing block 127 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136
  Adding insn 770 to worklist
processing block 67 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 117 123 136 186
  Adding insn 427 to worklist
processing block 66 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 117 123 136 186
  Adding insn 425 to worklist
processing block 65 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 117 123 136 186
  Adding insn 423 to worklist
processing block 64 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 117 123 136 186
  Adding insn 420 to worklist
processing block 63 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 117 123 136 186 187
  Adding insn 417 to worklist
processing block 62 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 117 123 136 186 187
  Adding insn 413 to worklist
processing block 61 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 117 123 136 186 187
  Adding insn 31 to worklist
  Adding insn 30 to worklist
  Adding insn 408 to worklist
processing block 60 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 117 123 136 186 187
  Adding insn 404 to worklist
processing block 59 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 117 123 136 186 187
  Adding insn 402 to worklist
processing block 58 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 117 123 136 186 187
  Adding insn 400 to worklist
processing block 57 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 117 123 136 186 187
  Adding insn 29 to worklist
processing block 114 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 117 123 136 186
  Adding insn 46 to worklist
processing block 56 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 117 123 136 187
  Adding insn 396 to worklist
  Adding insn 395 to worklist
  Adding insn 393 to worklist
  Adding insn 391 to worklist
  Adding insn 390 to worklist
  Adding insn 389 to worklist
  Adding insn 388 to worklist
  Adding insn 387 to worklist
  Adding insn 386 to worklist
processing block 55 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 427 428
  Adding insn 383 to worklist
processing block 53 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 203 427 428
  Adding insn 372 to worklist
  Adding insn 371 to worklist
  Adding insn 363 to worklist
processing block 52 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 120 123 136 203 427 428 438
  Adding insn 27 to worklist
processing block 51 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 120 123 136 203 427 428 438
  Adding insn 356 to worklist
processing block 50 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 120 123 136 203 427 428 438
  Adding insn 353 to worklist
processing block 49 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 120 123 136 192 203 427 428 438 441
  Adding insn 351 to worklist
processing block 48 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 120 123 136 192 203 427 428 438 441 442
  Adding insn 349 to worklist
  Adding insn 866 to worklist
  Adding insn 865 to worklist
  Adding insn 347 to worklist
processing block 47 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 192 203 427 428 438
  Adding insn 344 to worklist
  Adding insn 343 to worklist
  Adding insn 342 to worklist
processing block 46 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 192 203 427 428 438
  Adding insn 340 to worklist
  Adding insn 339 to worklist
  Adding insn 338 to worklist
processing block 54 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 203 427 428
  Adding insn 28 to worklist
processing block 113 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 192 203 427 428 437 438
  Adding insn 679 to worklist
  Adding insn 677 to worklist
  Adding insn 872 to worklist
  Adding insn 871 to worklist
  Adding insn 674 to worklist
  Adding insn 672 to worklist
  Adding insn 669 to worklist
  Adding insn 666 to worklist
  Adding insn 663 to worklist
processing block 112 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 203 427 428
processing block 45 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 203 427 428
  Adding insn 331 to worklist
processing block 44 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 203 427 428
  Adding insn 329 to worklist
processing block 43 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 203 427 428
  Adding insn 327 to worklist
processing block 42 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 203 427 428
  Adding insn 324 to worklist
processing block 41 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 189 203 427 428
  Adding insn 321 to worklist
processing block 40 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 189 203 427 428
  Adding insn 317 to worklist
processing block 39 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 189 203 427 428
  Adding insn 25 to worklist
  Adding insn 24 to worklist
  Adding insn 312 to worklist
processing block 38 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 189 203 427 428
  Adding insn 308 to worklist
processing block 37 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 189 203 427 428
  Adding insn 306 to worklist
processing block 36 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 189 203 427 428
  Adding insn 304 to worklist
processing block 35 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 189 203 427 428
  Adding insn 23 to worklist
processing block 111 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 203 427 428
  Adding insn 44 to worklist
processing block 34 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 189 427 428
  Adding insn 300 to worklist
  Adding insn 864 to worklist
  Adding insn 863 to worklist
  Adding insn 298 to worklist
  Adding insn 296 to worklist
  Adding insn 294 to worklist
  Adding insn 293 to worklist
  Adding insn 291 to worklist
  Adding insn 290 to worklist
  Adding insn 289 to worklist
  Adding insn 288 to worklist
  Adding insn 287 to worklist
  Adding insn 286 to worklist
  Adding insn 285 to worklist
  Adding insn 284 to worklist
  Adding insn 283 to worklist
processing block 33 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 106 122 123 136 189
  Adding insn 22 to worklist
  Adding insn 21 to worklist
  Adding insn 20 to worklist
  Adding insn 19 to worklist
processing block 101 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 83
  Adding insn 41 to worklist
processing block 32 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 106 136
  Adding insn 277 to worklist
processing block 130 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 106 136
processing block 30 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 104 106 135 136
  Adding insn 273 to worklist
  Adding insn 272 to worklist
  Adding insn 270 to worklist
  Adding insn 268 to worklist
  Adding insn 267 to worklist
  Adding insn 266 to worklist
  Adding insn 265 to worklist
  Adding insn 263 to worklist
processing block 29 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 104 106 135 136
  Adding insn 259 to worklist
  Adding insn 258 to worklist
  Adding insn 257 to worklist
  Adding insn 256 to worklist
  Adding insn 255 to worklist
  Adding insn 254 to worklist
processing block 129 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 104 106 135 136
processing block 28 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 104 106 135 136
  Adding insn 251 to worklist
  Adding insn 248 to worklist
processing block 27 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 104 106 135 136
  Adding insn 17 to worklist
  Adding insn 16 to worklist
processing block 31 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 106 136
  Adding insn 18 to worklist
processing block 26 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 104 106
  Adding insn 244 to worklist
  Adding insn 243 to worklist
  Adding insn 242 to worklist
  Adding insn 241 to worklist
  Adding insn 232 to worklist
  Adding insn 230 to worklist
  Adding insn 228 to worklist
processing block 25 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 252
  Adding insn 224 to worklist
  Adding insn 223 to worklist
processing block 24 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 102 125 252
  Adding insn 15 to worklist
  Adding insn 14 to worklist
  Adding insn 221 to worklist
processing block 23 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 252
  Adding insn 216 to worklist
processing block 22 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 247
  Adding insn 213 to worklist
processing block 21 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 101 247
  Adding insn 208 to worklist
  Adding insn 206 to worklist
  Adding insn 204 to worklist
  Adding insn 202 to worklist
  Adding insn 201 to worklist
  Adding insn 200 to worklist
  Adding insn 199 to worklist
  Adding insn 195 to worklist
  Adding insn 194 to worklist
  Adding insn 192 to worklist
  Adding insn 191 to worklist
processing block 20 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 101 247
  Adding insn 13 to worklist
processing block 19 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 94 240 247
  Adding insn 185 to worklist
  Adding insn 183 to worklist
  Adding insn 181 to worklist
  Adding insn 179 to worklist
  Adding insn 178 to worklist
  Adding insn 177 to worklist
  Adding insn 176 to worklist
  Adding insn 172 to worklist
  Adding insn 171 to worklist
  Adding insn 169 to worklist
  Adding insn 168 to worklist
processing block 18 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 94 240 247
  Adding insn 12 to worklist
  Adding insn 163 to worklist
processing block 17 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 247
  Adding insn 160 to worklist
processing block 16 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 247
  Adding insn 157 to worklist
  Adding insn 155 to worklist
  Adding insn 154 to worklist
  Adding insn 151 to worklist
  Adding insn 150 to worklist
  Adding insn 149 to worklist
  Adding insn 148 to worklist
  Adding insn 147 to worklist
  Adding insn 146 to worklist
processing block 15 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 167 175 431 432
  Adding insn 142 to worklist
  Adding insn 141 to worklist
  Adding insn 139 to worklist
  Adding insn 138 to worklist
  Adding insn 136 to worklist
  Adding insn 135 to worklist
  Adding insn 134 to worklist
  Adding insn 133 to worklist
  Adding insn 131 to worklist
  Adding insn 130 to worklist
  Adding insn 129 to worklist
processing block 124 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 167 175 431 432
  Adding insn 10 to worklist
processing block 14 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 167 431 432
  Adding insn 123 to worklist
  Adding insn 122 to worklist
  Adding insn 120 to worklist
  Adding insn 119 to worklist
processing block 13 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 431 432
  Adding insn 862 to worklist
  Adding insn 861 to worklist
processing block 12 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 431 432
  Adding insn 113 to worklist
processing block 11 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 167 431 432
  Adding insn 860 to worklist
  Adding insn 859 to worklist
processing block 123 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 167 431 432
  Adding insn 880 to worklist
  Adding insn 879 to worklist
processing block 10 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 167
  Adding insn 109 to worklist
  Adding insn 108 to worklist
  Adding insn 107 to worklist
  Adding insn 106 to worklist
processing block 9 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
  Adding insn 7 to worklist
processing block 125 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame]
processing block 8 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame]
  Adding insn 102 to worklist
  Adding insn 100 to worklist
  Adding insn 98 to worklist
  Adding insn 97 to worklist
  Adding insn 96 to worklist
  Adding insn 95 to worklist
  Adding insn 94 to worklist
  Adding insn 93 to worklist
processing block 7 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 151 159 429 430
  Adding insn 90 to worklist
  Adding insn 89 to worklist
  Adding insn 87 to worklist
  Adding insn 86 to worklist
  Adding insn 84 to worklist
  Adding insn 83 to worklist
  Adding insn 82 to worklist
  Adding insn 81 to worklist
  Adding insn 79 to worklist
  Adding insn 78 to worklist
  Adding insn 77 to worklist
processing block 122 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 151 159 429 430
  Adding insn 6 to worklist
processing block 6 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 151 429 430
  Adding insn 71 to worklist
  Adding insn 70 to worklist
  Adding insn 68 to worklist
  Adding insn 67 to worklist
processing block 5 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 429 430
  Adding insn 858 to worklist
  Adding insn 857 to worklist
processing block 4 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 429 430
  Adding insn 61 to worklist
processing block 3 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 151 429 430
  Adding insn 856 to worklist
  Adding insn 855 to worklist
processing block 121 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 151 429 430
  Adding insn 878 to worklist
  Adding insn 877 to worklist
processing block 2 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame] 151
  Adding insn 57 to worklist
  Adding insn 56 to worklist
  Adding insn 55 to worklist
  Adding insn 54 to worklist
DCE: Deleting insn 763
deleting insn with uid = 763.
DCE: Deleting insn 711
deleting insn with uid = 711.
DCE: Deleting insn 648
deleting insn with uid = 648.
DCE: Deleting insn 585
deleting insn with uid = 585.
DCE: Deleting insn 573
deleting insn with uid = 573.
DCE: Deleting insn 546
deleting insn with uid = 546.
DCE: Deleting insn 462
deleting insn with uid = 462.
DCE: Deleting insn 394
deleting insn with uid = 394.
DCE: Deleting insn 366
deleting insn with uid = 366.
DCE: Deleting insn 295
deleting insn with uid = 295.
DCE: Deleting insn 281
deleting insn with uid = 281.
DCE: Deleting insn 227
deleting insn with uid = 227.
DCE: Deleting insn 193
deleting insn with uid = 193.
DCE: Deleting insn 190
deleting insn with uid = 190.
DCE: Deleting insn 189
deleting insn with uid = 189.
DCE: Deleting insn 170
deleting insn with uid = 170.
DCE: Deleting insn 167
deleting insn with uid = 167.
DCE: Deleting insn 166
deleting insn with uid = 166.
DCE: Deleting insn 145
deleting insn with uid = 145.
df_worklist_dataflow_doublequeue:n_basic_blocks 132 n_edges 204 count 145 (  1.1)
df_worklist_dataflow_doublequeue:n_basic_blocks 132 n_edges 204 count 147 (  1.1)
SET hash table (221 buckets, 65 entries)
Index 0 (hash value 209)
  (reg:SI 430 [ flag+4 ]) := (const_int 0 [0])
Index 1 (hash value 208)
  (reg:SI 429 [ flag ]) := (const_int 1 [0x1])
Index 2 (hash value 209)
  (reg:SI 430 [ flag+4 ]) := (const_int -1 [0xffffffffffffffff])
Index 3 (hash value 208)
  (reg:SI 429 [ flag ]) := (const_int -1 [0xffffffffffffffff])
Index 4 (hash value 151)
  (reg/v:QI 151 [ ch ]) := (const_int 45 [0x2d])
Index 5 (hash value 87)
  (reg/v:SI 87 [ i ]) := (const_int 1 [0x1])
Index 6 (hash value 211)
  (reg:SI 432 [ flag+4 ]) := (const_int 0 [0])
Index 7 (hash value 210)
  (reg:SI 431 [ flag ]) := (const_int 1 [0x1])
Index 8 (hash value 211)
  (reg:SI 432 [ flag+4 ]) := (const_int -1 [0xffffffffffffffff])
Index 9 (hash value 210)
  (reg:SI 431 [ flag ]) := (const_int -1 [0xffffffffffffffff])
Index 10 (hash value 167)
  (reg/v:QI 167 [ ch ]) := (const_int 45 [0x2d])
Index 11 (hash value 94)
  (reg/v:SI 94 [ i ]) := (const_int 1 [0x1])
Index 12 (hash value 78)
  (reg:SI 299) := (const_int 19260817 [0x125e591])
Index 13 (hash value 101)
  (reg/v:SI 101 [ i ]) := (reg/v:SI 247 [ i ])
Index 14 (hash value 92)
  (reg:SI 313) := (const_int 19260817 [0x125e591])
Index 15 (hash value 125)
  (reg:SI 125 [ D.83218 ]) := (const_int 1 [0x1])
Index 16 (hash value 102)
  (reg:SI 102 [ D.83218 ]) := (reg/v:SI 247 [ i ])
Index 17 (hash value 136)
  (reg/v:DI 136 [ tmod ]) := (const_int 1 [0x1])
Index 18 (hash value 135)
  (reg/v:DI 135 [ a ]) := (const_int 19260817 [0x125e591])
Index 19 (hash value 218)
  (reg:SI 439 [ D.83220 ]) := (const_int 0 [0])
Index 20 (hash value 115)
  (reg:SI 336) := (const_int 0 [0])
Index 21 (hash value 104)
  (reg:SI 325) := (const_int 0 [0])
Index 22 (hash value 123)
  (reg/v:SI 123 [ i ]) := (const_int 1 [0x1])
Index 23 (hash value 83)
  (reg/v:SI 83 [ tmp ]) := (const_int 0 [0])
Index 24 (hash value 189)
  (reg/f:SI 189 [ __i$_M_node ]) := (const_int 0 [0])
Index 25 (hash value 122)
  (reg:SI 122 [ D.83218 ]) := (reg:SI 106 [ D.83218 ])
Index 26 (hash value 203)
  (reg/f:SI 203 [ __i$_M_node ]) := (const:SI (plus:SI (symbol_ref:SI ("s") [flags 0x2]  <var_decl 06d9cd20 s>)
        (const_int 4 [0x4])))
Index 27 (hash value 189)
  (reg/f:SI 189 [ __i$_M_node ]) := (reg/f:SI 183 [ __i$_M_node ])
Index 28 (hash value 131)
  (reg:QI 352 [ D.83221 ]) := (const_int 0 [0])
Index 29 (hash value 120)
  (reg/v:QI 120 [ __insert_left ]) := (const_int 1 [0x1])
Index 30 (hash value 133)
  (reg:QI 354 [ D.83221 ]) := (const_int 0 [0])
Index 31 (hash value 120)
  (reg/v:QI 120 [ __insert_left ]) := (const_int 0 [0])
Index 32 (hash value 203)
  (reg/f:SI 203 [ __i$_M_node ]) := (reg:SI 437 [ __res ])
Index 33 (hash value 217)
  (reg:SI 438 [ __res+4 ]) := (const_int 0 [0])
Index 34 (hash value 186)
  (reg/f:SI 186 [ __i$_M_node ]) := (const:SI (plus:SI (symbol_ref:SI ("s") [flags 0x2]  <var_decl 06d9cd20 s>)
        (const_int 4 [0x4])))
Index 35 (hash value 187)
  (reg/f:SI 187 [ __i$_M_node ]) := (reg/f:SI 201 [ __i$_M_node ])
Index 36 (hash value 187)
  (reg/f:SI 187 [ __i$_M_node ]) := (const_int 0 [0])
Index 37 (hash value 149)
  (reg:QI 370 [ D.83221 ]) := (const_int 0 [0])
Index 38 (hash value 212)
  (reg/v:QI 212 [ __insert_left ]) := (const_int 1 [0x1])
Index 39 (hash value 151)
  (reg:QI 372 [ D.83221 ]) := (const_int 0 [0])
Index 40 (hash value 212)
  (reg/v:QI 212 [ __insert_left ]) := (const_int 0 [0])
Index 41 (hash value 209)
  (reg/f:SI 209 [ __i$_M_node ]) := (reg:SI 435 [ __res ])
Index 42 (hash value 215)
  (reg:SI 436 [ __res+4 ]) := (const_int 0 [0])
Index 43 (hash value 181)
  (reg/f:SI 181 [ __i$_M_node ]) := (const:SI (plus:SI (symbol_ref:SI ("s") [flags 0x2]  <var_decl 06d9cd20 s>)
        (const_int 4 [0x4])))
Index 44 (hash value 165)
  (reg/f:SI 165 [ __i$_M_node ]) := (reg/f:SI 218 [ __i$_M_node ])
Index 45 (hash value 165)
  (reg/f:SI 165 [ __i$_M_node ]) := (const_int 0 [0])
Index 46 (hash value 161)
  (reg:QI 382 [ D.83221 ]) := (const_int 0 [0])
Index 47 (hash value 8)
  (reg/v:QI 229 [ __insert_left ]) := (const_int 1 [0x1])
Index 48 (hash value 163)
  (reg:QI 384 [ D.83221 ]) := (const_int 0 [0])
Index 49 (hash value 8)
  (reg/v:QI 229 [ __insert_left ]) := (const_int 0 [0])
Index 50 (hash value 181)
  (reg/f:SI 181 [ __i$_M_node ]) := (reg:SI 433 [ __res ])
Index 51 (hash value 213)
  (reg:SI 434 [ __res+4 ]) := (const_int 0 [0])
Index 52 (hash value 191)
  (reg:SI 412 [ D.83218 ]) := (const_int 0 [0])
Index 53 (hash value 132)
  (reg/v:SI 132 [ i ]) := (const_int 0 [0])
Index 54 (hash value 203)
  (reg/f:SI 203 [ __i$_M_node ]) := (const:SI (plus:SI (symbol_ref:SI ("s") [flags 0x2]  <var_decl 06d9cd20 s>)
        (const_int 4 [0x4])))
Index 55 (hash value 203)
  (reg/f:SI 203 [ __i$_M_node ]) := (const:SI (plus:SI (symbol_ref:SI ("s") [flags 0x2]  <var_decl 06d9cd20 s>)
        (const_int 4 [0x4])))
Index 56 (hash value 192)
  (reg/f:SI 192 [ __res$second ]) := (reg:SI 438 [ __res+4 ])
Index 57 (hash value 186)
  (reg/f:SI 186 [ __i$_M_node ]) := (const:SI (plus:SI (symbol_ref:SI ("s") [flags 0x2]  <var_decl 06d9cd20 s>)
        (const_int 4 [0x4])))
Index 58 (hash value 186)
  (reg/f:SI 186 [ __i$_M_node ]) := (const:SI (plus:SI (symbol_ref:SI ("s") [flags 0x2]  <var_decl 06d9cd20 s>)
        (const_int 4 [0x4])))
Index 59 (hash value 207)
  (reg/f:SI 207 [ __res$second ]) := (reg:SI 436 [ __res+4 ])
Index 60 (hash value 181)
  (reg/f:SI 181 [ __i$_M_node ]) := (const:SI (plus:SI (symbol_ref:SI ("s") [flags 0x2]  <var_decl 06d9cd20 s>)
        (const_int 4 [0x4])))
Index 61 (hash value 181)
  (reg/f:SI 181 [ __i$_M_node ]) := (const:SI (plus:SI (symbol_ref:SI ("s") [flags 0x2]  <var_decl 06d9cd20 s>)
        (const_int 4 [0x4])))
Index 62 (hash value 4)
  (reg/f:SI 225 [ __res$second ]) := (reg:SI 434 [ __res+4 ])
Index 63 (hash value 159)
  (reg/v:DI 159 [ re ]) := (const_int 0 [0])
Index 64 (hash value 175)
  (reg/v:DI 175 [ re ]) := (const_int 0 [0])

rescanning insn with uid = 349.
GLOBAL COPY-PROP: Replacing reg 192 in insn 349 with reg 438
rescanning insn with uid = 351.
GLOBAL COPY-PROP: Replacing reg 192 in insn 351 with reg 438
rescanning insn with uid = 353.
GLOBAL COPY-PROP: Replacing reg 192 in insn 353 with reg 438
rescanning insn with uid = 445.
GLOBAL COPY-PROP: Replacing reg 207 in insn 445 with reg 436
rescanning insn with uid = 447.
GLOBAL COPY-PROP: Replacing reg 207 in insn 447 with reg 436
rescanning insn with uid = 449.
GLOBAL COPY-PROP: Replacing reg 207 in insn 449 with reg 436
rescanning insn with uid = 529.
GLOBAL COPY-PROP: Replacing reg 225 in insn 529 with reg 434
rescanning insn with uid = 531.
GLOBAL COPY-PROP: Replacing reg 225 in insn 531 with reg 434
rescanning insn with uid = 533.
GLOBAL COPY-PROP: Replacing reg 225 in insn 533 with reg 434
CPROP of int main(), 132 basic blocks, 3848 bytes needed, 35 local const props, 0 local copy props, 0 global const props, 9 global copy props



try_optimize_cfg iteration 1

verify found no changes in insn with uid = 252.
Edge 28->29 redirected to 31
deleting block 29
Redirecting fallthru edge 31->32 to 34
deleting block 32
verify found no changes in insn with uid = 325.
Edge 44->115 redirected to 116
verify found no changes in insn with uid = 421.
Edge 66->118 redirected to 119
verify found no changes in insn with uid = 505.
Edge 87->122 redirected to 123
Redirecting fallthru edge 109->110 to 131
deleting block 110
Deleted label in block 111.
Redirecting fallthru edge 113->111 to 131
deleting block 115
deleting block 118
deleting block 122


try_optimize_cfg iteration 2

deleting block 111


try_optimize_cfg iteration 3



try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns


int main()

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 29 [mm0] 30 [mm1] 31 [mm2]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 7[sp] 17[flags]
;;  ref usage 	r0={26d,14u} r1={28d,3u} r2={31d,6u} r6={1d,124u} r7={13d,236u} r8={24d} r9={24d} r10={24d} r11={24d} r12={24d} r13={24d} r14={24d} r15={24d} r16={1d,123u} r17={200d,79u} r18={24d} r19={24d} r20={1d,132u,3e} r21={25d} r22={25d} r23={25d} r24={24d} r25={24d} r26={24d} r27={24d} r28={24d} r29={25d} r30={25d} r31={25d} r32={24d} r33={24d} r34={24d} r35={24d} r36={24d} r37={24d} r38={24d} r39={24d} r40={24d} r41={24d} r42={24d} r43={24d} r44={24d} r45={24d} r46={24d} r47={24d} r48={24d} r49={24d} r50={24d} r51={24d} r52={24d} r53={24d} r54={24d} r55={24d} r56={24d} r57={24d} r58={24d} r59={24d} r60={24d} r61={24d} r62={24d} r63={24d} r64={24d} r65={24d} r66={24d} r67={24d} r68={24d} r69={24d} r70={24d} r71={24d} r72={24d} r73={24d} r74={24d} r75={24d} r76={24d} r83={3d,4u} r84={1d,2u} r85={1d,1u} r87={2d,3u} r94={2d,6u,1e} r101={2d,6u,1e} r102={2d,3u} r104={2d,5u} r106={2d,6u} r112={1d,14u} r113={1d,1u} r117={1d,7u} r120={3d,1u} r122={2d,3u} r123={2d,5u} r125={2d,4u} r129={2d,3u} r132={2d,3u} r135={3d,9u} r136={4d,11u} r149={1d,2u} r150={1d,2u} r151={3d,2u} r158={1d,1u} r159={2d,5u} r160={1d,2u} r165={4d,8u} r166={1d,2u} r167={3d,2u} r174={1d,1u} r175={2d,5u} r176={1d,2u} r181={5d,13u} r183={1d,1u} r186={3d,6u} r187={3d,8u} r189={4d,8u} r192={1d} r201={1d,1u} r203={5d,13u} r207={1d} r209={2d,8u} r212={3d,1u} r218={1d,1u} r225={1d} r229={3d,1u} r240={1d,1u} r247={1d,6u} r252={5d,4u} r254={1d,1u} r258={1d,1u} r261={1d,1u} r262={1d,1u} r263={1d,1u} r264={1d,1u} r265={1d,1u} r266={1d,1u} r267={1d,1u} r268={1d,1u} r269={1d,1u} r270={1d,1u} r271={1d,1u} r272={2d,4u} r273={1d,1u} r274={1d,1u} r275={1d,1u} r276={1d,1u} r277={1d,1u} r278={1d,1u} r279={1d,1u} r280={1d,1u} r281={1d,1u} r283={1d,1u} r284={1d,1u} r285={1d,1u} r286={2d,3u} r287={1d,1u} r290={1d,1u} r291={1d,1u} r293={1d,1u} r294={1d,1u} r298={2d,3u} r299={1d,1u} r300={1d,1u} r301={1d,1u} r304={1d,1u} r305={1d,1u} r307={1d,1u} r308={1d,1u} r312={2d,3u} r313={1d,1u} r314={1d,1u} r315={1d,1u} r317={1d,1u} r318={1d} r320={1d,1u} r325={1d,1u} r328={1d,1u} r329={1d,1u} r330={1d,1u} r331={1d,1u} r332={1d,1u} r334={1d,1u} r335={1d,1u} r336={1d,1u} r339={1d,3u} r340={1d,1u} r341={1d,1u} r342={1d,1u} r343={1d,1u} r344={1d,1u} r345={2d,3u} r346={1d,1u} r347={1d,1u} r350={1d,2u} r352={1d,1u} r354={1d,1u} r356={1d,1u} r361={1d,1u} r362={1d,1u} r363={1d,1u} r364={1d,1u} r365={1d,1u} r366={2d,3u} r367={1d,1u} r370={1d,1u} r372={1d,1u} r374={1d,1u} r379={1d,1u} r380={1d,1u} r382={1d,1u} r384={1d,1u} r386={1d,1u} r391={1d,1u} r392={1d,1u} r393={1d,1u} r397={1d,1u} r398={1d,1u} r399={1d,1u} r400={1d,1u} r403={1d,1u,1e} r404={1d,1u} r406={1d,1u} r409={1d,1u,1e} r410={1d,1u} r412={1d,1u} r414={1d,1u} r417={1d,1u,1e} r418={1d,1u} r420={1d,1u} r421={1d,1u} r422={1d,1u} r424={1d,1u} r427={1d,2u} r428={1d,1u} r429={3d,2u} r430={3d,1u} r431={3d,2u} r432={3d,1u} r433={1d,2u} r434={1d,7u} r435={1d,2u} r436={1d,7u} r437={1d,2u} r438={1d,7u} r439={1d,1u} r441={1d,1u} r442={1d,2u} r443={1d,1u} r444={1d,2u} r445={1d,1u} r446={1d,2u} 
;;    total ref usage 3223{2130d,1085u,8e} in 483{459 regular + 24 call} insns.
;; basic block 2, loop depth 0, count 0, freq 9, maybe hot
;;  prev block 0, next block 3, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 149 151 261
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 0 [ax] 17 [flags] 149 151 261
;; live  kill	 17 [flags]
(note 51 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 51 3 2 NOTE_INSN_FUNCTION_BEG)
(call_insn 3 2 53 2 (call (mem:QI (symbol_ref:SI ("__main") [flags 0x43]) [0  S1 A8])
        (const_int 0 [0])) D:\LHX\7.5 contest\t1.cpp:32 641 {*call}
     (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
        (nil))
    (nil))
(call_insn 53 3 54 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("getchar") [flags 0x43]  <function_decl 0267a780 getchar>) [0 getchar S1 A8])
            (const_int 0 [0]))) D:\LHX\7.5 contest\t1.cpp:11 648 {*call_value}
     (nil)
    (nil))
(insn 54 53 55 2 (set (reg:SI 149 [ D.83218 ])
        (reg:SI 0 ax)) D:\LHX\7.5 contest\t1.cpp:11 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 55 54 56 2 (set (reg/v:QI 151 [ ch ])
        (subreg:QI (reg:SI 149 [ D.83218 ]) 0)) D:\LHX\7.5 contest\t1.cpp:11 93 {*movqi_internal}
     (nil))
(insn 56 55 57 2 (parallel [
            (set (reg:QI 261 [ D.83228 ])
                (plus:QI (subreg:QI (reg:SI 149 [ D.83218 ]) 0)
                    (const_int -48 [0xffffffffffffffd0])))
            (clobber (reg:CC 17 flags))
        ]) D:\LHX\7.5 contest\t1.cpp:12 224 {*addqi_1}
     (expr_list:REG_DEAD (reg:SI 149 [ D.83218 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 57 56 58 2 (set (reg:CC 17 flags)
        (compare:CC (reg:QI 261 [ D.83228 ])
            (const_int 9 [0x9]))) D:\LHX\7.5 contest\t1.cpp:12 5 {*cmpqi_1}
     (expr_list:REG_DEAD (reg:QI 261 [ D.83228 ])
        (nil)))
(jump_insn 58 57 59 2 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 780)
            (pc))) D:\LHX\7.5 contest\t1.cpp:12 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 900 (nil)))
 -> 780)
;;  succ:       3 [91.0%]  (FALLTHRU)
;;              124 [9.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 151
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 151

;; basic block 3, loop depth 0, count 0, freq 8, maybe hot
;;  prev block 2, next block 4, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [91.0%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u11(6){ }u12(7){ }u13(16){ }u14(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 151
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 429 430
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 151
;; live  gen 	 429 430
;; live  kill	
(note 59 58 855 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 855 59 856 3 (set (reg:SI 429 [ flag ])
        (const_int 1 [0x1])) D:\LHX\7.5 contest\t1.cpp:12 90 {*movsi_internal}
     (nil))
(insn 856 855 69 3 (set (reg:SI 430 [ flag+4 ])
        (const_int 0 [0])) D:\LHX\7.5 contest\t1.cpp:12 90 {*movsi_internal}
     (nil))
;;  succ:       4 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 151 429 430
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 151 429 430

;; basic block 4, loop depth 1, count 0, freq 92, maybe hot
;;  prev block 3, next block 5, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       3 [100.0%]  (FALLTHRU)
;;              6 [91.0%]  (DFS_BACK)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u15(6){ }u16(7){ }u17(16){ }u18(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 151 429 430
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 151
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 151 429 430
;; live  gen 	 17 [flags]
;; live  kill	
(code_label 69 856 60 4 117 "" [1 uses])
(note 60 69 61 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 61 60 62 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:QI 151 [ ch ])
            (const_int 45 [0x2d]))) D:\LHX\7.5 contest\t1.cpp:13 5 {*cmpqi_1}
     (expr_list:REG_DEAD (reg/v:QI 151 [ ch ])
        (nil)))
(jump_insn 62 61 63 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 64)
            (pc))) D:\LHX\7.5 contest\t1.cpp:13 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 7200 (nil)))
 -> 64)
;;  succ:       5 [28.0%]  (FALLTHRU)
;;              6 [72.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 429 430
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 429 430

;; basic block 5, loop depth 1, count 0, freq 26, maybe hot
;;  prev block 4, next block 6, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       4 [28.0%]  (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u21(6){ }u22(7){ }u23(16){ }u24(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 429 430
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 429 430
;; live  kill	
(note 63 62 857 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 857 63 858 5 (set (reg:SI 429 [ flag ])
        (const_int -1 [0xffffffffffffffff])) D:\LHX\7.5 contest\t1.cpp:13 90 {*movsi_internal}
     (nil))
(insn 858 857 64 5 (set (reg:SI 430 [ flag+4 ])
        (const_int -1 [0xffffffffffffffff])) D:\LHX\7.5 contest\t1.cpp:13 90 {*movsi_internal}
     (nil))
;;  succ:       6 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 429 430
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 429 430

;; basic block 6, loop depth 1, count 0, freq 92, maybe hot
;;  prev block 5, next block 7, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       4 [72.0%] 
;;              5 [100.0%]  (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u25(6){ }u26(7){ }u27(16){ }u28(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 429 430
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 150 151 262
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 429 430
;; live  gen 	 0 [ax] 17 [flags] 150 151 262
;; live  kill	 17 [flags]
(code_label 64 858 65 6 116 "" [1 uses])
(note 65 64 66 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(call_insn 66 65 67 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("getchar") [flags 0x43]  <function_decl 0267a780 getchar>) [0 getchar S1 A8])
            (const_int 0 [0]))) D:\LHX\7.5 contest\t1.cpp:14 648 {*call_value}
     (nil)
    (nil))
(insn 67 66 68 6 (set (reg:SI 150 [ D.83218 ])
        (reg:SI 0 ax)) D:\LHX\7.5 contest\t1.cpp:14 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 68 67 70 6 (set (reg/v:QI 151 [ ch ])
        (subreg:QI (reg:SI 150 [ D.83218 ]) 0)) D:\LHX\7.5 contest\t1.cpp:14 93 {*movqi_internal}
     (nil))
(insn 70 68 71 6 (parallel [
            (set (reg:QI 262 [ D.83228 ])
                (plus:QI (subreg:QI (reg:SI 150 [ D.83218 ]) 0)
                    (const_int -48 [0xffffffffffffffd0])))
            (clobber (reg:CC 17 flags))
        ]) D:\LHX\7.5 contest\t1.cpp:12 224 {*addqi_1}
     (expr_list:REG_DEAD (reg:SI 150 [ D.83218 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 71 70 72 6 (set (reg:CC 17 flags)
        (compare:CC (reg:QI 262 [ D.83228 ])
            (const_int 9 [0x9]))) D:\LHX\7.5 contest\t1.cpp:12 5 {*cmpqi_1}
     (expr_list:REG_DEAD (reg:QI 262 [ D.83228 ])
        (nil)))
(jump_insn 72 71 88 6 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 69)
            (pc))) D:\LHX\7.5 contest\t1.cpp:12 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 9100 (nil)))
 -> 69)
;;  succ:       4 [91.0%]  (DFS_BACK)
;;              125 [9.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 151 429 430
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 151 429 430

;; basic block 7, loop depth 1, count 0, freq 92, maybe hot
;;  prev block 6, next block 8, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       125 [100.0%]  (FALLTHRU)
;;              7 [91.0%]  (DFS_BACK)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u35(6){ }u36(7){ }u37(16){ }u38(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 151 159 429 430
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 151 159
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 151 158 159 160 263 264 265 266 267 268
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 151 159 429 430
;; live  gen 	 0 [ax] 17 [flags] 151 158 159 160 263 264 265 266 267 268
;; live  kill	 17 [flags]
(code_label 88 72 76 7 118 "" [1 uses])
(note 76 88 77 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 77 76 78 7 (parallel [
            (set (reg:DI 263 [ D.83229 ])
                (ashift:DI (reg/v:DI 159 [ re ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) D:\LHX\7.5 contest\t1.cpp:16 488 {*ashldi3_doubleword}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 78 77 79 7 (parallel [
            (set (reg:DI 264 [ D.83229 ])
                (ashift:DI (reg/v:DI 159 [ re ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) D:\LHX\7.5 contest\t1.cpp:16 488 {*ashldi3_doubleword}
     (expr_list:REG_DEAD (reg/v:DI 159 [ re ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 79 78 81 7 (parallel [
            (set (reg:DI 265 [ D.83229 ])
                (plus:DI (reg:DI 263 [ D.83229 ])
                    (reg:DI 264 [ D.83229 ])))
            (clobber (reg:CC 17 flags))
        ]) D:\LHX\7.5 contest\t1.cpp:16 215 {*adddi3_doubleword}
     (expr_list:REG_DEAD (reg:DI 264 [ D.83229 ])
        (expr_list:REG_DEAD (reg:DI 263 [ D.83229 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 81 79 82 7 (set (reg:SI 267 [ ch ])
        (sign_extend:SI (reg/v:QI 151 [ ch ]))) D:\LHX\7.5 contest\t1.cpp:16 148 {extendqisi2}
     (expr_list:REG_DEAD (reg/v:QI 151 [ ch ])
        (nil)))
(insn 82 81 83 7 (parallel [
            (set (reg:DI 266 [ D.83229 ])
                (sign_extend:DI (reg:SI 267 [ ch ])))
            (clobber (reg:CC 17 flags))
            (clobber (scratch:SI))
        ]) D:\LHX\7.5 contest\t1.cpp:16 143 {extendsidi2_1}
     (expr_list:REG_DEAD (reg:SI 267 [ ch ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 83 82 84 7 (parallel [
            (set (reg:DI 158 [ D.83229 ])
                (plus:DI (reg:DI 265 [ D.83229 ])
                    (reg:DI 266 [ D.83229 ])))
            (clobber (reg:CC 17 flags))
        ]) D:\LHX\7.5 contest\t1.cpp:16 215 {*adddi3_doubleword}
     (expr_list:REG_DEAD (reg:DI 266 [ D.83229 ])
        (expr_list:REG_DEAD (reg:DI 265 [ D.83229 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 84 83 85 7 (parallel [
            (set (reg/v:DI 159 [ re ])
                (plus:DI (reg:DI 158 [ D.83229 ])
                    (const_int -48 [0xffffffffffffffd0])))
            (clobber (reg:CC 17 flags))
        ]) D:\LHX\7.5 contest\t1.cpp:16 215 {*adddi3_doubleword}
     (expr_list:REG_DEAD (reg:DI 158 [ D.83229 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(call_insn 85 84 86 7 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("getchar") [flags 0x43]  <function_decl 0267a780 getchar>) [0 getchar S1 A8])
            (const_int 0 [0]))) D:\LHX\7.5 contest\t1.cpp:16 648 {*call_value}
     (nil)
    (nil))
(insn 86 85 87 7 (set (reg:SI 160 [ D.83218 ])
        (reg:SI 0 ax)) D:\LHX\7.5 contest\t1.cpp:16 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 87 86 89 7 (set (reg/v:QI 151 [ ch ])
        (subreg:QI (reg:SI 160 [ D.83218 ]) 0)) D:\LHX\7.5 contest\t1.cpp:16 93 {*movqi_internal}
     (nil))
(insn 89 87 90 7 (parallel [
            (set (reg:QI 268 [ D.83228 ])
                (plus:QI (subreg:QI (reg:SI 160 [ D.83218 ]) 0)
                    (const_int -48 [0xffffffffffffffd0])))
            (clobber (reg:CC 17 flags))
        ]) D:\LHX\7.5 contest\t1.cpp:16 224 {*addqi_1}
     (expr_list:REG_DEAD (reg:SI 160 [ D.83218 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 90 89 91 7 (set (reg:CC 17 flags)
        (compare:CC (reg:QI 268 [ D.83228 ])
            (const_int 9 [0x9]))) D:\LHX\7.5 contest\t1.cpp:16 5 {*cmpqi_1}
     (expr_list:REG_DEAD (reg:QI 268 [ D.83228 ])
        (nil)))
(jump_insn 91 90 92 7 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 88)
            (pc))) D:\LHX\7.5 contest\t1.cpp:16 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 9100 (nil)))
 -> 88)
;;  succ:       7 [91.0%]  (DFS_BACK)
;;              8 [9.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 151 159 429 430
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 151 159 429 430

;; basic block 8, loop depth 0, count 0, freq 8, maybe hot
;;  prev block 7, next block 9, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       7 [9.0%]  (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u54(6){ }u55(7){ }u56(16){ }u57(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 159 429 430
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 159 429 430
;; lr  def 	 17 [flags] 85 269 270 271 272 273
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 159 429 430
;; live  gen 	 17 [flags] 85 269 270 271 272 273
;; live  kill	 17 [flags]
(note 92 91 93 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 93 92 94 8 (parallel [
            (set (reg:SI 269)
                (mult:SI (reg:SI 430 [ flag+4 ])
                    (subreg:SI (reg/v:DI 159 [ re ]) 0)))
            (clobber (reg:CC 17 flags))
        ]) D:\LHX\7.5 contest\t1.cpp:17 306 {*mulsi3_1}
     (expr_list:REG_DEAD (reg:SI 430 [ flag+4 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 94 93 95 8 (parallel [
            (set (reg:SI 270)
                (mult:SI (subreg:SI (reg/v:DI 159 [ re ]) 4)
                    (reg:SI 429 [ flag ])))
            (clobber (reg:CC 17 flags))
        ]) D:\LHX\7.5 contest\t1.cpp:17 306 {*mulsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 95 94 96 8 (parallel [
            (set (reg:SI 271)
                (plus:SI (reg:SI 269)
                    (reg:SI 270)))
            (clobber (reg:CC 17 flags))
        ]) D:\LHX\7.5 contest\t1.cpp:17 220 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 270)
        (expr_list:REG_DEAD (reg:SI 269)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 96 95 97 8 (parallel [
            (set (reg:DI 272 [ D.83229 ])
                (mult:DI (zero_extend:DI (reg:SI 429 [ flag ]))
                    (zero_extend:DI (subreg:SI (reg/v:DI 159 [ re ]) 0))))
            (clobber (reg:CC 17 flags))
        ]) D:\LHX\7.5 contest\t1.cpp:17 323 {*umulsidi3_1}
     (expr_list:REG_DEAD (reg:SI 429 [ flag ])
        (expr_list:REG_DEAD (reg/v:DI 159 [ re ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 97 96 98 8 (parallel [
            (set (reg:SI 273)
                (plus:SI (reg:SI 271)
                    (subreg:SI (reg:DI 272 [ D.83229 ]) 4)))
            (clobber (reg:CC 17 flags))
        ]) D:\LHX\7.5 contest\t1.cpp:17 220 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 271)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 98 97 100 8 (set (subreg:SI (reg:DI 272 [ D.83229 ]) 4)
        (reg:SI 273)) D:\LHX\7.5 contest\t1.cpp:17 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 273)
        (nil)))
(insn 100 98 101 8 (set (reg:SI 85 [ D.83218 ])
        (subreg:SI (reg:DI 272 [ D.83229 ]) 0)) D:\LHX\7.5 contest\t1.cpp:37 90 {*movsi_internal}
     (nil))
(insn 101 100 102 8 (set (mem/c:SI (symbol_ref:SI ("n") [flags 0x2]  <var_decl 06e5d660 n>) [21 n+0 S4 A32])
        (subreg:SI (reg:DI 272 [ D.83229 ]) 0)) D:\LHX\7.5 contest\t1.cpp:37 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:DI 272 [ D.83229 ])
        (nil)))
(insn 102 101 103 8 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 85 [ D.83218 ])
            (const_int 0 [0]))) D:\LHX\7.5 contest\t1.cpp:38 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 85 [ D.83218 ])
        (nil)))
(jump_insn 103 102 781 8 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 756)
            (pc))) D:\LHX\7.5 contest\t1.cpp:38 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (int_list:REG_BR_PROB 100 (nil)))
 -> 756)
;;  succ:       9 [99.0%]  (FALLTHRU)
;;              128 [1.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 9, loop depth 0, count 0, freq 8, maybe hot
;;  prev block 8, next block 10, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       8 [99.0%]  (FALLTHRU)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u74(6){ }u75(7){ }u76(16){ }u77(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 87
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 87
;; live  kill	
(note 781 103 7 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 7 781 156 9 (set (reg/v:SI 87 [ i ])
        (const_int 1 [0x1])) D:\LHX\7.5 contest\t1.cpp:38 90 {*movsi_internal}
     (nil))
;;  succ:       10 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87

;; basic block 10, loop depth 1, count 0, freq 900, maybe hot
;;  prev block 9, next block 11, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       9 [100.0%]  (FALLTHRU)
;;              16 [99.0%]  (DFS_BACK)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u78(6){ }u79(7){ }u80(16){ }u81(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 84 167 274
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; live  gen 	 0 [ax] 17 [flags] 84 167 274
;; live  kill	 17 [flags]
(code_label 156 7 104 10 124 "" [1 uses])
(note 104 156 105 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(call_insn 105 104 106 10 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("getchar") [flags 0x43]  <function_decl 0267a780 getchar>) [0 getchar S1 A8])
            (const_int 0 [0]))) D:\LHX\7.5 contest\t1.cpp:11 648 {*call_value}
     (nil)
    (nil))
(insn 106 105 107 10 (set (reg:SI 84 [ D.83218 ])
        (reg:SI 0 ax)) D:\LHX\7.5 contest\t1.cpp:11 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 107 106 108 10 (set (reg/v:QI 167 [ ch ])
        (subreg:QI (reg:SI 84 [ D.83218 ]) 0)) D:\LHX\7.5 contest\t1.cpp:11 93 {*movqi_internal}
     (nil))
(insn 108 107 109 10 (parallel [
            (set (reg:QI 274 [ D.83228 ])
                (plus:QI (subreg:QI (reg:SI 84 [ D.83218 ]) 0)
                    (const_int -48 [0xffffffffffffffd0])))
            (clobber (reg:CC 17 flags))
        ]) D:\LHX\7.5 contest\t1.cpp:12 224 {*addqi_1}
     (expr_list:REG_DEAD (reg:SI 84 [ D.83218 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 109 108 110 10 (set (reg:CC 17 flags)
        (compare:CC (reg:QI 274 [ D.83228 ])
            (const_int 9 [0x9]))) D:\LHX\7.5 contest\t1.cpp:12 5 {*cmpqi_1}
     (expr_list:REG_DEAD (reg:QI 274 [ D.83228 ])
        (nil)))
(jump_insn 110 109 111 10 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 783)
            (pc))) D:\LHX\7.5 contest\t1.cpp:12 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 900 (nil)))
 -> 783)
;;  succ:       11 [91.0%]  (FALLTHRU)
;;              126 [9.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 167
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 167

;; basic block 11, loop depth 1, count 0, freq 819, maybe hot
;;  prev block 10, next block 12, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       10 [91.0%]  (FALLTHRU)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u88(6){ }u89(7){ }u90(16){ }u91(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 167
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 431 432
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 167
;; live  gen 	 431 432
;; live  kill	
(note 111 110 859 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 859 111 860 11 (set (reg:SI 431 [ flag ])
        (const_int 1 [0x1])) D:\LHX\7.5 contest\t1.cpp:12 90 {*movsi_internal}
     (nil))
(insn 860 859 121 11 (set (reg:SI 432 [ flag+4 ])
        (const_int 0 [0])) D:\LHX\7.5 contest\t1.cpp:12 90 {*movsi_internal}
     (nil))
;;  succ:       12 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 167 431 432
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 167 431 432

;; basic block 12, loop depth 2, count 0, freq 9100, maybe hot
;;  prev block 11, next block 13, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       11 [100.0%]  (FALLTHRU)
;;              14 [91.0%]  (DFS_BACK)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u92(6){ }u93(7){ }u94(16){ }u95(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 167 431 432
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 167
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 167 431 432
;; live  gen 	 17 [flags]
;; live  kill	
(code_label 121 860 112 12 122 "" [1 uses])
(note 112 121 113 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 113 112 114 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:QI 167 [ ch ])
            (const_int 45 [0x2d]))) D:\LHX\7.5 contest\t1.cpp:13 5 {*cmpqi_1}
     (expr_list:REG_DEAD (reg/v:QI 167 [ ch ])
        (nil)))
(jump_insn 114 113 115 12 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 116)
            (pc))) D:\LHX\7.5 contest\t1.cpp:13 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 7200 (nil)))
 -> 116)
;;  succ:       13 [28.0%]  (FALLTHRU)
;;              14 [72.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 431 432
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 431 432

;; basic block 13, loop depth 2, count 0, freq 2548, maybe hot
;;  prev block 12, next block 14, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       12 [28.0%]  (FALLTHRU)
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u98(6){ }u99(7){ }u100(16){ }u101(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 431 432
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; live  gen 	 431 432
;; live  kill	
(note 115 114 861 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 861 115 862 13 (set (reg:SI 431 [ flag ])
        (const_int -1 [0xffffffffffffffff])) D:\LHX\7.5 contest\t1.cpp:13 90 {*movsi_internal}
     (nil))
(insn 862 861 116 13 (set (reg:SI 432 [ flag+4 ])
        (const_int -1 [0xffffffffffffffff])) D:\LHX\7.5 contest\t1.cpp:13 90 {*movsi_internal}
     (nil))
;;  succ:       14 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 431 432
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 431 432

;; basic block 14, loop depth 2, count 0, freq 9100, maybe hot
;;  prev block 13, next block 15, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       12 [72.0%] 
;;              13 [100.0%]  (FALLTHRU)
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u102(6){ }u103(7){ }u104(16){ }u105(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 431 432
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 166 167 275
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 431 432
;; live  gen 	 0 [ax] 17 [flags] 166 167 275
;; live  kill	 17 [flags]
(code_label 116 862 117 14 121 "" [1 uses])
(note 117 116 118 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(call_insn 118 117 119 14 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("getchar") [flags 0x43]  <function_decl 0267a780 getchar>) [0 getchar S1 A8])
            (const_int 0 [0]))) D:\LHX\7.5 contest\t1.cpp:14 648 {*call_value}
     (nil)
    (nil))
(insn 119 118 120 14 (set (reg:SI 166 [ D.83218 ])
        (reg:SI 0 ax)) D:\LHX\7.5 contest\t1.cpp:14 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 120 119 122 14 (set (reg/v:QI 167 [ ch ])
        (subreg:QI (reg:SI 166 [ D.83218 ]) 0)) D:\LHX\7.5 contest\t1.cpp:14 93 {*movqi_internal}
     (nil))
(insn 122 120 123 14 (parallel [
            (set (reg:QI 275 [ D.83228 ])
                (plus:QI (subreg:QI (reg:SI 166 [ D.83218 ]) 0)
                    (const_int -48 [0xffffffffffffffd0])))
            (clobber (reg:CC 17 flags))
        ]) D:\LHX\7.5 contest\t1.cpp:12 224 {*addqi_1}
     (expr_list:REG_DEAD (reg:SI 166 [ D.83218 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 123 122 124 14 (set (reg:CC 17 flags)
        (compare:CC (reg:QI 275 [ D.83228 ])
            (const_int 9 [0x9]))) D:\LHX\7.5 contest\t1.cpp:12 5 {*cmpqi_1}
     (expr_list:REG_DEAD (reg:QI 275 [ D.83228 ])
        (nil)))
(jump_insn 124 123 140 14 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 121)
            (pc))) D:\LHX\7.5 contest\t1.cpp:12 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 9100 (nil)))
 -> 121)
;;  succ:       12 [91.0%]  (DFS_BACK)
;;              127 [9.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 167 431 432
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 167 431 432

;; basic block 15, loop depth 2, count 0, freq 9100, maybe hot
;;  prev block 14, next block 16, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       127 [100.0%]  (FALLTHRU)
;;              15 [91.0%]  (DFS_BACK)
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u112(6){ }u113(7){ }u114(16){ }u115(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 167 175 431 432
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 167 175
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 167 174 175 176 276 277 278 279 280 281
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 167 175 431 432
;; live  gen 	 0 [ax] 17 [flags] 167 174 175 176 276 277 278 279 280 281
;; live  kill	 17 [flags]
(code_label 140 124 128 15 123 "" [1 uses])
(note 128 140 129 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 129 128 130 15 (parallel [
            (set (reg:DI 276 [ D.83229 ])
                (ashift:DI (reg/v:DI 175 [ re ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) D:\LHX\7.5 contest\t1.cpp:16 488 {*ashldi3_doubleword}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 130 129 131 15 (parallel [
            (set (reg:DI 277 [ D.83229 ])
                (ashift:DI (reg/v:DI 175 [ re ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) D:\LHX\7.5 contest\t1.cpp:16 488 {*ashldi3_doubleword}
     (expr_list:REG_DEAD (reg/v:DI 175 [ re ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 131 130 133 15 (parallel [
            (set (reg:DI 278 [ D.83229 ])
                (plus:DI (reg:DI 276 [ D.83229 ])
                    (reg:DI 277 [ D.83229 ])))
            (clobber (reg:CC 17 flags))
        ]) D:\LHX\7.5 contest\t1.cpp:16 215 {*adddi3_doubleword}
     (expr_list:REG_DEAD (reg:DI 277 [ D.83229 ])
        (expr_list:REG_DEAD (reg:DI 276 [ D.83229 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 133 131 134 15 (set (reg:SI 280 [ ch ])
        (sign_extend:SI (reg/v:QI 167 [ ch ]))) D:\LHX\7.5 contest\t1.cpp:16 148 {extendqisi2}
     (expr_list:REG_DEAD (reg/v:QI 167 [ ch ])
        (nil)))
(insn 134 133 135 15 (parallel [
            (set (reg:DI 279 [ D.83229 ])
                (sign_extend:DI (reg:SI 280 [ ch ])))
            (clobber (reg:CC 17 flags))
            (clobber (scratch:SI))
        ]) D:\LHX\7.5 contest\t1.cpp:16 143 {extendsidi2_1}
     (expr_list:REG_DEAD (reg:SI 280 [ ch ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 135 134 136 15 (parallel [
            (set (reg:DI 174 [ D.83229 ])
                (plus:DI (reg:DI 278 [ D.83229 ])
                    (reg:DI 279 [ D.83229 ])))
            (clobber (reg:CC 17 flags))
        ]) D:\LHX\7.5 contest\t1.cpp:16 215 {*adddi3_doubleword}
     (expr_list:REG_DEAD (reg:DI 279 [ D.83229 ])
        (expr_list:REG_DEAD (reg:DI 278 [ D.83229 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 136 135 137 15 (parallel [
            (set (reg/v:DI 175 [ re ])
                (plus:DI (reg:DI 174 [ D.83229 ])
                    (const_int -48 [0xffffffffffffffd0])))
            (clobber (reg:CC 17 flags))
        ]) D:\LHX\7.5 contest\t1.cpp:16 215 {*adddi3_doubleword}
     (expr_list:REG_DEAD (reg:DI 174 [ D.83229 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(call_insn 137 136 138 15 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("getchar") [flags 0x43]  <function_decl 0267a780 getchar>) [0 getchar S1 A8])
            (const_int 0 [0]))) D:\LHX\7.5 contest\t1.cpp:16 648 {*call_value}
     (nil)
    (nil))
(insn 138 137 139 15 (set (reg:SI 176 [ D.83218 ])
        (reg:SI 0 ax)) D:\LHX\7.5 contest\t1.cpp:16 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 139 138 141 15 (set (reg/v:QI 167 [ ch ])
        (subreg:QI (reg:SI 176 [ D.83218 ]) 0)) D:\LHX\7.5 contest\t1.cpp:16 93 {*movqi_internal}
     (nil))
(insn 141 139 142 15 (parallel [
            (set (reg:QI 281 [ D.83228 ])
                (plus:QI (subreg:QI (reg:SI 176 [ D.83218 ]) 0)
                    (const_int -48 [0xffffffffffffffd0])))
            (clobber (reg:CC 17 flags))
        ]) D:\LHX\7.5 contest\t1.cpp:16 224 {*addqi_1}
     (expr_list:REG_DEAD (reg:SI 176 [ D.83218 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 142 141 143 15 (set (reg:CC 17 flags)
        (compare:CC (reg:QI 281 [ D.83228 ])
            (const_int 9 [0x9]))) D:\LHX\7.5 contest\t1.cpp:16 5 {*cmpqi_1}
     (expr_list:REG_DEAD (reg:QI 281 [ D.83228 ])
        (nil)))
(jump_insn 143 142 144 15 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 140)
            (pc))) D:\LHX\7.5 contest\t1.cpp:16 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 9100 (nil)))
 -> 140)
;;  succ:       15 [91.0%]  (DFS_BACK)
;;              16 [9.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 167 175 431 432
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 167 175 431 432

;; basic block 16, loop depth 1, count 0, freq 819, maybe hot
;;  prev block 15, next block 17, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       15 [9.0%]  (FALLTHRU)
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u131(6){ }u132(7){ }u133(16){ }u134(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 175 431 432
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 175 431 432
;; lr  def 	 17 [flags] 87 247 283 284 285 286 287
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 175 431 432
;; live  gen 	 17 [flags] 87 247 283 284 285 286 287
;; live  kill	 17 [flags]
(note 144 143 146 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 146 144 147 16 (parallel [
            (set (reg:SI 283)
                (mult:SI (reg:SI 432 [ flag+4 ])
                    (subreg:SI (reg/v:DI 175 [ re ]) 0)))
            (clobber (reg:CC 17 flags))
        ]) D:\LHX\7.5 contest\t1.cpp:17 306 {*mulsi3_1}
     (expr_list:REG_DEAD (reg:SI 432 [ flag+4 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 147 146 148 16 (parallel [
            (set (reg:SI 284)
                (mult:SI (subreg:SI (reg/v:DI 175 [ re ]) 4)
                    (reg:SI 431 [ flag ])))
            (clobber (reg:CC 17 flags))
        ]) D:\LHX\7.5 contest\t1.cpp:17 306 {*mulsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 148 147 149 16 (parallel [
            (set (reg:SI 285)
                (plus:SI (reg:SI 283)
                    (reg:SI 284)))
            (clobber (reg:CC 17 flags))
        ]) D:\LHX\7.5 contest\t1.cpp:17 220 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 284)
        (expr_list:REG_DEAD (reg:SI 283)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 149 148 150 16 (parallel [
            (set (reg:DI 286 [ D.83229 ])
                (mult:DI (zero_extend:DI (reg:SI 431 [ flag ]))
                    (zero_extend:DI (subreg:SI (reg/v:DI 175 [ re ]) 0))))
            (clobber (reg:CC 17 flags))
        ]) D:\LHX\7.5 contest\t1.cpp:17 323 {*umulsidi3_1}
     (expr_list:REG_DEAD (reg:SI 431 [ flag ])
        (expr_list:REG_DEAD (reg/v:DI 175 [ re ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 150 149 151 16 (parallel [
            (set (reg:SI 287)
                (plus:SI (reg:SI 285)
                    (subreg:SI (reg:DI 286 [ D.83229 ]) 4)))
            (clobber (reg:CC 17 flags))
        ]) D:\LHX\7.5 contest\t1.cpp:17 220 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 285)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 151 150 153 16 (set (subreg:SI (reg:DI 286 [ D.83229 ]) 4)
        (reg:SI 287)) D:\LHX\7.5 contest\t1.cpp:17 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 287)
        (nil)))
(insn 153 151 154 16 (set (mem:SI (plus:SI (mult:SI (reg/v:SI 87 [ i ])
                    (const_int 4 [0x4]))
                (symbol_ref:SI ("a") [flags 0x2]  <var_decl 06e5d780 a>)) [21 MEM[symbol: a, index: _30, step: 4, offset: 0B]+0 S4 A32])
        (subreg:SI (reg:DI 286 [ D.83229 ]) 0)) D:\LHX\7.5 contest\t1.cpp:38 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:DI 286 [ D.83229 ])
        (expr_list:REG_DEAD (reg/f:SI 282)
            (nil))))
(insn 154 153 155 16 (parallel [
            (set (reg/v:SI 87 [ i ])
                (plus:SI (reg/v:SI 87 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) D:\LHX\7.5 contest\t1.cpp:38 220 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 155 154 157 16 (set (reg/v:SI 247 [ i ])
        (mem/c:SI (symbol_ref:SI ("n") [flags 0x2]  <var_decl 06e5d660 n>) [21 n+0 S4 A32])) D:\LHX\7.5 contest\t1.cpp:38 90 {*movsi_internal}
     (nil))
(insn 157 155 158 16 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 247 [ i ])
            (reg/v:SI 87 [ i ]))) D:\LHX\7.5 contest\t1.cpp:38 7 {*cmpsi_1}
     (nil))
(jump_insn 158 157 159 16 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 156)
            (pc))) D:\LHX\7.5 contest\t1.cpp:38 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (int_list:REG_BR_PROB 9900 (nil)))
 -> 156)
;;  succ:       10 [99.0%]  (DFS_BACK)
;;              17 [1.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 247
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 247

;; basic block 17, loop depth 0, count 0, freq 9, maybe hot
;;  prev block 16, next block 18, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       16 [1.0%]  (FALLTHRU)
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u154(6){ }u155(7){ }u156(16){ }u157(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 247
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 247
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 247
;; live  gen 	 17 [flags]
;; live  kill	
(note 159 158 160 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 160 159 161 17 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg/v:SI 247 [ i ])
            (const_int 0 [0]))) D:\LHX\7.5 contest\t1.cpp:39 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 161 160 162 17 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 210)
            (pc))) D:\LHX\7.5 contest\t1.cpp:39 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (int_list:REG_BR_PROB 100 (nil)))
 -> 210)
;;  succ:       18 [99.0%]  (FALLTHRU)
;;              22 [1.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 247
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 247

;; basic block 18, loop depth 0, count 0, freq 9, maybe hot
;;  prev block 17, next block 19, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       17 [99.0%]  (FALLTHRU)
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u161(6){ }u162(7){ }u163(16){ }u164(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 247
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 247
;; lr  def 	 17 [flags] 94 240
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 247
;; live  gen 	 94 240
;; live  kill	 17 [flags]
(note 162 161 163 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 163 162 12 18 (parallel [
            (set (reg:SI 240 [ D.83218 ])
                (plus:SI (reg/v:SI 247 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 220 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 12 163 184 18 (set (reg/v:SI 94 [ i ])
        (const_int 1 [0x1])) D:\LHX\7.5 contest\t1.cpp:39 90 {*movsi_internal}
     (nil))
;;  succ:       19 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 94 240 247
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 94 240 247

;; basic block 19, loop depth 1, count 0, freq 900, maybe hot
;;  prev block 18, next block 20, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       18 [100.0%]  (FALLTHRU)
;;              19 [99.0%]  (DFS_BACK)
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u166(6){ }u167(7){ }u168(16){ }u169(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 94 240 247
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 94 240
;; lr  def 	 17 [flags] 94 290 291 293 294 298 299 300 301
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 94 240 247
;; live  gen 	 17 [flags] 94 290 291 293 294 298 299 300 301
;; live  kill	 17 [flags]
(code_label 184 12 164 19 126 "" [1 uses])
(note 164 184 168 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 168 164 169 19 (set (reg:SI 291 [ MEM[symbol: a, index: _39, step: 4, offset: 0B] ])
        (mem:SI (plus:SI (mult:SI (reg/v:SI 94 [ i ])
                    (const_int 4 [0x4]))
                (symbol_ref:SI ("a") [flags 0x2]  <var_decl 06e5d780 a>)) [21 MEM[symbol: a, index: _39, step: 4, offset: 0B]+0 S4 A32])) D:\LHX\7.5 contest\t1.cpp:40 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 289)
        (nil)))
(insn 169 168 171 19 (parallel [
            (set (reg:DI 290 [ D.83220 ])
                (sign_extend:DI (reg:SI 291 [ MEM[symbol: a, index: _39, step: 4, offset: 0B] ])))
            (clobber (reg:CC 17 flags))
            (clobber (scratch:SI))
        ]) D:\LHX\7.5 contest\t1.cpp:40 143 {extendsidi2_1}
     (expr_list:REG_DEAD (reg:SI 291 [ MEM[symbol: a, index: _39, step: 4, offset: 0B] ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 171 169 172 19 (set (reg:SI 294 [ MEM[symbol: pre, index: _39, step: 8, offset: 4294967288B]+4 ])
        (mem:SI (plus:SI (mult:SI (reg/v:SI 94 [ i ])
                    (const_int 8 [0x8]))
                (const:SI (plus:SI (symbol_ref:SI ("pre") [flags 0x2]  <var_decl 06e5d8a0 pre>)
                        (const_int -4 [0xfffffffffffffffc])))) [34 MEM[symbol: pre, index: _39, step: 8, offset: 4294967288B]+4 S4 A32])) D:\LHX\7.5 contest\t1.cpp:40 90 {*movsi_internal}
     (nil))
(insn 172 171 176 19 (parallel [
            (set (reg:SI 293)
                (mult:SI (reg:SI 294 [ MEM[symbol: pre, index: _39, step: 8, offset: 4294967288B]+4 ])
                    (const_int 19260817 [0x125e591])))
            (clobber (reg:CC 17 flags))
        ]) D:\LHX\7.5 contest\t1.cpp:40 306 {*mulsi3_1}
     (expr_list:REG_DEAD (reg:SI 294 [ MEM[symbol: pre, index: _39, step: 8, offset: 4294967288B]+4 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 176 172 177 19 (set (reg:SI 299)
        (const_int 19260817 [0x125e591])) D:\LHX\7.5 contest\t1.cpp:40 90 {*movsi_internal}
     (nil))
(insn 177 176 178 19 (parallel [
            (set (reg:DI 298 [ D.83220 ])
                (mult:DI (zero_extend:DI (mem:SI (plus:SI (mult:SI (reg/v:SI 94 [ i ])
                                    (const_int 8 [0x8]))
                                (const:SI (plus:SI (symbol_ref:SI ("pre") [flags 0x2]  <var_decl 06e5d8a0 pre>)
                                        (const_int -8 [0xfffffffffffffff8])))) [34 MEM[symbol: pre, index: _39, step: 8, offset: 4294967288B]+0 S4 A64]))
                    (zero_extend:DI (reg:SI 299))))
            (clobber (reg:CC 17 flags))
        ]) D:\LHX\7.5 contest\t1.cpp:40 323 {*umulsidi3_1}
     (expr_list:REG_EQUAL (mult:DI (zero_extend:DI (mem:SI (plus:SI (mult:SI (reg/v:SI 94 [ i ])
                            (const_int 8 [0x8]))
                        (const:SI (plus:SI (symbol_ref:SI ("pre") [flags 0x2]  <var_decl 06e5d8a0 pre>)
                                (const_int -8 [0xfffffffffffffff8])))) [34 MEM[symbol: pre, index: _39, step: 8, offset: 4294967288B]+0 S4 A64]))
            (const_int 19260817 [0x125e591]))
        (expr_list:REG_DEAD (reg:SI 299)
            (expr_list:REG_DEAD (reg/f:SI 292)
                (expr_list:REG_UNUSED (reg:CC 17 flags)
                    (nil))))))
(insn 178 177 179 19 (parallel [
            (set (reg:SI 300)
                (plus:SI (reg:SI 293)
                    (subreg:SI (reg:DI 298 [ D.83220 ]) 4)))
            (clobber (reg:CC 17 flags))
        ]) D:\LHX\7.5 contest\t1.cpp:40 220 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 293)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 179 178 181 19 (set (subreg:SI (reg:DI 298 [ D.83220 ]) 4)
        (reg:SI 300)) D:\LHX\7.5 contest\t1.cpp:40 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 300)
        (nil)))
(insn 181 179 182 19 (parallel [
            (set (reg:DI 301)
                (plus:DI (reg:DI 290 [ D.83220 ])
                    (reg:DI 298 [ D.83220 ])))
            (clobber (reg:CC 17 flags))
        ]) D:\LHX\7.5 contest\t1.cpp:40 215 {*adddi3_doubleword}
     (expr_list:REG_DEAD (reg:DI 298 [ D.83220 ])
        (expr_list:REG_DEAD (reg:DI 290 [ D.83220 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 182 181 183 19 (set (mem:DI (plus:SI (mult:SI (reg/v:SI 94 [ i ])
                    (const_int 8 [0x8]))
                (symbol_ref:SI ("pre") [flags 0x2]  <var_decl 06e5d8a0 pre>)) [34 MEM[symbol: pre, index: _39, step: 8, offset: 0B]+0 S8 A64])
        (reg:DI 301)) D:\LHX\7.5 contest\t1.cpp:40 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 301)
        (expr_list:REG_DEAD (reg/f:SI 288)
            (nil))))
(insn 183 182 185 19 (parallel [
            (set (reg/v:SI 94 [ i ])
                (plus:SI (reg/v:SI 94 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) D:\LHX\7.5 contest\t1.cpp:39 220 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 185 183 186 19 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 94 [ i ])
            (reg:SI 240 [ D.83218 ]))) D:\LHX\7.5 contest\t1.cpp:39 7 {*cmpsi_1}
     (nil))
(jump_insn 186 185 784 19 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 184)
            (pc))) D:\LHX\7.5 contest\t1.cpp:39 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 9900 (nil)))
 -> 184)
;;  succ:       19 [99.0%]  (DFS_BACK)
;;              20 [1.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 94 240 247
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 94 240 247

;; basic block 20, loop depth 0, count 0, freq 9, maybe hot
;;  prev block 19, next block 21, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       19 [1.0%]  (FALLTHRU)
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u196(6){ }u197(7){ }u198(16){ }u199(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 247
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 247
;; lr  def 	 101
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 247
;; live  gen 	 101
;; live  kill	
(note 784 186 13 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 13 784 207 20 (set (reg/v:SI 101 [ i ])
        (reg/v:SI 247 [ i ])) D:\LHX\7.5 contest\t1.cpp:38 90 {*movsi_internal}
     (nil))
;;  succ:       21 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 101 247
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 101 247

;; basic block 21, loop depth 1, count 0, freq 900, maybe hot
;;  prev block 20, next block 22, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       20 [100.0%]  (FALLTHRU)
;;              21 [99.0%]  (DFS_BACK)
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u201(6){ }u202(7){ }u203(16){ }u204(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 101 247
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 101
;; lr  def 	 17 [flags] 101 304 305 307 308 312 313 314 315
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 101 247
;; live  gen 	 17 [flags] 101 304 305 307 308 312 313 314 315
;; live  kill	 17 [flags]
(code_label 207 13 187 21 127 "" [1 uses])
(note 187 207 191 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 191 187 192 21 (set (reg:SI 305 [ MEM[symbol: a, index: _411, step: 4, offset: 0B] ])
        (mem:SI (plus:SI (mult:SI (reg/v:SI 101 [ i ])
                    (const_int 4 [0x4]))
                (symbol_ref:SI ("a") [flags 0x2]  <var_decl 06e5d780 a>)) [21 MEM[symbol: a, index: _411, step: 4, offset: 0B]+0 S4 A32])) D:\LHX\7.5 contest\t1.cpp:43 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 303)
        (nil)))
(insn 192 191 194 21 (parallel [
            (set (reg:DI 304 [ D.83220 ])
                (sign_extend:DI (reg:SI 305 [ MEM[symbol: a, index: _411, step: 4, offset: 0B] ])))
            (clobber (reg:CC 17 flags))
            (clobber (scratch:SI))
        ]) D:\LHX\7.5 contest\t1.cpp:43 143 {extendsidi2_1}
     (expr_list:REG_DEAD (reg:SI 305 [ MEM[symbol: a, index: _411, step: 4, offset: 0B] ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 194 192 195 21 (set (reg:SI 308 [ MEM[symbol: suf, index: _411, step: 8, offset: 8B]+4 ])
        (mem:SI (plus:SI (mult:SI (reg/v:SI 101 [ i ])
                    (const_int 8 [0x8]))
                (const:SI (plus:SI (symbol_ref:SI ("suf") [flags 0x2]  <var_decl 06e5d9c0 suf>)
                        (const_int 12 [0xc])))) [34 MEM[symbol: suf, index: _411, step: 8, offset: 8B]+4 S4 A32])) D:\LHX\7.5 contest\t1.cpp:43 90 {*movsi_internal}
     (nil))
(insn 195 194 199 21 (parallel [
            (set (reg:SI 307)
                (mult:SI (reg:SI 308 [ MEM[symbol: suf, index: _411, step: 8, offset: 8B]+4 ])
                    (const_int 19260817 [0x125e591])))
            (clobber (reg:CC 17 flags))
        ]) D:\LHX\7.5 contest\t1.cpp:43 306 {*mulsi3_1}
     (expr_list:REG_DEAD (reg:SI 308 [ MEM[symbol: suf, index: _411, step: 8, offset: 8B]+4 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 199 195 200 21 (set (reg:SI 313)
        (const_int 19260817 [0x125e591])) D:\LHX\7.5 contest\t1.cpp:43 90 {*movsi_internal}
     (nil))
(insn 200 199 201 21 (parallel [
            (set (reg:DI 312 [ D.83220 ])
                (mult:DI (zero_extend:DI (mem:SI (plus:SI (mult:SI (reg/v:SI 101 [ i ])
                                    (const_int 8 [0x8]))
                                (const:SI (plus:SI (symbol_ref:SI ("suf") [flags 0x2]  <var_decl 06e5d9c0 suf>)
                                        (const_int 8 [0x8])))) [34 MEM[symbol: suf, index: _411, step: 8, offset: 8B]+0 S4 A64]))
                    (zero_extend:DI (reg:SI 313))))
            (clobber (reg:CC 17 flags))
        ]) D:\LHX\7.5 contest\t1.cpp:43 323 {*umulsidi3_1}
     (expr_list:REG_EQUAL (mult:DI (zero_extend:DI (mem:SI (plus:SI (mult:SI (reg/v:SI 101 [ i ])
                            (const_int 8 [0x8]))
                        (const:SI (plus:SI (symbol_ref:SI ("suf") [flags 0x2]  <var_decl 06e5d9c0 suf>)
                                (const_int 8 [0x8])))) [34 MEM[symbol: suf, index: _411, step: 8, offset: 8B]+0 S4 A64]))
            (const_int 19260817 [0x125e591]))
        (expr_list:REG_DEAD (reg:SI 313)
            (expr_list:REG_DEAD (reg/f:SI 306)
                (expr_list:REG_UNUSED (reg:CC 17 flags)
                    (nil))))))
(insn 201 200 202 21 (parallel [
            (set (reg:SI 314)
                (plus:SI (reg:SI 307)
                    (subreg:SI (reg:DI 312 [ D.83220 ]) 4)))
            (clobber (reg:CC 17 flags))
        ]) D:\LHX\7.5 contest\t1.cpp:43 220 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 307)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 202 201 204 21 (set (subreg:SI (reg:DI 312 [ D.83220 ]) 4)
        (reg:SI 314)) D:\LHX\7.5 contest\t1.cpp:43 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 314)
        (nil)))
(insn 204 202 205 21 (parallel [
            (set (reg:DI 315)
                (plus:DI (reg:DI 304 [ D.83220 ])
                    (reg:DI 312 [ D.83220 ])))
            (clobber (reg:CC 17 flags))
        ]) D:\LHX\7.5 contest\t1.cpp:43 215 {*adddi3_doubleword}
     (expr_list:REG_DEAD (reg:DI 312 [ D.83220 ])
        (expr_list:REG_DEAD (reg:DI 304 [ D.83220 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 205 204 206 21 (set (mem:DI (plus:SI (mult:SI (reg/v:SI 101 [ i ])
                    (const_int 8 [0x8]))
                (symbol_ref:SI ("suf") [flags 0x2]  <var_decl 06e5d9c0 suf>)) [34 MEM[symbol: suf, index: _411, step: 8, offset: 0B]+0 S8 A64])
        (reg:DI 315)) D:\LHX\7.5 contest\t1.cpp:43 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 315)
        (expr_list:REG_DEAD (reg/f:SI 302)
            (nil))))
(insn 206 205 208 21 (parallel [
            (set (reg/v:SI 101 [ i ])
                (plus:SI (reg/v:SI 101 [ i ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) D:\LHX\7.5 contest\t1.cpp:42 220 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 208 206 209 21 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg/v:SI 101 [ i ])
            (const_int 0 [0]))) D:\LHX\7.5 contest\t1.cpp:42 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 209 208 210 21 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 207)
            (pc))) D:\LHX\7.5 contest\t1.cpp:42 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (int_list:REG_BR_PROB 9900 (nil)))
 -> 207)
;;  succ:       21 [99.0%]  (DFS_BACK)
;;              22 [1.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 101 247
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 101 247

;; basic block 22, loop depth 0, count 0, freq 9, maybe hot
;;  prev block 21, next block 23, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       21 [1.0%]  (FALLTHRU)
;;              17 [1.0%] 
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u230(6){ }u231(7){ }u232(16){ }u233(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 247
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 247
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 247
;; live  gen 	 17 [flags]
;; live  kill	
(code_label 210 209 211 22 125 "" [1 uses])
(note 211 210 212 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 212 211 213 22 (set (mem/c:SI (plus:SI (reg/f:SI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [21 j+0 S4 A32])
        (const_int 1 [0x1])) D:\LHX\7.5 contest\t1.cpp:45 90 {*movsi_internal}
     (nil))
(insn 213 212 214 22 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg/v:SI 247 [ i ])
            (const_int 0 [0]))) D:\LHX\7.5 contest\t1.cpp:45 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 214 213 759 22 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 219)
            (pc))) D:\LHX\7.5 contest\t1.cpp:45 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (int_list:REG_BR_PROB 9100 (nil)))
 -> 219)
;;  succ:       24 [91.0%] 
;;              23 [9.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 247
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 247

;; basic block 23, loop depth 0, count 0, freq 1
;;  prev block 22, next block 24, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       22 [9.0%]  (FALLTHRU)
;;              128 [100.0%]  (FALLTHRU)
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u237(6){ }u238(7){ }u239(16){ }u240(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 252
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 252
;; live  kill	
(code_label 759 214 215 23 184 "" [0 uses])
(note 215 759 216 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 216 215 219 23 (set (reg:SI 252 [ D.83218 ])
        (mem/c:SI (symbol_ref:SI ("ans") [flags 0x2]  <var_decl 06eeb600 ans>) [21 ans+0 S4 A32])) 90 {*movsi_internal}
     (nil))
;;  succ:       109 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 252
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 252

;; basic block 24, loop depth 0, count 0, freq 8, maybe hot
;;  prev block 23, next block 25, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       22 [91.0%] 
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u241(6){ }u242(7){ }u243(16){ }u244(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 247
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 247
;; lr  def 	 102 125 252
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 247
;; live  gen 	 102 125 252
;; live  kill	
(code_label 219 216 220 24 128 "" [1 uses])
(note 220 219 221 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 221 220 14 24 (set (reg:SI 252 [ D.83218 ])
        (mem/c:SI (symbol_ref:SI ("ans") [flags 0x2]  <var_decl 06eeb600 ans>) [21 ans+0 S4 A32])) 90 {*movsi_internal}
     (nil))
(insn 14 221 15 24 (set (reg:SI 102 [ D.83218 ])
        (reg/v:SI 247 [ i ])) D:\LHX\7.5 contest\t1.cpp:45 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 247 [ i ])
        (nil)))
(insn 15 14 614 24 (set (reg:SI 125 [ D.83218 ])
        (const_int 1 [0x1])) D:\LHX\7.5 contest\t1.cpp:45 90 {*movsi_internal}
     (nil))
;;  succ:       25 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 102 125 252
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 102 125 252

;; basic block 25, loop depth 1, count 0, freq 92, maybe hot
;;  prev block 24, next block 26, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       24 [100.0%]  (FALLTHRU)
;;              108 [91.0%]  (DFS_BACK)
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u246(6){ }u247(7){ }u248(16){ }u249(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 102 125 252
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 102 125 252
;; lr  def 	 17 [flags] 317 318
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 102 125 252
;; live  gen 	 17 [flags] 317 318
;; live  kill	 17 [flags]
(code_label 614 15 222 25 172 "" [1 uses])
(note 222 614 223 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 223 222 224 25 (parallel [
            (set (reg:SI 317 [ D.83218 ])
                (div:SI (reg:SI 102 [ D.83218 ])
                    (reg:SI 125 [ D.83218 ])))
            (set (reg:SI 318)
                (mod:SI (reg:SI 102 [ D.83218 ])
                    (reg:SI 125 [ D.83218 ])))
            (clobber (reg:CC 17 flags))
        ]) D:\LHX\7.5 contest\t1.cpp:46 338 {*divmodsi4}
     (expr_list:REG_DEAD (reg:SI 125 [ D.83218 ])
        (expr_list:REG_DEAD (reg:SI 102 [ D.83218 ])
            (expr_list:REG_UNUSED (reg:SI 318)
                (expr_list:REG_UNUSED (reg:CC 17 flags)
                    (nil))))))
(insn 224 223 225 25 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 317 [ D.83218 ])
            (reg:SI 252 [ D.83218 ]))) D:\LHX\7.5 contest\t1.cpp:46 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 317 [ D.83218 ])
        (nil)))
(jump_insn 225 224 226 25 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 608)
            (pc))) D:\LHX\7.5 contest\t1.cpp:46 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (int_list:REG_BR_PROB 7100 (nil)))
 -> 608)
;;  succ:       108 [71.0%] 
;;              26 [29.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 252
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 252

;; basic block 26, loop depth 1, count 0, freq 27, maybe hot
;;  prev block 25, next block 27, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       25 [29.0%]  (FALLTHRU)
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u257(6){ }u258(7){ }u259(16){ }u260(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 104 106 320 325
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 2 [cx] 7 [sp] 17 [flags] 104 106 320 325
;; live  kill	 17 [flags]
(note 226 225 228 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 228 226 229 26 (set (reg/f:SI 320 [ MEM[(struct _Rb_tree_node_base * *)&s + 8B] ])
        (mem/f/c:SI (const:SI (plus:SI (symbol_ref:SI ("s") [flags 0x2]  <var_decl 06d9cd20 s>)
                    (const_int 8 [0x8]))) [6 MEM[(struct _Rb_tree_node_base * *)&s + 8B]+0 S4 A32])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:908 90 {*movsi_internal}
     (nil))
(insn 229 228 230 26 (set (mem:SI (reg/f:SI 7 sp) [0  S4 A32])
        (reg/f:SI 320 [ MEM[(struct _Rb_tree_node_base * *)&s + 8B] ])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:908 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 320 [ MEM[(struct _Rb_tree_node_base * *)&s + 8B] ])
        (nil)))
(insn 230 229 231 26 (set (reg:SI 2 cx)
        (symbol_ref:SI ("s") [flags 0x2]  <var_decl 06d9cd20 s>)) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:908 90 {*movsi_internal}
     (nil))
(call_insn 231 230 232 26 (parallel [
            (call (mem:QI (symbol_ref:SI ("_ZNSt8_Rb_treeIySt4pairIKyiESt10_Select1stIS2_ESt4lessIyESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E") [flags 0x3]  <function_decl 06e20200 _M_erase>) [0 _M_erase S1 A8])
                (const_int 4 [0x4]))
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 4 [0x4])))
        ]) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:908 646 {*call_pop}
     (expr_list:REG_DEAD (reg:SI 2 cx)
        (expr_list:REG_ARGS_SIZE (const_int -4 [0xfffffffffffffffc])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 2 cx))
        (expr_list:SI (use (mem/f:SI (reg/f:SI 7 sp) [0  S4 A32]))
            (nil))))
(insn 232 231 234 26 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:908 220 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 234 232 236 26 (set (mem/f/c:SI (const:SI (plus:SI (symbol_ref:SI ("s") [flags 0x2]  <var_decl 06d9cd20 s>)
                    (const_int 12 [0xc]))) [6 MEM[(struct _Rb_tree_node_base * &)&s + 12]+0 S4 A32])
        (const:SI (plus:SI (symbol_ref:SI ("s") [flags 0x2]  <var_decl 06d9cd20 s>)
                (const_int 4 [0x4])))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:909 90 {*movsi_internal}
     (nil))
(insn 236 234 238 26 (set (mem/f/c:SI (const:SI (plus:SI (symbol_ref:SI ("s") [flags 0x2]  <var_decl 06d9cd20 s>)
                    (const_int 8 [0x8]))) [6 MEM[(struct _Rb_tree_node_base * &)&s + 8]+0 S4 A32])
        (const_int 0 [0])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:910 90 {*movsi_internal}
     (nil))
(insn 238 236 240 26 (set (mem/f/c:SI (const:SI (plus:SI (symbol_ref:SI ("s") [flags 0x2]  <var_decl 06d9cd20 s>)
                    (const_int 16 [0x10]))) [6 MEM[(struct _Rb_tree_node_base * &)&s + 16]+0 S4 A32])
        (const:SI (plus:SI (symbol_ref:SI ("s") [flags 0x2]  <var_decl 06d9cd20 s>)
                (const_int 4 [0x4])))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:911 90 {*movsi_internal}
     (nil))
(insn 240 238 241 26 (set (mem/c:SI (const:SI (plus:SI (symbol_ref:SI ("s") [flags 0x2]  <var_decl 06d9cd20 s>)
                    (const_int 20 [0x14]))) [21 MEM[(struct _Rb_tree *)&s]._M_impl._M_node_count+0 S4 A32])
        (const_int 0 [0])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:912 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 319)
        (nil)))
(insn 241 240 242 26 (set (reg:SI 106 [ D.83218 ])
        (mem/c:SI (plus:SI (reg/f:SI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [21 j+0 S4 A32])) D:\LHX\7.5 contest\t1.cpp:47 90 {*movsi_internal}
     (nil))
(insn 242 241 243 26 (parallel [
            (set (reg/v:DI 104 [ b ])
                (sign_extend:DI (reg:SI 106 [ D.83218 ])))
            (clobber (reg:CC 17 flags))
            (clobber (scratch:SI))
        ]) D:\LHX\7.5 contest\t1.cpp:47 143 {extendsidi2_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 243 242 244 26 (parallel [
            (set (reg:SI 325)
                (ior:SI (subreg:SI (reg/v:DI 104 [ b ]) 4)
                    (reg:SI 106 [ D.83218 ])))
            (clobber (reg:CC 17 flags))
        ]) D:\LHX\7.5 contest\t1.cpp:26 388 {*iorsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 244 243 245 26 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 325)
            (const_int 0 [0]))) D:\LHX\7.5 contest\t1.cpp:26 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 325)
        (nil)))
(jump_insn 245 244 246 26 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 789)
            (pc))) D:\LHX\7.5 contest\t1.cpp:26 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 900 (nil)))
 -> 789)
;;  succ:       27 [91.0%]  (FALLTHRU)
;;              33 [9.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104 106
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104 106

;; basic block 27, loop depth 1, count 0, freq 24, maybe hot
;;  prev block 26, next block 28, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       26 [91.0%]  (FALLTHRU)
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u281(6){ }u282(7){ }u283(16){ }u284(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104 106
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 135 136
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104 106
;; live  gen 	 135 136
;; live  kill	
(note 246 245 16 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 16 246 17 27 (set (reg/v:DI 135 [ a ])
        (const_int 19260817 [0x125e591])) D:\LHX\7.5 contest\t1.cpp:26 89 {*movdi_internal}
     (nil))
(insn 17 16 271 27 (set (reg/v:DI 136 [ tmod ])
        (const_int 1 [0x1])) D:\LHX\7.5 contest\t1.cpp:26 89 {*movdi_internal}
     (nil))
;;  succ:       28 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104 106 135 136
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104 106 135 136

;; basic block 28, loop depth 2, count 0, freq 270, maybe hot
;;  prev block 27, next block 30, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       27 [100.0%]  (FALLTHRU)
;;              31 [91.0%]  (DFS_BACK)
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u285(6){ }u286(7){ }u287(16){ }u288(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104 106 135 136
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104
;; lr  def 	 17 [flags] 439
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104 106 135 136
;; live  gen 	 17 [flags] 439
;; live  kill	 17 [flags]
(code_label 271 17 247 28 133 "" [1 uses])
(note 247 271 248 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 248 247 251 28 (parallel [
            (set (reg:SI 439 [ D.83220 ])
                (and:SI (subreg:SI (reg/v:DI 104 [ b ]) 0)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) D:\LHX\7.5 contest\t1.cpp:27 370 {*andsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 251 248 252 28 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 439 [ D.83220 ])
            (const_int 0 [0]))) D:\LHX\7.5 contest\t1.cpp:27 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 439 [ D.83220 ])
        (nil)))
(jump_insn 252 251 253 28 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 261)
            (pc))) D:\LHX\7.5 contest\t1.cpp:27 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 261)
;;  succ:       30 [50.0%]  (FALLTHRU)
;;              31 [50.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104 106 135 136
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104 106 135 136

;; basic block 30, loop depth 2, count 0, freq 135, maybe hot
;;  prev block 28, next block 31, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       28 [50.0%]  (FALLTHRU)
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u293(6){ }u294(7){ }u295(16){ }u296(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104 106 135 136
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 135 136
;; lr  def 	 17 [flags] 136 328 329 330 331
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104 106 135 136
;; live  gen 	 136 328 329 330 331
;; live  kill	 17 [flags]
(note 253 252 254 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 254 253 255 30 (parallel [
            (set (reg:SI 328)
                (mult:SI (subreg:SI (reg/v:DI 136 [ tmod ]) 4)
                    (subreg:SI (reg/v:DI 135 [ a ]) 0)))
            (clobber (reg:CC 17 flags))
        ]) D:\LHX\7.5 contest\t1.cpp:27 306 {*mulsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 255 254 256 30 (parallel [
            (set (reg:SI 329)
                (mult:SI (subreg:SI (reg/v:DI 135 [ a ]) 4)
                    (subreg:SI (reg/v:DI 136 [ tmod ]) 0)))
            (clobber (reg:CC 17 flags))
        ]) D:\LHX\7.5 contest\t1.cpp:27 306 {*mulsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 256 255 257 30 (parallel [
            (set (reg:SI 330)
                (plus:SI (reg:SI 328)
                    (reg:SI 329)))
            (clobber (reg:CC 17 flags))
        ]) D:\LHX\7.5 contest\t1.cpp:27 220 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 329)
        (expr_list:REG_DEAD (reg:SI 328)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 257 256 258 30 (parallel [
            (set (reg/v:DI 136 [ tmod ])
                (mult:DI (zero_extend:DI (subreg:SI (reg/v:DI 136 [ tmod ]) 0))
                    (zero_extend:DI (subreg:SI (reg/v:DI 135 [ a ]) 0))))
            (clobber (reg:CC 17 flags))
        ]) D:\LHX\7.5 contest\t1.cpp:27 323 {*umulsidi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 258 257 259 30 (parallel [
            (set (reg:SI 331)
                (plus:SI (reg:SI 330)
                    (subreg:SI (reg/v:DI 136 [ tmod ]) 4)))
            (clobber (reg:CC 17 flags))
        ]) D:\LHX\7.5 contest\t1.cpp:27 220 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 330)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 259 258 261 30 (set (subreg:SI (reg/v:DI 136 [ tmod ]) 4)
        (reg:SI 331)) D:\LHX\7.5 contest\t1.cpp:27 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 331)
        (nil)))
;;  succ:       31 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104 106 135 136
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104 106 135 136

;; basic block 31, loop depth 2, count 0, freq 270, maybe hot
;;  prev block 30, next block 33, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       28 [50.0%] 
;;              30 [100.0%]  (FALLTHRU)
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u309(6){ }u310(7){ }u311(16){ }u312(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104 106 135 136
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104 135
;; lr  def 	 17 [flags] 104 135 332 334 335 336
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104 106 135 136
;; live  gen 	 17 [flags] 104 135 332 334 335 336
;; live  kill	 17 [flags]
(code_label 261 259 262 31 132 "" [1 uses])
(note 262 261 263 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 263 262 265 31 (parallel [
            (set (reg:SI 332)
                (mult:SI (subreg:SI (reg/v:DI 135 [ a ]) 4)
                    (subreg:SI (reg/v:DI 135 [ a ]) 0)))
            (clobber (reg:CC 17 flags))
        ]) D:\LHX\7.5 contest\t1.cpp:28 306 {*mulsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 265 263 266 31 (parallel [
            (set (reg:SI 334)
                (ashift:SI (reg:SI 332)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) D:\LHX\7.5 contest\t1.cpp:28 496 {*ashlsi3_1}
     (expr_list:REG_DEAD (reg:SI 332)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 266 265 267 31 (parallel [
            (set (reg/v:DI 135 [ a ])
                (mult:DI (zero_extend:DI (subreg:SI (reg/v:DI 135 [ a ]) 0))
                    (zero_extend:DI (subreg:SI (reg/v:DI 135 [ a ]) 0))))
            (clobber (reg:CC 17 flags))
        ]) D:\LHX\7.5 contest\t1.cpp:28 323 {*umulsidi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 267 266 268 31 (parallel [
            (set (reg:SI 335)
                (plus:SI (reg:SI 334)
                    (subreg:SI (reg/v:DI 135 [ a ]) 4)))
            (clobber (reg:CC 17 flags))
        ]) D:\LHX\7.5 contest\t1.cpp:28 220 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 334)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 268 267 270 31 (set (subreg:SI (reg/v:DI 135 [ a ]) 4)
        (reg:SI 335)) D:\LHX\7.5 contest\t1.cpp:28 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 335)
        (nil)))
(insn 270 268 272 31 (parallel [
            (set (reg/v:DI 104 [ b ])
                (lshiftrt:DI (reg/v:DI 104 [ b ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) D:\LHX\7.5 contest\t1.cpp:28 516 {*lshrdi3_doubleword}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 272 270 273 31 (parallel [
            (set (reg:SI 336)
                (ior:SI (subreg:SI (reg/v:DI 104 [ b ]) 4)
                    (subreg:SI (reg/v:DI 104 [ b ]) 0)))
            (clobber (reg:CC 17 flags))
        ]) D:\LHX\7.5 contest\t1.cpp:26 388 {*iorsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 273 272 274 31 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 336)
            (const_int 0 [0]))) D:\LHX\7.5 contest\t1.cpp:26 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 336)
        (nil)))
(jump_insn 274 273 789 31 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 271)
            (pc))) D:\LHX\7.5 contest\t1.cpp:26 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 9100 (nil)))
 -> 271)
;;  succ:       28 [91.0%]  (DFS_BACK)
;;              34 [9.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104 106 135 136
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104 106 135 136

;; basic block 33, loop depth 1, count 0, freq 2
;;  prev block 31, next block 34, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       26 [9.0%] 
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u328(6){ }u329(7){ }u330(16){ }u331(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 106
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 136
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 106
;; live  gen 	 136
;; live  kill	
(code_label 789 274 788 33 188 "" [1 uses])
(note 788 789 18 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(insn 18 788 275 33 (set (reg/v:DI 136 [ tmod ])
        (const_int 1 [0x1])) D:\LHX\7.5 contest\t1.cpp:25 89 {*movdi_internal}
     (nil))
;;  succ:       34 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 106 136
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 106 136

;; basic block 34, loop depth 1, count 0, freq 27, maybe hot
;;  prev block 33, next block 35, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       33 [100.0%]  (FALLTHRU)
;;              31 [9.0%]  (FALLTHRU)
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u332(6){ }u333(7){ }u334(16){ }u335(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 106 136
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 106
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 106 136
;; live  gen 	 17 [flags]
;; live  kill	
(code_label 275 18 276 34 131 "" [0 uses])
(note 276 275 277 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(insn 277 276 278 34 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 106 [ D.83218 ])
            (mem/c:SI (symbol_ref:SI ("n") [flags 0x2]  <var_decl 06e5d660 n>) [21 n+0 S4 A32]))) D:\LHX\7.5 contest\t1.cpp:49 7 {*cmpsi_1}
     (nil))
(jump_insn 278 277 279 34 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 791)
            (pc))) D:\LHX\7.5 contest\t1.cpp:49 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (int_list:REG_BR_PROB 900 (nil)))
 -> 791)
;;  succ:       35 [91.0%]  (FALLTHRU)
;;              103 [9.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 106 136
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 106 136

;; basic block 35, loop depth 1, count 0, freq 24, maybe hot
;;  prev block 34, next block 36, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       34 [91.0%]  (FALLTHRU)
;; bb 35 artificial_defs: { }
;; bb 35 artificial_uses: { u338(6){ }u339(7){ }u340(16){ }u341(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 106 136
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 106
;; lr  def 	 83 122 123 189
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 106 136
;; live  gen 	 83 122 123 189
;; live  kill	
(note 279 278 19 35 [bb 35] NOTE_INSN_BASIC_BLOCK)
(insn 19 279 20 35 (set (reg:SI 122 [ D.83218 ])
        (reg:SI 106 [ D.83218 ])) D:\LHX\7.5 contest\t1.cpp:49 90 {*movsi_internal}
     (nil))
(insn 20 19 21 35 (set (reg/f:SI 189 [ __i$_M_node ])
        (const_int 0 [0])) D:\LHX\7.5 contest\t1.cpp:49 90 {*movsi_internal}
     (nil))
(insn 21 20 22 35 (set (reg/v:SI 83 [ tmp ])
        (const_int 0 [0])) D:\LHX\7.5 contest\t1.cpp:49 90 {*movsi_internal}
     (nil))
(insn 22 21 575 35 (set (reg/v:SI 123 [ i ])
        (const_int 1 [0x1])) D:\LHX\7.5 contest\t1.cpp:49 90 {*movsi_internal}
     (nil))
;;  succ:       36 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 106 122 123 136 189
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 106 122 123 136 189

;; basic block 36, loop depth 2, count 0, freq 270, maybe hot
;;  prev block 35, next block 37, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       35 [100.0%]  (FALLTHRU)
;;              102 [100.0%]  (FALLTHRU,DFS_BACK)
;; bb 36 artificial_defs: { }
;; bb 36 artificial_uses: { u343(6){ }u344(7){ }u345(16){ }u346(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 106 122 123 136 189
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 106 122 123 136 189
;; lr  def 	 17 [flags] 112 113 339 340 341 342 343 344 345 346 347 350 427 428
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 106 122 123 136 189
;; live  gen 	 17 [flags] 112 113 339 340 341 342 343 344 345 346 347 350 427 428
;; live  kill	 17 [flags]
(code_label 575 22 280 36 170 "" [0 uses])
(note 280 575 283 36 [bb 36] NOTE_INSN_BASIC_BLOCK)
(insn 283 280 284 36 (parallel [
            (set (reg:SI 339)
                (plus:SI (reg/v:SI 123 [ i ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) D:\LHX\7.5 contest\t1.cpp:50 220 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 284 283 285 36 (set (reg:SI 341)
        (mem:SI (plus:SI (mult:SI (reg:SI 339)
                    (const_int 8 [0x8]))
                (symbol_ref:SI ("pre") [flags 0x2]  <var_decl 06e5d8a0 pre>)) [34 pre S4 A64])) D:\LHX\7.5 contest\t1.cpp:50 90 {*movsi_internal}
     (nil))
(insn 285 284 286 36 (parallel [
            (set (reg:SI 340)
                (mult:SI (reg:SI 341)
                    (subreg:SI (reg/v:DI 136 [ tmod ]) 4)))
            (clobber (reg:CC 17 flags))
        ]) D:\LHX\7.5 contest\t1.cpp:50 306 {*mulsi3_1}
     (expr_list:REG_DEAD (reg:SI 341)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 286 285 287 36 (set (reg:SI 343)
        (mem:SI (plus:SI (mult:SI (reg:SI 339)
                    (const_int 8 [0x8]))
                (const:SI (plus:SI (symbol_ref:SI ("pre") [flags 0x2]  <var_decl 06e5d8a0 pre>)
                        (const_int 4 [0x4])))) [34 pre S4 A32])) D:\LHX\7.5 contest\t1.cpp:50 90 {*movsi_internal}
     (nil))
(insn 287 286 288 36 (parallel [
            (set (reg:SI 342)
                (mult:SI (reg:SI 343)
                    (subreg:SI (reg/v:DI 136 [ tmod ]) 0)))
            (clobber (reg:CC 17 flags))
        ]) D:\LHX\7.5 contest\t1.cpp:50 306 {*mulsi3_1}
     (expr_list:REG_DEAD (reg:SI 343)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 288 287 289 36 (parallel [
            (set (reg:SI 344)
                (plus:SI (reg:SI 340)
                    (reg:SI 342)))
            (clobber (reg:CC 17 flags))
        ]) D:\LHX\7.5 contest\t1.cpp:50 220 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 342)
        (expr_list:REG_DEAD (reg:SI 340)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 289 288 290 36 (parallel [
            (set (reg:DI 345 [ D.83220 ])
                (mult:DI (zero_extend:DI (mem:SI (plus:SI (mult:SI (reg:SI 339)
                                    (const_int 8 [0x8]))
                                (symbol_ref:SI ("pre") [flags 0x2]  <var_decl 06e5d8a0 pre>)) [34 pre S4 A64]))
                    (zero_extend:DI (subreg:SI (reg/v:DI 136 [ tmod ]) 0))))
            (clobber (reg:CC 17 flags))
        ]) D:\LHX\7.5 contest\t1.cpp:50 323 {*umulsidi3_1}
     (expr_list:REG_DEAD (reg:SI 339)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 290 289 291 36 (parallel [
            (set (reg:SI 346)
                (plus:SI (reg:SI 344)
                    (subreg:SI (reg:DI 345 [ D.83220 ]) 4)))
            (clobber (reg:CC 17 flags))
        ]) D:\LHX\7.5 contest\t1.cpp:50 220 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 344)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 291 290 293 36 (set (subreg:SI (reg:DI 345 [ D.83220 ]) 4)
        (reg:SI 346)) D:\LHX\7.5 contest\t1.cpp:50 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 346)
        (nil)))
(insn 293 291 294 36 (set (reg:DI 347)
        (mem:DI (plus:SI (mult:SI (reg:SI 106 [ D.83218 ])
                    (const_int 8 [0x8]))
                (symbol_ref:SI ("pre") [flags 0x2]  <var_decl 06e5d8a0 pre>)) [34 pre S8 A64])) D:\LHX\7.5 contest\t1.cpp:50 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:SI 337)
        (expr_list:REG_DEAD (reg:SI 106 [ D.83218 ])
            (nil))))
(insn 294 293 296 36 (parallel [
            (set (reg/v:DI 112 [ t1 ])
                (minus:DI (reg:DI 347)
                    (reg:DI 345 [ D.83220 ])))
            (clobber (reg:CC 17 flags))
        ]) D:\LHX\7.5 contest\t1.cpp:50 259 {*subdi3_doubleword}
     (expr_list:REG_DEAD (reg:DI 347)
        (expr_list:REG_DEAD (reg:DI 345 [ D.83220 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 296 294 298 36 (set (reg:DI 113 [ D.83220 ])
        (mem:DI (plus:SI (mult:SI (reg/v:SI 123 [ i ])
                    (const_int 8 [0x8]))
                (symbol_ref:SI ("suf") [flags 0x2]  <var_decl 06e5d9c0 suf>)) [34 suf S8 A64])) D:\LHX\7.5 contest\t1.cpp:51 89 {*movdi_internal}
     (nil))
(insn 298 296 863 36 (parallel [
            (set (reg:SI 350)
                (plus:SI (reg/v:SI 123 [ i ])
                    (reg:SI 122 [ D.83218 ])))
            (clobber (reg:CC 17 flags))
        ]) D:\LHX\7.5 contest\t1.cpp:51 220 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 122 [ D.83218 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 863 298 864 36 (set (reg:SI 427 [ D.83220 ])
        (mem:SI (plus:SI (mult:SI (reg:SI 350)
                    (const_int 8 [0x8]))
                (symbol_ref:SI ("suf") [flags 0x2]  <var_decl 06e5d9c0 suf>)) [34 suf S4 A64])) D:\LHX\7.5 contest\t1.cpp:51 90 {*movsi_internal}
     (nil))
(insn 864 863 300 36 (set (reg:SI 428 [ D.83220+4 ])
        (mem:SI (plus:SI (mult:SI (reg:SI 350)
                    (const_int 8 [0x8]))
                (const:SI (plus:SI (symbol_ref:SI ("suf") [flags 0x2]  <var_decl 06e5d9c0 suf>)
                        (const_int 4 [0x4])))) [34 suf S4 A32])) D:\LHX\7.5 contest\t1.cpp:51 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 350)
        (expr_list:REG_DEAD (reg/f:SI 348)
            (nil))))
(insn 300 864 301 36 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:SI 189 [ __i$_M_node ])
            (const_int 0 [0]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1260 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 301 300 302 36 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 793)
            (pc))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1260 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 900 (nil)))
 -> 793)
;;  succ:       37 [91.0%]  (FALLTHRU)
;;              114 [9.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 189 427 428
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 189 427 428

;; basic block 37, loop depth 2, count 0, freq 245, maybe hot
;;  prev block 36, next block 38, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       36 [91.0%]  (FALLTHRU)
;; bb 37 artificial_defs: { }
;; bb 37 artificial_uses: { u379(6){ }u380(7){ }u381(16){ }u382(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 189 427 428
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 203
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 189 427 428
;; live  gen 	 203
;; live  kill	
(note 302 301 23 37 [bb 37] NOTE_INSN_BASIC_BLOCK)
(insn 23 302 320 37 (set (reg/f:SI 203 [ __i$_M_node ])
        (const:SI (plus:SI (symbol_ref:SI ("s") [flags 0x2]  <var_decl 06d9cd20 s>)
                (const_int 4 [0x4])))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1260 90 {*movsi_internal}
     (nil))
;;  succ:       38 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 189 203 427 428
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 189 203 427 428

;; basic block 38, loop depth 3, count 0, freq 2725, maybe hot
;;  prev block 37, next block 39, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       37 [100.0%]  (FALLTHRU)
;;              43 [91.0%]  (DFS_BACK)
;; bb 38 artificial_defs: { }
;; bb 38 artificial_uses: { u383(6){ }u384(7){ }u385(16){ }u386(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 189 203 427 428
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 112 189
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 189 203 427 428
;; live  gen 	 17 [flags]
;; live  kill	
(code_label 320 23 303 38 139 "" [1 uses])
(note 303 320 304 38 [bb 38] NOTE_INSN_BASIC_BLOCK)
(insn 304 303 305 38 (set (reg:CC 17 flags)
        (compare:CC (subreg:SI (reg/v:DI 112 [ t1 ]) 4)
            (mem:SI (plus:SI (reg/f:SI 189 [ __i$_M_node ])
                    (const_int 20 [0x14])) [34 MEM[(const long long unsigned int &)__i$_M_node_423 + 16]+4 S4 A32]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1261 7 {*cmpsi_1}
     (nil))
(jump_insn 305 304 818 38 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 315)
            (pc))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1261 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 315)
;;  succ:       42 [50.0%] 
;;              39 [50.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 189 203 427 428
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 189 203 427 428

;; basic block 39, loop depth 3, count 0, freq 1363, maybe hot
;;  prev block 38, next block 40, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       38 [50.0%]  (FALLTHRU)
;; bb 39 artificial_defs: { }
;; bb 39 artificial_uses: { u390(6){ }u391(7){ }u392(16){ }u393(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 189 203 427 428
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 112 189
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 189 203 427 428
;; live  gen 	 17 [flags]
;; live  kill	
(note 818 305 306 39 [bb 39] NOTE_INSN_BASIC_BLOCK)
(insn 306 818 307 39 (set (reg:CC 17 flags)
        (compare:CC (subreg:SI (reg/v:DI 112 [ t1 ]) 4)
            (mem:SI (plus:SI (reg/f:SI 189 [ __i$_M_node ])
                    (const_int 20 [0x14])) [34 MEM[(const long long unsigned int &)__i$_M_node_423 + 16]+4 S4 A32]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1261 7 {*cmpsi_1}
     (nil))
(jump_insn 307 306 819 39 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 852)
            (pc))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1261 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 852)
;;  succ:       41 [50.0%] 
;;              40 [50.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 189 203 427 428
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 189 203 427 428

;; basic block 40, loop depth 3, count 0, freq 682, maybe hot
;;  prev block 39, next block 41, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       39 [50.0%]  (FALLTHRU)
;; bb 40 artificial_defs: { }
;; bb 40 artificial_uses: { u397(6){ }u398(7){ }u399(16){ }u400(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 189 203 427 428
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 112 189
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 189 203 427 428
;; live  gen 	 17 [flags]
;; live  kill	
(note 819 307 308 40 [bb 40] NOTE_INSN_BASIC_BLOCK)
(insn 308 819 309 40 (set (reg:CC 17 flags)
        (compare:CC (subreg:SI (reg/v:DI 112 [ t1 ]) 0)
            (mem:SI (plus:SI (reg/f:SI 189 [ __i$_M_node ])
                    (const_int 16 [0x10])) [34 MEM[(const long long unsigned int &)__i$_M_node_423 + 16]+0 S4 A64]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1261 7 {*cmpsi_1}
     (nil))
(jump_insn 309 308 852 40 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 315)
            (pc))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1261 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 315)
;;  succ:       42 [50.0%] 
;;              41 [50.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 189 203 427 428
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 189 203 427 428

;; basic block 41, loop depth 3, count 0, freq 1363, maybe hot
;; Invalid sum of incoming frequencies 1023, should be 1363
;;  prev block 40, next block 42, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       40 [50.0%]  (FALLTHRU)
;;              39 [50.0%] 
;; bb 41 artificial_defs: { }
;; bb 41 artificial_uses: { u404(6){ }u405(7){ }u406(16){ }u407(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 189 427 428
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 189
;; lr  def 	 183 189 203
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 189 427 428
;; live  gen 	 183 189 203
;; live  kill	
(code_label 852 309 311 41 198 "" [1 uses])
(note 311 852 312 41 [bb 41] NOTE_INSN_BASIC_BLOCK)
(insn 312 311 24 41 (set (reg/f:SI 183 [ __i$_M_node ])
        (mem/f:SI (plus:SI (reg/f:SI 189 [ __i$_M_node ])
                (const_int 8 [0x8])) [6 MEM[(struct _Rb_tree_node_base * *)__i$_M_node_423 + 8B]+0 S4 A32])) 90 {*movsi_internal}
     (nil))
(insn 24 312 25 41 (set (reg/f:SI 203 [ __i$_M_node ])
        (reg/f:SI 189 [ __i$_M_node ])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1261 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 189 [ __i$_M_node ])
        (nil)))
(insn 25 24 315 41 (set (reg/f:SI 189 [ __i$_M_node ])
        (reg/f:SI 183 [ __i$_M_node ])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1262 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 183 [ __i$_M_node ])
        (nil)))
;;  succ:       43 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 189 203 427 428
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 189 203 427 428

;; basic block 42, loop depth 3, count 0, freq 1363, maybe hot
;; Invalid sum of incoming frequencies 1704, should be 1363
;;  prev block 41, next block 43, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       38 [50.0%] 
;;              40 [50.0%] 
;; bb 42 artificial_defs: { }
;; bb 42 artificial_uses: { u411(6){ }u412(7){ }u413(16){ }u414(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 189 203 427 428
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 189
;; lr  def 	 189
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 189 203 427 428
;; live  gen 	 189
;; live  kill	
(code_label 315 25 316 42 136 "" [2 uses])
(note 316 315 317 42 [bb 42] NOTE_INSN_BASIC_BLOCK)
(insn 317 316 318 42 (set (reg/f:SI 189 [ __i$_M_node ])
        (mem/f:SI (plus:SI (reg/f:SI 189 [ __i$_M_node ])
                (const_int 12 [0xc])) [6 MEM[(struct _Rb_tree_node_base * *)__i$_M_node_423 + 12B]+0 S4 A32])) 90 {*movsi_internal}
     (nil))
;;  succ:       43 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 189 203 427 428
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 189 203 427 428

;; basic block 43, loop depth 3, count 0, freq 2725, maybe hot
;;  prev block 42, next block 44, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       41 [100.0%]  (FALLTHRU)
;;              42 [100.0%]  (FALLTHRU)
;; bb 43 artificial_defs: { }
;; bb 43 artificial_uses: { u416(6){ }u417(7){ }u418(16){ }u419(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 189 203 427 428
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 189
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 189 203 427 428
;; live  gen 	 17 [flags]
;; live  kill	
(code_label 318 317 319 43 138 "" [0 uses])
(note 319 318 321 43 [bb 43] NOTE_INSN_BASIC_BLOCK)
(insn 321 319 322 43 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:SI 189 [ __i$_M_node ])
            (const_int 0 [0]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1260 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 322 321 323 43 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 320)
            (pc))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1260 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 9100 (nil)))
 -> 320)
;;  succ:       38 [91.0%]  (DFS_BACK)
;;              44 [9.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 189 203 427 428
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 189 203 427 428

;; basic block 44, loop depth 2, count 0, freq 245, maybe hot
;;  prev block 43, next block 45, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       43 [9.0%]  (FALLTHRU)
;; bb 44 artificial_defs: { }
;; bb 44 artificial_uses: { u422(6){ }u423(7){ }u424(16){ }u425(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 203 427 428
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 203
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 203 427 428
;; live  gen 	 17 [flags]
;; live  kill	
(note 323 322 324 44 [bb 44] NOTE_INSN_BASIC_BLOCK)
(insn 324 323 325 44 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:SI 203 [ __i$_M_node ])
            (const:SI (plus:SI (symbol_ref:SI ("s") [flags 0x2]  <var_decl 06d9cd20 s>)
                    (const_int 4 [0x4]))))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_map.h:498 7 {*cmpsi_1}
     (nil))
(jump_insn 325 324 326 44 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 661)
            (pc))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_map.h:498 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 671 (nil)))
 -> 661)
;;  succ:       116 [6.7%] 
;;              45 [93.3%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 203 427 428
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 203 427 428

;; basic block 45, loop depth 2, count 0, freq 229, maybe hot
;;  prev block 44, next block 46, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       44 [93.3%]  (FALLTHRU)
;; bb 45 artificial_defs: { }
;; bb 45 artificial_uses: { u429(6){ }u430(7){ }u431(16){ }u432(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 203 427 428
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 112 203
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 203 427 428
;; live  gen 	 17 [flags]
;; live  kill	
(note 326 325 327 45 [bb 45] NOTE_INSN_BASIC_BLOCK)
(insn 327 326 328 45 (set (reg:CC 17 flags)
        (compare:CC (subreg:SI (reg/v:DI 112 [ t1 ]) 4)
            (mem:SI (plus:SI (reg/f:SI 203 [ __i$_M_node ])
                    (const_int 20 [0x14])) [34 MEM[(const long long unsigned int &)__i$_M_node_446 + 16]+4 S4 A32]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_map.h:498 7 {*cmpsi_1}
     (nil))
(jump_insn 328 327 821 45 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 661)
            (pc))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_map.h:498 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 661)
;;  succ:       116 [50.0%] 
;;              46 [50.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 203 427 428
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 203 427 428

;; basic block 46, loop depth 2, count 0, freq 115, maybe hot
;;  prev block 45, next block 47, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       45 [50.0%]  (FALLTHRU)
;; bb 46 artificial_defs: { }
;; bb 46 artificial_uses: { u436(6){ }u437(7){ }u438(16){ }u439(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 203 427 428
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 112 203
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 203 427 428
;; live  gen 	 17 [flags]
;; live  kill	
(note 821 328 329 46 [bb 46] NOTE_INSN_BASIC_BLOCK)
(insn 329 821 330 46 (set (reg:CC 17 flags)
        (compare:CC (subreg:SI (reg/v:DI 112 [ t1 ]) 4)
            (mem:SI (plus:SI (reg/f:SI 203 [ __i$_M_node ])
                    (const_int 20 [0x14])) [34 MEM[(const long long unsigned int &)__i$_M_node_446 + 16]+4 S4 A32]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_map.h:498 7 {*cmpsi_1}
     (nil))
(jump_insn 330 329 822 46 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 381)
            (pc))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_map.h:498 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 381)
;;  succ:       57 [50.0%] 
;;              47 [50.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 203 427 428
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 203 427 428

;; basic block 47, loop depth 2, count 0, freq 58, maybe hot
;;  prev block 46, next block 48, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       46 [50.0%]  (FALLTHRU)
;; bb 47 artificial_defs: { }
;; bb 47 artificial_uses: { u443(6){ }u444(7){ }u445(16){ }u446(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 203 427 428
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 112 203
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 203 427 428
;; live  gen 	 17 [flags]
;; live  kill	
(note 822 330 331 47 [bb 47] NOTE_INSN_BASIC_BLOCK)
(insn 331 822 332 47 (set (reg:CC 17 flags)
        (compare:CC (subreg:SI (reg/v:DI 112 [ t1 ]) 0)
            (mem:SI (plus:SI (reg/f:SI 203 [ __i$_M_node ])
                    (const_int 16 [0x10])) [34 MEM[(const long long unsigned int &)__i$_M_node_446 + 16]+0 S4 A64]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_map.h:498 7 {*cmpsi_1}
     (nil))
(jump_insn 332 331 678 47 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 661)
            (pc))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_map.h:498 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 661)
;;  succ:       116 [50.0%] 
;;              57 [50.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 203 427 428
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 203 427 428

;; basic block 48, loop depth 2, count 0, freq 18, maybe hot
;; Invalid sum of incoming frequencies 122, should be 18
;;  prev block 47, next block 49, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       116 [78.4%] 
;; bb 48 artificial_defs: { }
;; bb 48 artificial_uses: { u450(6){ }u451(7){ }u452(16){ }u453(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 192 203 427 428 437 438
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 437
;; lr  def 	 17 [flags] 352
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 192 203 427 428 437 438
;; live  gen 	 17 [flags] 352
;; live  kill	
(code_label 678 332 337 48 176 "" [1 uses])
(note 337 678 338 48 [bb 48] NOTE_INSN_BASIC_BLOCK)
(insn 338 337 339 48 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 437 [ __res ])
            (const_int 0 [0]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1694 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 437 [ __res ])
        (nil)))
(insn 339 338 340 48 (set (reg:QI 352 [ D.83221 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1694 592 {*setcc_qi}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil)))
(insn 340 339 341 48 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 352 [ D.83221 ])
            (const_int 0 [0]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1694 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 352 [ D.83221 ])
        (nil)))
(jump_insn 341 340 824 48 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 801)
            (pc))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1694 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 507 (nil)))
 -> 801)
;;  succ:       54 [5.1%] 
;;              49 [94.9%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 192 203 427 428 438
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 192 203 427 428 438

;; basic block 49, loop depth 2, count 0, freq 17, maybe hot
;;  prev block 48, next block 50, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       48 [94.9%]  (FALLTHRU)
;; bb 49 artificial_defs: { }
;; bb 49 artificial_uses: { u458(6){ }u459(7){ }u460(16){ }u461(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 192 203 427 428 438
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 438
;; lr  def 	 17 [flags] 354
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 192 203 427 428 438
;; live  gen 	 17 [flags] 354
;; live  kill	
(note 824 341 342 49 [bb 49] NOTE_INSN_BASIC_BLOCK)
(insn 342 824 343 49 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 438 [ __res+4 ])
            (const:SI (plus:SI (symbol_ref:SI ("s") [flags 0x2]  <var_decl 06d9cd20 s>)
                    (const_int 4 [0x4]))))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1694 7 {*cmpsi_1}
     (nil))
(insn 343 342 344 49 (set (reg:QI 354 [ D.83221 ])
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1694 592 {*setcc_qi}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil)))
(insn 344 343 345 49 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 354 [ D.83221 ])
            (const_int 0 [0]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1694 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 354 [ D.83221 ])
        (nil)))
(jump_insn 345 344 346 49 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 801)
            (pc))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1694 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 534 (nil)))
 -> 801)
;;  succ:       54 [5.3%] 
;;              50 [94.7%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 192 203 427 428 438
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 192 203 427 428 438

;; basic block 50, loop depth 2, count 0, freq 16, maybe hot
;;  prev block 49, next block 51, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       49 [94.7%]  (FALLTHRU)
;; bb 50 artificial_defs: { }
;; bb 50 artificial_uses: { u466(6){ }u467(7){ }u468(16){ }u469(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 192 203 427 428 438
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 192 203
;; lr  def 	 17 [flags] 120 441 442
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 192 203 427 428 438
;; live  gen 	 17 [flags] 120 441 442
;; live  kill	
(note 346 345 347 50 [bb 50] NOTE_INSN_BASIC_BLOCK)
(insn 347 346 865 50 (set (reg/v:QI 120 [ __insert_left ])
        (const_int 1 [0x1])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1694 93 {*movqi_internal}
     (nil))
(insn 865 347 866 50 (set (reg:SI 441 [ MEM[(const long long unsigned int &)__i$_M_node_205 + 16] ])
        (mem:SI (plus:SI (reg/f:SI 203 [ __i$_M_node ])
                (const_int 16 [0x10])) [34 MEM[(const long long unsigned int &)__i$_M_node_205 + 16]+0 S4 A64])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1694 90 {*movsi_internal}
     (nil))
(insn 866 865 349 50 (set (reg:SI 442 [+4 ])
        (mem:SI (plus:SI (reg/f:SI 203 [ __i$_M_node ])
                (const_int 20 [0x14])) [34 MEM[(const long long unsigned int &)__i$_M_node_205 + 16]+4 S4 A32])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1694 90 {*movsi_internal}
     (nil))
(insn 349 866 350 50 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 442 [+4 ])
            (mem:SI (plus:SI (reg:SI 438 [ __res+4 ])
                    (const_int 20 [0x14])) [34 MEM[(const long long unsigned int &)__res$second_203 + 16]+4 S4 A32]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1694 7 {*cmpsi_1}
     (nil))
(jump_insn 350 349 825 50 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 358)
            (pc))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1694 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 358)
;;  succ:       55 [50.0%] 
;;              51 [50.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 120 123 136 192 203 427 428 438 441 442
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 120 123 136 192 203 427 428 438 441 442

;; basic block 51, loop depth 2, count 0, freq 8, maybe hot
;;  prev block 50, next block 52, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       50 [50.0%]  (FALLTHRU)
;; bb 51 artificial_defs: { }
;; bb 51 artificial_uses: { u475(6){ }u476(7){ }u477(16){ }u478(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 120 123 136 192 203 427 428 438 441 442
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 192 442
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 120 123 136 192 203 427 428 438 441 442
;; live  gen 	 17 [flags]
;; live  kill	
(note 825 350 351 51 [bb 51] NOTE_INSN_BASIC_BLOCK)
(insn 351 825 352 51 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 442 [+4 ])
            (mem:SI (plus:SI (reg:SI 438 [ __res+4 ])
                    (const_int 20 [0x14])) [34 MEM[(const long long unsigned int &)__res$second_203 + 16]+4 S4 A32]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1694 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 442 [+4 ])
        (nil)))
(jump_insn 352 351 826 51 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 355)
            (pc))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1694 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 355)
;;  succ:       53 [50.0%] 
;;              52 [50.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 120 123 136 192 203 427 428 438 441
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 120 123 136 192 203 427 428 438 441

;; basic block 52, loop depth 2, count 0, freq 4
;;  prev block 51, next block 53, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       51 [50.0%]  (FALLTHRU)
;; bb 52 artificial_defs: { }
;; bb 52 artificial_uses: { u482(6){ }u483(7){ }u484(16){ }u485(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 120 123 136 192 203 427 428 438 441
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 192 441
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 120 123 136 192 203 427 428 438 441
;; live  gen 	 17 [flags]
;; live  kill	
(note 826 352 353 52 [bb 52] NOTE_INSN_BASIC_BLOCK)
(insn 353 826 354 52 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 441 [ MEM[(const long long unsigned int &)__i$_M_node_205 + 16] ])
            (mem:SI (plus:SI (reg:SI 438 [ __res+4 ])
                    (const_int 16 [0x10])) [34 MEM[(const long long unsigned int &)__res$second_203 + 16]+0 S4 A64]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1694 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 441 [ MEM[(const long long unsigned int &)__i$_M_node_205 + 16] ])
        (nil)))
(jump_insn 354 353 355 52 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 358)
            (pc))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1694 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 358)
;;  succ:       55 [50.0%] 
;;              53 [50.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 120 123 136 203 427 428 438
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 120 123 136 203 427 428 438

;; basic block 53, loop depth 2, count 0, freq 6, maybe hot
;;  prev block 52, next block 54, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       51 [50.0%] 
;;              52 [50.0%]  (FALLTHRU)
;; bb 53 artificial_defs: { }
;; bb 53 artificial_uses: { u489(6){ }u490(7){ }u491(16){ }u492(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 203 427 428 438
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 120
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 203 427 428 438
;; live  gen 	 120
;; live  kill	
(code_label 355 354 827 53 144 "" [1 uses])
(note 827 355 356 53 [bb 53] NOTE_INSN_BASIC_BLOCK)
(insn 356 827 801 53 (set (reg/v:QI 120 [ __insert_left ])
        (const_int 0 [0])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1694 93 {*movqi_internal}
     (nil))
;;  succ:       55 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 120 123 136 203 427 428 438
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 120 123 136 203 427 428 438

;; basic block 54, loop depth 2, count 0, freq 2
;;  prev block 53, next block 55, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       49 [5.3%] 
;;              48 [5.1%] 
;; bb 54 artificial_defs: { }
;; bb 54 artificial_uses: { u493(6){ }u494(7){ }u495(16){ }u496(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 203 427 428 438
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 120
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 203 427 428 438
;; live  gen 	 120
;; live  kill	
(code_label 801 356 800 54 192 "" [2 uses])
(note 800 801 27 54 [bb 54] NOTE_INSN_BASIC_BLOCK)
(insn 27 800 358 54 (set (reg/v:QI 120 [ __insert_left ])
        (const_int 1 [0x1])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1694 93 {*movqi_internal}
     (nil))
;;  succ:       55 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 120 123 136 203 427 428 438
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 120 123 136 203 427 428 438

;; basic block 55, loop depth 2, count 0, freq 82, maybe hot
;;  prev block 54, next block 56, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       54 [100.0%]  (FALLTHRU)
;;              53 [100.0%]  (FALLTHRU)
;;              50 [50.0%] 
;;              52 [50.0%] 
;; bb 55 artificial_defs: { }
;; bb 55 artificial_uses: { u497(6){ }u498(7){ }u499(16){ }u500(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 120 123 136 203 427 428 438
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 120 203 438
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 356 361 362
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 120 123 136 203 427 428 438
;; live  gen 	 356 361 362
;; live  kill	 17 [flags]
(code_label 358 27 359 55 142 "" [2 uses])
(note 359 358 360 55 [bb 55] NOTE_INSN_BASIC_BLOCK)
(insn 360 359 361 55 (set (mem:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [0  S4 A32])
        (const:SI (plus:SI (symbol_ref:SI ("s") [flags 0x2]  <var_decl 06d9cd20 s>)
                (const_int 4 [0x4])))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1696 90 {*movsi_internal}
     (nil))
(insn 361 360 362 55 (set (mem:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [0  S4 A32])
        (reg:SI 438 [ __res+4 ])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1696 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 192 [ __res$second ])
        (nil)))
(insn 362 361 363 55 (set (mem:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [0  S4 A32])
        (reg/f:SI 203 [ __i$_M_node ])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1696 90 {*movsi_internal}
     (nil))
(insn 363 362 364 55 (set (reg:SI 356 [ __insert_left ])
        (zero_extend:SI (reg/v:QI 120 [ __insert_left ]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1697 138 {*zero_extendqisi2}
     (expr_list:REG_DEAD (reg/v:QI 120 [ __insert_left ])
        (nil)))
(insn 364 363 365 55 (set (mem:SI (reg/f:SI 7 sp) [0  S4 A32])
        (reg:SI 356 [ __insert_left ])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1697 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 356 [ __insert_left ])
        (nil)))
(call_insn 365 364 371 55 (call (mem:QI (symbol_ref:SI ("_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_") [flags 0x43]  <function_decl 06b77200 _Rb_tree_insert_and_rebalance>) [0 _Rb_tree_insert_and_rebalance S1 A8])
        (const_int 16 [0x10])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1696 641 {*call}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (mem:SI (reg/f:SI 7 sp) [0  S4 A32]))
        (expr_list:SI (use (mem/f:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 4 [0x4])) [0  S4 A32]))
            (expr_list:SI (use (mem/f:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 8 [0x8])) [0  S4 A32]))
                (expr_list:SI (use (mem/f:SI (plus:SI (reg/f:SI 7 sp)
                                (const_int 12 [0xc])) [0  S4 A32]))
                    (nil))))))
(insn 371 365 372 55 (set (reg:SI 362 [ MEM[(struct _Rb_tree *)&s]._M_impl._M_node_count ])
        (mem/c:SI (const:SI (plus:SI (symbol_ref:SI ("s") [flags 0x2]  <var_decl 06d9cd20 s>)
                    (const_int 20 [0x14]))) [21 MEM[(struct _Rb_tree *)&s]._M_impl._M_node_count+0 S4 A32])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1698 90 {*movsi_internal}
     (nil))
(insn 372 371 373 55 (parallel [
            (set (reg:SI 361 [ D.83223 ])
                (plus:SI (reg:SI 362 [ MEM[(struct _Rb_tree *)&s]._M_impl._M_node_count ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1698 220 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 362 [ MEM[(struct _Rb_tree *)&s]._M_impl._M_node_count ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 373 372 376 55 (set (mem/c:SI (const:SI (plus:SI (symbol_ref:SI ("s") [flags 0x2]  <var_decl 06d9cd20 s>)
                    (const_int 20 [0x14]))) [21 MEM[(struct _Rb_tree *)&s]._M_impl._M_node_count+0 S4 A32])
        (reg:SI 361 [ D.83223 ])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1698 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 361 [ D.83223 ])
        (expr_list:REG_DEAD (reg/f:SI 357)
            (nil))))
;;  succ:       57 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 203 427 428
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 203 427 428

;; basic block 56, loop depth 2, count 0, freq 23, maybe hot
;;  prev block 55, next block 57, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       116 [21.6%]  (FALLTHRU)
;; bb 56 artificial_defs: { }
;; bb 56 artificial_uses: { u518(6){ }u519(7){ }u520(16){ }u521(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 203 427 428 437
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 203 437
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 203
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 203 427 428 437
;; live  gen 	 203
;; live  kill	
(note 376 373 377 56 [bb 56] NOTE_INSN_BASIC_BLOCK)
(insn 377 376 378 56 (set (mem:SI (reg/f:SI 7 sp) [0  S4 A32])
        (reg/f:SI 203 [ __i$_M_node ])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/ext/new_allocator.h:110 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 203 [ __i$_M_node ])
        (nil)))
(call_insn 378 377 28 56 (call (mem:QI (symbol_ref:SI ("_ZdlPv") [flags 0x43]  <function_decl 01938e00 operator delete>) [0 operator delete S1 A8])
        (const_int 4 [0x4])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/ext/new_allocator.h:110 641 {*call}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (mem/f:SI (reg/f:SI 7 sp) [0  S4 A32]))
        (nil)))
(insn 28 378 381 56 (set (reg/f:SI 203 [ __i$_M_node ])
        (reg:SI 437 [ __res ])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1794 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 437 [ __res ])
        (nil)))
;;  succ:       57 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 203 427 428
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 203 427 428

;; basic block 57, loop depth 2, count 0, freq 270, maybe hot
;;  prev block 56, next block 58, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       56 [100.0%]  (FALLTHRU)
;;              47 [50.0%]  (FALLTHRU)
;;              46 [50.0%] 
;;              55 [100.0%]  (FALLTHRU)
;; bb 57 artificial_defs: { }
;; bb 57 artificial_uses: { u527(6){ }u528(7){ }u529(16){ }u530(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 203 427 428
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 203
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 203 427 428
;; live  gen 	 17 [flags]
;; live  kill	
(code_label 381 28 382 57 141 "" [1 uses])
(note 382 381 383 57 [bb 57] NOTE_INSN_BASIC_BLOCK)
(insn 383 382 384 57 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:SI (plus:SI (reg/f:SI 203 [ __i$_M_node ])
                    (const_int 24 [0x18])) [21 MEM[(mapped_type &)__i$_M_node_351 + 24]+0 S4 A32])
            (const_int 0 [0]))) D:\LHX\7.5 contest\t1.cpp:53 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg/f:SI 203 [ __i$_M_node ])
        (nil)))
(jump_insn 384 383 385 57 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 721)
            (pc))) D:\LHX\7.5 contest\t1.cpp:53 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 7100 (nil)))
 -> 721)
;;  succ:       58 [29.0%]  (FALLTHRU)
;;              101 [71.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 427 428
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 427 428

;; basic block 58, loop depth 2, count 0, freq 78, maybe hot
;;  prev block 57, next block 59, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       57 [29.0%]  (FALLTHRU)
;; bb 58 artificial_defs: { }
;; bb 58 artificial_uses: { u533(6){ }u534(7){ }u535(16){ }u536(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 427 428
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 113 136 427 428
;; lr  def 	 17 [flags] 117 187 363 364 365 366 367
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 427 428
;; live  gen 	 17 [flags] 117 187 363 364 365 366 367
;; live  kill	 17 [flags]
(note 385 384 386 58 [bb 58] NOTE_INSN_BASIC_BLOCK)
(insn 386 385 387 58 (parallel [
            (set (reg:SI 363)
                (mult:SI (reg:SI 428 [ D.83220+4 ])
                    (subreg:SI (reg/v:DI 136 [ tmod ]) 0)))
            (clobber (reg:CC 17 flags))
        ]) D:\LHX\7.5 contest\t1.cpp:51 306 {*mulsi3_1}
     (expr_list:REG_DEAD (reg:SI 428 [ D.83220+4 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 387 386 388 58 (parallel [
            (set (reg:SI 364)
                (mult:SI (subreg:SI (reg/v:DI 136 [ tmod ]) 4)
                    (reg:SI 427 [ D.83220 ])))
            (clobber (reg:CC 17 flags))
        ]) D:\LHX\7.5 contest\t1.cpp:51 306 {*mulsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 388 387 389 58 (parallel [
            (set (reg:SI 365)
                (plus:SI (reg:SI 363)
                    (reg:SI 364)))
            (clobber (reg:CC 17 flags))
        ]) D:\LHX\7.5 contest\t1.cpp:51 220 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 364)
        (expr_list:REG_DEAD (reg:SI 363)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 389 388 390 58 (parallel [
            (set (reg:DI 366 [ D.83220 ])
                (mult:DI (zero_extend:DI (reg:SI 427 [ D.83220 ]))
                    (zero_extend:DI (subreg:SI (reg/v:DI 136 [ tmod ]) 0))))
            (clobber (reg:CC 17 flags))
        ]) D:\LHX\7.5 contest\t1.cpp:51 323 {*umulsidi3_1}
     (expr_list:REG_DEAD (reg:SI 427 [ D.83220 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 390 389 391 58 (parallel [
            (set (reg:SI 367)
                (plus:SI (reg:SI 365)
                    (subreg:SI (reg:DI 366 [ D.83220 ]) 4)))
            (clobber (reg:CC 17 flags))
        ]) D:\LHX\7.5 contest\t1.cpp:51 220 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 365)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 391 390 393 58 (set (subreg:SI (reg:DI 366 [ D.83220 ]) 4)
        (reg:SI 367)) D:\LHX\7.5 contest\t1.cpp:51 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 367)
        (nil)))
(insn 393 391 395 58 (parallel [
            (set (reg/v:DI 117 [ t2 ])
                (minus:DI (reg:DI 113 [ D.83220 ])
                    (reg:DI 366 [ D.83220 ])))
            (clobber (reg:CC 17 flags))
        ]) D:\LHX\7.5 contest\t1.cpp:51 259 {*subdi3_doubleword}
     (expr_list:REG_DEAD (reg:DI 366 [ D.83220 ])
        (expr_list:REG_DEAD (reg:DI 113 [ D.83220 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 395 393 396 58 (set (reg/f:SI 187 [ __i$_M_node ])
        (mem/f/c:SI (const:SI (plus:SI (symbol_ref:SI ("s") [flags 0x2]  <var_decl 06d9cd20 s>)
                    (const_int 8 [0x8]))) [6 MEM[(struct _Rb_tree_node_base * *)&s + 8B]+0 S4 A32])) 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 368)
        (nil)))
(insn 396 395 397 58 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:SI 187 [ __i$_M_node ])
            (const_int 0 [0]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1260 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 397 396 398 58 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 803)
            (pc))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1260 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 900 (nil)))
 -> 803)
;;  succ:       59 [91.0%]  (FALLTHRU)
;;              117 [9.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 117 123 136 187
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 117 123 136 187

;; basic block 59, loop depth 2, count 0, freq 71, maybe hot
;;  prev block 58, next block 60, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       58 [91.0%]  (FALLTHRU)
;; bb 59 artificial_defs: { }
;; bb 59 artificial_uses: { u554(6){ }u555(7){ }u556(16){ }u557(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 117 123 136 187
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 186
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 117 123 136 187
;; live  gen 	 186
;; live  kill	
(note 398 397 29 59 [bb 59] NOTE_INSN_BASIC_BLOCK)
(insn 29 398 416 59 (set (reg/f:SI 186 [ __i$_M_node ])
        (const:SI (plus:SI (symbol_ref:SI ("s") [flags 0x2]  <var_decl 06d9cd20 s>)
                (const_int 4 [0x4])))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1260 90 {*movsi_internal}
     (nil))
;;  succ:       60 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 117 123 136 186 187
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 117 123 136 186 187

;; basic block 60, loop depth 3, count 0, freq 790, maybe hot
;;  prev block 59, next block 61, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       59 [100.0%]  (FALLTHRU)
;;              65 [91.0%]  (DFS_BACK)
;; bb 60 artificial_defs: { }
;; bb 60 artificial_uses: { u558(6){ }u559(7){ }u560(16){ }u561(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 117 123 136 186 187
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 117 187
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 117 123 136 186 187
;; live  gen 	 17 [flags]
;; live  kill	
(code_label 416 29 399 60 151 "" [1 uses])
(note 399 416 400 60 [bb 60] NOTE_INSN_BASIC_BLOCK)
(insn 400 399 401 60 (set (reg:CC 17 flags)
        (compare:CC (subreg:SI (reg/v:DI 117 [ t2 ]) 4)
            (mem:SI (plus:SI (reg/f:SI 187 [ __i$_M_node ])
                    (const_int 20 [0x14])) [34 MEM[(const long long unsigned int &)__i$_M_node_425 + 16]+4 S4 A32]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1261 7 {*cmpsi_1}
     (nil))
(jump_insn 401 400 829 60 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 411)
            (pc))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1261 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 411)
;;  succ:       64 [50.0%] 
;;              61 [50.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 117 123 136 186 187
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 117 123 136 186 187

;; basic block 61, loop depth 3, count 0, freq 395, maybe hot
;;  prev block 60, next block 62, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       60 [50.0%]  (FALLTHRU)
;; bb 61 artificial_defs: { }
;; bb 61 artificial_uses: { u565(6){ }u566(7){ }u567(16){ }u568(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 117 123 136 186 187
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 117 187
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 117 123 136 186 187
;; live  gen 	 17 [flags]
;; live  kill	
(note 829 401 402 61 [bb 61] NOTE_INSN_BASIC_BLOCK)
(insn 402 829 403 61 (set (reg:CC 17 flags)
        (compare:CC (subreg:SI (reg/v:DI 117 [ t2 ]) 4)
            (mem:SI (plus:SI (reg/f:SI 187 [ __i$_M_node ])
                    (const_int 20 [0x14])) [34 MEM[(const long long unsigned int &)__i$_M_node_425 + 16]+4 S4 A32]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1261 7 {*cmpsi_1}
     (nil))
(jump_insn 403 402 830 61 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 853)
            (pc))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1261 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 853)
;;  succ:       63 [50.0%] 
;;              62 [50.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 117 123 136 186 187
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 117 123 136 186 187

;; basic block 62, loop depth 3, count 0, freq 198, maybe hot
;;  prev block 61, next block 63, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       61 [50.0%]  (FALLTHRU)
;; bb 62 artificial_defs: { }
;; bb 62 artificial_uses: { u572(6){ }u573(7){ }u574(16){ }u575(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 117 123 136 186 187
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 117 187
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 117 123 136 186 187
;; live  gen 	 17 [flags]
;; live  kill	
(note 830 403 404 62 [bb 62] NOTE_INSN_BASIC_BLOCK)
(insn 404 830 405 62 (set (reg:CC 17 flags)
        (compare:CC (subreg:SI (reg/v:DI 117 [ t2 ]) 0)
            (mem:SI (plus:SI (reg/f:SI 187 [ __i$_M_node ])
                    (const_int 16 [0x10])) [34 MEM[(const long long unsigned int &)__i$_M_node_425 + 16]+0 S4 A64]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1261 7 {*cmpsi_1}
     (nil))
(jump_insn 405 404 853 62 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 411)
            (pc))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1261 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 411)
;;  succ:       64 [50.0%] 
;;              63 [50.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 117 123 136 186 187
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 117 123 136 186 187

;; basic block 63, loop depth 3, count 0, freq 395, maybe hot
;;  prev block 62, next block 64, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       62 [50.0%]  (FALLTHRU)
;;              61 [50.0%] 
;; bb 63 artificial_defs: { }
;; bb 63 artificial_uses: { u579(6){ }u580(7){ }u581(16){ }u582(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 117 123 136 187
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 187
;; lr  def 	 186 187 201
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 117 123 136 187
;; live  gen 	 186 187 201
;; live  kill	
(code_label 853 405 407 63 199 "" [1 uses])
(note 407 853 408 63 [bb 63] NOTE_INSN_BASIC_BLOCK)
(insn 408 407 30 63 (set (reg/f:SI 201 [ __i$_M_node ])
        (mem/f:SI (plus:SI (reg/f:SI 187 [ __i$_M_node ])
                (const_int 8 [0x8])) [6 MEM[(struct _Rb_tree_node_base * *)__i$_M_node_425 + 8B]+0 S4 A32])) 90 {*movsi_internal}
     (nil))
(insn 30 408 31 63 (set (reg/f:SI 186 [ __i$_M_node ])
        (reg/f:SI 187 [ __i$_M_node ])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1261 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 187 [ __i$_M_node ])
        (nil)))
(insn 31 30 411 63 (set (reg/f:SI 187 [ __i$_M_node ])
        (reg/f:SI 201 [ __i$_M_node ])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1262 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 201 [ __i$_M_node ])
        (nil)))
;;  succ:       65 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 117 123 136 186 187
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 117 123 136 186 187

;; basic block 64, loop depth 3, count 0, freq 395, maybe hot
;;  prev block 63, next block 65, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       60 [50.0%] 
;;              62 [50.0%] 
;; bb 64 artificial_defs: { }
;; bb 64 artificial_uses: { u586(6){ }u587(7){ }u588(16){ }u589(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 117 123 136 186 187
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 187
;; lr  def 	 187
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 117 123 136 186 187
;; live  gen 	 187
;; live  kill	
(code_label 411 31 412 64 148 "" [2 uses])
(note 412 411 413 64 [bb 64] NOTE_INSN_BASIC_BLOCK)
(insn 413 412 414 64 (set (reg/f:SI 187 [ __i$_M_node ])
        (mem/f:SI (plus:SI (reg/f:SI 187 [ __i$_M_node ])
                (const_int 12 [0xc])) [6 MEM[(struct _Rb_tree_node_base * *)__i$_M_node_425 + 12B]+0 S4 A32])) 90 {*movsi_internal}
     (nil))
;;  succ:       65 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 117 123 136 186 187
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 117 123 136 186 187

;; basic block 65, loop depth 3, count 0, freq 790, maybe hot
;;  prev block 64, next block 66, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       63 [100.0%]  (FALLTHRU)
;;              64 [100.0%]  (FALLTHRU)
;; bb 65 artificial_defs: { }
;; bb 65 artificial_uses: { u591(6){ }u592(7){ }u593(16){ }u594(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 117 123 136 186 187
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 187
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 117 123 136 186 187
;; live  gen 	 17 [flags]
;; live  kill	
(code_label 414 413 415 65 150 "" [0 uses])
(note 415 414 417 65 [bb 65] NOTE_INSN_BASIC_BLOCK)
(insn 417 415 418 65 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:SI 187 [ __i$_M_node ])
            (const_int 0 [0]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1260 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 418 417 419 65 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 416)
            (pc))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1260 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 9100 (nil)))
 -> 416)
;;  succ:       60 [91.0%]  (DFS_BACK)
;;              66 [9.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 117 123 136 186 187
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 117 123 136 186 187

;; basic block 66, loop depth 2, count 0, freq 71, maybe hot
;;  prev block 65, next block 67, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       65 [9.0%]  (FALLTHRU)
;; bb 66 artificial_defs: { }
;; bb 66 artificial_uses: { u597(6){ }u598(7){ }u599(16){ }u600(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 117 123 136 186
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 186
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 117 123 136 186
;; live  gen 	 17 [flags]
;; live  kill	
(note 419 418 420 66 [bb 66] NOTE_INSN_BASIC_BLOCK)
(insn 420 419 421 66 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:SI 186 [ __i$_M_node ])
            (const:SI (plus:SI (symbol_ref:SI ("s") [flags 0x2]  <var_decl 06d9cd20 s>)
                    (const_int 4 [0x4]))))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_map.h:498 7 {*cmpsi_1}
     (nil))
(jump_insn 421 420 422 66 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 685)
            (pc))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_map.h:498 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 662 (nil)))
 -> 685)
;;  succ:       119 [6.6%] 
;;              67 [93.4%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 117 123 136 186
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 117 123 136 186

;; basic block 67, loop depth 2, count 0, freq 66, maybe hot
;;  prev block 66, next block 68, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       66 [93.4%]  (FALLTHRU)
;; bb 67 artificial_defs: { }
;; bb 67 artificial_uses: { u604(6){ }u605(7){ }u606(16){ }u607(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 117 123 136 186
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 117 186
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 117 123 136 186
;; live  gen 	 17 [flags]
;; live  kill	
(note 422 421 423 67 [bb 67] NOTE_INSN_BASIC_BLOCK)
(insn 423 422 424 67 (set (reg:CC 17 flags)
        (compare:CC (subreg:SI (reg/v:DI 117 [ t2 ]) 4)
            (mem:SI (plus:SI (reg/f:SI 186 [ __i$_M_node ])
                    (const_int 20 [0x14])) [34 MEM[(const long long unsigned int &)__i$_M_node_447 + 16]+4 S4 A32]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_map.h:498 7 {*cmpsi_1}
     (nil))
(jump_insn 424 423 832 67 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 685)
            (pc))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_map.h:498 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 685)
;;  succ:       119 [50.0%] 
;;              68 [50.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 117 123 136 186
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 117 123 136 186

;; basic block 68, loop depth 2, count 0, freq 33, maybe hot
;;  prev block 67, next block 69, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       67 [50.0%]  (FALLTHRU)
;; bb 68 artificial_defs: { }
;; bb 68 artificial_uses: { u611(6){ }u612(7){ }u613(16){ }u614(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 117 123 136 186
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 117 186
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 117 123 136 186
;; live  gen 	 17 [flags]
;; live  kill	
(note 832 424 425 68 [bb 68] NOTE_INSN_BASIC_BLOCK)
(insn 425 832 426 68 (set (reg:CC 17 flags)
        (compare:CC (subreg:SI (reg/v:DI 117 [ t2 ]) 4)
            (mem:SI (plus:SI (reg/f:SI 186 [ __i$_M_node ])
                    (const_int 20 [0x14])) [34 MEM[(const long long unsigned int &)__i$_M_node_447 + 16]+4 S4 A32]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_map.h:498 7 {*cmpsi_1}
     (nil))
(jump_insn 426 425 833 68 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 767)
            (pc))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_map.h:498 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 767)
;;  succ:       130 [50.0%] 
;;              69 [50.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 117 123 136 186
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 117 123 136 186

;; basic block 69, loop depth 2, count 0, freq 17, maybe hot
;;  prev block 68, next block 70, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       68 [50.0%]  (FALLTHRU)
;; bb 69 artificial_defs: { }
;; bb 69 artificial_uses: { u618(6){ }u619(7){ }u620(16){ }u621(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 117 123 136 186
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 117 186
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 117 123 136 186
;; live  gen 	 17 [flags]
;; live  kill	
(note 833 426 427 69 [bb 69] NOTE_INSN_BASIC_BLOCK)
(insn 427 833 428 69 (set (reg:CC 17 flags)
        (compare:CC (subreg:SI (reg/v:DI 117 [ t2 ]) 0)
            (mem:SI (plus:SI (reg/f:SI 186 [ __i$_M_node ])
                    (const_int 16 [0x10])) [34 MEM[(const long long unsigned int &)__i$_M_node_447 + 16]+0 S4 A64]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_map.h:498 7 {*cmpsi_1}
     (nil))
(jump_insn 428 427 702 69 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 685)
            (pc))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_map.h:498 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 685)
;;  succ:       119 [50.0%] 
;;              130 [50.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 117 123 136 186
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 117 123 136 186

;; basic block 70, loop depth 2, count 0, freq 5
;;  prev block 69, next block 71, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       119 [78.4%] 
;; bb 70 artificial_defs: { }
;; bb 70 artificial_uses: { u625(6){ }u626(7){ }u627(16){ }u628(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 207 209 435 436
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 435
;; lr  def 	 17 [flags] 370
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 207 209 435 436
;; live  gen 	 17 [flags] 370
;; live  kill	
(code_label 702 428 433 70 178 "" [1 uses])
(note 433 702 434 70 [bb 70] NOTE_INSN_BASIC_BLOCK)
(insn 434 433 435 70 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 435 [ __res ])
            (const_int 0 [0]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1694 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 435 [ __res ])
        (nil)))
(insn 435 434 436 70 (set (reg:QI 370 [ D.83221 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1694 592 {*setcc_qi}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil)))
(insn 436 435 437 70 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 370 [ D.83221 ])
            (const_int 0 [0]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1694 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 370 [ D.83221 ])
        (nil)))
(jump_insn 437 436 835 70 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 811)
            (pc))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1694 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 507 (nil)))
 -> 811)
;;  succ:       76 [5.1%] 
;;              71 [94.9%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 207 209 436
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 207 209 436

;; basic block 71, loop depth 2, count 0, freq 5
;;  prev block 70, next block 72, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       70 [94.9%]  (FALLTHRU)
;; bb 71 artificial_defs: { }
;; bb 71 artificial_uses: { u633(6){ }u634(7){ }u635(16){ }u636(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 207 209 436
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 436
;; lr  def 	 17 [flags] 372
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 207 209 436
;; live  gen 	 17 [flags] 372
;; live  kill	
(note 835 437 438 71 [bb 71] NOTE_INSN_BASIC_BLOCK)
(insn 438 835 439 71 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 436 [ __res+4 ])
            (const:SI (plus:SI (symbol_ref:SI ("s") [flags 0x2]  <var_decl 06d9cd20 s>)
                    (const_int 4 [0x4]))))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1694 7 {*cmpsi_1}
     (nil))
(insn 439 438 440 71 (set (reg:QI 372 [ D.83221 ])
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1694 592 {*setcc_qi}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil)))
(insn 440 439 441 71 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 372 [ D.83221 ])
            (const_int 0 [0]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1694 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 372 [ D.83221 ])
        (nil)))
(jump_insn 441 440 442 71 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 811)
            (pc))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1694 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 534 (nil)))
 -> 811)
;;  succ:       76 [5.3%] 
;;              72 [94.7%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 207 209 436
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 207 209 436

;; basic block 72, loop depth 2, count 0, freq 5
;;  prev block 71, next block 73, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       71 [94.7%]  (FALLTHRU)
;; bb 72 artificial_defs: { }
;; bb 72 artificial_uses: { u641(6){ }u642(7){ }u643(16){ }u644(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 207 209 436
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 207 209
;; lr  def 	 17 [flags] 212 443 444
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 207 209 436
;; live  gen 	 17 [flags] 212 443 444
;; live  kill	
(note 442 441 443 72 [bb 72] NOTE_INSN_BASIC_BLOCK)
(insn 443 442 867 72 (set (reg/v:QI 212 [ __insert_left ])
        (const_int 1 [0x1])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1694 93 {*movqi_internal}
     (nil))
(insn 867 443 868 72 (set (reg:SI 443 [ MEM[(const long long unsigned int &)__i$_M_node_241 + 16] ])
        (mem:SI (plus:SI (reg/f:SI 209 [ __i$_M_node ])
                (const_int 16 [0x10])) [34 MEM[(const long long unsigned int &)__i$_M_node_241 + 16]+0 S4 A64])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1694 90 {*movsi_internal}
     (nil))
(insn 868 867 445 72 (set (reg:SI 444 [+4 ])
        (mem:SI (plus:SI (reg/f:SI 209 [ __i$_M_node ])
                (const_int 20 [0x14])) [34 MEM[(const long long unsigned int &)__i$_M_node_241 + 16]+4 S4 A32])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1694 90 {*movsi_internal}
     (nil))
(insn 445 868 446 72 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 444 [+4 ])
            (mem:SI (plus:SI (reg:SI 436 [ __res+4 ])
                    (const_int 20 [0x14])) [34 MEM[(const long long unsigned int &)__res$second_239 + 16]+4 S4 A32]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1694 7 {*cmpsi_1}
     (nil))
(jump_insn 446 445 836 72 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 454)
            (pc))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1694 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 454)
;;  succ:       77 [50.0%] 
;;              73 [50.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 207 209 212 436 443 444
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 207 209 212 436 443 444

;; basic block 73, loop depth 2, count 0, freq 3
;;  prev block 72, next block 74, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       72 [50.0%]  (FALLTHRU)
;; bb 73 artificial_defs: { }
;; bb 73 artificial_uses: { u650(6){ }u651(7){ }u652(16){ }u653(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 207 209 212 436 443 444
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 207 444
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 207 209 212 436 443 444
;; live  gen 	 17 [flags]
;; live  kill	
(note 836 446 447 73 [bb 73] NOTE_INSN_BASIC_BLOCK)
(insn 447 836 448 73 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 444 [+4 ])
            (mem:SI (plus:SI (reg:SI 436 [ __res+4 ])
                    (const_int 20 [0x14])) [34 MEM[(const long long unsigned int &)__res$second_239 + 16]+4 S4 A32]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1694 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 444 [+4 ])
        (nil)))
(jump_insn 448 447 837 73 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 451)
            (pc))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1694 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 451)
;;  succ:       75 [50.0%] 
;;              74 [50.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 207 209 212 436 443
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 207 209 212 436 443

;; basic block 74, loop depth 2, count 0, freq 2
;;  prev block 73, next block 75, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       73 [50.0%]  (FALLTHRU)
;; bb 74 artificial_defs: { }
;; bb 74 artificial_uses: { u657(6){ }u658(7){ }u659(16){ }u660(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 207 209 212 436 443
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 207 443
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 207 209 212 436 443
;; live  gen 	 17 [flags]
;; live  kill	
(note 837 448 449 74 [bb 74] NOTE_INSN_BASIC_BLOCK)
(insn 449 837 450 74 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 443 [ MEM[(const long long unsigned int &)__i$_M_node_241 + 16] ])
            (mem:SI (plus:SI (reg:SI 436 [ __res+4 ])
                    (const_int 16 [0x10])) [34 MEM[(const long long unsigned int &)__res$second_239 + 16]+0 S4 A64]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1694 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 443 [ MEM[(const long long unsigned int &)__i$_M_node_241 + 16] ])
        (nil)))
(jump_insn 450 449 451 74 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 454)
            (pc))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1694 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 454)
;;  succ:       77 [50.0%] 
;;              75 [50.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 209 212 436
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 209 212 436

;; basic block 75, loop depth 2, count 0, freq 3
;;  prev block 74, next block 76, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       73 [50.0%] 
;;              74 [50.0%]  (FALLTHRU)
;; bb 75 artificial_defs: { }
;; bb 75 artificial_uses: { u664(6){ }u665(7){ }u666(16){ }u667(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 209 436
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 212
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 209 436
;; live  gen 	 212
;; live  kill	
(code_label 451 450 838 75 156 "" [1 uses])
(note 838 451 452 75 [bb 75] NOTE_INSN_BASIC_BLOCK)
(insn 452 838 811 75 (set (reg/v:QI 212 [ __insert_left ])
        (const_int 0 [0])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1694 93 {*movqi_internal}
     (nil))
;;  succ:       77 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 209 212 436
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 209 212 436

;; basic block 76, loop depth 2, count 0, freq 1
;;  prev block 75, next block 77, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       71 [5.3%] 
;;              70 [5.1%] 
;; bb 76 artificial_defs: { }
;; bb 76 artificial_uses: { u668(6){ }u669(7){ }u670(16){ }u671(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 209 436
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 212
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 209 436
;; live  gen 	 212
;; live  kill	
(code_label 811 452 810 76 195 "" [2 uses])
(note 810 811 33 76 [bb 76] NOTE_INSN_BASIC_BLOCK)
(insn 33 810 454 76 (set (reg/v:QI 212 [ __insert_left ])
        (const_int 1 [0x1])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1694 93 {*movqi_internal}
     (nil))
;;  succ:       77 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 209 212 436
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 209 212 436

;; basic block 77, loop depth 2, count 0, freq 24, maybe hot
;;  prev block 76, next block 78, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       76 [100.0%]  (FALLTHRU)
;;              75 [100.0%]  (FALLTHRU)
;;              72 [50.0%] 
;;              74 [50.0%] 
;; bb 77 artificial_defs: { }
;; bb 77 artificial_uses: { u672(6){ }u673(7){ }u674(16){ }u675(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 209 212 436
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 209 212 436
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 374 379 380
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 209 212 436
;; live  gen 	 374 379 380
;; live  kill	 17 [flags]
(code_label 454 33 455 77 154 "" [2 uses])
(note 455 454 456 77 [bb 77] NOTE_INSN_BASIC_BLOCK)
(insn 456 455 457 77 (set (mem:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [0  S4 A32])
        (const:SI (plus:SI (symbol_ref:SI ("s") [flags 0x2]  <var_decl 06d9cd20 s>)
                (const_int 4 [0x4])))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1696 90 {*movsi_internal}
     (nil))
(insn 457 456 458 77 (set (mem:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [0  S4 A32])
        (reg:SI 436 [ __res+4 ])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1696 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 207 [ __res$second ])
        (nil)))
(insn 458 457 459 77 (set (mem:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [0  S4 A32])
        (reg/f:SI 209 [ __i$_M_node ])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1696 90 {*movsi_internal}
     (nil))
(insn 459 458 460 77 (set (reg:SI 374 [ __insert_left ])
        (zero_extend:SI (reg/v:QI 212 [ __insert_left ]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1697 138 {*zero_extendqisi2}
     (expr_list:REG_DEAD (reg/v:QI 212 [ __insert_left ])
        (nil)))
(insn 460 459 461 77 (set (mem:SI (reg/f:SI 7 sp) [0  S4 A32])
        (reg:SI 374 [ __insert_left ])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1697 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 374 [ __insert_left ])
        (nil)))
(call_insn 461 460 467 77 (call (mem:QI (symbol_ref:SI ("_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_") [flags 0x43]  <function_decl 06b77200 _Rb_tree_insert_and_rebalance>) [0 _Rb_tree_insert_and_rebalance S1 A8])
        (const_int 16 [0x10])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1696 641 {*call}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (mem:SI (reg/f:SI 7 sp) [0  S4 A32]))
        (expr_list:SI (use (mem/f:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 4 [0x4])) [0  S4 A32]))
            (expr_list:SI (use (mem/f:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 8 [0x8])) [0  S4 A32]))
                (expr_list:SI (use (mem/f:SI (plus:SI (reg/f:SI 7 sp)
                                (const_int 12 [0xc])) [0  S4 A32]))
                    (nil))))))
(insn 467 461 468 77 (set (reg:SI 380 [ MEM[(struct _Rb_tree *)&s]._M_impl._M_node_count ])
        (mem/c:SI (const:SI (plus:SI (symbol_ref:SI ("s") [flags 0x2]  <var_decl 06d9cd20 s>)
                    (const_int 20 [0x14]))) [21 MEM[(struct _Rb_tree *)&s]._M_impl._M_node_count+0 S4 A32])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1698 90 {*movsi_internal}
     (nil))
(insn 468 467 469 77 (parallel [
            (set (reg:SI 379 [ D.83223 ])
                (plus:SI (reg:SI 380 [ MEM[(struct _Rb_tree *)&s]._M_impl._M_node_count ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1698 220 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 380 [ MEM[(struct _Rb_tree *)&s]._M_impl._M_node_count ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 469 468 472 77 (set (mem/c:SI (const:SI (plus:SI (symbol_ref:SI ("s") [flags 0x2]  <var_decl 06d9cd20 s>)
                    (const_int 20 [0x14]))) [21 MEM[(struct _Rb_tree *)&s]._M_impl._M_node_count+0 S4 A32])
        (reg:SI 379 [ D.83223 ])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1698 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 379 [ D.83223 ])
        (expr_list:REG_DEAD (reg/f:SI 375)
            (nil))))
;;  succ:       79 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 209
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 209

;; basic block 78, loop depth 2, count 0, freq 7, maybe hot
;;  prev block 77, next block 79, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       119 [21.6%]  (FALLTHRU)
;; bb 78 artificial_defs: { }
;; bb 78 artificial_uses: { u693(6){ }u694(7){ }u695(16){ }u696(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 209 435
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 209 435
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 209
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 209 435
;; live  gen 	 209
;; live  kill	
(note 472 469 473 78 [bb 78] NOTE_INSN_BASIC_BLOCK)
(insn 473 472 474 78 (set (mem:SI (reg/f:SI 7 sp) [0  S4 A32])
        (reg/f:SI 209 [ __i$_M_node ])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/ext/new_allocator.h:110 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 209 [ __i$_M_node ])
        (nil)))
(call_insn 474 473 34 78 (call (mem:QI (symbol_ref:SI ("_ZdlPv") [flags 0x43]  <function_decl 01938e00 operator delete>) [0 operator delete S1 A8])
        (const_int 4 [0x4])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/ext/new_allocator.h:110 641 {*call}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (mem/f:SI (reg/f:SI 7 sp) [0  S4 A32]))
        (nil)))
(insn 34 474 475 78 (set (reg/f:SI 209 [ __i$_M_node ])
        (reg:SI 435 [ __res ])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1794 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 435 [ __res ])
        (nil)))
;;  succ:       79 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 209
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 209

;; basic block 79, loop depth 2, count 0, freq 30, maybe hot
;;  prev block 78, next block 80, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       77 [100.0%]  (FALLTHRU)
;;              78 [100.0%]  (FALLTHRU)
;; bb 79 artificial_defs: { }
;; bb 79 artificial_uses: { u702(6){ }u703(7){ }u704(16){ }u705(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 209
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 209
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 209
;; live  gen 	 17 [flags]
;; live  kill	
(code_label 475 34 476 79 157 "" [0 uses])
(note 476 475 477 79 [bb 79] NOTE_INSN_BASIC_BLOCK)
(insn 477 476 478 79 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:SI (plus:SI (reg/f:SI 209 [ __i$_M_node ])
                    (const_int 24 [0x18])) [21 MEM[(mapped_type &)__i$_M_node_368 + 24]+0 S4 A32])
            (const_int 0 [0]))) D:\LHX\7.5 contest\t1.cpp:53 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg/f:SI 209 [ __i$_M_node ])
        (nil)))
(jump_insn 478 477 713 79 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 709)
            (pc))) D:\LHX\7.5 contest\t1.cpp:53 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 709)
;;  succ:       120 [50.0%] 
;;              101 [50.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136

;; basic block 80, loop depth 2, count 0, freq 71, maybe hot
;;  prev block 79, next block 81, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       120 [91.0%] 
;;              129 [100.0%]  (FALLTHRU)
;; bb 80 artificial_defs: { }
;; bb 80 artificial_uses: { u708(6){ }u709(7){ }u710(16){ }u711(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 165
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 181
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 165
;; live  gen 	 181
;; live  kill	
(code_label 713 478 482 80 180 "" [1 uses])
(note 482 713 35 80 [bb 80] NOTE_INSN_BASIC_BLOCK)
(insn 35 482 500 80 (set (reg/f:SI 181 [ __i$_M_node ])
        (const:SI (plus:SI (symbol_ref:SI ("s") [flags 0x2]  <var_decl 06d9cd20 s>)
                (const_int 4 [0x4])))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1794 90 {*movsi_internal}
     (nil))
;;  succ:       81 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 165 181
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 165 181

;; basic block 81, loop depth 3, count 0, freq 790, maybe hot
;;  prev block 80, next block 82, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       80 [100.0%]  (FALLTHRU)
;;              86 [91.0%]  (DFS_BACK)
;; bb 81 artificial_defs: { }
;; bb 81 artificial_uses: { u712(6){ }u713(7){ }u714(16){ }u715(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 165 181
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 112 165
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 165 181
;; live  gen 	 17 [flags]
;; live  kill	
(code_label 500 35 483 81 162 "" [1 uses])
(note 483 500 484 81 [bb 81] NOTE_INSN_BASIC_BLOCK)
(insn 484 483 485 81 (set (reg:CC 17 flags)
        (compare:CC (subreg:SI (reg/v:DI 112 [ t1 ]) 4)
            (mem:SI (plus:SI (reg/f:SI 165 [ __i$_M_node ])
                    (const_int 20 [0x14])) [34 MEM[(const long long unsigned int &)__i$_M_node_427 + 16]+4 S4 A32]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1261 7 {*cmpsi_1}
     (nil))
(jump_insn 485 484 840 81 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 495)
            (pc))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1261 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 495)
;;  succ:       85 [50.0%] 
;;              82 [50.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 165 181
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 165 181

;; basic block 82, loop depth 3, count 0, freq 395, maybe hot
;;  prev block 81, next block 83, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       81 [50.0%]  (FALLTHRU)
;; bb 82 artificial_defs: { }
;; bb 82 artificial_uses: { u719(6){ }u720(7){ }u721(16){ }u722(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 165 181
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 112 165
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 165 181
;; live  gen 	 17 [flags]
;; live  kill	
(note 840 485 486 82 [bb 82] NOTE_INSN_BASIC_BLOCK)
(insn 486 840 487 82 (set (reg:CC 17 flags)
        (compare:CC (subreg:SI (reg/v:DI 112 [ t1 ]) 4)
            (mem:SI (plus:SI (reg/f:SI 165 [ __i$_M_node ])
                    (const_int 20 [0x14])) [34 MEM[(const long long unsigned int &)__i$_M_node_427 + 16]+4 S4 A32]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1261 7 {*cmpsi_1}
     (nil))
(jump_insn 487 486 841 82 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 854)
            (pc))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1261 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 854)
;;  succ:       84 [50.0%] 
;;              83 [50.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 165 181
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 165 181

;; basic block 83, loop depth 3, count 0, freq 198, maybe hot
;;  prev block 82, next block 84, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       82 [50.0%]  (FALLTHRU)
;; bb 83 artificial_defs: { }
;; bb 83 artificial_uses: { u726(6){ }u727(7){ }u728(16){ }u729(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 165 181
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 112 165
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 165 181
;; live  gen 	 17 [flags]
;; live  kill	
(note 841 487 488 83 [bb 83] NOTE_INSN_BASIC_BLOCK)
(insn 488 841 489 83 (set (reg:CC 17 flags)
        (compare:CC (subreg:SI (reg/v:DI 112 [ t1 ]) 0)
            (mem:SI (plus:SI (reg/f:SI 165 [ __i$_M_node ])
                    (const_int 16 [0x10])) [34 MEM[(const long long unsigned int &)__i$_M_node_427 + 16]+0 S4 A64]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1261 7 {*cmpsi_1}
     (nil))
(jump_insn 489 488 854 83 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 495)
            (pc))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1261 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 495)
;;  succ:       85 [50.0%] 
;;              84 [50.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 165 181
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 165 181

;; basic block 84, loop depth 3, count 0, freq 395, maybe hot
;;  prev block 83, next block 85, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       83 [50.0%]  (FALLTHRU)
;;              82 [50.0%] 
;; bb 84 artificial_defs: { }
;; bb 84 artificial_uses: { u733(6){ }u734(7){ }u735(16){ }u736(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 165
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 165
;; lr  def 	 165 181 218
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 165
;; live  gen 	 165 181 218
;; live  kill	
(code_label 854 489 491 84 200 "" [1 uses])
(note 491 854 492 84 [bb 84] NOTE_INSN_BASIC_BLOCK)
(insn 492 491 36 84 (set (reg/f:SI 218 [ __i$_M_node ])
        (mem/f:SI (plus:SI (reg/f:SI 165 [ __i$_M_node ])
                (const_int 8 [0x8])) [6 MEM[(struct _Rb_tree_node_base * *)__i$_M_node_427 + 8B]+0 S4 A32])) 90 {*movsi_internal}
     (nil))
(insn 36 492 37 84 (set (reg/f:SI 181 [ __i$_M_node ])
        (reg/f:SI 165 [ __i$_M_node ])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1261 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 165 [ __i$_M_node ])
        (nil)))
(insn 37 36 495 84 (set (reg/f:SI 165 [ __i$_M_node ])
        (reg/f:SI 218 [ __i$_M_node ])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1262 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 218 [ __i$_M_node ])
        (nil)))
;;  succ:       86 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 165 181
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 165 181

;; basic block 85, loop depth 3, count 0, freq 395, maybe hot
;;  prev block 84, next block 86, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       81 [50.0%] 
;;              83 [50.0%] 
;; bb 85 artificial_defs: { }
;; bb 85 artificial_uses: { u740(6){ }u741(7){ }u742(16){ }u743(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 165 181
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 165
;; lr  def 	 165
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 165 181
;; live  gen 	 165
;; live  kill	
(code_label 495 37 496 85 159 "" [2 uses])
(note 496 495 497 85 [bb 85] NOTE_INSN_BASIC_BLOCK)
(insn 497 496 498 85 (set (reg/f:SI 165 [ __i$_M_node ])
        (mem/f:SI (plus:SI (reg/f:SI 165 [ __i$_M_node ])
                (const_int 12 [0xc])) [6 MEM[(struct _Rb_tree_node_base * *)__i$_M_node_427 + 12B]+0 S4 A32])) 90 {*movsi_internal}
     (nil))
;;  succ:       86 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 165 181
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 165 181

;; basic block 86, loop depth 3, count 0, freq 790, maybe hot
;;  prev block 85, next block 87, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       84 [100.0%]  (FALLTHRU)
;;              85 [100.0%]  (FALLTHRU)
;; bb 86 artificial_defs: { }
;; bb 86 artificial_uses: { u745(6){ }u746(7){ }u747(16){ }u748(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 165 181
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 165
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 165 181
;; live  gen 	 17 [flags]
;; live  kill	
(code_label 498 497 499 86 161 "" [0 uses])
(note 499 498 501 86 [bb 86] NOTE_INSN_BASIC_BLOCK)
(insn 501 499 502 86 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:SI 165 [ __i$_M_node ])
            (const_int 0 [0]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1260 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 502 501 503 86 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 500)
            (pc))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1260 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 9100 (nil)))
 -> 500)
;;  succ:       81 [91.0%]  (DFS_BACK)
;;              87 [9.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 165 181
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 165 181

;; basic block 87, loop depth 2, count 0, freq 71, maybe hot
;;  prev block 86, next block 88, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       86 [9.0%]  (FALLTHRU)
;; bb 87 artificial_defs: { }
;; bb 87 artificial_uses: { u751(6){ }u752(7){ }u753(16){ }u754(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 181
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 181
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 181
;; live  gen 	 17 [flags]
;; live  kill	
(note 503 502 504 87 [bb 87] NOTE_INSN_BASIC_BLOCK)
(insn 504 503 505 87 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:SI 181 [ __i$_M_node ])
            (const:SI (plus:SI (symbol_ref:SI ("s") [flags 0x2]  <var_decl 06d9cd20 s>)
                    (const_int 4 [0x4]))))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_map.h:498 7 {*cmpsi_1}
     (nil))
(jump_insn 505 504 506 87 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 724)
            (pc))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_map.h:498 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 1040 (nil)))
 -> 724)
;;  succ:       123 [10.4%] 
;;              88 [89.6%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 181
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 181

;; basic block 88, loop depth 2, count 0, freq 66, maybe hot
;;  prev block 87, next block 89, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       87 [89.6%]  (FALLTHRU)
;; bb 88 artificial_defs: { }
;; bb 88 artificial_uses: { u758(6){ }u759(7){ }u760(16){ }u761(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 181
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 112 181
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 181
;; live  gen 	 17 [flags]
;; live  kill	
(note 506 505 507 88 [bb 88] NOTE_INSN_BASIC_BLOCK)
(insn 507 506 508 88 (set (reg:CC 17 flags)
        (compare:CC (subreg:SI (reg/v:DI 112 [ t1 ]) 4)
            (mem:SI (plus:SI (reg/f:SI 181 [ __i$_M_node ])
                    (const_int 20 [0x14])) [34 MEM[(const long long unsigned int &)__i$_M_node_448 + 16]+4 S4 A32]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_map.h:498 7 {*cmpsi_1}
     (nil))
(jump_insn 508 507 843 88 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 724)
            (pc))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_map.h:498 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 724)
;;  succ:       123 [50.0%] 
;;              89 [50.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 181
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 181

;; basic block 89, loop depth 2, count 0, freq 33, maybe hot
;;  prev block 88, next block 90, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       88 [50.0%]  (FALLTHRU)
;; bb 89 artificial_defs: { }
;; bb 89 artificial_uses: { u765(6){ }u766(7){ }u767(16){ }u768(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 181
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 112 181
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 181
;; live  gen 	 17 [flags]
;; live  kill	
(note 843 508 509 89 [bb 89] NOTE_INSN_BASIC_BLOCK)
(insn 509 843 510 89 (set (reg:CC 17 flags)
        (compare:CC (subreg:SI (reg/v:DI 112 [ t1 ]) 4)
            (mem:SI (plus:SI (reg/f:SI 181 [ __i$_M_node ])
                    (const_int 20 [0x14])) [34 MEM[(const long long unsigned int &)__i$_M_node_448 + 16]+4 S4 A32]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_map.h:498 7 {*cmpsi_1}
     (nil))
(jump_insn 510 509 844 89 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 561)
            (pc))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_map.h:498 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 561)
;;  succ:       100 [50.0%] 
;;              90 [50.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 181
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 181

;; basic block 90, loop depth 2, count 0, freq 17, maybe hot
;;  prev block 89, next block 91, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       89 [50.0%]  (FALLTHRU)
;; bb 90 artificial_defs: { }
;; bb 90 artificial_uses: { u772(6){ }u773(7){ }u774(16){ }u775(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 181
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 112 181
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 181
;; live  gen 	 17 [flags]
;; live  kill	
(note 844 510 511 90 [bb 90] NOTE_INSN_BASIC_BLOCK)
(insn 511 844 512 90 (set (reg:CC 17 flags)
        (compare:CC (subreg:SI (reg/v:DI 112 [ t1 ]) 0)
            (mem:SI (plus:SI (reg/f:SI 181 [ __i$_M_node ])
                    (const_int 16 [0x10])) [34 MEM[(const long long unsigned int &)__i$_M_node_448 + 16]+0 S4 A64]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_map.h:498 7 {*cmpsi_1}
     (nil))
(jump_insn 512 511 741 90 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 724)
            (pc))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_map.h:498 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 724)
;;  succ:       123 [50.0%] 
;;              100 [50.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 181
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 181

;; basic block 91, loop depth 2, count 0, freq 5
;;  prev block 90, next block 92, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       123 [78.4%] 
;; bb 91 artificial_defs: { }
;; bb 91 artificial_uses: { u779(6){ }u780(7){ }u781(16){ }u782(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 123 136 181 225 433 434
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 433
;; lr  def 	 17 [flags] 382
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 123 136 181 225 433 434
;; live  gen 	 17 [flags] 382
;; live  kill	
(code_label 741 512 517 91 182 "" [1 uses])
(note 517 741 518 91 [bb 91] NOTE_INSN_BASIC_BLOCK)
(insn 518 517 519 91 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 433 [ __res ])
            (const_int 0 [0]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1694 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 433 [ __res ])
        (nil)))
(insn 519 518 520 91 (set (reg:QI 382 [ D.83221 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1694 592 {*setcc_qi}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil)))
(insn 520 519 521 91 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 382 [ D.83221 ])
            (const_int 0 [0]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1694 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 382 [ D.83221 ])
        (nil)))
(jump_insn 521 520 846 91 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 817)
            (pc))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1694 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 507 (nil)))
 -> 817)
;;  succ:       97 [5.1%] 
;;              92 [94.9%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 123 136 181 225 434
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 123 136 181 225 434

;; basic block 92, loop depth 2, count 0, freq 5
;;  prev block 91, next block 93, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       91 [94.9%]  (FALLTHRU)
;; bb 92 artificial_defs: { }
;; bb 92 artificial_uses: { u787(6){ }u788(7){ }u789(16){ }u790(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 123 136 181 225 434
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 434
;; lr  def 	 17 [flags] 384
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 123 136 181 225 434
;; live  gen 	 17 [flags] 384
;; live  kill	
(note 846 521 522 92 [bb 92] NOTE_INSN_BASIC_BLOCK)
(insn 522 846 523 92 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 434 [ __res+4 ])
            (const:SI (plus:SI (symbol_ref:SI ("s") [flags 0x2]  <var_decl 06d9cd20 s>)
                    (const_int 4 [0x4]))))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1694 7 {*cmpsi_1}
     (nil))
(insn 523 522 524 92 (set (reg:QI 384 [ D.83221 ])
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1694 592 {*setcc_qi}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil)))
(insn 524 523 525 92 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 384 [ D.83221 ])
            (const_int 0 [0]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1694 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 384 [ D.83221 ])
        (nil)))
(jump_insn 525 524 526 92 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 817)
            (pc))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1694 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 534 (nil)))
 -> 817)
;;  succ:       97 [5.3%] 
;;              93 [94.7%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 123 136 181 225 434
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 123 136 181 225 434

;; basic block 93, loop depth 2, count 0, freq 5
;;  prev block 92, next block 94, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       92 [94.7%]  (FALLTHRU)
;; bb 93 artificial_defs: { }
;; bb 93 artificial_uses: { u795(6){ }u796(7){ }u797(16){ }u798(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 123 136 181 225 434
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 181 225
;; lr  def 	 17 [flags] 229 445 446
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 123 136 181 225 434
;; live  gen 	 17 [flags] 229 445 446
;; live  kill	
(note 526 525 527 93 [bb 93] NOTE_INSN_BASIC_BLOCK)
(insn 527 526 869 93 (set (reg/v:QI 229 [ __insert_left ])
        (const_int 1 [0x1])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1694 93 {*movqi_internal}
     (nil))
(insn 869 527 870 93 (set (reg:SI 445 [ MEM[(const long long unsigned int &)__i$_M_node_277 + 16] ])
        (mem:SI (plus:SI (reg/f:SI 181 [ __i$_M_node ])
                (const_int 16 [0x10])) [34 MEM[(const long long unsigned int &)__i$_M_node_277 + 16]+0 S4 A64])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1694 90 {*movsi_internal}
     (nil))
(insn 870 869 529 93 (set (reg:SI 446 [+4 ])
        (mem:SI (plus:SI (reg/f:SI 181 [ __i$_M_node ])
                (const_int 20 [0x14])) [34 MEM[(const long long unsigned int &)__i$_M_node_277 + 16]+4 S4 A32])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1694 90 {*movsi_internal}
     (nil))
(insn 529 870 530 93 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 446 [+4 ])
            (mem:SI (plus:SI (reg:SI 434 [ __res+4 ])
                    (const_int 20 [0x14])) [34 MEM[(const long long unsigned int &)__res$second_275 + 16]+4 S4 A32]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1694 7 {*cmpsi_1}
     (nil))
(jump_insn 530 529 847 93 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 538)
            (pc))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1694 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 538)
;;  succ:       98 [50.0%] 
;;              94 [50.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 123 136 181 225 229 434 445 446
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 123 136 181 225 229 434 445 446

;; basic block 94, loop depth 2, count 0, freq 3
;;  prev block 93, next block 95, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       93 [50.0%]  (FALLTHRU)
;; bb 94 artificial_defs: { }
;; bb 94 artificial_uses: { u804(6){ }u805(7){ }u806(16){ }u807(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 123 136 181 225 229 434 445 446
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 225 446
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 123 136 181 225 229 434 445 446
;; live  gen 	 17 [flags]
;; live  kill	
(note 847 530 531 94 [bb 94] NOTE_INSN_BASIC_BLOCK)
(insn 531 847 532 94 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 446 [+4 ])
            (mem:SI (plus:SI (reg:SI 434 [ __res+4 ])
                    (const_int 20 [0x14])) [34 MEM[(const long long unsigned int &)__res$second_275 + 16]+4 S4 A32]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1694 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 446 [+4 ])
        (nil)))
(jump_insn 532 531 848 94 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 535)
            (pc))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1694 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 535)
;;  succ:       96 [50.0%] 
;;              95 [50.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 123 136 181 225 229 434 445
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 123 136 181 225 229 434 445

;; basic block 95, loop depth 2, count 0, freq 2
;;  prev block 94, next block 96, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       94 [50.0%]  (FALLTHRU)
;; bb 95 artificial_defs: { }
;; bb 95 artificial_uses: { u811(6){ }u812(7){ }u813(16){ }u814(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 123 136 181 225 229 434 445
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 225 445
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 123 136 181 225 229 434 445
;; live  gen 	 17 [flags]
;; live  kill	
(note 848 532 533 95 [bb 95] NOTE_INSN_BASIC_BLOCK)
(insn 533 848 534 95 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 445 [ MEM[(const long long unsigned int &)__i$_M_node_277 + 16] ])
            (mem:SI (plus:SI (reg:SI 434 [ __res+4 ])
                    (const_int 16 [0x10])) [34 MEM[(const long long unsigned int &)__res$second_275 + 16]+0 S4 A64]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1694 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 445 [ MEM[(const long long unsigned int &)__i$_M_node_277 + 16] ])
        (nil)))
(jump_insn 534 533 535 95 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 538)
            (pc))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1694 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 538)
;;  succ:       98 [50.0%] 
;;              96 [50.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 123 136 181 229 434
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 123 136 181 229 434

;; basic block 96, loop depth 2, count 0, freq 3
;;  prev block 95, next block 97, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       94 [50.0%] 
;;              95 [50.0%]  (FALLTHRU)
;; bb 96 artificial_defs: { }
;; bb 96 artificial_uses: { u818(6){ }u819(7){ }u820(16){ }u821(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 123 136 181 434
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 229
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 123 136 181 434
;; live  gen 	 229
;; live  kill	
(code_label 535 534 849 96 168 "" [1 uses])
(note 849 535 536 96 [bb 96] NOTE_INSN_BASIC_BLOCK)
(insn 536 849 817 96 (set (reg/v:QI 229 [ __insert_left ])
        (const_int 0 [0])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1694 93 {*movqi_internal}
     (nil))
;;  succ:       98 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 123 136 181 229 434
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 123 136 181 229 434

;; basic block 97, loop depth 2, count 0, freq 1
;;  prev block 96, next block 98, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       92 [5.3%] 
;;              91 [5.1%] 
;; bb 97 artificial_defs: { }
;; bb 97 artificial_uses: { u822(6){ }u823(7){ }u824(16){ }u825(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 123 136 181 434
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 229
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 123 136 181 434
;; live  gen 	 229
;; live  kill	
(code_label 817 536 816 97 197 "" [2 uses])
(note 816 817 39 97 [bb 97] NOTE_INSN_BASIC_BLOCK)
(insn 39 816 538 97 (set (reg/v:QI 229 [ __insert_left ])
        (const_int 1 [0x1])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1694 93 {*movqi_internal}
     (nil))
;;  succ:       98 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 123 136 181 229 434
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 123 136 181 229 434

;; basic block 98, loop depth 2, count 0, freq 24, maybe hot
;;  prev block 97, next block 99, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       97 [100.0%]  (FALLTHRU)
;;              96 [100.0%]  (FALLTHRU)
;;              93 [50.0%] 
;;              95 [50.0%] 
;; bb 98 artificial_defs: { }
;; bb 98 artificial_uses: { u826(6){ }u827(7){ }u828(16){ }u829(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 123 136 181 229 434
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 181 229 434
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 386 391 392
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 123 136 181 229 434
;; live  gen 	 386 391 392
;; live  kill	 17 [flags]
(code_label 538 39 539 98 166 "" [2 uses])
(note 539 538 540 98 [bb 98] NOTE_INSN_BASIC_BLOCK)
(insn 540 539 541 98 (set (mem:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [0  S4 A32])
        (const:SI (plus:SI (symbol_ref:SI ("s") [flags 0x2]  <var_decl 06d9cd20 s>)
                (const_int 4 [0x4])))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1696 90 {*movsi_internal}
     (nil))
(insn 541 540 542 98 (set (mem:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [0  S4 A32])
        (reg:SI 434 [ __res+4 ])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1696 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 225 [ __res$second ])
        (nil)))
(insn 542 541 543 98 (set (mem:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [0  S4 A32])
        (reg/f:SI 181 [ __i$_M_node ])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1696 90 {*movsi_internal}
     (nil))
(insn 543 542 544 98 (set (reg:SI 386 [ __insert_left ])
        (zero_extend:SI (reg/v:QI 229 [ __insert_left ]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1697 138 {*zero_extendqisi2}
     (expr_list:REG_DEAD (reg/v:QI 229 [ __insert_left ])
        (nil)))
(insn 544 543 545 98 (set (mem:SI (reg/f:SI 7 sp) [0  S4 A32])
        (reg:SI 386 [ __insert_left ])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1697 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 386 [ __insert_left ])
        (nil)))
(call_insn 545 544 551 98 (call (mem:QI (symbol_ref:SI ("_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_") [flags 0x43]  <function_decl 06b77200 _Rb_tree_insert_and_rebalance>) [0 _Rb_tree_insert_and_rebalance S1 A8])
        (const_int 16 [0x10])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1696 641 {*call}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (mem:SI (reg/f:SI 7 sp) [0  S4 A32]))
        (expr_list:SI (use (mem/f:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 4 [0x4])) [0  S4 A32]))
            (expr_list:SI (use (mem/f:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 8 [0x8])) [0  S4 A32]))
                (expr_list:SI (use (mem/f:SI (plus:SI (reg/f:SI 7 sp)
                                (const_int 12 [0xc])) [0  S4 A32]))
                    (nil))))))
(insn 551 545 552 98 (set (reg:SI 392 [ MEM[(struct _Rb_tree *)&s]._M_impl._M_node_count ])
        (mem/c:SI (const:SI (plus:SI (symbol_ref:SI ("s") [flags 0x2]  <var_decl 06d9cd20 s>)
                    (const_int 20 [0x14]))) [21 MEM[(struct _Rb_tree *)&s]._M_impl._M_node_count+0 S4 A32])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1698 90 {*movsi_internal}
     (nil))
(insn 552 551 553 98 (parallel [
            (set (reg:SI 391 [ D.83223 ])
                (plus:SI (reg:SI 392 [ MEM[(struct _Rb_tree *)&s]._M_impl._M_node_count ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1698 220 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 392 [ MEM[(struct _Rb_tree *)&s]._M_impl._M_node_count ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 553 552 556 98 (set (mem/c:SI (const:SI (plus:SI (symbol_ref:SI ("s") [flags 0x2]  <var_decl 06d9cd20 s>)
                    (const_int 20 [0x14]))) [21 MEM[(struct _Rb_tree *)&s]._M_impl._M_node_count+0 S4 A32])
        (reg:SI 391 [ D.83223 ])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1698 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 391 [ D.83223 ])
        (expr_list:REG_DEAD (reg/f:SI 387)
            (nil))))
;;  succ:       100 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 123 136 181
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 123 136 181

;; basic block 99, loop depth 2, count 0, freq 7, maybe hot
;;  prev block 98, next block 100, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       123 [21.6%]  (FALLTHRU)
;; bb 99 artificial_defs: { }
;; bb 99 artificial_uses: { u847(6){ }u848(7){ }u849(16){ }u850(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 123 136 181 433
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 181 433
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 181
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 123 136 181 433
;; live  gen 	 181
;; live  kill	
(note 556 553 557 99 [bb 99] NOTE_INSN_BASIC_BLOCK)
(insn 557 556 558 99 (set (mem:SI (reg/f:SI 7 sp) [0  S4 A32])
        (reg/f:SI 181 [ __i$_M_node ])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/ext/new_allocator.h:110 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 181 [ __i$_M_node ])
        (nil)))
(call_insn 558 557 40 99 (call (mem:QI (symbol_ref:SI ("_ZdlPv") [flags 0x43]  <function_decl 01938e00 operator delete>) [0 operator delete S1 A8])
        (const_int 4 [0x4])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/ext/new_allocator.h:110 641 {*call}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (mem/f:SI (reg/f:SI 7 sp) [0  S4 A32]))
        (nil)))
(insn 40 558 561 99 (set (reg/f:SI 181 [ __i$_M_node ])
        (reg:SI 433 [ __res ])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1794 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 433 [ __res ])
        (nil)))
;;  succ:       100 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 123 136 181
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 123 136 181

;; basic block 100, loop depth 2, count 0, freq 78, maybe hot
;;  prev block 99, next block 101, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       99 [100.0%]  (FALLTHRU)
;;              90 [50.0%]  (FALLTHRU)
;;              89 [50.0%] 
;;              98 [100.0%]  (FALLTHRU)
;; bb 100 artificial_defs: { }
;; bb 100 artificial_uses: { u856(6){ }u857(7){ }u858(16){ }u859(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 123 136 181
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 181
;; lr  def 	 17 [flags] 83
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 123 136 181
;; live  gen 	 83
;; live  kill	 17 [flags]
(code_label 561 40 562 100 165 "" [1 uses])
(note 562 561 563 100 [bb 100] NOTE_INSN_BASIC_BLOCK)
(insn 563 562 564 100 (set (mem:SI (plus:SI (reg/f:SI 181 [ __i$_M_node ])
                (const_int 24 [0x18])) [21 MEM[(mapped_type &)__i$_M_node_365 + 24]+0 S4 A32])
        (const_int 1 [0x1])) D:\LHX\7.5 contest\t1.cpp:53 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 181 [ __i$_M_node ])
        (nil)))
(insn 564 563 721 100 (parallel [
            (set (reg/v:SI 83 [ tmp ])
                (plus:SI (reg/v:SI 83 [ tmp ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) D:\LHX\7.5 contest\t1.cpp:53 220 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
;;  succ:       101 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 123 136
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 123 136

;; basic block 101, loop depth 2, count 0, freq 270, maybe hot
;;  prev block 100, next block 102, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       130 [50.0%]  (FALLTHRU)
;;              100 [100.0%]  (FALLTHRU)
;;              57 [71.0%] 
;;              79 [50.0%]  (FALLTHRU)
;; bb 101 artificial_defs: { }
;; bb 101 artificial_uses: { u862(6){ }u863(7){ }u864(16){ }u865(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 123 136
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 123
;; lr  def 	 17 [flags] 106 122 123 393
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 123 136
;; live  gen 	 17 [flags] 106 122 123 393
;; live  kill	 17 [flags]
(code_label 721 564 565 101 181 "" [1 uses])
(note 565 721 566 101 [bb 101] NOTE_INSN_BASIC_BLOCK)
(insn 566 565 567 101 (set (reg:SI 122 [ D.83218 ])
        (mem/c:SI (plus:SI (reg/f:SI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [21 j+0 S4 A32])) D:\LHX\7.5 contest\t1.cpp:49 90 {*movsi_internal}
     (nil))
(insn 567 566 568 101 (parallel [
            (set (reg/v:SI 123 [ i ])
                (plus:SI (reg/v:SI 123 [ i ])
                    (reg:SI 122 [ D.83218 ])))
            (clobber (reg:CC 17 flags))
        ]) D:\LHX\7.5 contest\t1.cpp:49 220 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 568 567 569 101 (parallel [
            (set (reg:SI 393 [ D.83218 ])
                (plus:SI (reg:SI 122 [ D.83218 ])
                    (reg/v:SI 123 [ i ])))
            (clobber (reg:CC 17 flags))
        ]) D:\LHX\7.5 contest\t1.cpp:49 220 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 569 568 570 101 (parallel [
            (set (reg:SI 106 [ D.83218 ])
                (plus:SI (reg:SI 393 [ D.83218 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) D:\LHX\7.5 contest\t1.cpp:49 220 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 393 [ D.83218 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 570 569 571 101 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 106 [ D.83218 ])
            (mem/c:SI (symbol_ref:SI ("n") [flags 0x2]  <var_decl 06e5d660 n>) [21 n+0 S4 A32]))) D:\LHX\7.5 contest\t1.cpp:49 7 {*cmpsi_1}
     (nil))
(jump_insn 571 570 572 101 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 578)
            (pc))) D:\LHX\7.5 contest\t1.cpp:49 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (int_list:REG_BR_PROB 900 (nil)))
 -> 578)
;;  succ:       102 [91.0%]  (FALLTHRU)
;;              104 [9.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 106 122 123 136
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 106 122 123 136

;; basic block 102, loop depth 2, count 0, freq 246, maybe hot
;;  prev block 101, next block 103, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       101 [91.0%]  (FALLTHRU)
;; bb 102 artificial_defs: { }
;; bb 102 artificial_uses: { u874(6){ }u875(7){ }u876(16){ }u877(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 106 122 123 136
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 189
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 106 122 123 136
;; live  gen 	 189
;; live  kill	
(note 572 571 574 102 [bb 102] NOTE_INSN_BASIC_BLOCK)
(insn 574 572 791 102 (set (reg/f:SI 189 [ __i$_M_node ])
        (mem/f/c:SI (const:SI (plus:SI (symbol_ref:SI ("s") [flags 0x2]  <var_decl 06d9cd20 s>)
                    (const_int 8 [0x8]))) [6 MEM[(struct _Rb_tree_node_base * *)&s + 8B]+0 S4 A32])) 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 394)
        (nil)))
;;  succ:       36 [100.0%]  (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 106 122 123 136 189
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 106 122 123 136 189

;; basic block 103, loop depth 1, count 0, freq 2
;;  prev block 102, next block 104, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       34 [9.0%] 
;; bb 103 artificial_defs: { }
;; bb 103 artificial_uses: { u879(6){ }u880(7){ }u881(16){ }u882(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 83
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 83
;; live  kill	
(code_label 791 574 790 103 189 "" [1 uses])
(note 790 791 41 103 [bb 103] NOTE_INSN_BASIC_BLOCK)
(insn 41 790 578 103 (set (reg/v:SI 83 [ tmp ])
        (const_int 0 [0])) D:\LHX\7.5 contest\t1.cpp:47 90 {*movsi_internal}
     (nil))
;;  succ:       104 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83

;; basic block 104, loop depth 1, count 0, freq 27, maybe hot
;;  prev block 103, next block 105, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       101 [9.0%] 
;;              103 [100.0%]  (FALLTHRU)
;; bb 104 artificial_defs: { }
;; bb 104 artificial_uses: { u883(6){ }u884(7){ }u885(16){ }u886(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83
;; lr  def 	 17 [flags] 252
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83
;; live  gen 	 17 [flags] 252
;; live  kill	
(code_label 578 41 579 104 134 "" [1 uses])
(note 579 578 580 104 [bb 104] NOTE_INSN_BASIC_BLOCK)
(insn 580 579 581 104 (set (reg:SI 252 [ D.83218 ])
        (mem/c:SI (symbol_ref:SI ("ans") [flags 0x2]  <var_decl 06eeb600 ans>) [21 ans+0 S4 A32])) D:\LHX\7.5 contest\t1.cpp:56 90 {*movsi_internal}
     (nil))
(insn 581 580 582 104 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 252 [ D.83218 ])
            (reg/v:SI 83 [ tmp ]))) D:\LHX\7.5 contest\t1.cpp:56 7 {*cmpsi_1}
     (nil))
(jump_insn 582 581 583 104 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 597)
            (pc))) D:\LHX\7.5 contest\t1.cpp:56 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (int_list:REG_BR_PROB 7100 (nil)))
 -> 597)
;;  succ:       105 [29.0%]  (FALLTHRU)
;;              106 [71.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 252
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 252

;; basic block 105, loop depth 1, count 0, freq 8, maybe hot
;;  prev block 104, next block 106, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       104 [29.0%]  (FALLTHRU)
;; bb 105 artificial_defs: { }
;; bb 105 artificial_uses: { u890(6){ }u891(7){ }u892(16){ }u893(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 252 397 398
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83
;; live  gen 	 2 [cx] 7 [sp] 252 397 398
;; live  kill	 17 [flags]
(note 583 582 584 105 [bb 105] NOTE_INSN_BASIC_BLOCK)
(insn 584 583 587 105 (set (mem/c:SI (symbol_ref:SI ("ans") [flags 0x2]  <var_decl 06eeb600 ans>) [21 ans+0 S4 A32])
        (reg/v:SI 83 [ tmp ])) D:\LHX\7.5 contest\t1.cpp:57 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 83 [ tmp ])
        (nil)))
(insn 587 584 588 105 (set (reg/f:SI 397 [ num.D.72607._M_impl._M_start ])
        (mem/f/c:SI (symbol_ref:SI ("num") [flags 0x2]  <var_decl 06e5dae0 num>) [6 num.D.72607._M_impl._M_start+0 S4 A32])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_vector.h:1439 90 {*movsi_internal}
     (nil))
(insn 588 587 589 105 (set (mem/f/c:SI (const:SI (plus:SI (symbol_ref:SI ("num") [flags 0x2]  <var_decl 06e5dae0 num>)
                    (const_int 4 [0x4]))) [6 MEM[(int * *)&num + 4B]+0 S4 A32])
        (reg/f:SI 397 [ num.D.72607._M_impl._M_start ])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_vector.h:1439 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 397 [ num.D.72607._M_impl._M_start ])
        (expr_list:REG_DEAD (reg/f:SI 395)
            (nil))))
(insn 589 588 590 105 (parallel [
            (set (reg/f:SI 398)
                (plus:SI (reg/f:SI 20 frame)
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) D:\LHX\7.5 contest\t1.cpp:58 220 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 590 589 591 105 (set (mem/f:SI (reg/f:SI 7 sp) [0  S4 A32])
        (reg/f:SI 398)) D:\LHX\7.5 contest\t1.cpp:58 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 398)
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 20 frame)
                (const_int -4 [0xfffffffffffffffc]))
            (nil))))
(insn 591 590 592 105 (set (reg:SI 2 cx)
        (symbol_ref:SI ("num") [flags 0x2]  <var_decl 06e5dae0 num>)) D:\LHX\7.5 contest\t1.cpp:58 90 {*movsi_internal}
     (nil))
(call_insn 592 591 593 105 (parallel [
            (call (mem:QI (symbol_ref:SI ("_ZNSt6vectorIiSaIiEE9push_backERKi") [flags 0x3]  <function_decl 06ec8400 push_back>) [0 push_back S1 A8])
                (const_int 4 [0x4]))
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 4 [0x4])))
        ]) D:\LHX\7.5 contest\t1.cpp:58 646 {*call_pop}
     (expr_list:REG_DEAD (reg:SI 2 cx)
        (expr_list:REG_ARGS_SIZE (const_int -4 [0xfffffffffffffffc])
            (nil)))
    (expr_list:SI (use (reg:SI 2 cx))
        (expr_list:SI (use (mem/f:SI (reg/f:SI 7 sp) [0  S4 A32]))
            (nil))))
(insn 593 592 594 105 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) D:\LHX\7.5 contest\t1.cpp:58 220 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 594 593 597 105 (set (reg:SI 252 [ D.83218 ])
        (mem/c:SI (symbol_ref:SI ("ans") [flags 0x2]  <var_decl 06eeb600 ans>) [21 ans+0 S4 A32])) 90 {*movsi_internal}
     (nil))
;;  succ:       108 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 252
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 252

;; basic block 106, loop depth 1, count 0, freq 19, maybe hot
;;  prev block 105, next block 107, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       104 [71.0%] 
;; bb 106 artificial_defs: { }
;; bb 106 artificial_uses: { u909(6){ }u910(7){ }u911(16){ }u912(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 252
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 252
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 252
;; live  gen 	 17 [flags]
;; live  kill	
(code_label 597 594 598 106 171 "" [1 uses])
(note 598 597 599 106 [bb 106] NOTE_INSN_BASIC_BLOCK)
(insn 599 598 600 106 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 83 [ tmp ])
            (reg:SI 252 [ D.83218 ]))) D:\LHX\7.5 contest\t1.cpp:60 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg/v:SI 83 [ tmp ])
        (nil)))
(jump_insn 600 599 601 106 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 608)
            (pc))) D:\LHX\7.5 contest\t1.cpp:60 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 8629 (nil)))
 -> 608)
;;  succ:       107 [13.7%]  (FALLTHRU)
;;              108 [86.3%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 252
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 252

;; basic block 107, loop depth 1, count 0, freq 3
;;  prev block 106, next block 108, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       106 [13.7%]  (FALLTHRU)
;; bb 107 artificial_defs: { }
;; bb 107 artificial_uses: { u916(6){ }u917(7){ }u918(16){ }u919(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 252 399
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 2 [cx] 7 [sp] 252 399
;; live  kill	 17 [flags]
(note 601 600 602 107 [bb 107] NOTE_INSN_BASIC_BLOCK)
(insn 602 601 603 107 (parallel [
            (set (reg/f:SI 399)
                (plus:SI (reg/f:SI 20 frame)
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) D:\LHX\7.5 contest\t1.cpp:60 220 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 603 602 604 107 (set (mem/f:SI (reg/f:SI 7 sp) [0  S4 A32])
        (reg/f:SI 399)) D:\LHX\7.5 contest\t1.cpp:60 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 399)
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 20 frame)
                (const_int -4 [0xfffffffffffffffc]))
            (nil))))
(insn 604 603 605 107 (set (reg:SI 2 cx)
        (symbol_ref:SI ("num") [flags 0x2]  <var_decl 06e5dae0 num>)) D:\LHX\7.5 contest\t1.cpp:60 90 {*movsi_internal}
     (nil))
(call_insn 605 604 606 107 (parallel [
            (call (mem:QI (symbol_ref:SI ("_ZNSt6vectorIiSaIiEE9push_backERKi") [flags 0x3]  <function_decl 06ec8400 push_back>) [0 push_back S1 A8])
                (const_int 4 [0x4]))
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 4 [0x4])))
        ]) D:\LHX\7.5 contest\t1.cpp:60 646 {*call_pop}
     (expr_list:REG_DEAD (reg:SI 2 cx)
        (expr_list:REG_ARGS_SIZE (const_int -4 [0xfffffffffffffffc])
            (nil)))
    (expr_list:SI (use (reg:SI 2 cx))
        (expr_list:SI (use (mem/f:SI (reg/f:SI 7 sp) [0  S4 A32]))
            (nil))))
(insn 606 605 607 107 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) D:\LHX\7.5 contest\t1.cpp:60 220 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 607 606 608 107 (set (reg:SI 252 [ D.83218 ])
        (mem/c:SI (symbol_ref:SI ("ans") [flags 0x2]  <var_decl 06eeb600 ans>) [21 ans+0 S4 A32])) 90 {*movsi_internal}
     (nil))
;;  succ:       108 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 252
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 252

;; basic block 108, loop depth 1, count 0, freq 92, maybe hot
;;  prev block 107, next block 109, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       25 [71.0%] 
;;              105 [100.0%]  (FALLTHRU)
;;              106 [86.3%] 
;;              107 [100.0%]  (FALLTHRU)
;; bb 108 artificial_defs: { }
;; bb 108 artificial_uses: { u931(6){ }u932(7){ }u933(16){ }u934(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 252
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 102 125 400
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 252
;; live  gen 	 17 [flags] 102 125 400
;; live  kill	 17 [flags]
(code_label 608 607 609 108 130 "" [2 uses])
(note 609 608 610 108 [bb 108] NOTE_INSN_BASIC_BLOCK)
(insn 610 609 611 108 (set (reg:SI 400 [ j ])
        (mem/c:SI (plus:SI (reg/f:SI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [21 j+0 S4 A32])) D:\LHX\7.5 contest\t1.cpp:45 90 {*movsi_internal}
     (nil))
(insn 611 610 612 108 (parallel [
            (set (reg:SI 125 [ D.83218 ])
                (plus:SI (reg:SI 400 [ j ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) D:\LHX\7.5 contest\t1.cpp:45 220 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 400 [ j ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:SI (reg/f:SI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [21 j+0 S4 A32])
                    (const_int 1 [0x1]))
                (nil)))))
(insn 612 611 613 108 (set (mem/c:SI (plus:SI (reg/f:SI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [21 j+0 S4 A32])
        (reg:SI 125 [ D.83218 ])) D:\LHX\7.5 contest\t1.cpp:45 90 {*movsi_internal}
     (nil))
(insn 613 612 615 108 (set (reg:SI 102 [ D.83218 ])
        (mem/c:SI (symbol_ref:SI ("n") [flags 0x2]  <var_decl 06e5d660 n>) [21 n+0 S4 A32])) D:\LHX\7.5 contest\t1.cpp:45 90 {*movsi_internal}
     (nil))
(insn 615 613 616 108 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 102 [ D.83218 ])
            (reg:SI 125 [ D.83218 ]))) D:\LHX\7.5 contest\t1.cpp:45 7 {*cmpsi_1}
     (nil))
(jump_insn 616 615 617 108 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 614)
            (pc))) D:\LHX\7.5 contest\t1.cpp:45 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (int_list:REG_BR_PROB 9100 (nil)))
 -> 614)
;;  succ:       25 [91.0%]  (DFS_BACK)
;;              109 [9.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 102 125 252
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 102 125 252

;; basic block 109, loop depth 0, count 0, freq 9, maybe hot
;;  prev block 108, next block 112, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       108 [9.0%]  (FALLTHRU)
;;              23 [100.0%]  (FALLTHRU)
;; bb 109 artificial_defs: { }
;; bb 109 artificial_uses: { u943(6){ }u944(7){ }u945(16){ }u946(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 252
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 252
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 129 403 404 406 409 410 412
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 252
;; live  gen 	 0 [ax] 17 [flags] 129 403 404 406 409 410 412
;; live  kill	 17 [flags]
(code_label 617 616 618 109 129 "" [0 uses])
(note 618 617 621 109 [bb 109] NOTE_INSN_BASIC_BLOCK)
(insn 621 618 622 109 (set (reg/f:SI 404 [ MEM[(int * *)&num + 4B] ])
        (mem/f/c:SI (const:SI (plus:SI (symbol_ref:SI ("num") [flags 0x2]  <var_decl 06e5dae0 num>)
                    (const_int 4 [0x4]))) [6 MEM[(int * *)&num + 4B]+0 S4 A32])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_vector.h:655 90 {*movsi_internal}
     (nil))
(insn 622 621 623 109 (parallel [
            (set (reg:SI 403 [ D.83218 ])
                (minus:SI (reg/f:SI 404 [ MEM[(int * *)&num + 4B] ])
                    (mem/f/c:SI (symbol_ref:SI ("num") [flags 0x2]  <var_decl 06e5dae0 num>) [6 MEM[(int * *)&num]+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_vector.h:655 263 {*subsi_1}
     (expr_list:REG_DEAD (reg/f:SI 404 [ MEM[(int * *)&num + 4B] ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 623 622 624 109 (parallel [
            (set (reg:SI 406 [ D.83218 ])
                (ashiftrt:SI (reg:SI 403 [ D.83218 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_vector.h:655 530 {*ashrsi3_1}
     (expr_list:REG_DEAD (reg:SI 403 [ D.83218 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (div:SI (reg:SI 403 [ D.83218 ])
                    (const_int 4 [0x4]))
                (nil)))))
(insn 624 623 625 109 (set (mem:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [0  S4 A32])
        (reg:SI 406 [ D.83218 ])) D:\LHX\7.5 contest\t1.cpp:62 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 406 [ D.83218 ])
        (nil)))
(insn 625 624 626 109 (set (mem:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [0  S4 A32])
        (reg:SI 252 [ D.83218 ])) D:\LHX\7.5 contest\t1.cpp:62 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 252 [ D.83218 ])
        (nil)))
(insn 626 625 627 109 (set (mem:SI (reg/f:SI 7 sp) [0  S4 A32])
        (symbol_ref/f:SI ("*LC0") [flags 0x2]  <var_decl 07609ae0 *LC0>)) D:\LHX\7.5 contest\t1.cpp:62 90 {*movsi_internal}
     (nil))
(call_insn 627 626 629 109 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("_ZL6printfPKcz") [flags 0x3]  <function_decl 018c8600 printf>) [0 printf S1 A8])
            (const_int 12 [0xc]))) D:\LHX\7.5 contest\t1.cpp:62 648 {*call_value}
     (expr_list:REG_UNUSED (reg:SI 0 ax)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:SI (use (mem/f:SI (reg/f:SI 7 sp) [0  S4 A32]))
        (expr_list:SI (use (mem:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 4 [0x4])) [0  S4 A32]))
            (expr_list:SI (use (mem:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 8 [0x8])) [0  S4 A32]))
                (nil)))))
(insn 629 627 631 109 (set (reg/f:SI 129 [ D.83222 ])
        (mem/f/c:SI (symbol_ref:SI ("num") [flags 0x2]  <var_decl 06e5dae0 num>) [6 MEM[(int * *)&num]+0 S4 A32])) 90 {*movsi_internal}
     (nil))
(insn 631 629 632 109 (set (reg/f:SI 410 [ MEM[(int * *)&num + 4B] ])
        (mem/f/c:SI (const:SI (plus:SI (symbol_ref:SI ("num") [flags 0x2]  <var_decl 06e5dae0 num>)
                    (const_int 4 [0x4]))) [6 MEM[(int * *)&num + 4B]+0 S4 A32])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_vector.h:655 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 401)
        (nil)))
(insn 632 631 633 109 (parallel [
            (set (reg:SI 409 [ D.83218 ])
                (minus:SI (reg/f:SI 410 [ MEM[(int * *)&num + 4B] ])
                    (reg/f:SI 129 [ D.83222 ])))
            (clobber (reg:CC 17 flags))
        ]) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_vector.h:655 263 {*subsi_1}
     (expr_list:REG_DEAD (reg/f:SI 410 [ MEM[(int * *)&num + 4B] ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 633 632 634 109 (parallel [
            (set (reg:SI 412 [ D.83218 ])
                (ashiftrt:SI (reg:SI 409 [ D.83218 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_vector.h:655 530 {*ashrsi3_1}
     (expr_list:REG_DEAD (reg:SI 409 [ D.83218 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (div:SI (reg:SI 409 [ D.83218 ])
                    (const_int 4 [0x4]))
                (nil)))))
(insn 634 633 635 109 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 412 [ D.83218 ])
            (const_int 0 [0]))) D:\LHX\7.5 contest\t1.cpp:63 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 412 [ D.83218 ])
        (nil)))
(jump_insn 635 634 640 109 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 640)
            (pc))) D:\LHX\7.5 contest\t1.cpp:63 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 9100 (nil)))
 -> 640)
;;  succ:       112 [91.0%] 
;;              131 [9.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 129
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 129

;; basic block 112, loop depth 0, count 0, freq 8, maybe hot
;;  prev block 109, next block 113, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       109 [91.0%] 
;; bb 112 artificial_defs: { }
;; bb 112 artificial_uses: { u973(6){ }u974(7){ }u975(16){ }u976(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 129
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 132
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 129
;; live  gen 	 132
;; live  kill	
(code_label 640 635 641 112 173 "" [1 uses])
(note 641 640 42 112 [bb 112] NOTE_INSN_BASIC_BLOCK)
(insn 42 641 650 112 (set (reg/v:SI 132 [ i ])
        (const_int 0 [0])) D:\LHX\7.5 contest\t1.cpp:63 90 {*movsi_internal}
     (nil))
;;  succ:       113 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 129 132
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 129 132

;; basic block 113, loop depth 1, count 0, freq 92, maybe hot
;;  prev block 112, next block 114, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       112 [100.0%]  (FALLTHRU)
;;              113 [91.0%]  (DFS_BACK)
;; bb 113 artificial_defs: { }
;; bb 113 artificial_uses: { u977(6){ }u978(7){ }u979(16){ }u980(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 129 132
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 129 132
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 129 132 414 417 418 420
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 129 132
;; live  gen 	 0 [ax] 17 [flags] 129 132 414 417 418 420
;; live  kill	 17 [flags]
(code_label 650 42 642 113 174 "" [1 uses])
(note 642 650 643 113 [bb 113] NOTE_INSN_BASIC_BLOCK)
(insn 643 642 644 113 (set (reg:SI 414 [ *_120 ])
        (mem:SI (plus:SI (mult:SI (reg/v:SI 132 [ i ])
                    (const_int 4 [0x4]))
                (reg/f:SI 129 [ D.83222 ])) [21 *_120+0 S4 A32])) D:\LHX\7.5 contest\t1.cpp:63 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 129 [ D.83222 ])
        (nil)))
(insn 644 643 645 113 (set (mem:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [0  S4 A32])
        (reg:SI 414 [ *_120 ])) D:\LHX\7.5 contest\t1.cpp:63 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 414 [ *_120 ])
        (nil)))
(insn 645 644 646 113 (set (mem:SI (reg/f:SI 7 sp) [0  S4 A32])
        (symbol_ref/f:SI ("*LC1") [flags 0x2]  <var_decl 07609b40 *LC1>)) D:\LHX\7.5 contest\t1.cpp:63 90 {*movsi_internal}
     (nil))
(call_insn 646 645 647 113 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("_ZL6printfPKcz") [flags 0x3]  <function_decl 018c8600 printf>) [0 printf S1 A8])
            (const_int 8 [0x8]))) D:\LHX\7.5 contest\t1.cpp:63 648 {*call_value}
     (expr_list:REG_UNUSED (reg:SI 0 ax)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:SI (use (mem/f:SI (reg/f:SI 7 sp) [0  S4 A32]))
        (expr_list:SI (use (mem:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 4 [0x4])) [0  S4 A32]))
            (nil))))
(insn 647 646 649 113 (parallel [
            (set (reg/v:SI 132 [ i ])
                (plus:SI (reg/v:SI 132 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) D:\LHX\7.5 contest\t1.cpp:63 220 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 649 647 652 113 (set (reg/f:SI 129 [ D.83222 ])
        (mem/f/c:SI (symbol_ref:SI ("num") [flags 0x2]  <var_decl 06e5dae0 num>) [6 MEM[(int * *)&num]+0 S4 A32])) 90 {*movsi_internal}
     (nil))
(insn 652 649 653 113 (set (reg/f:SI 418 [ MEM[(int * *)&num + 4B] ])
        (mem/f/c:SI (const:SI (plus:SI (symbol_ref:SI ("num") [flags 0x2]  <var_decl 06e5dae0 num>)
                    (const_int 4 [0x4]))) [6 MEM[(int * *)&num + 4B]+0 S4 A32])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_vector.h:655 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 415)
        (nil)))
(insn 653 652 654 113 (parallel [
            (set (reg:SI 417 [ D.83218 ])
                (minus:SI (reg/f:SI 418 [ MEM[(int * *)&num + 4B] ])
                    (reg/f:SI 129 [ D.83222 ])))
            (clobber (reg:CC 17 flags))
        ]) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_vector.h:655 263 {*subsi_1}
     (expr_list:REG_DEAD (reg/f:SI 418 [ MEM[(int * *)&num + 4B] ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 654 653 655 113 (parallel [
            (set (reg:SI 420 [ D.83218 ])
                (ashiftrt:SI (reg:SI 417 [ D.83218 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_vector.h:655 530 {*ashrsi3_1}
     (expr_list:REG_DEAD (reg:SI 417 [ D.83218 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (div:SI (reg:SI 417 [ D.83218 ])
                    (const_int 4 [0x4]))
                (nil)))))
(insn 655 654 656 113 (set (reg:CC 17 flags)
        (compare:CC (reg/v:SI 132 [ i ])
            (reg:SI 420 [ D.83218 ]))) D:\LHX\7.5 contest\t1.cpp:63 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 420 [ D.83218 ])
        (nil)))
(jump_insn 656 655 793 113 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 650)
            (pc))) D:\LHX\7.5 contest\t1.cpp:63 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 9100 (nil)))
 -> 650)
;;  succ:       113 [91.0%]  (DFS_BACK)
;;              131 [9.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 129 132
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 129 132

;; basic block 114, loop depth 2, count 0, freq 24, maybe hot
;;  prev block 113, next block 116, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       36 [9.0%] 
;; bb 114 artificial_defs: { }
;; bb 114 artificial_uses: { u999(6){ }u1000(7){ }u1001(16){ }u1002(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 427 428
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 203
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 427 428
;; live  gen 	 203
;; live  kill	
(code_label 793 656 792 114 190 "" [1 uses])
(note 792 793 44 114 [bb 114] NOTE_INSN_BASIC_BLOCK)
(insn 44 792 661 114 (set (reg/f:SI 203 [ __i$_M_node ])
        (const:SI (plus:SI (symbol_ref:SI ("s") [flags 0x2]  <var_decl 06d9cd20 s>)
                (const_int 4 [0x4])))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1260 90 {*movsi_internal}
     (nil))
;;  succ:       116 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 203 427 428
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 203 427 428

;; basic block 116, loop depth 2, count 0, freq 156, maybe hot
;;  prev block 114, next block 117, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       114 [100.0%]  (FALLTHRU)
;;              44 [6.7%] 
;;              45 [50.0%] 
;;              47 [50.0%] 
;; bb 116 artificial_defs: { }
;; bb 116 artificial_uses: { u1008(6){ }u1009(7){ }u1010(16){ }u1011(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 203 427 428
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 112 203
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 192 203 258 421 437 438
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 203 427 428
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 7 [sp] 17 [flags] 192 203 258 421 437 438
;; live  kill	 17 [flags]
(code_label 661 44 662 116 135 "" [3 uses])
(note 662 661 663 116 [bb 116] NOTE_INSN_BASIC_BLOCK)
(insn 663 662 664 116 (set (reg/v:SI 258 [ __pos ])
        (reg/f:SI 203 [ __i$_M_node ])) 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 203 [ __i$_M_node ])
        (nil)))
(insn 664 663 665 116 (set (mem:SI (reg/f:SI 7 sp) [0  S4 A32])
        (const_int 32 [0x20])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/ext/new_allocator.h:104 90 {*movsi_internal}
     (nil))
(call_insn 665 664 666 116 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("_Znwj") [flags 0x43]  <function_decl 01938d00 operator new>) [0 operator new S1 A8])
            (const_int 4 [0x4]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/ext/new_allocator.h:104 648 {*call_value}
     (nil)
    (expr_list:SI (use (mem:SI (reg/f:SI 7 sp) [0  S4 A32]))
        (nil)))
(insn 666 665 667 116 (set (reg/f:SI 203 [ __i$_M_node ])
        (reg:SI 0 ax)) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/ext/new_allocator.h:104 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 667 666 668 116 (set (mem:DI (plus:SI (reg/f:SI 203 [ __i$_M_node ])
                (const_int 16 [0x10])) [34 MEM[(struct pair *)__i$_M_node_205 + 16B].first+0 S8 A64])
        (reg/v:DI 112 [ t1 ])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/tuple:1102 89 {*movdi_internal}
     (nil))
(insn 668 667 669 116 (set (mem:SI (plus:SI (reg/f:SI 203 [ __i$_M_node ])
                (const_int 24 [0x18])) [21 MEM[(struct pair *)__i$_M_node_205 + 16B].second+0 S4 A64])
        (const_int 0 [0])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/tuple:1102 90 {*movsi_internal}
     (nil))
(insn 669 668 670 116 (parallel [
            (set (reg/f:SI 421 [ D.83232 ])
                (plus:SI (reg/f:SI 203 [ __i$_M_node ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/ext/aligned_buffer.h:53 220 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 670 669 671 116 (set (mem:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [0  S4 A32])
        (reg/f:SI 421 [ D.83232 ])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1794 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 421 [ D.83232 ])
        (nil)))
(insn 671 670 672 116 (set (mem:SI (reg/f:SI 7 sp) [0  S4 A32])
        (reg/v:SI 258 [ __pos ])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1794 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 258 [ __pos ])
        (nil)))
(insn 672 671 673 116 (set (reg:SI 2 cx)
        (symbol_ref:SI ("s") [flags 0x2]  <var_decl 06d9cd20 s>)) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1794 90 {*movsi_internal}
     (nil))
(call_insn 673 672 674 116 (parallel [
            (set (reg:DI 0 ax)
                (call (mem:QI (symbol_ref:SI ("_ZNSt8_Rb_treeIySt4pairIKyiESt10_Select1stIS2_ESt4lessIyESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERS1_") [flags 0x3]  <function_decl 06e17d80 _M_get_insert_hint_unique_pos>) [0 _M_get_insert_hint_unique_pos S1 A8])
                    (const_int 8 [0x8])))
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 8 [0x8])))
        ]) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1794 653 {*call_value_pop}
     (expr_list:REG_DEAD (reg:SI 2 cx)
        (expr_list:REG_ARGS_SIZE (const_int -8 [0xfffffffffffffff8])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 2 cx))
        (expr_list:SI (use (mem:SI (reg/f:SI 7 sp) [0  S4 A32]))
            (expr_list:SI (use (mem/f:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 4 [0x4])) [0  S4 A32]))
                (nil)))))
(insn 674 673 871 116 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1794 220 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 871 674 872 116 (set (reg:SI 437 [ __res ])
        (reg:SI 0 ax)) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1794 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 872 871 677 116 (set (reg:SI 438 [ __res+4 ])
        (reg:SI 1 dx [+4 ])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1794 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [+4 ])
        (nil)))
(insn 677 872 679 116 (set (reg/f:SI 192 [ __res$second ])
        (reg:SI 438 [ __res+4 ])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1794 90 {*movsi_internal}
     (nil))
(insn 679 677 680 116 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 438 [ __res+4 ])
            (const_int 0 [0]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1796 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 438 [ __res+4 ])
        (nil)))
(jump_insn 680 679 803 116 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 678)
            (pc))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1796 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 7837 (nil)))
 -> 678)
;;  succ:       48 [78.4%] 
;;              56 [21.6%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 192 203 427 428 437 438
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 113 123 136 192 203 427 428 437 438

;; basic block 117, loop depth 2, count 0, freq 7, maybe hot
;;  prev block 116, next block 119, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       58 [9.0%] 
;; bb 117 artificial_defs: { }
;; bb 117 artificial_uses: { u1039(6){ }u1040(7){ }u1041(16){ }u1042(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 117 123 136
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 186
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 117 123 136
;; live  gen 	 186
;; live  kill	
(code_label 803 680 802 117 193 "" [1 uses])
(note 802 803 46 117 [bb 117] NOTE_INSN_BASIC_BLOCK)
(insn 46 802 685 117 (set (reg/f:SI 186 [ __i$_M_node ])
        (const:SI (plus:SI (symbol_ref:SI ("s") [flags 0x2]  <var_decl 06d9cd20 s>)
                (const_int 4 [0x4])))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1260 90 {*movsi_internal}
     (nil))
;;  succ:       119 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 117 123 136 186
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 117 123 136 186

;; basic block 119, loop depth 2, count 0, freq 45, maybe hot
;;  prev block 117, next block 120, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       117 [100.0%]  (FALLTHRU)
;;              66 [6.6%] 
;;              67 [50.0%] 
;;              69 [50.0%] 
;; bb 119 artificial_defs: { }
;; bb 119 artificial_uses: { u1048(6){ }u1049(7){ }u1050(16){ }u1051(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 117 123 136 186
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 117 186
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 207 209 422 435 436
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 117 123 136 186
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 7 [sp] 17 [flags] 207 209 422 435 436
;; live  kill	 17 [flags]
(code_label 685 46 686 119 147 "" [3 uses])
(note 686 685 688 119 [bb 119] NOTE_INSN_BASIC_BLOCK)
(insn 688 686 689 119 (set (mem:SI (reg/f:SI 7 sp) [0  S4 A32])
        (const_int 32 [0x20])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/ext/new_allocator.h:104 90 {*movsi_internal}
     (nil))
(call_insn 689 688 690 119 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("_Znwj") [flags 0x43]  <function_decl 01938d00 operator new>) [0 operator new S1 A8])
            (const_int 4 [0x4]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/ext/new_allocator.h:104 648 {*call_value}
     (nil)
    (expr_list:SI (use (mem:SI (reg/f:SI 7 sp) [0  S4 A32]))
        (nil)))
(insn 690 689 691 119 (set (reg/f:SI 209 [ __i$_M_node ])
        (reg:SI 0 ax)) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/ext/new_allocator.h:104 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 691 690 692 119 (set (mem:DI (plus:SI (reg/f:SI 209 [ __i$_M_node ])
                (const_int 16 [0x10])) [34 MEM[(struct pair *)__i$_M_node_241 + 16B].first+0 S8 A64])
        (reg/v:DI 117 [ t2 ])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/tuple:1102 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v:DI 117 [ t2 ])
        (nil)))
(insn 692 691 693 119 (set (mem:SI (plus:SI (reg/f:SI 209 [ __i$_M_node ])
                (const_int 24 [0x18])) [21 MEM[(struct pair *)__i$_M_node_241 + 16B].second+0 S4 A64])
        (const_int 0 [0])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/tuple:1102 90 {*movsi_internal}
     (nil))
(insn 693 692 694 119 (parallel [
            (set (reg/f:SI 422 [ D.83232 ])
                (plus:SI (reg/f:SI 209 [ __i$_M_node ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/ext/aligned_buffer.h:53 220 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 694 693 695 119 (set (mem:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [0  S4 A32])
        (reg/f:SI 422 [ D.83232 ])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1794 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 422 [ D.83232 ])
        (nil)))
(insn 695 694 696 119 (set (mem:SI (reg/f:SI 7 sp) [0  S4 A32])
        (reg/f:SI 186 [ __i$_M_node ])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1794 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 186 [ __i$_M_node ])
        (nil)))
(insn 696 695 697 119 (set (reg:SI 2 cx)
        (symbol_ref:SI ("s") [flags 0x2]  <var_decl 06d9cd20 s>)) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1794 90 {*movsi_internal}
     (nil))
(call_insn 697 696 698 119 (parallel [
            (set (reg:DI 0 ax)
                (call (mem:QI (symbol_ref:SI ("_ZNSt8_Rb_treeIySt4pairIKyiESt10_Select1stIS2_ESt4lessIyESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERS1_") [flags 0x3]  <function_decl 06e17d80 _M_get_insert_hint_unique_pos>) [0 _M_get_insert_hint_unique_pos S1 A8])
                    (const_int 8 [0x8])))
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 8 [0x8])))
        ]) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1794 653 {*call_value_pop}
     (expr_list:REG_DEAD (reg:SI 2 cx)
        (expr_list:REG_ARGS_SIZE (const_int -8 [0xfffffffffffffff8])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 2 cx))
        (expr_list:SI (use (mem:SI (reg/f:SI 7 sp) [0  S4 A32]))
            (expr_list:SI (use (mem/f:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 4 [0x4])) [0  S4 A32]))
                (nil)))))
(insn 698 697 873 119 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1794 220 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 873 698 874 119 (set (reg:SI 435 [ __res ])
        (reg:SI 0 ax)) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1794 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 874 873 701 119 (set (reg:SI 436 [ __res+4 ])
        (reg:SI 1 dx [+4 ])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1794 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [+4 ])
        (nil)))
(insn 701 874 703 119 (set (reg/f:SI 207 [ __res$second ])
        (reg:SI 436 [ __res+4 ])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1794 90 {*movsi_internal}
     (nil))
(insn 703 701 704 119 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 436 [ __res+4 ])
            (const_int 0 [0]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1796 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 436 [ __res+4 ])
        (nil)))
(jump_insn 704 703 709 119 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 702)
            (pc))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1796 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 7837 (nil)))
 -> 702)
;;  succ:       70 [78.4%] 
;;              78 [21.6%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 207 209 435 436
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 207 209 435 436

;; basic block 120, loop depth 2, count 0, freq 39, maybe hot
;;  prev block 119, next block 121, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       79 [50.0%] 
;; bb 120 artificial_defs: { }
;; bb 120 artificial_uses: { u1079(6){ }u1080(7){ }u1081(16){ }u1082(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 165
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136
;; live  gen 	 17 [flags] 165
;; live  kill	
(code_label 709 704 710 120 158 "" [1 uses])
(note 710 709 712 120 [bb 120] NOTE_INSN_BASIC_BLOCK)
(insn 712 710 714 120 (set (reg/f:SI 165 [ __i$_M_node ])
        (mem/f/c:SI (const:SI (plus:SI (symbol_ref:SI ("s") [flags 0x2]  <var_decl 06d9cd20 s>)
                    (const_int 8 [0x8]))) [6 MEM[(struct _Rb_tree_node_base * *)&s + 8B]+0 S4 A32])) 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 423)
        (nil)))
(insn 714 712 715 120 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:SI 165 [ __i$_M_node ])
            (const_int 0 [0]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1260 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 715 714 718 120 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 713)
            (pc))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1260 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 9100 (nil)))
 -> 713)
;;  succ:       80 [91.0%] 
;;              121 [9.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 165
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 165

;; basic block 121, loop depth 2, count 0, freq 4
;;  prev block 120, next block 123, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       120 [9.0%]  (FALLTHRU)
;; bb 121 artificial_defs: { }
;; bb 121 artificial_uses: { u1086(6){ }u1087(7){ }u1088(16){ }u1089(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 181
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136
;; live  gen 	 181
;; live  kill	
(note 718 715 48 121 [bb 121] NOTE_INSN_BASIC_BLOCK)
(insn 48 718 724 121 (set (reg/f:SI 181 [ __i$_M_node ])
        (const:SI (plus:SI (symbol_ref:SI ("s") [flags 0x2]  <var_decl 06d9cd20 s>)
                (const_int 4 [0x4])))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1260 90 {*movsi_internal}
     (nil))
;;  succ:       123 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 181
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 181

;; basic block 123, loop depth 2, count 0, freq 45, maybe hot
;;  prev block 121, next block 124, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       121 [100.0%]  (FALLTHRU)
;;              87 [10.4%] 
;;              88 [50.0%] 
;;              90 [50.0%] 
;; bb 123 artificial_defs: { }
;; bb 123 artificial_uses: { u1095(6){ }u1096(7){ }u1097(16){ }u1098(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 181
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 112 181
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 181 225 254 424 433 434
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 181
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 7 [sp] 17 [flags] 181 225 254 424 433 434
;; live  kill	 17 [flags]
(code_label 724 48 725 123 163 "" [3 uses])
(note 725 724 726 123 [bb 123] NOTE_INSN_BASIC_BLOCK)
(insn 726 725 727 123 (set (reg/v:SI 254 [ __pos ])
        (reg/f:SI 181 [ __i$_M_node ])) 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 181 [ __i$_M_node ])
        (nil)))
(insn 727 726 728 123 (set (mem:SI (reg/f:SI 7 sp) [0  S4 A32])
        (const_int 32 [0x20])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/ext/new_allocator.h:104 90 {*movsi_internal}
     (nil))
(call_insn 728 727 729 123 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("_Znwj") [flags 0x43]  <function_decl 01938d00 operator new>) [0 operator new S1 A8])
            (const_int 4 [0x4]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/ext/new_allocator.h:104 648 {*call_value}
     (nil)
    (expr_list:SI (use (mem:SI (reg/f:SI 7 sp) [0  S4 A32]))
        (nil)))
(insn 729 728 730 123 (set (reg/f:SI 181 [ __i$_M_node ])
        (reg:SI 0 ax)) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/ext/new_allocator.h:104 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 730 729 731 123 (set (mem:DI (plus:SI (reg/f:SI 181 [ __i$_M_node ])
                (const_int 16 [0x10])) [34 MEM[(struct pair *)__i$_M_node_277 + 16B].first+0 S8 A64])
        (reg/v:DI 112 [ t1 ])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/tuple:1102 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v:DI 112 [ t1 ])
        (nil)))
(insn 731 730 732 123 (set (mem:SI (plus:SI (reg/f:SI 181 [ __i$_M_node ])
                (const_int 24 [0x18])) [21 MEM[(struct pair *)__i$_M_node_277 + 16B].second+0 S4 A64])
        (const_int 0 [0])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/tuple:1102 90 {*movsi_internal}
     (nil))
(insn 732 731 733 123 (parallel [
            (set (reg/f:SI 424 [ D.83232 ])
                (plus:SI (reg/f:SI 181 [ __i$_M_node ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/ext/aligned_buffer.h:53 220 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 733 732 734 123 (set (mem:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [0  S4 A32])
        (reg/f:SI 424 [ D.83232 ])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1794 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 424 [ D.83232 ])
        (nil)))
(insn 734 733 735 123 (set (mem:SI (reg/f:SI 7 sp) [0  S4 A32])
        (reg/v:SI 254 [ __pos ])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1794 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 254 [ __pos ])
        (nil)))
(insn 735 734 736 123 (set (reg:SI 2 cx)
        (symbol_ref:SI ("s") [flags 0x2]  <var_decl 06d9cd20 s>)) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1794 90 {*movsi_internal}
     (nil))
(call_insn 736 735 737 123 (parallel [
            (set (reg:DI 0 ax)
                (call (mem:QI (symbol_ref:SI ("_ZNSt8_Rb_treeIySt4pairIKyiESt10_Select1stIS2_ESt4lessIyESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERS1_") [flags 0x3]  <function_decl 06e17d80 _M_get_insert_hint_unique_pos>) [0 _M_get_insert_hint_unique_pos S1 A8])
                    (const_int 8 [0x8])))
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 8 [0x8])))
        ]) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1794 653 {*call_value_pop}
     (expr_list:REG_DEAD (reg:SI 2 cx)
        (expr_list:REG_ARGS_SIZE (const_int -8 [0xfffffffffffffff8])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 2 cx))
        (expr_list:SI (use (mem:SI (reg/f:SI 7 sp) [0  S4 A32]))
            (expr_list:SI (use (mem/f:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 4 [0x4])) [0  S4 A32]))
                (nil)))))
(insn 737 736 875 123 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1794 220 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 875 737 876 123 (set (reg:SI 433 [ __res ])
        (reg:SI 0 ax)) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1794 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 876 875 740 123 (set (reg:SI 434 [ __res+4 ])
        (reg:SI 1 dx [+4 ])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1794 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [+4 ])
        (nil)))
(insn 740 876 742 123 (set (reg/f:SI 225 [ __res$second ])
        (reg:SI 434 [ __res+4 ])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1794 90 {*movsi_internal}
     (nil))
(insn 742 740 743 123 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 434 [ __res+4 ])
            (const_int 0 [0]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1796 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 434 [ __res+4 ])
        (nil)))
(jump_insn 743 742 780 123 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 741)
            (pc))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1796 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 7837 (nil)))
 -> 741)
;;  succ:       91 [78.4%] 
;;              99 [21.6%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 123 136 181 225 433 434
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 123 136 181 225 433 434

;; basic block 124, loop depth 0, count 0, freq 1
;;  prev block 123, next block 125, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [9.0%] 
;; bb 124 artificial_defs: { }
;; bb 124 artificial_uses: { u1126(6){ }u1127(7){ }u1128(16){ }u1129(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 151
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 429 430
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 151
;; live  gen 	 429 430
;; live  kill	
(code_label 780 743 779 124 186 "" [1 uses])
(note 779 780 877 124 [bb 124] NOTE_INSN_BASIC_BLOCK)
(insn 877 779 878 124 (set (reg:SI 429 [ flag ])
        (const_int 1 [0x1])) D:\LHX\7.5 contest\t1.cpp:11 90 {*movsi_internal}
     (nil))
(insn 878 877 748 124 (set (reg:SI 430 [ flag+4 ])
        (const_int 0 [0])) D:\LHX\7.5 contest\t1.cpp:11 90 {*movsi_internal}
     (nil))
;;  succ:       125 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 151 429 430
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 151 429 430

;; basic block 125, loop depth 0, count 0, freq 9, maybe hot
;;  prev block 124, next block 126, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       124 [100.0%]  (FALLTHRU)
;;              6 [9.0%]  (FALLTHRU)
;; bb 125 artificial_defs: { }
;; bb 125 artificial_uses: { u1130(6){ }u1131(7){ }u1132(16){ }u1133(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 151 429 430
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 159
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 151 429 430
;; live  gen 	 159
;; live  kill	
(code_label 748 878 749 125 115 "" [0 uses])
(note 749 748 6 125 [bb 125] NOTE_INSN_BASIC_BLOCK)
(insn 6 749 783 125 (set (reg/v:DI 159 [ re ])
        (const_int 0 [0])) D:\LHX\7.5 contest\t1.cpp:13 89 {*movdi_internal}
     (nil))
;;  succ:       7 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 151 159 429 430
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 151 159 429 430

;; basic block 126, loop depth 1, count 0, freq 81, maybe hot
;;  prev block 125, next block 127, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       10 [9.0%] 
;; bb 126 artificial_defs: { }
;; bb 126 artificial_uses: { u1134(6){ }u1135(7){ }u1136(16){ }u1137(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 167
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 431 432
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 167
;; live  gen 	 431 432
;; live  kill	
(code_label 783 6 782 126 187 "" [1 uses])
(note 782 783 879 126 [bb 126] NOTE_INSN_BASIC_BLOCK)
(insn 879 782 880 126 (set (reg:SI 431 [ flag ])
        (const_int 1 [0x1])) D:\LHX\7.5 contest\t1.cpp:11 90 {*movsi_internal}
     (nil))
(insn 880 879 752 126 (set (reg:SI 432 [ flag+4 ])
        (const_int 0 [0])) D:\LHX\7.5 contest\t1.cpp:11 90 {*movsi_internal}
     (nil))
;;  succ:       127 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 167 431 432
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 167 431 432

;; basic block 127, loop depth 1, count 0, freq 900, maybe hot
;;  prev block 126, next block 128, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       126 [100.0%]  (FALLTHRU)
;;              14 [9.0%]  (FALLTHRU)
;; bb 127 artificial_defs: { }
;; bb 127 artificial_uses: { u1138(6){ }u1139(7){ }u1140(16){ }u1141(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 167 431 432
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 175
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 167 431 432
;; live  gen 	 175
;; live  kill	
(code_label 752 880 753 127 120 "" [0 uses])
(note 753 752 10 127 [bb 127] NOTE_INSN_BASIC_BLOCK)
(insn 10 753 756 127 (set (reg/v:DI 175 [ re ])
        (const_int 0 [0])) D:\LHX\7.5 contest\t1.cpp:13 89 {*movdi_internal}
     (nil))
;;  succ:       15 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 167 175 431 432
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 167 175 431 432

;; basic block 128, loop depth 0, count 0, freq 0
;;  prev block 127, next block 129, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       8 [1.0%] 
;; bb 128 artificial_defs: { }
;; bb 128 artificial_uses: { u1142(6){ }u1143(7){ }u1144(16){ }u1145(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	
;; live  kill	
(code_label 756 10 757 128 119 "" [1 uses])
(note 757 756 758 128 [bb 128] NOTE_INSN_BASIC_BLOCK)
(insn 758 757 769 128 (set (mem/c:SI (plus:SI (reg/f:SI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [21 j+0 S4 A32])
        (const_int 1 [0x1])) D:\LHX\7.5 contest\t1.cpp:45 90 {*movsi_internal}
     (nil))
;;  succ:       23 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 129, loop depth 2, count 0, freq 0
;;  prev block 128, next block 130, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       130 [50.0%] 
;; bb 129 artificial_defs: { }
;; bb 129 artificial_uses: { u1147(6){ }u1148(7){ }u1149(16){ }u1150(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 165
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136
;; live  gen 	 165
;; live  kill	
(code_label 769 758 762 129 185 "" [1 uses])
(note 762 769 764 129 [bb 129] NOTE_INSN_BASIC_BLOCK)
(insn 764 762 767 129 (set (reg/f:SI 165 [ __i$_M_node ])
        (mem/f/c:SI (const:SI (plus:SI (symbol_ref:SI ("s") [flags 0x2]  <var_decl 06d9cd20 s>)
                    (const_int 8 [0x8]))) [6 MEM[(struct _Rb_tree_node_base * *)&s + 8B]+0 S4 A32])) 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 425)
        (nil)))
;;  succ:       80 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 165
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 165

;; basic block 130, loop depth 2, count 0, freq 33, maybe hot
;;  prev block 129, next block 131, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       69 [50.0%]  (FALLTHRU)
;;              68 [50.0%] 
;; bb 130 artificial_defs: { }
;; bb 130 artificial_uses: { u1152(6){ }u1153(7){ }u1154(16){ }u1155(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 186
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 186
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136 186
;; live  gen 	 17 [flags]
;; live  kill	
(code_label 767 764 768 130 153 "" [1 uses])
(note 768 767 770 130 [bb 130] NOTE_INSN_BASIC_BLOCK)
(insn 770 768 771 130 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:SI (plus:SI (reg/f:SI 186 [ __i$_M_node ])
                    (const_int 24 [0x18])) [21 MEM[(mapped_type &)__i$_M_node_347 + 24]+0 S4 A32])
            (const_int 0 [0]))) D:\LHX\7.5 contest\t1.cpp:53 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg/f:SI 186 [ __i$_M_node ])
        (nil)))
(jump_insn 771 770 778 130 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 769)
            (pc))) D:\LHX\7.5 contest\t1.cpp:53 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 769)
;;  succ:       129 [50.0%] 
;;              101 [50.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83 112 123 136

;; basic block 131, loop depth 0, count 0, freq 9, maybe hot
;;  prev block 130, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       113 [9.0%]  (FALLTHRU)
;;              109 [9.0%]  (FALLTHRU)
;; bb 131 artificial_defs: { }
;; bb 131 artificial_uses: { u1158(6){ }u1159(7){ }u1160(16){ }u1161(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 0 [ax]
;; live  kill	
(note 778 771 776 131 [bb 131] NOTE_INSN_BASIC_BLOCK)
(insn 776 778 777 131 (set (reg/i:SI 0 ax)
        (const_int 0 [0])) D:\LHX\7.5 contest\t1.cpp:64 90 {*movsi_internal}
     (nil))
(insn 777 776 0 131 (use (reg/i:SI 0 ax)) D:\LHX\7.5 contest\t1.cpp:64 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function (static initializers for D:\LHX\7.5 contest\t1.cpp) (_GLOBAL__sub_I_s, funcdef_no=6112, decl_uid=80904, symbol_order=4233) (executed once)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


(static initializers for D:\LHX\7.5 contest\t1.cpp)

Dataflow summary:
def_info->table_size = 0, use_info->table_size = 26
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 29 [mm0] 30 [mm1] 31 [mm2]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 2[cx] 7[sp]
;;  ref usage 	r0={5d} r1={5d} r2={6d,1u} r6={1d,2u} r7={1d,12u} r8={4d} r9={4d} r10={4d} r11={4d} r12={4d} r13={4d} r14={4d} r15={4d} r16={1d,1u} r17={4d} r18={4d} r19={4d} r20={1d,2u} r21={5d} r22={5d} r23={5d} r24={4d} r25={4d} r26={4d} r27={4d} r28={4d} r29={5d} r30={5d} r31={5d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={4d} r38={4d} r39={4d} r40={4d} r41={4d} r42={4d} r43={4d} r44={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r76={4d} 
;;    total ref usage 312{294d,18u,0e} in 16{12 regular + 4 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(6){ }d-1(7){ }d-1(16){ }d-1(20){ }d-1(21){ }d-1(22){ }d-1(23){ }d-1(29){ }d-1(30){ }d-1(31){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 29 [mm0] 30 [mm1] 31 [mm2]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 29 [mm0] 30 [mm1] 31 [mm2]
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 0 [ax] 2 [cx] 83 84 85 86 87 88 89 90
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u23(6){ }u24(7){ }u25(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 28 to worklist
  Adding insn 27 to worklist
  Adding insn 26 to worklist
  Adding insn 24 to worklist
  Adding insn 22 to worklist
  Adding insn 20 to worklist
  Adding insn 19 to worklist
  Adding insn 18 to worklist
  Adding insn 16 to worklist
  Adding insn 14 to worklist
  Adding insn 12 to worklist
  Adding insn 10 to worklist
  Adding insn 8 to worklist
  Adding insn 7 to worklist
  Adding insn 6 to worklist
Finished finding needed instructions:
processing block 2 lr out =  6 [bp] 7 [sp] 16 [argp] 20 [frame]
  Adding insn 5 to worklist
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
starting the processing of deferred insns
ending the processing of deferred insns


(static initializers for D:\LHX\7.5 contest\t1.cpp)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 29 [mm0] 30 [mm1] 31 [mm2]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 2[cx] 7[sp]
;;  ref usage 	r0={5d} r1={5d} r2={6d,1u} r6={1d,2u} r7={1d,12u} r8={4d} r9={4d} r10={4d} r11={4d} r12={4d} r13={4d} r14={4d} r15={4d} r16={1d,1u} r17={4d} r18={4d} r19={4d} r20={1d,2u} r21={5d} r22={5d} r23={5d} r24={4d} r25={4d} r26={4d} r27={4d} r28={4d} r29={5d} r30={5d} r31={5d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={4d} r38={4d} r39={4d} r40={4d} r41={4d} r42={4d} r43={4d} r44={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r76={4d} 
;;    total ref usage 312{294d,18u,0e} in 16{12 regular + 4 call} insns.
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 0 [ax] 2 [cx]
;; live  kill	
(note 3 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:SI 2 cx)
        (symbol_ref:SI ("_ZStL8__ioinit") [flags 0x2]  <var_decl 035d1180 __ioinit>)) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/iostream:74 90 {*movsi_internal}
     (nil))
(call_insn 6 5 7 2 (call (mem:QI (symbol_ref:SI ("_ZNSt8ios_base4InitC1Ev") [flags 0x43]  <function_decl 032bbb80 __comp_ctor >) [0 __comp_ctor  S1 A8])
        (const_int 0 [0])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/iostream:74 641 {*call}
     (expr_list:REG_DEAD (reg:SI 2 cx)
        (nil))
    (expr_list:SI (use (reg:SI 2 cx))
        (nil)))
(insn 7 6 8 2 (set (mem:SI (reg/f:SI 7 sp) [0  S4 A32])
        (symbol_ref:SI ("__tcf_0") [flags 0x3]  <function_decl 0737aa00 __tcf_0>)) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/iostream:74 90 {*movsi_internal}
     (nil))
(call_insn 8 7 10 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("atexit") [flags 0x43]  <function_decl 0737aa80 atexit>) [0 atexit S1 A8])
            (const_int 4 [0x4]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/iostream:74 648 {*call_value}
     (expr_list:REG_UNUSED (reg:SI 0 ax)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:SI (use (mem/f:SI (reg/f:SI 7 sp) [0  S4 A32]))
        (nil)))
(insn 10 8 12 2 (set (mem/c:SI (const:SI (plus:SI (symbol_ref:SI ("s") [flags 0x2]  <var_decl 06d9cd20 s>)
                    (const_int 4 [0x4]))) [20 MEM[(struct _Rb_tree_impl *)&s]._M_header._M_color+0 S4 A32])
        (const_int 0 [0])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:463 90 {*movsi_internal}
     (nil))
(insn 12 10 14 2 (set (mem/f/c:SI (const:SI (plus:SI (symbol_ref:SI ("s") [flags 0x2]  <var_decl 06d9cd20 s>)
                    (const_int 8 [0x8]))) [6 MEM[(struct _Rb_tree_impl *)&s]._M_header._M_parent+0 S4 A32])
        (const_int 0 [0])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:463 90 {*movsi_internal}
     (nil))
(insn 14 12 16 2 (set (mem/c:SI (const:SI (plus:SI (symbol_ref:SI ("s") [flags 0x2]  <var_decl 06d9cd20 s>)
                    (const_int 20 [0x14]))) [21 MEM[(struct _Rb_tree_impl *)&s]._M_node_count+0 S4 A32])
        (const_int 0 [0])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:463 90 {*movsi_internal}
     (nil))
(insn 16 14 18 2 (set (mem/f/c:SI (const:SI (plus:SI (symbol_ref:SI ("s") [flags 0x2]  <var_decl 06d9cd20 s>)
                    (const_int 12 [0xc]))) [6 MEM[(struct _Rb_tree_impl *)&s]._M_header._M_left+0 S4 A32])
        (const:SI (plus:SI (symbol_ref:SI ("s") [flags 0x2]  <var_decl 06d9cd20 s>)
                (const_int 4 [0x4])))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:484 90 {*movsi_internal}
     (nil))
(insn 18 16 19 2 (set (mem/f/c:SI (const:SI (plus:SI (symbol_ref:SI ("s") [flags 0x2]  <var_decl 06d9cd20 s>)
                    (const_int 16 [0x10]))) [6 MEM[(struct _Rb_tree_impl *)&s]._M_header._M_right+0 S4 A32])
        (const:SI (plus:SI (symbol_ref:SI ("s") [flags 0x2]  <var_decl 06d9cd20 s>)
                (const_int 4 [0x4])))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:485 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 83)
        (nil)))
(insn 19 18 20 2 (set (mem:SI (reg/f:SI 7 sp) [0  S4 A32])
        (symbol_ref:SI ("__tcf_1") [flags 0x3]  <function_decl 0737ac80 __tcf_1>)) D:\LHX\7.5 contest\t1.cpp:20 90 {*movsi_internal}
     (nil))
(call_insn 20 19 22 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("atexit") [flags 0x43]  <function_decl 0737aa80 atexit>) [0 atexit S1 A8])
            (const_int 4 [0x4]))) D:\LHX\7.5 contest\t1.cpp:20 648 {*call_value}
     (expr_list:REG_UNUSED (reg:SI 0 ax)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:SI (use (mem/f:SI (reg/f:SI 7 sp) [0  S4 A32]))
        (nil)))
(insn 22 20 24 2 (set (mem/f/c:SI (symbol_ref:SI ("num") [flags 0x2]  <var_decl 06e5dae0 num>) [6 MEM[(struct _Vector_impl *)&num]._M_start+0 S4 A32])
        (const_int 0 [0])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_vector.h:87 90 {*movsi_internal}
     (nil))
(insn 24 22 26 2 (set (mem/f/c:SI (const:SI (plus:SI (symbol_ref:SI ("num") [flags 0x2]  <var_decl 06e5dae0 num>)
                    (const_int 4 [0x4]))) [6 MEM[(struct _Vector_impl *)&num]._M_finish+0 S4 A32])
        (const_int 0 [0])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_vector.h:87 90 {*movsi_internal}
     (nil))
(insn 26 24 27 2 (set (mem/f/c:SI (const:SI (plus:SI (symbol_ref:SI ("num") [flags 0x2]  <var_decl 06e5dae0 num>)
                    (const_int 8 [0x8]))) [6 MEM[(struct _Vector_impl *)&num]._M_end_of_storage+0 S4 A32])
        (const_int 0 [0])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_vector.h:87 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 88)
        (nil)))
(insn 27 26 28 2 (set (mem:SI (reg/f:SI 7 sp) [0  S4 A32])
        (symbol_ref:SI ("__tcf_2") [flags 0x3]  <function_decl 0737ad00 __tcf_2>)) D:\LHX\7.5 contest\t1.cpp:23 90 {*movsi_internal}
     (nil))
(call_insn 28 27 0 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("atexit") [flags 0x43]  <function_decl 0737aa80 atexit>) [0 atexit S1 A8])
            (const_int 4 [0x4]))) D:\LHX\7.5 contest\t1.cpp:23 648 {*call_value}
     (expr_list:REG_UNUSED (reg:SI 0 ax)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:SI (use (mem/f:SI (reg/f:SI 7 sp) [0  S4 A32]))
        (nil)))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

