
;; Function void __tcf_2() (__tcf_2, funcdef_no=6108, decl_uid=80894, symbol_order=3645)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 5 (    1)


void __tcf_2()

Dataflow summary:
def_info->table_size = 82, use_info->table_size = 0
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 29 [mm0] 30 [mm1] 31 [mm2]
;;  exit block uses 	 7 [sp]
;;  regs ever live 	 0[ax] 7[sp] 17[flags]
;;  ref usage 	r0={3d,2u} r1={2d} r2={2d} r7={3d,11u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r17={4d,1u} r18={1d} r19={1d} r21={2d} r22={2d} r23={2d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={2d} r30={2d} r31={2d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} 
;;    total ref usage 100{86d,14u,0e} in 8{7 regular + 1 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d2(0){ }d4(1){ }d6(2){ }d7(7){ }d21(21){ }d23(22){ }d25(23){ }d32(29){ }d34(30){ }d36(31){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 29 [mm0] 30 [mm1] 31 [mm2]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 29 [mm0] 30 [mm1] 31 [mm2]
;; live  kill	
;; lr  out 	 7 [sp]
;; live  out 	 7 [sp]

( 0 )->[2]->( 3 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
;; live  in  	 7 [sp]
;; live  gen 	 0 [ax] 17 [flags]
;; live  kill	
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]

( 2 )->[3]->( 4 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 7 [sp]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;; live  in  	 0 [ax] 7 [sp]
;; live  gen 	 7 [sp]
;; live  kill	 17 [flags]
;; lr  out 	 7 [sp]
;; live  out 	 7 [sp]

( 3 2 )->[4]->( 1 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	
;; live  in  	 7 [sp]
;; live  gen 	
;; live  kill	
;; lr  out 	 7 [sp]
;; live  out 	 7 [sp]

( 4 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	
;; live  in  	 7 [sp]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 8 to worklist
  Adding insn 11 to worklist
  Adding insn 10 to worklist
  Adding insn 34 to worklist
Finished finding needed instructions:
processing block 4 lr out =  7 [sp]
processing block 3 lr out =  7 [sp]
  Adding insn 33 to worklist
  Adding insn 23 to worklist
processing block 2 lr out =  0 [ax] 7 [sp]
  Adding insn 7 to worklist
  Adding insn 6 to worklist
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 5 (    1)
;;   ======================================================
;;   -- basic block 2 from 6 to 8 -- after reload
;;   ======================================================

;;	  0--> b  0: i   6ax=[`num']                              :athlon-direct,athlon-load
;;	  3--> b  0: i   7flags=cmp(ax,0)                         :athlon-direct,athlon-ieu
;;	  4--> b  0: i   8pc={(flags==0)?L37:pc}                  :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 4
;;   new head = 6
;;   new tail = 8

;;   ======================================================
;;   -- basic block 3 from 23 to 33 -- after reload
;;   ======================================================

;;	  0--> b  0: i  23{sp=sp-0x1c;clobber flags;clobber [scratch];}:athlon-direct,athlon-ieu
;;	  1--> b  0: i  10[sp]=ax                                 :athlon-direct,athlon-agu,athlon-store
;;	  2--> b  0: i  11call [`_ZdlPv']                         :athlon-vector,athlon-ieu
;;	  3--> b  0: i  33{sp=sp+0x1c;clobber flags;clobber [scratch];}:athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 3
;;   new head = 23
;;   new tail = 33

;;   ======================================================
;;   -- basic block 4 from 34 to 34 -- after reload
;;   ======================================================

;;	  0--> b  0: i  34simple_return                           :athlon-vector,athlon-ieu,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 34
;;   new tail = 34



starting the processing of deferred insns
ending the processing of deferred insns


void __tcf_2()

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 29 [mm0] 30 [mm1] 31 [mm2]
;;  exit block uses 	 7 [sp]
;;  regs ever live 	 0[ax] 7[sp] 17[flags]
;;  ref usage 	r0={3d,2u} r1={2d} r2={2d} r7={3d,11u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r17={4d,1u} r18={1d} r19={1d} r21={2d} r22={2d} r23={2d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={2d} r30={2d} r31={2d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} 
;;    total ref usage 100{86d,14u,0e} in 8{7 regular + 1 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 3, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
;; live  in  	 7 [sp]
;; live  gen 	 0 [ax] 17 [flags]
;; live  kill	
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 6 2 NOTE_INSN_FUNCTION_BEG)
(insn:TI 6 2 7 2 (set (reg/f:SI 0 ax [orig:83 D.83037 ] [83])
        (mem/f/c:SI (symbol_ref:SI ("num") [flags 0x2]  <var_decl 06e5dae0 num>) [6 MEM[(int * *)&num]+0 S4 A32])) 90 {*movsi_internal}
     (nil))
(insn:TI 7 6 8 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:SI 0 ax [orig:83 D.83037 ] [83])
            (const_int 0 [0]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_vector.h:177 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn:TI 8 7 9 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 37)
            (pc))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_vector.h:177 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 2165 (nil)))
 -> 37)
;;  succ:       3 [78.3%]  (FALLTHRU,CAN_FALLTHRU)
;;              4 [21.6%]  (CAN_FALLTHRU)
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]

;; basic block 3, loop depth 0, count 0, freq 7835, maybe hot
;;  prev block 2, next block 4, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [78.3%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 7 [sp]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;; live  in  	 0 [ax] 7 [sp]
;; live  gen 	 7 [sp]
;; live  kill	 17 [flags]
(note 9 8 23 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn/f:TI 23 9 24 3 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -28 [0xffffffffffffffe4])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0  A8]))
        ]) D:\LHX\7.5 contest\t1.cpp:23 943 {pro_epilogue_adjust_stack_si_add}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -28 [0xffffffffffffffe4])))
            (nil))))
(note 24 23 10 3 NOTE_INSN_PROLOGUE_END)
(insn:TI 10 24 11 3 (set (mem:SI (reg/f:SI 7 sp) [0  S4 A32])
        (reg/f:SI 0 ax [orig:83 D.83037 ] [83])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/ext/new_allocator.h:110 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 0 ax [orig:83 D.83037 ] [83])
        (nil)))
(call_insn:TI 11 10 40 3 (call (mem:QI (symbol_ref:SI ("_ZdlPv") [flags 0x43]  <function_decl 01938e00 operator delete>) [0 operator delete S1 A8])
        (const_int 4 [0x4])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/ext/new_allocator.h:110 641 {*call}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (mem/f:SI (reg/f:SI 7 sp) [0  S4 A32]))
        (nil)))
(note 40 11 33 3 NOTE_INSN_EPILOGUE_BEG)
(insn/f:TI 33 40 37 3 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 28 [0x1c])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0  A8]))
        ]) D:\LHX\7.5 contest\t1.cpp:23 943 {pro_epilogue_adjust_stack_si_add}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 28 [0x1c])))
            (nil))))
;;  succ:       4 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 7 [sp]
;; live  out 	 7 [sp]

;; basic block 4, loop depth 0, count 0, freq 7835, maybe hot
;; Invalid sum of incoming frequencies 10000, should be 7835
;;  prev block 3, next block 1, flags: (REACHABLE, RTL)
;;  pred:       3 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              2 [21.6%]  (CAN_FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	
;; live  in  	 7 [sp]
;; live  gen 	
;; live  kill	
(code_label 37 33 36 4 8 "" [1 uses])
(note 36 37 34 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(jump_insn:TI 34 36 35 4 (simple_return) D:\LHX\7.5 contest\t1.cpp:23 658 {simple_return_internal}
     (nil)
 -> simple_return)
;;  succ:       EXIT [100.0%] 
;; lr  out 	 7 [sp]
;; live  out 	 7 [sp]

(barrier 35 34 22)
(note 22 35 0 NOTE_INSN_DELETED)

;; Function int printf(const char*, ...) (_ZL6printfPKcz, funcdef_no=417, decl_uid=944, symbol_order=134)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;;   ======================================================
;;   -- basic block 2 from 22 to 28 -- after reload
;;   ======================================================

;;	  0--> b  0: i  22{sp=sp-0x1c;clobber flags;clobber [scratch];}:athlon-direct,athlon-ieu
;;	  1--> b  0: i  21ax=sp+0x24                              :athlon-direct,athlon-agu,nothing
;;	  3--> b  0: i   8[sp+0x4]=ax                             :athlon-direct,athlon-agu,athlon-store
;;	  3--> b  0: i  19ax=[sp+0x20]                            :athlon-direct,athlon-load
;;	  6--> b  0: i   9[sp]=ax                                 :athlon-direct,athlon-agu,athlon-store
;;	  7--> b  0: i  10ax=call [`__mingw_vprintf']             :athlon-vector,athlon-ieu
;;	  7--> b  0: i  17use ax                                  :nothing
;;	  8--> b  0: i  27{sp=sp+0x1c;clobber flags;clobber [scratch];}:athlon-direct,athlon-ieu
;;	  9--> b  0: i  28simple_return                           :athlon-vector,athlon-ieu,athlon-ieu
;;	Ready list (final):  
;;   total time = 9
;;   new head = 22
;;   new tail = 28



starting the processing of deferred insns
ending the processing of deferred insns


int printf(const char*, ...)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 29 [mm0] 30 [mm1] 31 [mm2]
;;  exit block uses 	 0 [ax] 7 [sp]
;;  regs ever live 	 0[ax] 7[sp] 17[flags]
;;  ref usage 	r0={4d,4u} r1={2d} r2={2d} r7={3d,13u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1e} r17={3d} r18={1d} r19={1d} r21={2d} r22={2d} r23={2d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={2d} r30={2d} r31={2d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} 
;;    total ref usage 104{86d,17u,1e} in 9{8 regular + 1 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;; live  in  	 7 [sp]
;; live  gen 	 0 [ax] 7 [sp]
;; live  kill	 17 [flags]
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 3 4 22 2 NOTE_INSN_FUNCTION_BEG)
(insn/f:TI 22 3 23 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -28 [0xffffffffffffffe4])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0  A8]))
        ]) D:/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/stdio.h:297 943 {pro_epilogue_adjust_stack_si_add}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -28 [0xffffffffffffffe4])))
            (nil))))
(note 23 22 21 2 NOTE_INSN_PROLOGUE_END)
(insn:TI 21 23 8 2 (set (reg/f:SI 0 ax [87])
        (plus:SI (reg/f:SI 7 sp)
            (const_int 36 [0x24]))) D:/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/stdio.h:299 213 {*leasi}
     (nil))
(insn:TI 8 21 19 2 (set (mem:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [0  S4 A32])
        (reg/f:SI 0 ax [87])) D:/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/stdio.h:300 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 0 ax [87])
        (nil)))
(insn 19 8 9 2 (set (reg/v/f:SI 0 ax [orig:86 __format ] [86])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 32 [0x20])) [6 __format+0 S4 A32])) D:/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/stdio.h:300 90 {*movsi_internal}
     (expr_list:REG_EQUIV (mem/f/c:SI (reg/f:SI 16 argp) [6 __format+0 S4 A32])
        (nil)))
(insn:TI 9 19 10 2 (set (mem:SI (reg/f:SI 7 sp) [0  S4 A32])
        (reg/v/f:SI 0 ax [orig:86 __format ] [86])) D:/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/stdio.h:300 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v/f:SI 0 ax [orig:86 __format ] [86])
        (nil)))
(call_insn:TI 10 9 17 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("__mingw_vprintf") [flags 0x43]  <function_decl 02668200 __mingw_vprintf>) [0 __mingw_vprintf S1 A8])
            (const_int 8 [0x8]))) D:/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/stdio.h:300 648 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (mem/f:SI (reg/f:SI 7 sp) [0  S4 A32]))
        (expr_list:SI (use (mem/f:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 4 [0x4])) [0  S4 A32]))
            (nil))))
(insn 17 10 30 2 (use (reg/i:SI 0 ax)) D:/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/stdio.h:303 -1
     (nil))
(note 30 17 27 2 NOTE_INSN_EPILOGUE_BEG)
(insn/f:TI 27 30 28 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 28 [0x1c])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0  A8]))
        ]) D:/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/stdio.h:303 943 {pro_epilogue_adjust_stack_si_add}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 28 [0x1c])))
            (nil))))
(jump_insn:TI 28 27 29 2 (simple_return) D:/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include/stdio.h:303 658 {simple_return_internal}
     (nil)
 -> simple_return)
;;  succ:       EXIT [100.0%] 
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]

(barrier 29 28 20)
(note 20 29 0 NOTE_INSN_DELETED)

;; Function void __tcf_0() (__tcf_0, funcdef_no=6103, decl_uid=80872, symbol_order=3640)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;;   ======================================================
;;   -- basic block 2 from 5 to 6 -- after reload
;;   ======================================================

;;	  0--> b  0: i   5cx=`_ZStL8__ioinit'                     :athlon-direct,athlon-ieu
;;	  1--> b  0: i   6call [`_ZNSt8ios_base4InitD1Ev']        :athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 5
;;   new tail = 6



starting the processing of deferred insns
ending the processing of deferred insns


void __tcf_0()

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 29 [mm0] 30 [mm1] 31 [mm2]
;;  exit block uses 	 7 [sp]
;;  regs ever live 	 2[cx] 7[sp]
;;  ref usage 	r0={2d} r1={2d} r2={3d,1u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r17={1d} r18={1d} r19={1d} r21={2d} r22={2d} r23={2d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={2d} r30={2d} r31={2d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} 
;;    total ref usage 85{81d,4u,0e} in 2{1 regular + 1 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (REACHABLE, RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;; live  in  	 7 [sp]
;; live  gen 	 2 [cx]
;; live  kill	
(note 3 1 11 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 11 3 2 2 NOTE_INSN_PROLOGUE_END)
(note 2 11 5 2 NOTE_INSN_FUNCTION_BEG)
(insn:TI 5 2 6 2 (set (reg:SI 2 cx)
        (symbol_ref:SI ("_ZStL8__ioinit") [flags 0x2]  <var_decl 035d1180 __ioinit>)) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/iostream:74 90 {*movsi_internal}
     (nil))
(call_insn/j:TI 6 5 7 2 (call (mem:QI (symbol_ref:SI ("_ZNSt8ios_base4InitD1Ev") [flags 0x43]  <function_decl 032bbc80 __comp_dtor >) [0 __comp_dtor  S1 A8])
        (const_int 0 [0])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/iostream:74 644 {*sibcall}
     (expr_list:REG_DEAD (reg:SI 2 cx)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:SI (use (reg:SI 2 cx))
        (nil)))
;;  succ:       EXIT [100.0%]  (ABNORMAL,SIBCALL)
;; lr  out 	 7 [sp]
;; live  out 	 7 [sp]

(barrier 7 6 10)
(note 10 7 0 NOTE_INSN_DELETED)

;; Function long long unsigned int qpow(long long unsigned int, long long unsigned int) (_Z4qpowyy, funcdef_no=5705, decl_uid=72664, symbol_order=3171)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 9 n_edges 11 count 10 (  1.1)


long long unsigned int qpow(long long unsigned int, long long unsigned int)

Dataflow summary:
def_info->table_size = 57, use_info->table_size = 0
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 29 [mm0] 30 [mm1] 31 [mm2]
;;  exit block uses 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 3[bx] 4[si] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={11d,9u} r1={7d,7u} r2={3d,4u} r3={4d,6u} r4={10d,10u} r5={4d,7u} r6={5d,5u} r7={11d,37u} r17={17d,3u} r21={1d} r22={1d} r23={1d} r29={1d} r30={1d} r31={1d} 
;;    total ref usage 166{78d,88u,0e} in 55{55 regular + 0 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(4){ }d-1(5){ }d-1(6){ }d-1(7){ }d-1(21){ }d-1(22){ }d-1(23){ }d-1(29){ }d-1(30){ }d-1(31){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 29 [mm0] 30 [mm1] 31 [mm2]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 29 [mm0] 30 [mm1] 31 [mm2]
;; live  kill	
;; lr  out 	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;; live  out 	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]

( 0 )->[2]->( 3 8 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;; lr  use 	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 5 [di] 7 [sp] 17 [flags]
;; live  in  	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 5 [di] 7 [sp] 17 [flags]
;; live  kill	 0 [ax] 17 [flags]
;; lr  out 	 1 [dx] 2 [cx] 3 [bx] 5 [di] 7 [sp]
;; live  out 	 1 [dx] 2 [cx] 3 [bx] 5 [di] 7 [sp]

( 2 )->[3]->( 4 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 3 [bx] 5 [di] 7 [sp]
;; lr  use 	 1 [dx] 7 [sp]
;; lr  def 	 6 [bp]
;; live  in  	 1 [dx] 2 [cx] 3 [bx] 5 [di] 7 [sp]
;; live  gen 	 6 [bp]
;; live  kill	
;; lr  out 	 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp]
;; live  out 	 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp]

( 3 6 )->[4]->( 5 6 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp]
;; lr  use 	 2 [cx] 7 [sp]
;; lr  def 	 4 [si] 17 [flags]
;; live  in  	 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp]
;; live  gen 	 4 [si] 17 [flags]
;; live  kill	 17 [flags]
;; lr  out 	 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp]
;; live  out 	 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp]

( 4 )->[5]->( 6 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }}
;; lr  in  	 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp]
;; lr  use 	 5 [di] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 4 [si] 17 [flags]
;; live  in  	 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 4 [si]
;; live  kill	 17 [flags]
;; lr  out 	 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp]
;; live  out 	 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp]

( 4 5 )->[6]->( 4 7 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }}
;; lr  in  	 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp]
;; lr  use 	 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 17 [flags]
;; live  in  	 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 17 [flags]
;; live  kill	 0 [ax] 17 [flags]
;; lr  out 	 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp]
;; live  out 	 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp]

( 6 8 )->[7]->( 1 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags]
;; live  in  	 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]

( 2 )->[8]->( 7 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	
;; live  in  	 7 [sp]
;; live  gen 	
;; live  kill	
;; lr  out 	 7 [sp]
;; live  out 	 7 [sp]

( 7 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ }u-1(1){ }u-1(3){ }u-1(4){ }u-1(5){ }u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;; lr  use 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;; lr  def 	
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 11 to worklist
  Adding insn 114 to worklist
  Adding insn 113 to worklist
  Adding insn 112 to worklist
  Adding insn 111 to worklist
  Adding insn 104 to worklist
  Adding insn 103 to worklist
  Adding insn 18 to worklist
  Adding insn 25 to worklist
  Adding insn 102 to worklist
  Adding insn 101 to worklist
  Adding insn 40 to worklist
  Adding insn 126 to worklist
  Adding insn 48 to worklist
  Adding insn 137 to worklist
  Adding insn 98 to worklist
  Adding insn 97 to worklist
Finished finding needed instructions:
processing block 7 lr out =  0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
  Adding insn 125 to worklist
  Adding insn 124 to worklist
  Adding insn 123 to worklist
  Adding insn 122 to worklist
  Adding insn 121 to worklist
  Adding insn 96 to worklist
  Adding insn 95 to worklist
processing block 6 lr out =  2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp]
  Adding insn 39 to worklist
  Adding insn 84 to worklist
  Adding insn 129 to worklist
  Adding insn 128 to worklist
  Adding insn 34 to worklist
  Adding insn 100 to worklist
  Adding insn 99 to worklist
  Adding insn 32 to worklist
  Adding insn 82 to worklist
  Adding insn 31 to worklist
  Adding insn 29 to worklist
  Adding insn 79 to worklist
processing block 5 lr out =  2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp]
  Adding insn 23 to worklist
  Adding insn 91 to worklist
  Adding insn 22 to worklist
  Adding insn 133 to worklist
  Adding insn 132 to worklist
  Adding insn 131 to worklist
  Adding insn 130 to worklist
processing block 4 lr out =  2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp]
  Adding insn 17 to worklist
  Adding insn 14 to worklist
  Adding insn 73 to worklist
processing block 3 lr out =  2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp]
  Adding insn 117 to worklist
processing block 8 lr out =  7 [sp]
processing block 2 lr out =  1 [dx] 2 [cx] 3 [bx] 5 [di] 7 [sp]
  Adding insn 10 to worklist
  Adding insn 72 to worklist
  Adding insn 110 to worklist
  Adding insn 109 to worklist
  Adding insn 107 to worklist
  Adding insn 106 to worklist
  Adding insn 105 to worklist
  Adding insn 115 to worklist
df_worklist_dataflow_doublequeue:n_basic_blocks 9 n_edges 11 count 10 (  1.1)
;;   ======================================================
;;   -- basic block 2 from 111 to 11 -- after reload
;;   ======================================================

;;	  0--> b  0: i 111[--sp]=bp                               :athlon-direct,athlon-agu,athlon-store
;;	  0--> b  0: i 112[--sp]=di                               :athlon-direct,athlon-agu,athlon-store
;;	  1--> b  0: i 113[--sp]=si                               :athlon-direct,athlon-agu,athlon-store
;;	  1--> b  0: i 114[--sp]=bx                               :athlon-direct,athlon-agu,athlon-store
;;	  3--> b  0: i 115{sp=sp-0xc;clobber flags;clobber [scratch];}:athlon-direct,athlon-ieu
;;	  4--> b  0: i 105ax=[sp+0x20]                            :athlon-direct,athlon-load
;;	  4--> b  0: i 110bx=[sp+0x2c]                            :athlon-direct,athlon-load
;;	  5--> b  0: i 109cx=[sp+0x28]                            :athlon-direct,athlon-load
;;	  5--> b  0: i 106dx=[sp+0x24]                            :athlon-direct,athlon-load
;;	  7--> b  0: i 107di=ax                                   :athlon-direct,athlon-ieu
;;	  7--> b  0: i  72ax=bx                                   :athlon-direct,athlon-ieu
;;	  8--> b  0: i  10{flags=cmp(ax|cx,0);clobber ax;}        :athlon-direct,athlon-ieu
;;	  9--> b  0: i  11pc={(flags==0)?L54:pc}                  :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 9
;;   new head = 111
;;   new tail = 11

;;   ======================================================
;;   -- basic block 3 from 117 to 104 -- after reload
;;   ======================================================

;;	  0--> b  0: i 117bp=dx                                   :athlon-direct,athlon-ieu
;;	  0--> b  0: i 103[sp]=0x1                                :athlon-direct,athlon-agu,athlon-store
;;	  0--> b  0: i 104[sp+0x4]=0                              :athlon-direct,athlon-agu,athlon-store
;;	Ready list (final):  
;;   total time = 0
;;   new head = 117
;;   new tail = 104

;;   ======================================================
;;   -- basic block 4 from 73 to 18 -- after reload
;;   ======================================================

;;	  0--> b  0: i  73si=cx                                   :athlon-direct,athlon-ieu
;;	  1--> b  0: i  14{si=si&0x1;clobber flags;}              :athlon-direct,athlon-ieu
;;	  2--> b  0: i  17flags=cmp(si,0)                         :athlon-direct,athlon-ieu
;;	  3--> b  0: i  18pc={(flags==0)?L27:pc}                  :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 3
;;   new head = 73
;;   new tail = 18

;;   ======================================================
;;   -- basic block 5 from 130 to 25 -- after reload
;;   ======================================================

;;	  0--> b  0: i 130si=[sp+0x4]                             :athlon-direct,athlon-load
;;	  0--> b  0: i 132dx=[sp]                                 :athlon-direct,athlon-load
;;	  1--> b  0: i  91ax=[sp]                                 :athlon-direct,athlon-load
;;	  3--> b  0: i 133{dx=dx*bp;clobber flags;}               :athlon-direct0,athlon-ieu0,athlon-mult,athlon-ieu0
;;	  4--> b  0: i 131{si=si*di;clobber flags;}               :athlon-direct0,athlon-ieu0,athlon-mult,athlon-ieu0
;;	  7--> b  0: i  22{si=si+dx;clobber flags;}               :athlon-direct,athlon-ieu
;;	  8--> b  0: i  23{ax=zxn(ax)*zxn(di);clobber flags;}     :athlon-direct0,athlon-ieu0,athlon-mult,athlon-ieu0
;;	 11--> b  0: i 102[sp+0x4]=dx                             :athlon-direct,athlon-agu,athlon-store
;;	 11--> b  0: i  25{[sp+0x4]=[sp+0x4]+si;clobber flags;}   :athlon-direct,athlon-load,athlon-ieu,athlon-store,athlon-store
;;	 12--> b  0: i 101[sp]=ax                                 :athlon-direct,athlon-agu,athlon-store
;;	Ready list (final):  
;;   total time = 12
;;   new head = 130
;;   new tail = 25

;;   ======================================================
;;   -- basic block 6 from 79 to 40 -- after reload
;;   ======================================================

;;	  0--> b  0: i  79si=bp                                   :athlon-direct,athlon-ieu
;;	  0--> b  0: i  82ax=di                                   :athlon-direct,athlon-ieu
;;	  1--> b  0: i  32{ax=zxn(ax)*zxn(di);clobber flags;}     :athlon-direct0,athlon-ieu0,athlon-mult,athlon-ieu0
;;	  2--> b  0: i  29{si=si*di;clobber flags;}               :athlon-direct0,athlon-ieu0,athlon-mult,athlon-ieu0
;;	  3--> b  0: i 128{cx=cx 0>>0x1|bx<<0x20-0x1;clobber flags;}:athlon-vector,athlon-ieu,athlon-ieu
;;	  4--> b  0: i 129{bx=bx 0>>0x1;clobber flags;}           :athlon-direct,athlon-ieu
;;	  4--> b  0: i  99di=ax                                   :athlon-direct,athlon-ieu
;;	  4--> b  0: i 100bp=dx                                   :athlon-direct,athlon-ieu
;;	  5--> b  0: i  31{si=si<<0x1;clobber flags;}             :athlon-direct,athlon-ieu
;;	  5--> b  0: i  84ax=bx                                   :athlon-direct,athlon-ieu
;;	  6--> b  0: i  34{bp=bp+si;clobber flags;}               :athlon-direct,athlon-ieu
;;	  6--> b  0: i  39{flags=cmp(ax|cx,0);clobber ax;}        :athlon-direct,athlon-ieu
;;	  7--> b  0: i  40pc={(flags!=0)?L37:pc}                  :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 7
;;   new head = 79
;;   new tail = 40

;;   ======================================================
;;   -- basic block 7 from 95 to 126 -- after reload
;;   ======================================================

;;	  0--> b  0: i  95ax=[sp]                                 :athlon-direct,athlon-load
;;	  0--> b  0: i  96dx=[sp+0x4]                             :athlon-direct,athlon-load
;;	  0--> b  0: i 121{sp=sp+0xc;clobber flags;clobber [scratch];}:athlon-direct,athlon-ieu
;;	  1--> b  0: i 122bx=[sp++]                               :athlon-vector,athlon-load,athlon-ieu
;;	  1--> b  0: i  48use ax                                  :nothing
;;	  2--> b  0: i 123si=[sp++]                               :athlon-vector,athlon-load,athlon-ieu
;;	  3--> b  0: i 124di=[sp++]                               :athlon-vector,athlon-load,athlon-ieu
;;	  4--> b  0: i 125bp=[sp++]                               :athlon-vector,athlon-load,athlon-ieu
;;	  5--> b  0: i 126simple_return                           :athlon-vector,athlon-ieu,athlon-ieu
;;	Ready list (final):  
;;   total time = 5
;;   new head = 95
;;   new tail = 126

;;   ======================================================
;;   -- basic block 8 from 97 to 137 -- after reload
;;   ======================================================

;;	  0--> b  0: i  97[sp]=0x1                                :athlon-direct,athlon-agu,athlon-store
;;	  0--> b  0: i  98[sp+0x4]=0                              :athlon-direct,athlon-agu,athlon-store
;;	  0--> b  0: i 137pc=L41                                  :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 97
;;   new tail = 137



starting the processing of deferred insns
ending the processing of deferred insns


long long unsigned int qpow(long long unsigned int, long long unsigned int)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 29 [mm0] 30 [mm1] 31 [mm2]
;;  exit block uses 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 3[bx] 4[si] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={11d,9u} r1={7d,7u} r2={3d,4u} r3={4d,6u} r4={10d,10u} r5={4d,7u} r6={5d,5u} r7={11d,37u} r17={17d,3u} r21={1d} r22={1d} r23={1d} r29={1d} r30={1d} r31={1d} 
;;    total ref usage 166{78d,88u,0e} in 55{55 regular + 0 call} insns.
(note 1 0 7 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 900, maybe hot
;;  prev block 0, next block 3, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;; lr  use 	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 5 [di] 7 [sp] 17 [flags]
;; live  in  	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 5 [di] 7 [sp] 17 [flags]
;; live  kill	 0 [ax] 17 [flags]
(note 7 1 4 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 4 7 9 2 NOTE_INSN_FUNCTION_BEG)
(note 9 4 111 2 NOTE_INSN_DELETED)
(insn/f:TI 111 9 112 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A8])
        (reg:SI 6 bp)) D:\LHX\7.5 contest\t1.cpp:24 66 {*pushsi2}
     (expr_list:REG_DEAD (reg:SI 6 bp)
        (nil)))
(insn/f 112 111 113 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A8])
        (reg:SI 5 di)) D:\LHX\7.5 contest\t1.cpp:24 66 {*pushsi2}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (nil)))
(insn/f:TI 113 112 114 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A8])
        (reg:SI 4 si)) D:\LHX\7.5 contest\t1.cpp:24 66 {*pushsi2}
     (expr_list:REG_DEAD (reg:SI 4 si)
        (nil)))
(insn/f 114 113 115 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A8])
        (reg:SI 3 bx)) D:\LHX\7.5 contest\t1.cpp:24 66 {*pushsi2}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil)))
(insn/f:TI 115 114 116 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0  A8]))
        ]) D:\LHX\7.5 contest\t1.cpp:24 943 {pro_epilogue_adjust_stack_si_add}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (nil))))
(note 116 115 105 2 NOTE_INSN_PROLOGUE_END)
(insn:TI 105 116 110 2 (set (reg:SI 0 ax [orig:86 a ] [86])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 32 [0x20])) [34 a+0 S4 A32])) D:\LHX\7.5 contest\t1.cpp:24 90 {*movsi_internal}
     (nil))
(insn 110 105 109 2 (set (reg:SI 3 bx [ b+4 ])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 44 [0x2c])) [34 b+4 S4 A32])) D:\LHX\7.5 contest\t1.cpp:24 90 {*movsi_internal}
     (nil))
(insn:TI 109 110 106 2 (set (reg:SI 2 cx [orig:87 b ] [87])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 40 [0x28])) [34 b+0 S4 A32])) D:\LHX\7.5 contest\t1.cpp:24 90 {*movsi_internal}
     (nil))
(insn 106 109 107 2 (set (reg:SI 1 dx [ a+4 ])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 36 [0x24])) [34 a+4 S4 A32])) D:\LHX\7.5 contest\t1.cpp:24 90 {*movsi_internal}
     (nil))
(insn:TI 107 106 72 2 (set (reg:SI 5 di [orig:86 a ] [86])
        (reg:SI 0 ax [orig:86 a ] [86])) D:\LHX\7.5 contest\t1.cpp:24 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:86 a ] [86])
        (nil)))
(insn 72 107 10 2 (set (reg:SI 0 ax [103])
        (reg:SI 3 bx [ b+4 ])) D:\LHX\7.5 contest\t1.cpp:26 90 {*movsi_internal}
     (nil))
(insn:TI 10 72 11 2 (parallel [
            (set (reg:CCZ 17 flags)
                (compare:CCZ (ior:SI (reg:SI 0 ax [103])
                        (reg:SI 2 cx [orig:87 b ] [87]))
                    (const_int 0 [0])))
            (clobber (reg:SI 0 ax [103]))
        ]) D:\LHX\7.5 contest\t1.cpp:26 425 {*iorsi_3}
     (expr_list:REG_DEAD (reg:SI 0 ax [103])
        (expr_list:REG_UNUSED (reg:SI 0 ax [103])
            (nil))))
(jump_insn:TI 11 10 12 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 54)
            (pc))) D:\LHX\7.5 contest\t1.cpp:26 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 900 (nil)))
 -> 54)
;;  succ:       3 [91.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              8 [9.0%]  (CAN_FALLTHRU)
;; lr  out 	 1 [dx] 2 [cx] 3 [bx] 5 [di] 7 [sp]
;; live  out 	 1 [dx] 2 [cx] 3 [bx] 5 [di] 7 [sp]

;; basic block 3, loop depth 0, count 0, freq 819, maybe hot
;;  prev block 2, next block 4, flags: (REACHABLE, RTL)
;;  pred:       2 [91.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 3 [bx] 5 [di] 7 [sp]
;; lr  use 	 1 [dx] 7 [sp]
;; lr  def 	 6 [bp]
;; live  in  	 1 [dx] 2 [cx] 3 [bx] 5 [di] 7 [sp]
;; live  gen 	 6 [bp]
;; live  kill	
(note 12 11 117 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn:TI 117 12 103 3 (set (reg:SI 6 bp [ a+4 ])
        (reg:SI 1 dx [ a+4 ])) 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [ a+4 ])
        (nil)))
(insn 103 117 104 3 (set (mem/c:SI (reg/f:SI 7 sp) [45 %sfp+-8 S4 A64])
        (const_int 1 [0x1])) D:\LHX\7.5 contest\t1.cpp:26 90 {*movsi_internal}
     (nil))
(insn 104 103 37 3 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [45 %sfp+-4 S4 A32])
        (const_int 0 [0])) D:\LHX\7.5 contest\t1.cpp:26 90 {*movsi_internal}
     (nil))
;;  succ:       4 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp]
;; live  out 	 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp]

;; basic block 4, loop depth 0, count 0, freq 9100, maybe hot
;;  prev block 3, next block 5, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       3 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              6 [91.0%]  (DFS_BACK,CAN_FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp]
;; lr  use 	 2 [cx] 7 [sp]
;; lr  def 	 4 [si] 17 [flags]
;; live  in  	 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp]
;; live  gen 	 4 [si] 17 [flags]
;; live  kill	 17 [flags]
(code_label 37 104 13 4 16 "" [1 uses])
(note 13 37 73 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn:TI 73 13 14 4 (set (reg:SI 4 si [orig:101 D.83044 ] [101])
        (reg:SI 2 cx [orig:87 b ] [87])) D:\LHX\7.5 contest\t1.cpp:27 90 {*movsi_internal}
     (nil))
(insn:TI 14 73 17 4 (parallel [
            (set (reg:SI 4 si [orig:101 D.83044 ] [101])
                (and:SI (reg:SI 4 si [orig:101 D.83044 ] [101])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) D:\LHX\7.5 contest\t1.cpp:27 370 {*andsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn:TI 17 14 18 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 4 si [orig:101 D.83044 ] [101])
            (const_int 0 [0]))) D:\LHX\7.5 contest\t1.cpp:27 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 4 si [orig:101 D.83044 ] [101])
        (nil)))
(jump_insn:TI 18 17 19 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 27)
            (pc))) D:\LHX\7.5 contest\t1.cpp:27 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 27)
;;  succ:       5 [50.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              6 [50.0%]  (CAN_FALLTHRU)
;; lr  out 	 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp]
;; live  out 	 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp]

;; basic block 5, loop depth 0, count 0, freq 4550, maybe hot
;;  prev block 4, next block 6, flags: (REACHABLE, RTL)
;;  pred:       4 [50.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }}
;; lr  in  	 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp]
;; lr  use 	 5 [di] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 4 [si] 17 [flags]
;; live  in  	 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 4 [si]
;; live  kill	 17 [flags]
(note 19 18 24 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(note 24 19 130 5 NOTE_INSN_DELETED)
(insn:TI 130 24 132 5 (set (reg:SI 4 si [91])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [45 %sfp+-4 S4 A32])) D:\LHX\7.5 contest\t1.cpp:27 90 {*movsi_internal}
     (nil))
(insn 132 130 91 5 (set (reg:SI 1 dx [92])
        (mem/c:SI (reg/f:SI 7 sp) [45 %sfp+-8 S4 A64])) D:\LHX\7.5 contest\t1.cpp:27 90 {*movsi_internal}
     (nil))
(insn:TI 91 132 133 5 (set (reg:SI 0 ax [orig:83 re ] [83])
        (mem/c:SI (reg/f:SI 7 sp) [45 %sfp+-8 S4 A64])) D:\LHX\7.5 contest\t1.cpp:27 90 {*movsi_internal}
     (nil))
(insn:TI 133 91 131 5 (parallel [
            (set (reg:SI 1 dx [92])
                (mult:SI (reg:SI 1 dx [92])
                    (reg:SI 6 bp [ a+4 ])))
            (clobber (reg:CC 17 flags))
        ]) D:\LHX\7.5 contest\t1.cpp:27 306 {*mulsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn:TI 131 133 22 5 (parallel [
            (set (reg:SI 4 si [91])
                (mult:SI (reg:SI 4 si [91])
                    (reg:SI 5 di [orig:86 a ] [86])))
            (clobber (reg:CC 17 flags))
        ]) D:\LHX\7.5 contest\t1.cpp:27 306 {*mulsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn:TI 22 131 23 5 (parallel [
            (set (reg:SI 4 si [93])
                (plus:SI (reg:SI 4 si [91])
                    (reg:SI 1 dx [92])))
            (clobber (reg:CC 17 flags))
        ]) D:\LHX\7.5 contest\t1.cpp:27 220 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 1 dx [92])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn:TI 23 22 102 5 (parallel [
            (set (reg/v:DI 0 ax [orig:83 re ] [83])
                (mult:DI (zero_extend:DI (reg:SI 0 ax [orig:83 re ] [83]))
                    (zero_extend:DI (reg:SI 5 di [orig:86 a ] [86]))))
            (clobber (reg:CC 17 flags))
        ]) D:\LHX\7.5 contest\t1.cpp:27 323 {*umulsidi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn:TI 102 23 25 5 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [45 %sfp+-4 S4 A32])
        (reg:SI 1 dx [ re+4 ])) D:\LHX\7.5 contest\t1.cpp:27 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [ re+4 ])
        (nil)))
(insn 25 102 101 5 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 4 [0x4])) [45 %sfp+-4 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 4 [0x4])) [45 %sfp+-4 S4 A32])
                    (reg:SI 4 si [93])))
            (clobber (reg:CC 17 flags))
        ]) D:\LHX\7.5 contest\t1.cpp:27 220 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 4 si [93])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn:TI 101 25 27 5 (set (mem/c:SI (reg/f:SI 7 sp) [45 %sfp+-8 S4 A64])
        (reg:SI 0 ax [orig:83 re ] [83])) D:\LHX\7.5 contest\t1.cpp:27 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:83 re ] [83])
        (nil)))
;;  succ:       6 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp]
;; live  out 	 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp]

;; basic block 6, loop depth 0, count 0, freq 9100, maybe hot
;;  prev block 5, next block 7, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       4 [50.0%]  (CAN_FALLTHRU)
;;              5 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }}
;; lr  in  	 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp]
;; lr  use 	 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 17 [flags]
;; live  in  	 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 17 [flags]
;; live  kill	 0 [ax] 17 [flags]
(code_label 27 101 28 6 15 "" [1 uses])
(note 28 27 33 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(note 33 28 38 6 NOTE_INSN_DELETED)
(note 38 33 79 6 NOTE_INSN_DELETED)
(insn:TI 79 38 82 6 (set (reg:SI 4 si [95])
        (reg:SI 6 bp [ a+4 ])) D:\LHX\7.5 contest\t1.cpp:28 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 6 bp [ a+4 ])
        (nil)))
(insn 82 79 32 6 (set (reg:SI 0 ax [orig:86 a ] [86])
        (reg:SI 5 di [orig:86 a ] [86])) D:\LHX\7.5 contest\t1.cpp:28 90 {*movsi_internal}
     (nil))
(insn:TI 32 82 29 6 (parallel [
            (set (reg/v:DI 0 ax [orig:86 a ] [86])
                (mult:DI (zero_extend:DI (reg:SI 0 ax [orig:86 a ] [86]))
                    (zero_extend:DI (reg:SI 5 di [orig:86 a ] [86]))))
            (clobber (reg:CC 17 flags))
        ]) D:\LHX\7.5 contest\t1.cpp:28 323 {*umulsidi3_1}
     (expr_list:REG_DEAD (reg:SI 5 di [orig:86 a ] [86])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn:TI 29 32 128 6 (parallel [
            (set (reg:SI 4 si [95])
                (mult:SI (reg:SI 4 si [95])
                    (reg:SI 5 di [orig:86 a ] [86])))
            (clobber (reg:CC 17 flags))
        ]) D:\LHX\7.5 contest\t1.cpp:28 306 {*mulsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn:TI 128 29 129 6 (parallel [
            (set (reg:SI 2 cx [orig:87 b ] [87])
                (ior:SI (lshiftrt:SI (reg:SI 2 cx [orig:87 b ] [87])
                        (const_int 1 [0x1]))
                    (ashift:SI (reg:SI 3 bx [ b+4 ])
                        (minus:QI (const_int 32 [0x20])
                            (const_int 1 [0x1])))))
            (clobber (reg:CC 17 flags))
        ]) D:\LHX\7.5 contest\t1.cpp:28 521 {x86_shrd}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn:TI 129 128 99 6 (parallel [
            (set (reg:SI 3 bx [ b+4 ])
                (lshiftrt:SI (reg:SI 3 bx [ b+4 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) D:\LHX\7.5 contest\t1.cpp:28 529 {*lshrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 99 129 100 6 (set (reg:SI 5 di [orig:86 a ] [86])
        (reg:SI 0 ax [orig:86 a ] [86])) D:\LHX\7.5 contest\t1.cpp:28 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:86 a ] [86])
        (nil)))
(insn 100 99 31 6 (set (reg:SI 6 bp [ a+4 ])
        (reg:SI 1 dx [ a+4 ])) D:\LHX\7.5 contest\t1.cpp:28 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [ a+4 ])
        (nil)))
(insn:TI 31 100 84 6 (parallel [
            (set (reg:SI 4 si [97])
                (ashift:SI (reg:SI 4 si [95])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) D:\LHX\7.5 contest\t1.cpp:28 496 {*ashlsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 84 31 34 6 (set (reg:SI 0 ax [104])
        (reg:SI 3 bx [ b+4 ])) D:\LHX\7.5 contest\t1.cpp:26 90 {*movsi_internal}
     (nil))
(insn:TI 34 84 39 6 (parallel [
            (set (reg:SI 6 bp [ a+4 ])
                (plus:SI (reg:SI 6 bp [ a+4 ])
                    (reg:SI 4 si [97])))
            (clobber (reg:CC 17 flags))
        ]) D:\LHX\7.5 contest\t1.cpp:28 220 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 4 si [97])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 39 34 40 6 (parallel [
            (set (reg:CCZ 17 flags)
                (compare:CCZ (ior:SI (reg:SI 0 ax [104])
                        (reg:SI 2 cx [orig:87 b ] [87]))
                    (const_int 0 [0])))
            (clobber (reg:SI 0 ax [104]))
        ]) D:\LHX\7.5 contest\t1.cpp:26 425 {*iorsi_3}
     (expr_list:REG_DEAD (reg:SI 0 ax [104])
        (expr_list:REG_UNUSED (reg:SI 0 ax [104])
            (nil))))
(jump_insn:TI 40 39 41 6 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 37)
            (pc))) D:\LHX\7.5 contest\t1.cpp:26 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 9100 (nil)))
 -> 37)
;;  succ:       4 [91.0%]  (DFS_BACK,CAN_FALLTHRU)
;;              7 [9.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp]
;; live  out 	 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp]

;; basic block 7, loop depth 0, count 0, freq 900, maybe hot
;;  prev block 6, next block 8, flags: (REACHABLE, RTL)
;;  pred:       6 [9.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              8 [100.0%]  (CAN_FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags]
;; live  in  	 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;; live  kill	 17 [flags]
(code_label 41 40 42 7 14 "" [1 uses])
(note 42 41 95 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn:TI 95 42 96 7 (set (reg:SI 0 ax)
        (mem/c:SI (reg/f:SI 7 sp) [45 %sfp+-8 S4 A64])) D:\LHX\7.5 contest\t1.cpp:31 90 {*movsi_internal}
     (nil))
(insn 96 95 139 7 (set (reg:SI 1 dx [+4 ])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [45 %sfp+-4 S4 A32])) D:\LHX\7.5 contest\t1.cpp:31 90 {*movsi_internal}
     (nil))
(note 139 96 121 7 NOTE_INSN_EPILOGUE_BEG)
(insn/f 121 139 122 7 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 12 [0xc])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0  A8]))
        ]) D:\LHX\7.5 contest\t1.cpp:31 943 {pro_epilogue_adjust_stack_si_add}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 12 [0xc])))
            (nil))))
(insn/f:TI 122 121 48 7 (set (reg:SI 3 bx)
        (mem:SI (post_inc:SI (reg/f:SI 7 sp)) [0  S4 A8])) D:\LHX\7.5 contest\t1.cpp:31 74 {*popsi1}
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:SI 7 sp)
            (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])))
        (expr_list:REG_CFA_RESTORE (reg:SI 3 bx)
            (nil))))
(insn 48 122 123 7 (use (reg/i:DI 0 ax)) D:\LHX\7.5 contest\t1.cpp:31 -1
     (nil))
(insn/f:TI 123 48 124 7 (set (reg:SI 4 si)
        (mem:SI (post_inc:SI (reg/f:SI 7 sp)) [0  S4 A8])) D:\LHX\7.5 contest\t1.cpp:31 74 {*popsi1}
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:SI 7 sp)
            (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])))
        (expr_list:REG_CFA_RESTORE (reg:SI 4 si)
            (nil))))
(insn/f:TI 124 123 125 7 (set (reg:SI 5 di)
        (mem:SI (post_inc:SI (reg/f:SI 7 sp)) [0  S4 A8])) D:\LHX\7.5 contest\t1.cpp:31 74 {*popsi1}
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:SI 7 sp)
            (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])))
        (expr_list:REG_CFA_RESTORE (reg:SI 5 di)
            (nil))))
(insn/f:TI 125 124 126 7 (set (reg:SI 6 bp)
        (mem:SI (post_inc:SI (reg/f:SI 7 sp)) [0  S4 A8])) D:\LHX\7.5 contest\t1.cpp:31 74 {*popsi1}
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:SI 7 sp)
            (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])))
        (expr_list:REG_CFA_RESTORE (reg:SI 6 bp)
            (nil))))
(jump_insn:TI 126 125 127 7 (simple_return) D:\LHX\7.5 contest\t1.cpp:31 658 {simple_return_internal}
     (nil)
 -> simple_return)
;;  succ:       EXIT [100.0%] 
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]

(barrier 127 126 54)
;; basic block 8, loop depth 0, count 0, freq 81, maybe hot
;;  prev block 7, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [9.0%]  (CAN_FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	
;; live  in  	 7 [sp]
;; live  gen 	
;; live  kill	
(code_label 54 127 53 8 17 "" [1 uses])
(note 53 54 97 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn:TI 97 53 98 8 (set (mem/c:SI (reg/f:SI 7 sp) [45 %sfp+-8 S4 A64])
        (const_int 1 [0x1])) D:\LHX\7.5 contest\t1.cpp:25 90 {*movsi_internal}
     (nil))
(insn 98 97 137 8 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [45 %sfp+-4 S4 A32])
        (const_int 0 [0])) D:\LHX\7.5 contest\t1.cpp:25 90 {*movsi_internal}
     (nil))
(jump_insn 137 98 138 8 (set (pc)
        (label_ref 41)) 636 {jump}
     (nil)
 -> 41)
;;  succ:       7 [100.0%]  (CAN_FALLTHRU)
;; lr  out 	 7 [sp]
;; live  out 	 7 [sp]

(barrier 138 137 70)
(note 70 138 0 NOTE_INSN_DELETED)

;; Function void std::vector<_Tp, _Alloc>::_M_emplace_back_aux(_Args&& ...) [with _Args = {const int&}; _Tp = int; _Alloc = std::allocator<int>] (_ZNSt6vectorIiSaIiEE19_M_emplace_back_auxIIRKiEEEvDpOT_, funcdef_no=5879, decl_uid=75856, symbol_order=3371)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 21 n_edges 29 count 22 (    1)


void std::vector<_Tp, _Alloc>::_M_emplace_back_aux(_Args&& ...) [with _Args = {const int&}; _Tp = int; _Alloc = std::allocator<int>]

Dataflow summary:
def_info->table_size = 200, use_info->table_size = 0
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 29 [mm0] 30 [mm1] 31 [mm2]
;;  exit block uses 	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 3[bx] 4[si] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={10d,16u} r1={11d,10u,1e} r2={5d,9u,1e} r3={8d,9u} r4={5d,5u} r5={6d,9u} r6={4d,9u} r7={11d,50u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1e} r17={23d,9u} r18={2d} r19={2d} r21={3d} r22={3d} r23={3d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={3d} r30={3d} r31={3d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} 
;;    total ref usage 350{221d,126u,3e} in 77{75 regular + 2 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(4){ }d-1(5){ }d-1(6){ }d-1(7){ }d-1(21){ }d-1(22){ }d-1(23){ }d-1(29){ }d-1(30){ }d-1(31){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 29 [mm0] 30 [mm1] 31 [mm2]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 29 [mm0] 30 [mm1] 31 [mm2]
;; live  kill	
;; lr  out 	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;; live  out 	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]

( 0 )->[2]->( 17 3 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;; lr  use 	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 5 [di] 6 [bp] 7 [sp] 17 [flags]
;; live  in  	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 5 [di] 6 [bp] 7 [sp] 17 [flags]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 5 [di] 6 [bp] 7 [sp]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 5 [di] 6 [bp] 7 [sp]

( 2 )->[3]->( 4 18 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 2 [cx] 5 [di] 6 [bp] 7 [sp]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 3 [bx] 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 2 [cx] 5 [di] 6 [bp] 7 [sp]
;; live  gen 	 3 [bx] 17 [flags]
;; live  kill	
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp]

( 18 3 )->[4]->( 5 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 2 [cx] 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	
;; live  in  	 2 [cx] 7 [sp]
;; live  gen 	
;; live  kill	
;; lr  out 	 2 [cx] 7 [sp]
;; live  out 	 2 [cx] 7 [sp]

( 4 19 17 )->[5]->( 6 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }}
;; lr  in  	 2 [cx] 7 [sp]
;; lr  use 	 2 [cx] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 5 [di] 6 [bp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;; live  in  	 2 [cx] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 5 [di] 6 [bp]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp]

( 5 20 )->[6]->( 7 8 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp]
;; lr  use 	 0 [ax] 1 [dx] 7 [sp]
;; lr  def 	 1 [dx] 4 [si] 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp]
;; live  gen 	 1 [dx] 4 [si] 17 [flags]
;; live  kill	
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]

( 6 )->[7]->( 8 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;; lr  use 	 1 [dx] 4 [si] 7 [sp]
;; lr  def 	
;; live  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;; live  gen 	
;; live  kill	
;; lr  out 	 0 [ax] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp]
;; live  out 	 0 [ax] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp]

( 6 7 )->[8]->( 9 14 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp]
;; lr  use 	 5 [di] 6 [bp] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 0 [ax] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp]
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 0 [ax] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp]
;; live  out 	 0 [ax] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp]

( 8 )->[9]->( 10 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 2 [cx] 5 [di] 6 [bp] 7 [sp]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 1 [dx] 3 [bx]
;; live  in  	 0 [ax] 2 [cx] 5 [di] 6 [bp] 7 [sp]
;; live  gen 	 1 [dx] 3 [bx]
;; live  kill	
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp]

( 9 12 )->[10]->( 11 12 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp]
;; lr  use 	 1 [dx] 3 [bx] 7 [sp]
;; lr  def 	 4 [si] 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp]
;; live  gen 	 4 [si] 17 [flags]
;; live  kill	
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]

( 10 )->[11]->( 12 )
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;; lr  use 	 3 [bx] 4 [si] 7 [sp]
;; lr  def 	
;; live  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;; live  gen 	
;; live  kill	
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp]

( 10 11 )->[12]->( 10 13 )
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp]
;; lr  use 	 1 [dx] 3 [bx] 5 [di] 7 [sp]
;; lr  def 	 1 [dx] 3 [bx] 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp]
;; live  gen 	 1 [dx] 3 [bx] 17 [flags]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp]

( 12 )->[13]->( 14 )
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 2 [cx] 5 [di] 6 [bp] 7 [sp]
;; lr  use 	 0 [ax] 5 [di] 6 [bp] 7 [sp]
;; lr  def 	 1 [dx] 3 [bx] 5 [di] 17 [flags]
;; live  in  	 0 [ax] 2 [cx] 5 [di] 6 [bp] 7 [sp]
;; live  gen 	 1 [dx] 3 [bx] 5 [di]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 2 [cx] 3 [bx] 6 [bp] 7 [sp]
;; live  out 	 0 [ax] 2 [cx] 3 [bx] 6 [bp] 7 [sp]

( 13 8 )->[14]->( 15 16 )
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 2 [cx] 3 [bx] 6 [bp] 7 [sp]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 0 [ax] 2 [cx] 3 [bx] 6 [bp] 7 [sp]
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 0 [ax] 2 [cx] 3 [bx] 6 [bp] 7 [sp]
;; live  out 	 0 [ax] 2 [cx] 3 [bx] 6 [bp] 7 [sp]

( 14 )->[15]->( 16 )
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 2 [cx] 3 [bx] 6 [bp] 7 [sp]
;; lr  use 	 0 [ax] 2 [cx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;; live  in  	 0 [ax] 2 [cx] 3 [bx] 6 [bp] 7 [sp]
;; live  gen 	 0 [ax] 2 [cx]
;; live  kill	
;; lr  out 	 0 [ax] 2 [cx] 3 [bx] 7 [sp]
;; live  out 	 0 [ax] 2 [cx] 3 [bx] 7 [sp]

( 15 14 )->[16]->( 1 )
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 2 [cx] 3 [bx] 7 [sp]
;; lr  use 	 0 [ax] 2 [cx] 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags]
;; live  in  	 0 [ax] 2 [cx] 3 [bx] 7 [sp]
;; live  gen 	 0 [ax] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;; live  kill	 17 [flags]
;; lr  out 	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;; live  out 	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]

( 2 )->[17]->( 5 )
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(7){ }}
;; lr  in  	 2 [cx] 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	
;; live  in  	 2 [cx] 7 [sp]
;; live  gen 	
;; live  kill	
;; lr  out 	 2 [cx] 7 [sp]
;; live  out 	 2 [cx] 7 [sp]

( 3 )->[18]->( 4 19 )
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp]
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp]

( 18 )->[19]->( 5 20 )
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp]
;; lr  use 	 0 [ax] 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp]
;; live  gen 	 0 [ax] 17 [flags]
;; live  kill	 17 [flags]
;; lr  out 	 1 [dx] 2 [cx] 5 [di] 6 [bp] 7 [sp]
;; live  out 	 1 [dx] 2 [cx] 5 [di] 6 [bp] 7 [sp]

( 19 )->[20]->( 6 )
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 5 [di] 6 [bp] 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 3 [bx] 17 [flags]
;; live  in  	 1 [dx] 2 [cx] 5 [di] 6 [bp] 7 [sp]
;; live  gen 	 0 [ax] 3 [bx]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp]

( 16 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(3){ }u-1(4){ }u-1(5){ }u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;; lr  use 	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;; lr  def 	
;; live  in  	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 19 to worklist
  Adding insn 171 to worklist
  Adding insn 170 to worklist
  Adding insn 169 to worklist
  Adding insn 168 to worklist
  Adding insn 23 to worklist
  Adding insn 5 to worklist
  Adding insn 34 to worklist
  Adding insn 33 to worklist
  Adding insn 158 to worklist
  Adding insn 45 to worklist
  Adding insn 47 to worklist
  Adding insn 51 to worklist
  Adding insn 57 to worklist
  Adding insn 59 to worklist
  Adding insn 66 to worklist
  Adding insn 79 to worklist
  Adding insn 82 to worklist
  Adding insn 81 to worklist
  Adding insn 160 to worklist
  Adding insn 162 to worklist
  Adding insn 182 to worklist
  Adding insn 88 to worklist
  Adding insn 86 to worklist
  Adding insn 85 to worklist
  Adding insn 196 to worklist
  Adding insn 7 to worklist
  Adding insn 26 to worklist
  Adding insn 30 to worklist
  Adding insn 153 to worklist
  Adding insn 198 to worklist
Finished finding needed instructions:
processing block 16 lr out =  3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
  Adding insn 181 to worklist
  Adding insn 180 to worklist
  Adding insn 179 to worklist
  Adding insn 178 to worklist
  Adding insn 177 to worklist
  Adding insn 87 to worklist
processing block 15 lr out =  0 [ax] 2 [cx] 3 [bx] 7 [sp]
  Adding insn 161 to worklist
  Adding insn 163 to worklist
processing block 14 lr out =  0 [ax] 2 [cx] 3 [bx] 6 [bp] 7 [sp]
  Adding insn 78 to worklist
processing block 13 lr out =  0 [ax] 2 [cx] 3 [bx] 6 [bp] 7 [sp]
  Adding insn 75 to worklist
  Adding insn 70 to worklist
  Adding insn 69 to worklist
  Adding insn 165 to worklist
processing block 12 lr out =  0 [ax] 1 [dx] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp]
  Adding insn 65 to worklist
  Adding insn 63 to worklist
  Adding insn 62 to worklist
processing block 11 lr out =  0 [ax] 1 [dx] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp]
processing block 10 lr out =  0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
  Adding insn 56 to worklist
  Adding insn 55 to worklist
processing block 9 lr out =  0 [ax] 1 [dx] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp]
  Adding insn 10 to worklist
  Adding insn 53 to worklist
processing block 8 lr out =  0 [ax] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp]
  Adding insn 50 to worklist
processing block 7 lr out =  0 [ax] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp]
processing block 6 lr out =  0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
  Adding insn 44 to worklist
  Adding insn 43 to worklist
  Adding insn 137 to worklist
processing block 5 lr out =  0 [ax] 1 [dx] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp]
  Adding insn 166 to worklist
  Adding insn 38 to worklist
  Adding insn 155 to worklist
  Adding insn 37 to worklist
  Adding insn 36 to worklist
  Adding insn 159 to worklist
  Adding insn 154 to worklist
processing block 17 lr out =  2 [cx] 7 [sp]
processing block 4 lr out =  2 [cx] 7 [sp]
processing block 20 lr out =  0 [ax] 1 [dx] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp]
  Adding insn 187 to worklist
  Adding insn 8 to worklist
processing block 19 lr out =  1 [dx] 2 [cx] 5 [di] 6 [bp] 7 [sp]
  Adding insn 29 to worklist
  Adding insn 28 to worklist
processing block 18 lr out =  0 [ax] 1 [dx] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp]
  Adding insn 25 to worklist
processing block 3 lr out =  0 [ax] 1 [dx] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp]
  Adding insn 22 to worklist
  Adding insn 167 to worklist
processing block 2 lr out =  0 [ax] 1 [dx] 2 [cx] 5 [di] 6 [bp] 7 [sp]
  Adding insn 18 to worklist
  Adding insn 16 to worklist
  Adding insn 151 to worklist
  Adding insn 15 to worklist
  Adding insn 149 to worklist
  Adding insn 14 to worklist
  Adding insn 13 to worklist
  Adding insn 172 to worklist
df_worklist_dataflow_doublequeue:n_basic_blocks 21 n_edges 29 count 22 (    1)
;;   ======================================================
;;   -- basic block 2 from 168 to 19 -- after reload
;;   ======================================================

;;	  0--> b  0: i 168[--sp]=bp                               :athlon-direct,athlon-agu,athlon-store
;;	  0--> b  0: i 169[--sp]=di                               :athlon-direct,athlon-agu,athlon-store
;;	  1--> b  0: i 170[--sp]=si                               :athlon-direct,athlon-agu,athlon-store
;;	  1--> b  0: i 171[--sp]=bx                               :athlon-direct,athlon-agu,athlon-store
;;	  3--> b  0: i 172{sp=sp-0x2c;clobber flags;clobber [scratch];}:athlon-direct,athlon-ieu
;;	  3--> b  0: i  14di=[cx+0x4]                             :athlon-direct,athlon-load
;;	  3--> b  0: i  13bp=[cx]                                 :athlon-direct,athlon-load
;;	  6--> b  0: i 149dx=di                                   :athlon-direct,athlon-ieu
;;	  7--> b  0: i  15{dx=dx-bp;clobber flags;}               :athlon-direct,athlon-ieu
;;	  8--> b  0: i 151ax=dx                                   :athlon-direct,athlon-ieu
;;	  9--> b  0: i  16{ax=ax>>0x2;clobber flags;}             :athlon-direct,athlon-ieu
;;	 10--> b  0: i  18flags=cmp(ax,0)                         :athlon-direct,athlon-ieu
;;	 11--> b  0: i  19pc={(flags==0)?L95:pc}                  :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 11
;;   new head = 168
;;   new tail = 19

;;   ======================================================
;;   -- basic block 3 from 167 to 23 -- after reload
;;   ======================================================

;;	  0--> b  0: i 167bx=ax*0x2                               :athlon-direct,athlon-agu,nothing
;;	  2--> b  0: i  22flags=cmp(ax,bx)                        :athlon-direct,athlon-ieu
;;	  3--> b  0: i  23pc={(leu(flags,0))?L195:pc}             :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 3
;;   new head = 167
;;   new tail = 23

;;   ======================================================
;;   -- basic block 4 from 5 to 5 -- after reload
;;   ======================================================

;;	  0--> b  0: i   5[sp+0x14]=0xfffffffffffffffc            :athlon-direct,athlon-agu,athlon-store
;;	Ready list (final):  
;;   total time = 0
;;   new head = 5
;;   new tail = 5

;;   ======================================================
;;   -- basic block 5 from 158 to 166 -- after reload
;;   ======================================================

;;	  0--> b  0: i 154ax=[sp+0x14]                            :athlon-direct,athlon-load
;;	  0--> b  0: i 158[sp+0x18]=cx                            :athlon-direct,athlon-agu,athlon-store
;;	  3--> b  0: i  33[sp]=ax                                 :athlon-direct,athlon-agu,athlon-store
;;	  4--> b  0: i  34ax=call [`_Znwj']                       :athlon-vector,athlon-ieu
;;	  5--> b  0: i 159cx=[sp+0x18]                            :athlon-direct,athlon-load
;;	  5--> b  0: i 166bx=ax+0x4                               :athlon-direct,athlon-agu,nothing
;;	  8--> b  0: i  37di=[cx+0x4]                             :athlon-direct,athlon-load
;;	  8--> b  0: i  36bp=[cx]                                 :athlon-direct,athlon-load
;;	 11--> b  0: i 155dx=di                                   :athlon-direct,athlon-ieu
;;	 12--> b  0: i  38{dx=dx-bp;clobber flags;}               :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 12
;;   new head = 158
;;   new tail = 166

;;   ======================================================
;;   -- basic block 6 from 137 to 45 -- after reload
;;   ======================================================

;;	  0--> b  0: i 137si=[sp+0x40]                            :athlon-direct,athlon-load
;;	  0--> b  0: i  44{flags=cmp(dx+ax,0);dx=dx+ax;}          :athlon-direct,athlon-ieu
;;	  3--> b  0: i  43si=[si]                                 :athlon-direct,athlon-load
;;	  3--> b  0: i  45pc={(flags==0)?L48:pc}                  :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 3
;;   new head = 137
;;   new tail = 45

;;   ======================================================
;;   -- basic block 7 from 47 to 47 -- after reload
;;   ======================================================

;;	  0--> b  0: i  47[dx]=si                                 :athlon-direct,athlon-agu,athlon-store
;;	Ready list (final):  
;;   total time = 0
;;   new head = 47
;;   new tail = 47

;;   ======================================================
;;   -- basic block 8 from 50 to 51 -- after reload
;;   ======================================================

;;	  0--> b  0: i  50flags=cmp(bp,di)                        :athlon-direct,athlon-ieu
;;	  1--> b  0: i  51pc={(flags==0)?L76:pc}                  :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 50
;;   new tail = 51

;;   ======================================================
;;   -- basic block 9 from 53 to 10 -- after reload
;;   ======================================================

;;	  0--> b  0: i  53dx=bp                                   :athlon-direct,athlon-ieu
;;	  0--> b  0: i  10bx=ax                                   :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 53
;;   new tail = 10

;;   ======================================================
;;   -- basic block 10 from 55 to 57 -- after reload
;;   ======================================================

;;	  0--> b  0: i  56flags=cmp(bx,0)                         :athlon-direct,athlon-ieu
;;	  0--> b  0: i  55si=[dx]                                 :athlon-direct,athlon-load
;;	  1--> b  0: i  57pc={(flags==0)?L60:pc}                  :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 55
;;   new tail = 57

;;   ======================================================
;;   -- basic block 11 from 59 to 59 -- after reload
;;   ======================================================

;;	  0--> b  0: i  59[bx]=si                                 :athlon-direct,athlon-agu,athlon-store
;;	Ready list (final):  
;;   total time = 0
;;   new head = 59
;;   new tail = 59

;;   ======================================================
;;   -- basic block 12 from 62 to 66 -- after reload
;;   ======================================================

;;	  0--> b  0: i  63{dx=dx+0x4;clobber flags;}              :athlon-direct,athlon-ieu
;;	  0--> b  0: i  62{bx=bx+0x4;clobber flags;}              :athlon-direct,athlon-ieu
;;	  1--> b  0: i  65flags=cmp(di,dx)                        :athlon-direct,athlon-ieu
;;	  2--> b  0: i  66pc={(flags!=0)?L64:pc}                  :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 2
;;   new head = 62
;;   new tail = 66

;;   ======================================================
;;   -- basic block 13 from 165 to 75 -- after reload
;;   ======================================================

;;	  0--> b  0: i 165dx=bp+0x4                               :athlon-direct,athlon-agu,nothing
;;	  2--> b  0: i  69{di=di-dx;clobber flags;}               :athlon-direct,athlon-ieu
;;	  3--> b  0: i  70{di=di 0>>0x2;clobber flags;}           :athlon-direct,athlon-ieu
;;	  4--> b  0: i  75bx=di*0x4+ax+0x8                        :athlon-direct,athlon-agu,nothing
;;	Ready list (final):  
;;   total time = 4
;;   new head = 165
;;   new tail = 75

;;   ======================================================
;;   -- basic block 14 from 78 to 79 -- after reload
;;   ======================================================

;;	  0--> b  0: i  78flags=cmp(bp,0)                         :athlon-direct,athlon-ieu
;;	  1--> b  0: i  79pc={(flags==0)?L83:pc}                  :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 78
;;   new tail = 79

;;   ======================================================
;;   -- basic block 15 from 162 to 161 -- after reload
;;   ======================================================

;;	  0--> b  0: i  81[sp]=bp                                 :athlon-direct,athlon-agu,athlon-store
;;	  0--> b  0: i 162[sp+0x1c]=cx                            :athlon-direct,athlon-agu,athlon-store
;;	  1--> b  0: i 160[sp+0x18]=ax                            :athlon-direct,athlon-agu,athlon-store
;;	  2--> b  0: i  82call [`_ZdlPv']                         :athlon-vector,athlon-ieu
;;	  3--> b  0: i 163cx=[sp+0x1c]                            :athlon-direct,athlon-load
;;	  3--> b  0: i 161ax=[sp+0x18]                            :athlon-direct,athlon-load
;;	Ready list (final):  
;;   total time = 3
;;   new head = 162
;;   new tail = 161

;;   ======================================================
;;   -- basic block 16 from 85 to 182 -- after reload
;;   ======================================================

;;	  0--> b  0: i  85[cx]=ax                                 :athlon-direct,athlon-agu,athlon-store
;;	  0--> b  0: i  87{ax=ax+[sp+0x14];clobber flags;}        :athlon-direct,athlon-load,athlon-ieu
;;	  1--> b  0: i  86[cx+0x4]=bx                             :athlon-direct,athlon-agu,athlon-store
;;	  4--> b  0: i  88[cx+0x8]=ax                             :athlon-direct,athlon-agu,athlon-store
;;	  4--> b  0: i 177{sp=sp+0x2c;clobber flags;clobber [scratch];}:athlon-direct,athlon-ieu
;;	  5--> b  0: i 178bx=[sp++]                               :athlon-vector,athlon-load,athlon-ieu
;;	  6--> b  0: i 179si=[sp++]                               :athlon-vector,athlon-load,athlon-ieu
;;	  7--> b  0: i 180di=[sp++]                               :athlon-vector,athlon-load,athlon-ieu
;;	  8--> b  0: i 181bp=[sp++]                               :athlon-vector,athlon-load,athlon-ieu
;;	  9--> b  0: i 182{simple_return;use 0x4;}                :athlon-vector,athlon-ieu,athlon-ieu
;;	Ready list (final):  
;;   total time = 9
;;   new head = 85
;;   new tail = 182

;;   ======================================================
;;   -- basic block 17 from 7 to 196 -- after reload
;;   ======================================================

;;	  0--> b  0: i   7[sp+0x14]=0x4                           :athlon-direct,athlon-agu,athlon-store
;;	  0--> b  0: i 196pc=L31                                  :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 7
;;   new tail = 196

;;   ======================================================
;;   -- basic block 18 from 25 to 26 -- after reload
;;   ======================================================

;;	  0--> b  0: i  25flags=cmp(bx,0x3fffffff)                :athlon-direct,athlon-ieu
;;	  1--> b  0: i  26pc={(gtu(flags,0))?L103:pc}             :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 25
;;   new tail = 26

;;   ======================================================
;;   -- basic block 19 from 28 to 30 -- after reload
;;   ======================================================

;;	  0--> b  0: i  28{ax=ax<<0x3;clobber flags;}             :athlon-direct,athlon-ieu
;;	  0--> b  0: i  29flags=cmp(bx,0)                         :athlon-direct,athlon-ieu
;;	  1--> b  0: i 153[sp+0x14]=ax                            :athlon-direct,athlon-agu,athlon-store
;;	  1--> b  0: i  30pc={(flags!=0)?L31:pc}                  :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 28
;;   new tail = 30

;;   ======================================================
;;   -- basic block 20 from 8 to 198 -- after reload
;;   ======================================================

;;	  0--> b  0: i   8bx=0x4                                  :athlon-direct,athlon-ieu
;;	  0--> b  0: i 187{ax=0;clobber flags;}                   :athlon-direct,athlon-ieu
;;	  0--> b  0: i 198pc=L40                                  :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 8
;;   new tail = 198



starting the processing of deferred insns
ending the processing of deferred insns


void std::vector<_Tp, _Alloc>::_M_emplace_back_aux(_Args&& ...) [with _Args = {const int&}; _Tp = int; _Alloc = std::allocator<int>]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 29 [mm0] 30 [mm1] 31 [mm2]
;;  exit block uses 	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 3[bx] 4[si] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={10d,16u} r1={11d,10u,1e} r2={5d,9u,1e} r3={8d,9u} r4={5d,5u} r5={6d,9u} r6={4d,9u} r7={11d,50u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1e} r17={23d,9u} r18={2d} r19={2d} r21={3d} r22={3d} r23={3d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={3d} r30={3d} r31={3d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} 
;;    total ref usage 350{221d,126u,3e} in 77{75 regular + 2 call} insns.
(note 1 0 11 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 900, maybe hot
;;  prev block 0, next block 3, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;; lr  use 	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 5 [di] 6 [bp] 7 [sp] 17 [flags]
;; live  in  	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 5 [di] 6 [bp] 7 [sp] 17 [flags]
;; live  kill	 17 [flags]
(note 11 1 4 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 4 11 168 2 NOTE_INSN_FUNCTION_BEG)
(insn/f:TI 168 4 169 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A8])
        (reg:SI 6 bp)) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/vector.tcc:407 66 {*pushsi2}
     (expr_list:REG_DEAD (reg:SI 6 bp)
        (nil)))
(insn/f 169 168 170 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A8])
        (reg:SI 5 di)) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/vector.tcc:407 66 {*pushsi2}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (nil)))
(insn/f:TI 170 169 171 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A8])
        (reg:SI 4 si)) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/vector.tcc:407 66 {*pushsi2}
     (expr_list:REG_DEAD (reg:SI 4 si)
        (nil)))
(insn/f 171 170 172 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A8])
        (reg:SI 3 bx)) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/vector.tcc:407 66 {*pushsi2}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil)))
(insn/f:TI 172 171 173 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -44 [0xffffffffffffffd4])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0  A8]))
        ]) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/vector.tcc:407 943 {pro_epilogue_adjust_stack_si_add}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -44 [0xffffffffffffffd4])))
            (nil))))
(note 173 172 14 2 NOTE_INSN_PROLOGUE_END)
(insn 14 173 13 2 (set (reg/f:SI 5 di [orig:98 D.83068 ] [98])
        (mem/f:SI (plus:SI (reg/f:SI 2 cx [orig:115 this ] [115])
                (const_int 4 [0x4])) [6 MEM[(int * *)this_2(D) + 4B]+0 S4 A32])) 90 {*movsi_internal}
     (nil))
(insn 13 14 149 2 (set (reg/f:SI 6 bp [orig:93 D.83068 ] [93])
        (mem/f:SI (reg/f:SI 2 cx [orig:115 this ] [115]) [6 MEM[(int * *)this_2(D)]+0 S4 A32])) 90 {*movsi_internal}
     (nil))
(insn:TI 149 13 15 2 (set (reg:SI 1 dx [orig:111 D.83069 ] [111])
        (reg/f:SI 5 di [orig:98 D.83068 ] [98])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_vector.h:655 90 {*movsi_internal}
     (nil))
(insn:TI 15 149 151 2 (parallel [
            (set (reg:SI 1 dx [orig:111 D.83069 ] [111])
                (minus:SI (reg:SI 1 dx [orig:111 D.83069 ] [111])
                    (reg/f:SI 6 bp [orig:93 D.83068 ] [93])))
            (clobber (reg:CC 17 flags))
        ]) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_vector.h:655 263 {*subsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn:TI 151 15 16 2 (set (reg:SI 0 ax [orig:117 D.83069 ] [117])
        (reg:SI 1 dx [orig:111 D.83069 ] [111])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_vector.h:655 90 {*movsi_internal}
     (nil))
(insn:TI 16 151 18 2 (parallel [
            (set (reg:SI 0 ax [orig:117 D.83069 ] [117])
                (ashiftrt:SI (reg:SI 0 ax [orig:117 D.83069 ] [117])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_vector.h:655 530 {*ashrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUAL (div:SI (reg:SI 1 dx [orig:111 D.83069 ] [111])
                (const_int 4 [0x4]))
            (nil))))
(insn:TI 18 16 19 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:117 D.83069 ] [117])
            (const_int 0 [0]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_algobase.h:222 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn:TI 19 18 20 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 95)
            (pc))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_algobase.h:222 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 95)
;;  succ:       17 [50.0%]  (CAN_FALLTHRU)
;;              3 [50.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 5 [di] 6 [bp] 7 [sp]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 5 [di] 6 [bp] 7 [sp]

;; basic block 3, loop depth 0, count 0, freq 450, maybe hot
;;  prev block 2, next block 4, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [50.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 2 [cx] 5 [di] 6 [bp] 7 [sp]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 3 [bx] 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 2 [cx] 5 [di] 6 [bp] 7 [sp]
;; live  gen 	 3 [bx] 17 [flags]
;; live  kill	
(note 20 19 167 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn:TI 167 20 22 3 (set (reg/v:SI 3 bx [orig:105 __len ] [105])
        (mult:SI (reg:SI 0 ax [orig:117 D.83069 ] [117])
            (const_int 2 [0x2]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_vector.h:1427 213 {*leasi}
     (nil))
(insn:TI 22 167 23 3 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 0 ax [orig:117 D.83069 ] [117])
            (reg/v:SI 3 bx [orig:105 __len ] [105]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_vector.h:1428 7 {*cmpsi_1}
     (nil))
(jump_insn:TI 23 22 103 3 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 195)
            (pc))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_vector.h:1428 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 0 (nil)))
 -> 195)
;;  succ:       4 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              18 (CAN_FALLTHRU)
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp]

;; basic block 4, loop depth 0, count 0, freq 450, maybe hot
;;  prev block 3, next block 5, flags: (REACHABLE, RTL)
;;  pred:       18 [100.0%]  (CAN_FALLTHRU)
;;              3 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 2 [cx] 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	
;; live  in  	 2 [cx] 7 [sp]
;; live  gen 	
;; live  kill	
(code_label 103 23 102 4 33 "" [1 uses])
(note 102 103 5 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn:TI 5 102 31 4 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 20 [0x14])) [45 %sfp+-12 S4 A32])
        (const_int -4 [0xfffffffffffffffc])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_vector.h:1428 90 {*movsi_internal}
     (nil))
;;  succ:       5 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 2 [cx] 7 [sp]
;; live  out 	 2 [cx] 7 [sp]

;; basic block 5, loop depth 0, count 0, freq 261, maybe hot
;; Invalid sum of incoming frequencies 900, should be 261
;;  prev block 4, next block 6, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       4 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              19 (CAN_FALLTHRU)
;;              17 [100.0%]  (CAN_FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }}
;; lr  in  	 2 [cx] 7 [sp]
;; lr  use 	 2 [cx] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 5 [di] 6 [bp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;; live  in  	 2 [cx] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 5 [di] 6 [bp]
;; live  kill	 17 [flags]
(code_label 31 5 32 5 24 "" [2 uses])
(note 32 31 154 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn:TI 154 32 158 5 (set (reg:SI 0 ax [orig:104 D.83065 ] [104])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 20 [0x14])) [45 %sfp+-12 S4 A32])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/ext/new_allocator.h:104 90 {*movsi_internal}
     (nil))
(insn 158 154 33 5 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [45 %sfp+-8 S4 A32])
        (reg/f:SI 2 cx [orig:115 this ] [115])) 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 2 cx [orig:115 this ] [115])
        (nil)))
(insn:TI 33 158 34 5 (set (mem:SI (reg/f:SI 7 sp) [0  S4 A32])
        (reg:SI 0 ax [orig:104 D.83065 ] [104])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/ext/new_allocator.h:104 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:104 D.83065 ] [104])
        (nil)))
(call_insn:TI 34 33 159 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("_Znwj") [flags 0x43]  <function_decl 01938d00 operator new>) [0 operator new S1 A8])
            (const_int 4 [0x4]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/ext/new_allocator.h:104 648 {*call_value}
     (nil)
    (expr_list:SI (use (mem:SI (reg/f:SI 7 sp) [0  S4 A32]))
        (nil)))
(insn:TI 159 34 166 5 (set (reg/f:SI 2 cx [orig:115 this ] [115])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [45 %sfp+-8 S4 A32])) 90 {*movsi_internal}
     (nil))
(insn 166 159 37 5 (set (reg/f:SI 3 bx [orig:109 D.83071 ] [109])
        (plus:SI (reg/v/f:SI 0 ax [orig:91 __new_finish ] [91])
            (const_int 4 [0x4]))) 213 {*leasi}
     (nil))
(insn:TI 37 166 36 5 (set (reg/f:SI 5 di [orig:98 D.83068 ] [98])
        (mem/f:SI (plus:SI (reg/f:SI 2 cx [orig:115 this ] [115])
                (const_int 4 [0x4])) [6 MEM[(int * *)this_2(D) + 4B]+0 S4 A32])) 90 {*movsi_internal}
     (nil))
(insn 36 37 155 5 (set (reg/f:SI 6 bp [orig:93 D.83068 ] [93])
        (mem/f:SI (reg/f:SI 2 cx [orig:115 this ] [115]) [6 MEM[(int * *)this_2(D)]+0 S4 A32])) 90 {*movsi_internal}
     (nil))
(insn:TI 155 36 38 5 (set (reg:SI 1 dx [orig:111 D.83069 ] [111])
        (reg/f:SI 5 di [orig:98 D.83068 ] [98])) 90 {*movsi_internal}
     (nil))
(insn:TI 38 155 40 5 (parallel [
            (set (reg:SI 1 dx [orig:111 D.83069 ] [111])
                (minus:SI (reg:SI 1 dx [orig:111 D.83069 ] [111])
                    (reg/f:SI 6 bp [orig:93 D.83068 ] [93])))
            (clobber (reg:CC 17 flags))
        ]) 263 {*subsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
;;  succ:       6 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp]

;; basic block 6, loop depth 0, count 0, freq 900, maybe hot
;; Invalid sum of incoming frequencies 261, should be 900
;;  prev block 5, next block 7, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       5 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              20 [100.0%]  (CAN_FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp]
;; lr  use 	 0 [ax] 1 [dx] 7 [sp]
;; lr  def 	 1 [dx] 4 [si] 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp]
;; live  gen 	 1 [dx] 4 [si] 17 [flags]
;; live  kill	
(code_label 40 38 41 6 25 "" [1 uses])
(note 41 40 42 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(note 42 41 137 6 NOTE_INSN_DELETED)
(insn:TI 137 42 44 6 (set (reg/v/f:SI 4 si [orig:116 __args#0 ] [116])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 64 [0x40])) [6 __args#0+0 S4 A32])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/ext/new_allocator.h:120 90 {*movsi_internal}
     (expr_list:REG_EQUIV (mem/f/c:SI (reg/f:SI 16 argp) [6 __args#0+0 S4 A32])
        (nil)))
(insn 44 137 43 6 (parallel [
            (set (reg:CCZ 17 flags)
                (compare:CCZ (plus:SI (reg:SI 1 dx [orig:111 D.83069 ] [111])
                        (reg/v/f:SI 0 ax [orig:91 __new_finish ] [91]))
                    (const_int 0 [0])))
            (set (reg/f:SI 1 dx [orig:87 D.83066 ] [87])
                (plus:SI (reg:SI 1 dx [orig:111 D.83069 ] [111])
                    (reg/v/f:SI 0 ax [orig:91 __new_finish ] [91])))
        ]) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/ext/new_allocator.h:120 228 {*addsi_2}
     (nil))
(insn:TI 43 44 45 6 (set (reg:SI 4 si [orig:94 D.83069 ] [94])
        (mem:SI (reg/v/f:SI 4 si [orig:116 __args#0 ] [116]) [21 *__args#0_5(D)+0 S4 A32])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/ext/new_allocator.h:120 90 {*movsi_internal}
     (nil))
(jump_insn 45 43 46 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 48)
            (pc))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/ext/new_allocator.h:120 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 1500 (nil)))
 -> 48)
;;  succ:       7 [85.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              8 [15.0%]  (CAN_FALLTHRU)
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]

;; basic block 7, loop depth 0, count 0, freq 765, maybe hot
;;  prev block 6, next block 8, flags: (REACHABLE, RTL)
;;  pred:       6 [85.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;; lr  use 	 1 [dx] 4 [si] 7 [sp]
;; lr  def 	
;; live  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;; live  gen 	
;; live  kill	
(note 46 45 47 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn:TI 47 46 48 7 (set (mem:SI (reg/f:SI 1 dx [orig:87 D.83066 ] [87]) [21 *_9+0 S4 A32])
        (reg:SI 4 si [orig:94 D.83069 ] [94])) 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [orig:94 D.83069 ] [94])
        (expr_list:REG_DEAD (reg/f:SI 1 dx [orig:87 D.83066 ] [87])
            (nil))))
;;  succ:       8 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp]
;; live  out 	 0 [ax] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp]

;; basic block 8, loop depth 0, count 0, freq 900, maybe hot
;;  prev block 7, next block 9, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       6 [15.0%]  (CAN_FALLTHRU)
;;              7 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp]
;; lr  use 	 5 [di] 6 [bp] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 0 [ax] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp]
;; live  gen 	 17 [flags]
;; live  kill	
(code_label 48 47 49 8 26 "" [1 uses])
(note 49 48 50 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn:TI 50 49 51 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:SI 6 bp [orig:93 D.83068 ] [93])
            (reg/f:SI 5 di [orig:98 D.83068 ] [98]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_uninitialized.h:74 7 {*cmpsi_1}
     (nil))
(jump_insn:TI 51 50 52 8 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 76)
            (pc))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_uninitialized.h:74 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 900 (nil)))
 -> 76)
;;  succ:       9 [91.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              14 [9.0%]  (CAN_FALLTHRU)
;; lr  out 	 0 [ax] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp]
;; live  out 	 0 [ax] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp]

;; basic block 9, loop depth 0, count 0, freq 819, maybe hot
;;  prev block 8, next block 10, flags: (REACHABLE, RTL)
;;  pred:       8 [91.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 2 [cx] 5 [di] 6 [bp] 7 [sp]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 1 [dx] 3 [bx]
;; live  in  	 0 [ax] 2 [cx] 5 [di] 6 [bp] 7 [sp]
;; live  gen 	 1 [dx] 3 [bx]
;; live  kill	
(note 52 51 53 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn:TI 53 52 10 9 (set (reg:SI 1 dx [orig:92 ivtmp.296 ] [92])
        (reg/f:SI 6 bp [orig:93 D.83068 ] [93])) 90 {*movsi_internal}
     (nil))
(insn 10 53 64 9 (set (reg/v/f:SI 3 bx [orig:97 __new_finish ] [97])
        (reg/v/f:SI 0 ax [orig:91 __new_finish ] [91])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_uninitialized.h:74 90 {*movsi_internal}
     (nil))
;;  succ:       10 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp]

;; basic block 10, loop depth 0, count 0, freq 9100, maybe hot
;;  prev block 9, next block 11, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       9 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              12 [91.0%]  (DFS_BACK,CAN_FALLTHRU)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp]
;; lr  use 	 1 [dx] 3 [bx] 7 [sp]
;; lr  def 	 4 [si] 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp]
;; live  gen 	 4 [si] 17 [flags]
;; live  kill	
(code_label 64 10 54 10 29 "" [1 uses])
(note 54 64 56 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn:TI 56 54 55 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:SI 3 bx [orig:97 __new_finish ] [97])
            (const_int 0 [0]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_construct.h:75 3 {*cmpsi_ccno_1}
     (nil))
(insn 55 56 57 10 (set (reg:SI 4 si [orig:95 D.83069 ] [95])
        (mem:SI (reg:SI 1 dx [orig:92 ivtmp.296 ] [92]) [21 MEM[base: _3, offset: 0]+0 S4 A32])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_construct.h:75 90 {*movsi_internal}
     (nil))
(jump_insn:TI 57 55 58 10 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 60)
            (pc))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_construct.h:75 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 1500 (nil)))
 -> 60)
;;  succ:       11 [85.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              12 [15.0%]  (CAN_FALLTHRU)
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]

;; basic block 11, loop depth 0, count 0, freq 7735, maybe hot
;;  prev block 10, next block 12, flags: (REACHABLE, RTL)
;;  pred:       10 [85.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;; lr  use 	 3 [bx] 4 [si] 7 [sp]
;; lr  def 	
;; live  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;; live  gen 	
;; live  kill	
(note 58 57 59 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn:TI 59 58 60 11 (set (mem:SI (reg/v/f:SI 3 bx [orig:97 __new_finish ] [97]) [21 MEM[base: __new_finish_57, offset: 0B]+0 S4 A32])
        (reg:SI 4 si [orig:95 D.83069 ] [95])) 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [orig:95 D.83069 ] [95])
        (nil)))
;;  succ:       12 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp]

;; basic block 12, loop depth 0, count 0, freq 9100, maybe hot
;;  prev block 11, next block 13, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       10 [15.0%]  (CAN_FALLTHRU)
;;              11 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp]
;; lr  use 	 1 [dx] 3 [bx] 5 [di] 7 [sp]
;; lr  def 	 1 [dx] 3 [bx] 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp]
;; live  gen 	 1 [dx] 3 [bx] 17 [flags]
;; live  kill	 17 [flags]
(code_label 60 59 61 12 28 "" [1 uses])
(note 61 60 63 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn:TI 63 61 62 12 (parallel [
            (set (reg:SI 1 dx [orig:92 ivtmp.296 ] [92])
                (plus:SI (reg:SI 1 dx [orig:92 ivtmp.296 ] [92])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) 220 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 62 63 65 12 (parallel [
            (set (reg/v/f:SI 3 bx [orig:97 __new_finish ] [97])
                (plus:SI (reg/v/f:SI 3 bx [orig:97 __new_finish ] [97])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_uninitialized.h:74 220 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn:TI 65 62 66 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:SI 5 di [orig:98 D.83068 ] [98])
            (reg:SI 1 dx [orig:92 ivtmp.296 ] [92]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_uninitialized.h:74 7 {*cmpsi_1}
     (nil))
(jump_insn:TI 66 65 67 12 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 64)
            (pc))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_uninitialized.h:74 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 9100 (nil)))
 -> 64)
;;  succ:       10 [91.0%]  (DFS_BACK,CAN_FALLTHRU)
;;              13 [9.0%]  (FALLTHRU,CAN_FALLTHRU,LOOP_EXIT)
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp]

;; basic block 13, loop depth 0, count 0, freq 819, maybe hot
;;  prev block 12, next block 14, flags: (REACHABLE, RTL)
;;  pred:       12 [9.0%]  (FALLTHRU,CAN_FALLTHRU,LOOP_EXIT)
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 2 [cx] 5 [di] 6 [bp] 7 [sp]
;; lr  use 	 0 [ax] 5 [di] 6 [bp] 7 [sp]
;; lr  def 	 1 [dx] 3 [bx] 5 [di] 17 [flags]
;; live  in  	 0 [ax] 2 [cx] 5 [di] 6 [bp] 7 [sp]
;; live  gen 	 1 [dx] 3 [bx] 5 [di]
;; live  kill	 17 [flags]
(note 67 66 71 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(note 71 67 72 13 NOTE_INSN_DELETED)
(note 72 71 74 13 NOTE_INSN_DELETED)
(note 74 72 165 13 NOTE_INSN_DELETED)
(insn:TI 165 74 69 13 (set (reg/f:SI 1 dx [orig:118 D.83066 ] [118])
        (plus:SI (reg/f:SI 6 bp [orig:93 D.83068 ] [93])
            (const_int 4 [0x4]))) 213 {*leasi}
     (nil))
(insn:TI 69 165 70 13 (parallel [
            (set (reg:SI 5 di [orig:119 D.83067 ] [119])
                (minus:SI (reg/f:SI 5 di [orig:98 D.83068 ] [98])
                    (reg/f:SI 1 dx [orig:118 D.83066 ] [118])))
            (clobber (reg:CC 17 flags))
        ]) 263 {*subsi_1}
     (expr_list:REG_DEAD (reg/f:SI 1 dx [orig:118 D.83066 ] [118])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn:TI 70 69 75 13 (parallel [
            (set (reg:SI 5 di [orig:120 D.83067 ] [120])
                (lshiftrt:SI (reg:SI 5 di [orig:119 D.83067 ] [119])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) 529 {*lshrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn:TI 75 70 76 13 (set (reg/f:SI 3 bx [orig:109 D.83071 ] [109])
        (plus:SI (plus:SI (mult:SI (reg:SI 5 di [orig:120 D.83067 ] [120])
                    (const_int 4 [0x4]))
                (reg/v/f:SI 0 ax [orig:91 __new_finish ] [91]))
            (const_int 8 [0x8]))) 213 {*leasi}
     (expr_list:REG_DEAD (reg:SI 5 di [orig:120 D.83067 ] [120])
        (nil)))
;;  succ:       14 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 2 [cx] 3 [bx] 6 [bp] 7 [sp]
;; live  out 	 0 [ax] 2 [cx] 3 [bx] 6 [bp] 7 [sp]

;; basic block 14, loop depth 0, count 0, freq 900, maybe hot
;;  prev block 13, next block 15, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       13 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              8 [9.0%]  (CAN_FALLTHRU)
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 2 [cx] 3 [bx] 6 [bp] 7 [sp]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 0 [ax] 2 [cx] 3 [bx] 6 [bp] 7 [sp]
;; live  gen 	 17 [flags]
;; live  kill	
(code_label 76 75 77 14 27 "" [1 uses])
(note 77 76 78 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn:TI 78 77 79 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:SI 6 bp [orig:93 D.83068 ] [93])
            (const_int 0 [0]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_vector.h:177 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn:TI 79 78 80 14 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 83)
            (pc))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_vector.h:177 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 2165 (nil)))
 -> 83)
;;  succ:       15 [78.3%]  (FALLTHRU,CAN_FALLTHRU)
;;              16 [21.6%]  (CAN_FALLTHRU)
;; lr  out 	 0 [ax] 2 [cx] 3 [bx] 6 [bp] 7 [sp]
;; live  out 	 0 [ax] 2 [cx] 3 [bx] 6 [bp] 7 [sp]

;; basic block 15, loop depth 0, count 0, freq 705, maybe hot
;;  prev block 14, next block 16, flags: (REACHABLE, RTL)
;;  pred:       14 [78.3%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 2 [cx] 3 [bx] 6 [bp] 7 [sp]
;; lr  use 	 0 [ax] 2 [cx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;; live  in  	 0 [ax] 2 [cx] 3 [bx] 6 [bp] 7 [sp]
;; live  gen 	 0 [ax] 2 [cx]
;; live  kill	
(note 80 79 81 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn:TI 81 80 162 15 (set (mem:SI (reg/f:SI 7 sp) [0  S4 A32])
        (reg/f:SI 6 bp [orig:93 D.83068 ] [93])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/ext/new_allocator.h:110 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 6 bp [orig:93 D.83068 ] [93])
        (nil)))
(insn 162 81 160 15 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 28 [0x1c])) [45 %sfp+-4 S4 A32])
        (reg/f:SI 2 cx [orig:115 this ] [115])) 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 2 cx [orig:115 this ] [115])
        (nil)))
(insn:TI 160 162 82 15 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [45 %sfp+-8 S4 A32])
        (reg/v/f:SI 0 ax [orig:91 __new_finish ] [91])) 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v/f:SI 0 ax [orig:91 __new_finish ] [91])
        (nil)))
(call_insn:TI 82 160 163 15 (call (mem:QI (symbol_ref:SI ("_ZdlPv") [flags 0x43]  <function_decl 01938e00 operator delete>) [0 operator delete S1 A8])
        (const_int 4 [0x4])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/ext/new_allocator.h:110 641 {*call}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (mem/f:SI (reg/f:SI 7 sp) [0  S4 A32]))
        (nil)))
(insn:TI 163 82 161 15 (set (reg/f:SI 2 cx [orig:115 this ] [115])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 28 [0x1c])) [45 %sfp+-4 S4 A32])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/ext/new_allocator.h:110 90 {*movsi_internal}
     (nil))
(insn 161 163 83 15 (set (reg/v/f:SI 0 ax [orig:91 __new_finish ] [91])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [45 %sfp+-8 S4 A32])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/ext/new_allocator.h:110 90 {*movsi_internal}
     (nil))
;;  succ:       16 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 2 [cx] 3 [bx] 7 [sp]
;; live  out 	 0 [ax] 2 [cx] 3 [bx] 7 [sp]

;; basic block 16, loop depth 0, count 0, freq 900, maybe hot
;;  prev block 15, next block 17, flags: (REACHABLE, RTL)
;;  pred:       15 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              14 [21.6%]  (CAN_FALLTHRU)
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 2 [cx] 3 [bx] 7 [sp]
;; lr  use 	 0 [ax] 2 [cx] 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags]
;; live  in  	 0 [ax] 2 [cx] 3 [bx] 7 [sp]
;; live  gen 	 0 [ax] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;; live  kill	 17 [flags]
(code_label 83 161 84 16 30 "" [1 uses])
(note 84 83 157 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(note 157 84 164 16 NOTE_INSN_DELETED)
(note 164 157 85 16 NOTE_INSN_DELETED)
(insn:TI 85 164 87 16 (set (mem/f:SI (reg/f:SI 2 cx [orig:115 this ] [115]) [6 this_2(D)->D.72607._M_impl._M_start+0 S4 A32])
        (reg/v/f:SI 0 ax [orig:91 __new_finish ] [91])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/vector.tcc:441 90 {*movsi_internal}
     (nil))
(insn 87 85 86 16 (parallel [
            (set (reg:SI 0 ax [123])
                (plus:SI (reg/v/f:SI 0 ax [orig:91 __new_finish ] [91])
                    (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 20 [0x14])) [45 %sfp+-12 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/vector.tcc:443 220 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUIV (mem/f:SI (plus:SI (reg/f:SI 2 cx [orig:115 this ] [115])
                    (const_int 8 [0x8])) [6 this_2(D)->D.72607._M_impl._M_end_of_storage+0 S4 A32])
            (nil))))
(insn:TI 86 87 88 16 (set (mem/f:SI (plus:SI (reg/f:SI 2 cx [orig:115 this ] [115])
                (const_int 4 [0x4])) [6 this_2(D)->D.72607._M_impl._M_finish+0 S4 A32])
        (reg/f:SI 3 bx [orig:109 D.83071 ] [109])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/vector.tcc:442 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 3 bx [orig:109 D.83071 ] [109])
        (nil)))
(insn:TI 88 86 200 16 (set (mem/f:SI (plus:SI (reg/f:SI 2 cx [orig:115 this ] [115])
                (const_int 8 [0x8])) [6 this_2(D)->D.72607._M_impl._M_end_of_storage+0 S4 A32])
        (reg:SI 0 ax [123])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/vector.tcc:443 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 2 cx [orig:115 this ] [115])
        (expr_list:REG_DEAD (reg:SI 0 ax [123])
            (nil))))
(note 200 88 177 16 NOTE_INSN_EPILOGUE_BEG)
(insn/f 177 200 178 16 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 44 [0x2c])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0  A8]))
        ]) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/vector.tcc:444 943 {pro_epilogue_adjust_stack_si_add}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 44 [0x2c])))
            (nil))))
(insn/f:TI 178 177 179 16 (set (reg:SI 3 bx)
        (mem:SI (post_inc:SI (reg/f:SI 7 sp)) [0  S4 A8])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/vector.tcc:444 74 {*popsi1}
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:SI 7 sp)
            (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])))
        (expr_list:REG_CFA_RESTORE (reg:SI 3 bx)
            (nil))))
(insn/f:TI 179 178 180 16 (set (reg:SI 4 si)
        (mem:SI (post_inc:SI (reg/f:SI 7 sp)) [0  S4 A8])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/vector.tcc:444 74 {*popsi1}
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:SI 7 sp)
            (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])))
        (expr_list:REG_CFA_RESTORE (reg:SI 4 si)
            (nil))))
(insn/f:TI 180 179 181 16 (set (reg:SI 5 di)
        (mem:SI (post_inc:SI (reg/f:SI 7 sp)) [0  S4 A8])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/vector.tcc:444 74 {*popsi1}
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:SI 7 sp)
            (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])))
        (expr_list:REG_CFA_RESTORE (reg:SI 5 di)
            (nil))))
(insn/f:TI 181 180 182 16 (set (reg:SI 6 bp)
        (mem:SI (post_inc:SI (reg/f:SI 7 sp)) [0  S4 A8])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/vector.tcc:444 74 {*popsi1}
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:SI 7 sp)
            (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])))
        (expr_list:REG_CFA_RESTORE (reg:SI 6 bp)
            (nil))))
(jump_insn:TI 182 181 183 16 (parallel [
            (simple_return)
            (use (const_int 4 [0x4]))
        ]) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/vector.tcc:444 660 {simple_return_pop_internal}
     (nil)
 -> simple_return)
;;  succ:       EXIT [100.0%] 
;; lr  out 	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;; live  out 	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]

(barrier 183 182 95)
;; basic block 17, loop depth 0, count 0, freq 450, maybe hot
;;  prev block 16, next block 18, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [50.0%]  (CAN_FALLTHRU)
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(7){ }}
;; lr  in  	 2 [cx] 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	
;; live  in  	 2 [cx] 7 [sp]
;; live  gen 	
;; live  kill	
(code_label 95 183 94 17 31 "" [1 uses])
(note 94 95 7 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn:TI 7 94 196 17 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 20 [0x14])) [45 %sfp+-12 S4 A32])
        (const_int 4 [0x4])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_algobase.h:222 90 {*movsi_internal}
     (nil))
(jump_insn 196 7 197 17 (set (pc)
        (label_ref 31)) 636 {jump}
     (nil)
 -> 31)
;;  succ:       5 [100.0%]  (CAN_FALLTHRU)
;; lr  out 	 2 [cx] 7 [sp]
;; live  out 	 2 [cx] 7 [sp]

(barrier 197 196 195)
;; basic block 18, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 17, next block 19, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       3 (CAN_FALLTHRU)
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp]
;; live  gen 	 17 [flags]
;; live  kill	
(code_label 195 197 24 18 46 "" [1 uses])
(note 24 195 25 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn:TI 25 24 26 18 (set (reg:CC 17 flags)
        (compare:CC (reg/v:SI 3 bx [orig:105 __len ] [105])
            (const_int 1073741823 [0x3fffffff]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_vector.h:1428 7 {*cmpsi_1}
     (nil))
(jump_insn:TI 26 25 27 18 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 103)
            (pc))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_vector.h:1428 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 10000 (nil)))
 -> 103)
;;  succ:       4 [100.0%]  (CAN_FALLTHRU)
;;              19 (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp]

;; basic block 19, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 18, next block 20, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       18 (FALLTHRU,CAN_FALLTHRU)
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp]
;; lr  use 	 0 [ax] 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp]
;; live  gen 	 0 [ax] 17 [flags]
;; live  kill	 17 [flags]
(note 27 26 28 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn:TI 28 27 29 19 (parallel [
            (set (reg:SI 0 ax [orig:104 D.83065 ] [104])
                (ashift:SI (reg:SI 0 ax [orig:117 D.83069 ] [117])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) 496 {*ashlsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 29 28 153 19 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 3 bx [orig:105 __len ] [105])
            (const_int 0 [0]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_vector.h:170 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg/v:SI 3 bx [orig:105 __len ] [105])
        (nil)))
(insn:TI 153 29 30 19 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 20 [0x14])) [45 %sfp+-12 S4 A32])
        (reg:SI 0 ax [orig:104 D.83065 ] [104])) 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:104 D.83065 ] [104])
        (nil)))
(jump_insn 30 153 106 19 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 31)
            (pc))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_vector.h:170 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 0 (nil)))
 -> 31)
;;  succ:       5 (CAN_FALLTHRU)
;;              20 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 1 [dx] 2 [cx] 5 [di] 6 [bp] 7 [sp]
;; live  out 	 1 [dx] 2 [cx] 5 [di] 6 [bp] 7 [sp]

;; basic block 20, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 19, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       19 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 5 [di] 6 [bp] 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 3 [bx] 17 [flags]
;; live  in  	 1 [dx] 2 [cx] 5 [di] 6 [bp] 7 [sp]
;; live  gen 	 0 [ax] 3 [bx]
;; live  kill	 17 [flags]
(note 106 30 8 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn:TI 8 106 187 20 (set (reg/f:SI 3 bx [orig:109 D.83071 ] [109])
        (const_int 4 [0x4])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_vector.h:170 90 {*movsi_internal}
     (nil))
(insn 187 8 198 20 (parallel [
            (set (reg/v/f:SI 0 ax [orig:91 __new_finish ] [91])
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_vector.h:170 82 {*movsi_xor}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(jump_insn 198 187 199 20 (set (pc)
        (label_ref 40)) 636 {jump}
     (nil)
 -> 40)
;;  succ:       6 [100.0%]  (CAN_FALLTHRU)
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp]

(barrier 199 198 148)
(note 148 199 0 NOTE_INSN_DELETED)

;; Function void std::vector<_Tp, _Alloc>::push_back(const value_type&) [with _Tp = int; _Alloc = std::allocator<int>; std::vector<_Tp, _Alloc>::value_type = int] (_ZNSt6vectorIiSaIiEE9push_backERKi, funcdef_no=5790, decl_uid=72197, symbol_order=3279)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 7 n_edges 8 count 7 (    1)


void std::vector<_Tp, _Alloc>::push_back(const value_type&) [with _Tp = int; _Alloc = std::allocator<int>; std::vector<_Tp, _Alloc>::value_type = int]

Dataflow summary:
def_info->table_size = 90, use_info->table_size = 0
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 29 [mm0] 30 [mm1] 31 [mm2]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={4d,5u} r1={4d,3u} r2={2d,4u,1e} r6={4d,13u} r7={5d,13u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1u} r17={4d,2u} r18={1d} r19={1d} r20={1d,1u} r21={2d} r22={2d} r23={2d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={2d} r30={2d} r31={2d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} 
;;    total ref usage 139{96d,42u,1e} in 17{16 regular + 1 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d3(0){ }d7(1){ }d9(2){ }d10(6){ }d12(7){ }d27(20){ }d29(21){ }d31(22){ }d33(23){ }d40(29){ }d42(30){ }d44(31){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	 16 [argp]
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 29 [mm0] 30 [mm1] 31 [mm2]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 29 [mm0] 30 [mm1] 31 [mm2]
;; live  kill	
;; lr  out 	 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 2 [cx] 6 [bp] 7 [sp] 20 [frame]

( 0 )->[2]->( 3 6 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 2 [cx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 6 [bp] 7 [sp] 17 [flags]
;; live  in  	 2 [cx] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 6 [bp] 7 [sp] 17 [flags]
;; live  kill	
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 20 [frame]

( 2 )->[3]->( 4 5 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 0 [ax] 1 [dx] 6 [bp] 7 [sp]
;; lr  def 	 1 [dx] 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 1 [dx] 17 [flags]
;; live  kill	
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 20 [frame]

( 3 )->[4]->( 5 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 0 [ax] 1 [dx] 6 [bp] 7 [sp]
;; lr  def 	
;; live  in  	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; lr  out 	 0 [ax] 2 [cx] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 0 [ax] 2 [cx] 6 [bp] 7 [sp] 20 [frame]

( 4 3 )->[5]->( 1 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 2 [cx] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 0 [ax] 2 [cx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 6 [bp] 7 [sp] 17 [flags]
;; live  in  	 0 [ax] 2 [cx] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax]
;; live  kill	 17 [flags]
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 20 [frame]

( 2 )->[6]->( 1 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;; live  in  	 1 [dx] 2 [cx] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 6 [bp] 7 [sp]
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 20 [frame]

( 6 5 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(6){ }u-1(7){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 9 to worklist
  Adding insn 43 to worklist
  Adding insn 13 to worklist
  Adding insn 15 to worklist
  Adding insn 50 to worklist
  Adding insn 19 to worklist
  Adding insn 26 to worklist
  Adding insn 24 to worklist
Finished finding needed instructions:
processing block 5 lr out =  6 [bp] 7 [sp] 20 [frame]
  Adding insn 49 to worklist
  Adding insn 18 to worklist
processing block 4 lr out =  0 [ax] 2 [cx] 6 [bp] 7 [sp] 20 [frame]
processing block 3 lr out =  0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 20 [frame]
  Adding insn 12 to worklist
  Adding insn 11 to worklist
processing block 6 lr out =  6 [bp] 7 [sp] 20 [frame]
  Adding insn 52 to worklist
processing block 2 lr out =  0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
  Adding insn 8 to worklist
  Adding insn 7 to worklist
  Adding insn 3 to worklist
  Adding insn 44 to worklist
df_worklist_dataflow_doublequeue:n_basic_blocks 7 n_edges 8 count 7 (    1)
;;   ======================================================
;;   -- basic block 2 from 43 to 9 -- after reload
;;   ======================================================

;;	  0--> b  0: i   7ax=[cx+0x4]                             :athlon-direct,athlon-load
;;	  0--> b  0: i   8flags=cmp(ax,[cx+0x8])                  :athlon-direct,athlon-load,athlon-ieu
;;	  1--> b  0: i  43[--sp]=bp                               :athlon-direct,athlon-agu,athlon-store
;;	  3--> b  0: i  44bp=sp                                   :athlon-direct,athlon-ieu
;;	  4--> b  0: i   3dx=[bp+0x8]                             :athlon-direct,athlon-load
;;	  4--> b  0: i   9pc={(flags==0)?L22:pc}                  :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 4
;;   new head = 43
;;   new tail = 9

;;   ======================================================
;;   -- basic block 3 from 11 to 13 -- after reload
;;   ======================================================

;;	  0--> b  0: i  12flags=cmp(ax,0)                         :athlon-direct,athlon-ieu
;;	  0--> b  0: i  11dx=[dx]                                 :athlon-direct,athlon-load
;;	  1--> b  0: i  13pc={(flags==0)?L16:pc}                  :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 11
;;   new tail = 13

;;   ======================================================
;;   -- basic block 4 from 15 to 15 -- after reload
;;   ======================================================

;;	  0--> b  0: i  15[ax]=dx                                 :athlon-direct,athlon-agu,athlon-store
;;	Ready list (final):  
;;   total time = 0
;;   new head = 15
;;   new tail = 15

;;   ======================================================
;;   -- basic block 5 from 18 to 50 -- after reload
;;   ======================================================

;;	  0--> b  0: i  18{ax=ax+0x4;clobber flags;}              :athlon-direct,athlon-ieu
;;	  1--> b  0: i  19[cx+0x4]=ax                             :athlon-direct,athlon-agu,athlon-store
;;	  1--> b  0: i  49{sp=bp+0x4;bp=[bp];clobber [scratch];}  :athlon-double,(athlon-ieu+athlon-load)
;;	  2--> b  0: i  50{simple_return;use 0x4;}                :athlon-vector,athlon-ieu,athlon-ieu
;;	Ready list (final):  
;;   total time = 2
;;   new head = 18
;;   new tail = 50

;;   ======================================================
;;   -- basic block 6 from 24 to 26 -- after reload
;;   ======================================================

;;	  0--> b  0: i  24[bp+0x8]=dx                             :athlon-direct,athlon-agu,athlon-store
;;	  0--> b  0: i  52{sp=bp+0x4;bp=[bp];clobber [scratch];}  :athlon-double,(athlon-ieu+athlon-load)
;;	  3--> b  0: i  26{call [`_ZNSt6vectorIiSaIiEE19_M_emplace_back_auxIIRKiEEEvDpOT_'];sp=sp+0x4;}:athlon-vector,athlon-ieu
;;	Ready list (final):  
;;   total time = 3
;;   new head = 24
;;   new tail = 26



starting the processing of deferred insns
ending the processing of deferred insns


void std::vector<_Tp, _Alloc>::push_back(const value_type&) [with _Tp = int; _Alloc = std::allocator<int>; std::vector<_Tp, _Alloc>::value_type = int]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 29 [mm0] 30 [mm1] 31 [mm2]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={4d,5u} r1={4d,3u} r2={2d,4u,1e} r6={4d,13u} r7={5d,13u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1u} r17={4d,2u} r18={1d} r19={1d} r20={1d,1u} r21={2d} r22={2d} r23={2d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={2d} r30={2d} r31={2d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} 
;;    total ref usage 139{96d,42u,1e} in 17{16 regular + 1 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 3, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 2 [cx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 6 [bp] 7 [sp] 17 [flags]
;; live  in  	 2 [cx] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 6 [bp] 7 [sp] 17 [flags]
;; live  kill	
(note 5 1 4 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 4 5 7 2 NOTE_INSN_FUNCTION_BEG)
(insn:TI 7 4 8 2 (set (reg/f:SI 0 ax [orig:83 D.83074 ] [83])
        (mem/f:SI (plus:SI (reg/f:SI 2 cx [orig:87 this ] [87])
                (const_int 4 [0x4])) [6 this_3(D)->D.72607._M_impl._M_finish+0 S4 A32])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_vector.h:915 90 {*movsi_internal}
     (nil))
(insn 8 7 43 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:SI 0 ax [orig:83 D.83074 ] [83])
            (mem/f:SI (plus:SI (reg/f:SI 2 cx [orig:87 this ] [87])
                    (const_int 8 [0x8])) [6 this_3(D)->D.72607._M_impl._M_end_of_storage+0 S4 A32]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_vector.h:915 7 {*cmpsi_1}
     (nil))
(insn/f:TI 43 8 44 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A8])
        (reg/f:SI 6 bp)) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_vector.h:913 66 {*pushsi2}
     (nil))
(insn/f:TI 44 43 45 2 (set (reg/f:SI 6 bp)
        (reg/f:SI 7 sp)) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_vector.h:913 90 {*movsi_internal}
     (nil))
(note 45 44 3 2 NOTE_INSN_PROLOGUE_END)
(insn:TI 3 45 9 2 (set (reg/v/f:SI 1 dx [orig:88 __x ] [88])
        (mem/f/c:SI (plus:SI (reg/f:SI 6 bp)
                (const_int 8 [0x8])) [6 __x+0 S4 A32])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_vector.h:913 90 {*movsi_internal}
     (nil))
(jump_insn 9 3 10 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 22)
            (pc))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_vector.h:915 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 672 (nil)))
 -> 22)
;;  succ:       3 [93.3%]  (FALLTHRU,CAN_FALLTHRU)
;;              6 [6.7%]  (CAN_FALLTHRU)
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 9328, maybe hot
;;  prev block 2, next block 4, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [93.3%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 0 [ax] 1 [dx] 6 [bp] 7 [sp]
;; lr  def 	 1 [dx] 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 1 [dx] 17 [flags]
;; live  kill	
(note 10 9 12 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn:TI 12 10 11 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:SI 0 ax [orig:83 D.83074 ] [83])
            (const_int 0 [0]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/ext/new_allocator.h:120 3 {*cmpsi_ccno_1}
     (nil))
(insn 11 12 13 3 (set (reg:SI 1 dx [orig:86 D.83075 ] [86])
        (mem:SI (reg/v/f:SI 1 dx [orig:88 __x ] [88]) [21 MEM[(const int &)__x_6(D)]+0 S4 A32])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/ext/new_allocator.h:120 90 {*movsi_internal}
     (nil))
(jump_insn:TI 13 11 14 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 16)
            (pc))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/ext/new_allocator.h:120 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 1014 (nil)))
 -> 16)
;;  succ:       4 [89.9%]  (FALLTHRU,CAN_FALLTHRU)
;;              5 [10.1%]  (CAN_FALLTHRU)
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 8382, maybe hot
;;  prev block 3, next block 5, flags: (REACHABLE, RTL)
;;  pred:       3 [89.9%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 0 [ax] 1 [dx] 6 [bp] 7 [sp]
;; lr  def 	
;; live  in  	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
(note 14 13 15 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn:TI 15 14 16 4 (set (mem:SI (reg/f:SI 0 ax [orig:83 D.83074 ] [83]) [21 *_4+0 S4 A32])
        (reg:SI 1 dx [orig:86 D.83075 ] [86])) 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [orig:86 D.83075 ] [86])
        (nil)))
;;  succ:       5 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 2 [cx] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 0 [ax] 2 [cx] 6 [bp] 7 [sp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 9328, maybe hot
;;  prev block 4, next block 6, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       4 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              3 [10.1%]  (CAN_FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 2 [cx] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 0 [ax] 2 [cx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 6 [bp] 7 [sp] 17 [flags]
;; live  in  	 0 [ax] 2 [cx] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 6 [bp] 7 [sp]
;; live  kill	 17 [flags]
(code_label 16 15 17 5 49 "" [1 uses])
(note 17 16 18 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn:TI 18 17 19 5 (parallel [
            (set (reg/f:SI 0 ax [89])
                (plus:SI (reg/f:SI 0 ax [orig:83 D.83074 ] [83])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_vector.h:919 220 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUIV (mem/f:SI (plus:SI (reg/f:SI 2 cx [orig:87 this ] [87])
                    (const_int 4 [0x4])) [6 this_3(D)->D.72607._M_impl._M_finish+0 S4 A32])
            (nil))))
(insn:TI 19 18 54 5 (set (mem/f:SI (plus:SI (reg/f:SI 2 cx [orig:87 this ] [87])
                (const_int 4 [0x4])) [6 this_3(D)->D.72607._M_impl._M_finish+0 S4 A32])
        (reg/f:SI 0 ax [89])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_vector.h:919 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 2 cx [orig:87 this ] [87])
        (expr_list:REG_DEAD (reg/f:SI 0 ax [89])
            (nil))))
(note 54 19 49 5 NOTE_INSN_EPILOGUE_BEG)
(insn/f 49 54 50 5 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 6 bp)
                    (const_int 4 [0x4])))
            (set (reg/f:SI 6 bp)
                (mem:SI (reg/f:SI 6 bp) [0  S4 A8]))
            (clobber (mem:BLK (scratch) [0  A8]))
        ]) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_vector.h:927 671 {leave}
     (expr_list:REG_CFA_RESTORE (reg/f:SI 6 bp)
        (expr_list:REG_CFA_DEF_CFA (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4]))
            (nil))))
(jump_insn:TI 50 49 51 5 (parallel [
            (simple_return)
            (use (const_int 4 [0x4]))
        ]) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_vector.h:927 660 {simple_return_pop_internal}
     (nil)
 -> simple_return)
;;  succ:       EXIT [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 20 [frame]

(barrier 51 50 22)
;; basic block 6, loop depth 0, count 0, freq 672, maybe hot
;;  prev block 5, next block 1, flags: (REACHABLE, RTL)
;;  pred:       2 [6.7%]  (CAN_FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;; live  in  	 1 [dx] 2 [cx] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 6 [bp] 7 [sp]
;; live  kill	
(code_label 22 51 23 6 48 "" [1 uses])
(note 23 22 24 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn:TI 24 23 55 6 (set (mem:SI (plus:SI (reg/f:SI 6 bp)
                (const_int 8 [0x8])) [0  S4 A32])
        (reg/v/f:SI 1 dx [orig:88 __x ] [88])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_vector.h:923 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v/f:SI 1 dx [orig:88 __x ] [88])
        (nil)))
(note 55 24 52 6 NOTE_INSN_EPILOGUE_BEG)
(insn/f 52 55 26 6 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 6 bp)
                    (const_int 4 [0x4])))
            (set (reg/f:SI 6 bp)
                (mem:SI (reg/f:SI 6 bp) [0  S4 A8]))
            (clobber (mem:BLK (scratch) [0  A8]))
        ]) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_vector.h:927 671 {leave}
     (expr_list:REG_CFA_RESTORE (reg/f:SI 6 bp)
        (expr_list:REG_CFA_DEF_CFA (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4]))
            (nil))))
(call_insn/j:TI 26 52 28 6 (parallel [
            (call (mem:QI (symbol_ref:SI ("_ZNSt6vectorIiSaIiEE19_M_emplace_back_auxIIRKiEEEvDpOT_") [flags 0x3]  <function_decl 07016d00 _M_emplace_back_aux>) [0 _M_emplace_back_aux S1 A8])
                (const_int 4 [0x4]))
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 4 [0x4])))
        ]) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_vector.h:923 647 {*sibcall_pop}
     (expr_list:REG_DEAD (reg/f:SI 16 argp)
        (expr_list:REG_DEAD (reg:SI 2 cx)
            (expr_list:REG_ARGS_SIZE (const_int -4 [0xfffffffffffffffc])
                (nil))))
    (expr_list:SI (use (reg:SI 2 cx))
        (expr_list:SI (use (mem/f:SI (reg/f:SI 16 argp) [0  S4 A32]))
            (nil))))
;;  succ:       EXIT [100.0%]  (ABNORMAL,SIBCALL)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 20 [frame]

(barrier 28 26 42)
(note 42 28 0 NOTE_INSN_DELETED)

;; Function void std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_erase(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type) [with _Key = long long unsigned int; _Val = std::pair<const long long unsigned int, int>; _KeyOfValue = std::_Select1st<std::pair<const long long unsigned int, int> >; _Compare = std::less<long long unsigned int>; _Alloc = std::allocator<std::pair<const long long unsigned int, int> >; std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type = std::_Rb_tree_node<std::pair<const long long unsigned int, int> >*] (_ZNSt8_Rb_treeIySt4pairIKyiESt10_Select1stIS2_ESt4lessIyESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E, funcdef_no=5921, decl_uid=70302, symbol_order=3414)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 6 count 5 (    1)


void std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_erase(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type) [with _Key = long long unsigned int; _Val = std::pair<const long long unsigned int, int>; _KeyOfValue = std::_Select1st<std::pair<const long long unsigned int, int> >; _Compare = std::less<long long unsigned int>; _Alloc = std::allocator<std::pair<const long long unsigned int, int> >; std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type = std::_Rb_tree_node<std::pair<const long long unsigned int, int> >*]

Dataflow summary:
def_info->table_size = 161, use_info->table_size = 0
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 29 [mm0] 30 [mm1] 31 [mm2]
;;  exit block uses 	 3 [bx] 4 [si] 5 [di] 7 [sp]
;;  regs ever live 	 0[ax] 2[cx] 3[bx] 4[si] 5[di] 7[sp] 17[flags]
;;  ref usage 	r0={4d,1u} r1={3d} r2={4d,2u} r3={4d,6u,1e} r4={3d,4u} r5={3d,3u} r7={11d,25u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1e} r17={7d,2u} r18={2d} r19={2d} r21={3d} r22={3d} r23={3d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={3d} r30={3d} r31={3d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} 
;;    total ref usage 222{177d,43u,2e} in 24{22 regular + 2 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(4){ }d-1(5){ }d-1(7){ }d-1(21){ }d-1(22){ }d-1(23){ }d-1(29){ }d-1(30){ }d-1(31){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 29 [mm0] 30 [mm1] 31 [mm2]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 29 [mm0] 30 [mm1] 31 [mm2]
;; live  kill	
;; lr  out 	 2 [cx] 3 [bx] 4 [si] 5 [di] 7 [sp]
;; live  out 	 2 [cx] 3 [bx] 4 [si] 5 [di] 7 [sp]

( 0 )->[2]->( 3 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 2 [cx] 3 [bx] 4 [si] 5 [di] 7 [sp]
;; lr  use 	 2 [cx] 3 [bx] 4 [si] 5 [di] 7 [sp]
;; lr  def 	 3 [bx] 5 [di] 7 [sp] 17 [flags]
;; live  in  	 2 [cx] 3 [bx] 4 [si] 5 [di] 7 [sp]
;; live  gen 	 3 [bx] 5 [di] 7 [sp] 17 [flags]
;; live  kill	 17 [flags]
;; lr  out 	 3 [bx] 5 [di] 7 [sp]
;; live  out 	 3 [bx] 5 [di] 7 [sp]

( 2 3 )->[3]->( 3 4 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 7 [sp]
;; lr  use 	 3 [bx] 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;; live  in  	 3 [bx] 5 [di] 7 [sp]
;; live  gen 	 0 [ax] 2 [cx] 3 [bx] 4 [si] 7 [sp] 17 [flags]
;; live  kill	 17 [flags]
;; lr  out 	 3 [bx] 5 [di] 7 [sp]
;; live  out 	 3 [bx] 5 [di] 7 [sp]

( 2 3 )->[4]->( 1 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 3 [bx] 4 [si] 5 [di] 7 [sp] 17 [flags]
;; live  in  	 7 [sp]
;; live  gen 	 3 [bx] 4 [si] 5 [di] 7 [sp]
;; live  kill	 17 [flags]
;; lr  out 	 3 [bx] 4 [si] 5 [di] 7 [sp]
;; live  out 	 3 [bx] 4 [si] 5 [di] 7 [sp]

( 4 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(3){ }u-1(4){ }u-1(5){ }u-1(7){ }}
;; lr  in  	 3 [bx] 4 [si] 5 [di] 7 [sp]
;; lr  use 	 3 [bx] 4 [si] 5 [di] 7 [sp]
;; lr  def 	
;; live  in  	 3 [bx] 4 [si] 5 [di] 7 [sp]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 8 to worklist
  Adding insn 46 to worklist
  Adding insn 45 to worklist
  Adding insn 44 to worklist
  Adding insn 26 to worklist
  Adding insn 22 to worklist
  Adding insn 21 to worklist
  Adding insn 18 to worklist
  Adding insn 16 to worklist
  Adding insn 56 to worklist
Finished finding needed instructions:
processing block 4 lr out =  3 [bx] 4 [si] 5 [di] 7 [sp]
  Adding insn 55 to worklist
  Adding insn 54 to worklist
  Adding insn 53 to worklist
  Adding insn 52 to worklist
processing block 3 lr out =  3 [bx] 5 [di] 7 [sp]
  Adding insn 25 to worklist
  Adding insn 23 to worklist
  Adding insn 20 to worklist
  Adding insn 19 to worklist
  Adding insn 17 to worklist
  Adding insn 15 to worklist
processing block 2 lr out =  3 [bx] 5 [di] 7 [sp]
  Adding insn 7 to worklist
  Adding insn 3 to worklist
  Adding insn 2 to worklist
  Adding insn 47 to worklist
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 6 count 6 (  1.2)
;;   ======================================================
;;   -- basic block 2 from 44 to 8 -- after reload
;;   ======================================================

;;	  0--> b  0: i  44[--sp]=di                               :athlon-direct,athlon-agu,athlon-store
;;	  0--> b  0: i  45[--sp]=si                               :athlon-direct,athlon-agu,athlon-store
;;	  0--> b  0: i   2di=cx                                   :athlon-direct,athlon-ieu
;;	  1--> b  0: i  46[--sp]=bx                               :athlon-direct,athlon-agu,athlon-store
;;	  3--> b  0: i  47{sp=sp-0x10;clobber flags;clobber [scratch];}:athlon-direct,athlon-ieu
;;	  4--> b  0: i   3bx=[sp+0x20]                            :athlon-direct,athlon-load
;;	  7--> b  0: i   7flags=cmp(bx,0)                         :athlon-direct,athlon-ieu
;;	  8--> b  0: i   8pc={(flags==0)?L31:pc}                  :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 8
;;   new head = 44
;;   new tail = 8

;;   ======================================================
;;   -- basic block 3 from 15 to 26 -- after reload
;;   ======================================================

;;	  0--> b  0: i  15ax=[bx+0xc]                             :athlon-direct,athlon-load
;;	  0--> b  0: i  17cx=di                                   :athlon-direct,athlon-ieu
;;	  3--> b  0: i  16[sp]=ax                                 :athlon-direct,athlon-agu,athlon-store
;;	  4--> b  0: i  18{call [`_ZNSt8_Rb_treeIySt4pairIKyiESt10_Select1stIS2_ESt4lessIyESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E'];sp=sp+0x4;}:athlon-vector,athlon-ieu
;;	  5--> b  0: i  20si=[bx+0x8]                             :athlon-direct,athlon-load
;;	  5--> b  0: i  19{sp=sp-0x4;clobber flags;}              :athlon-direct,athlon-ieu
;;	  6--> b  0: i  21[sp]=bx                                 :athlon-direct,athlon-agu,athlon-store
;;	  7--> b  0: i  22call [`_ZdlPv']                         :athlon-vector,athlon-ieu
;;	  8--> b  0: i  25flags=cmp(si,0)                         :athlon-direct,athlon-ieu
;;	  8--> b  0: i  23bx=si                                   :athlon-direct,athlon-ieu
;;	  9--> b  0: i  26pc={(flags!=0)?L38:pc}                  :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 9
;;   new head = 15
;;   new tail = 26

;;   ======================================================
;;   -- basic block 4 from 52 to 56 -- after reload
;;   ======================================================

;;	  0--> b  0: i  52{sp=sp+0x10;clobber flags;clobber [scratch];}:athlon-direct,athlon-ieu
;;	  1--> b  0: i  53bx=[sp++]                               :athlon-vector,athlon-load,athlon-ieu
;;	  2--> b  0: i  54si=[sp++]                               :athlon-vector,athlon-load,athlon-ieu
;;	  3--> b  0: i  55di=[sp++]                               :athlon-vector,athlon-load,athlon-ieu
;;	  4--> b  0: i  56{simple_return;use 0x4;}                :athlon-vector,athlon-ieu,athlon-ieu
;;	Ready list (final):  
;;   total time = 4
;;   new head = 52
;;   new tail = 56



starting the processing of deferred insns
ending the processing of deferred insns


void std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_erase(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type) [with _Key = long long unsigned int; _Val = std::pair<const long long unsigned int, int>; _KeyOfValue = std::_Select1st<std::pair<const long long unsigned int, int> >; _Compare = std::less<long long unsigned int>; _Alloc = std::allocator<std::pair<const long long unsigned int, int> >; std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type = std::_Rb_tree_node<std::pair<const long long unsigned int, int> >*]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 29 [mm0] 30 [mm1] 31 [mm2]
;;  exit block uses 	 3 [bx] 4 [si] 5 [di] 7 [sp]
;;  regs ever live 	 0[ax] 2[cx] 3[bx] 4[si] 5[di] 7[sp] 17[flags]
;;  ref usage 	r0={4d,1u} r1={3d} r2={4d,2u} r3={4d,6u,1e} r4={3d,4u} r5={3d,3u} r7={11d,25u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1e} r17={7d,2u} r18={2d} r19={2d} r21={3d} r22={3d} r23={3d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={3d} r30={3d} r31={3d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} 
;;    total ref usage 222{177d,43u,2e} in 24{22 regular + 2 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 900, maybe hot
;;  prev block 0, next block 3, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 2 [cx] 3 [bx] 4 [si] 5 [di] 7 [sp]
;; lr  use 	 2 [cx] 3 [bx] 4 [si] 5 [di] 7 [sp]
;; lr  def 	 3 [bx] 5 [di] 7 [sp] 17 [flags]
;; live  in  	 2 [cx] 3 [bx] 4 [si] 5 [di] 7 [sp]
;; live  gen 	 3 [bx] 5 [di] 7 [sp] 17 [flags]
;; live  kill	 17 [flags]
(note 5 1 4 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 4 5 44 2 NOTE_INSN_FUNCTION_BEG)
(insn/f:TI 44 4 45 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A8])
        (reg:SI 5 di)) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1239 66 {*pushsi2}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (nil)))
(insn/f 45 44 2 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A8])
        (reg:SI 4 si)) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1239 66 {*pushsi2}
     (expr_list:REG_DEAD (reg:SI 4 si)
        (nil)))
(insn 2 45 46 2 (set (reg/f:SI 5 di [orig:85 this ] [85])
        (reg:SI 2 cx [ this ])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1239 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 2 cx [ this ])
        (nil)))
(insn/f:TI 46 2 47 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A8])
        (reg:SI 3 bx)) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1239 66 {*pushsi2}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil)))
(insn/f:TI 47 46 48 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -16 [0xfffffffffffffff0])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0  A8]))
        ]) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1239 943 {pro_epilogue_adjust_stack_si_add}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -16 [0xfffffffffffffff0])))
            (nil))))
(note 48 47 3 2 NOTE_INSN_PROLOGUE_END)
(insn:TI 3 48 7 2 (set (reg/v/f:SI 3 bx [orig:86 __x ] [86])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 32 [0x20])) [6 __x+0 S4 A32])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1239 90 {*movsi_internal}
     (expr_list:REG_EQUIV (mem/f/c:SI (reg/f:SI 16 argp) [6 __x+0 S4 A32])
        (nil)))
(insn:TI 7 3 8 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:SI 3 bx [orig:86 __x ] [86])
            (const_int 0 [0]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1243 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn:TI 8 7 38 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 31)
            (pc))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1243 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 900 (nil)))
 -> 31)
;;  succ:       3 [91.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              4 [9.0%]  (CAN_FALLTHRU)
;; lr  out 	 3 [bx] 5 [di] 7 [sp]
;; live  out 	 3 [bx] 5 [di] 7 [sp]

;; basic block 3, loop depth 0, count 0, freq 9100, maybe hot
;;  prev block 2, next block 4, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [91.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              3 [91.0%]  (DFS_BACK,CAN_FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 7 [sp]
;; lr  use 	 3 [bx] 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;; live  in  	 3 [bx] 5 [di] 7 [sp]
;; live  gen 	 0 [ax] 2 [cx] 3 [bx] 4 [si] 7 [sp] 17 [flags]
;; live  kill	 17 [flags]
(code_label 38 8 37 3 60 "" [1 uses])
(note 37 38 15 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn:TI 15 37 17 3 (set (reg/f:SI 0 ax [orig:87 MEM[(struct _Rb_tree_node_base * *)__x_12 + 12B] ] [87])
        (mem/f:SI (plus:SI (reg/v/f:SI 3 bx [orig:86 __x ] [86])
                (const_int 12 [0xc])) [6 MEM[(struct _Rb_tree_node_base * *)__x_12 + 12B]+0 S4 A32])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1245 90 {*movsi_internal}
     (expr_list:REG_EQUIV (mem/f:SI (plus:SI (reg/v/f:SI 3 bx [orig:86 __x ] [86])
                (const_int 12 [0xc])) [6 MEM[(struct _Rb_tree_node_base * *)__x_12 + 12B]+0 S4 A32])
        (nil)))
(insn 17 15 16 3 (set (reg:SI 2 cx)
        (reg/f:SI 5 di [orig:85 this ] [85])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1245 90 {*movsi_internal}
     (nil))
(insn:TI 16 17 18 3 (set (mem:SI (reg/f:SI 7 sp) [0  S4 A32])
        (reg/f:SI 0 ax [orig:87 MEM[(struct _Rb_tree_node_base * *)__x_12 + 12B] ] [87])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1245 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 0 ax [orig:87 MEM[(struct _Rb_tree_node_base * *)__x_12 + 12B] ] [87])
        (nil)))
(call_insn:TI 18 16 20 3 (parallel [
            (call (mem:QI (symbol_ref:SI ("_ZNSt8_Rb_treeIySt4pairIKyiESt10_Select1stIS2_ESt4lessIyESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E") [flags 0x3]  <function_decl 06e20200 _M_erase>) [0 _M_erase S1 A8])
                (const_int 4 [0x4]))
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 4 [0x4])))
        ]) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1245 646 {*call_pop}
     (expr_list:REG_DEAD (reg:SI 2 cx)
        (expr_list:REG_ARGS_SIZE (const_int -4 [0xfffffffffffffffc])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 2 cx))
        (expr_list:SI (use (mem/f:SI (reg/f:SI 7 sp) [0  S4 A32]))
            (nil))))
(insn:TI 20 18 19 3 (set (reg/v/f:SI 4 si [orig:84 __x ] [84])
        (mem/f:SI (plus:SI (reg/v/f:SI 3 bx [orig:86 __x ] [86])
                (const_int 8 [0x8])) [6 MEM[(struct _Rb_tree_node_base * *)__x_12 + 8B]+0 S4 A32])) 90 {*movsi_internal}
     (nil))
(insn 19 20 21 3 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1245 220 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn:TI 21 19 22 3 (set (mem:SI (reg/f:SI 7 sp) [0  S4 A32])
        (reg/v/f:SI 3 bx [orig:86 __x ] [86])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/ext/new_allocator.h:110 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v/f:SI 3 bx [orig:86 __x ] [86])
        (nil)))
(call_insn:TI 22 21 25 3 (call (mem:QI (symbol_ref:SI ("_ZdlPv") [flags 0x43]  <function_decl 01938e00 operator delete>) [0 operator delete S1 A8])
        (const_int 4 [0x4])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/ext/new_allocator.h:110 641 {*call}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (mem/f:SI (reg/f:SI 7 sp) [0  S4 A32]))
        (nil)))
(insn:TI 25 22 23 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:SI 4 si [orig:86 __x ] [86])
            (const_int 0 [0]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1243 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg/f:SI 4 si [orig:86 __x ] [86])
        (nil)))
(insn 23 25 26 3 (set (reg/v/f:SI 3 bx [orig:86 __x ] [86])
        (reg/v/f:SI 4 si [orig:84 __x ] [84])) 90 {*movsi_internal}
     (nil))
(jump_insn:TI 26 23 31 3 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 38)
            (pc))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1243 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 9100 (nil)))
 -> 38)
;;  succ:       3 [91.0%]  (DFS_BACK,CAN_FALLTHRU)
;;              4 [9.0%]  (FALLTHRU,CAN_FALLTHRU,LOOP_EXIT)
;; lr  out 	 3 [bx] 5 [di] 7 [sp]
;; live  out 	 3 [bx] 5 [di] 7 [sp]

;; basic block 4, loop depth 0, count 0, freq 900, maybe hot
;;  prev block 3, next block 1, flags: (REACHABLE, RTL)
;;  pred:       2 [9.0%]  (CAN_FALLTHRU)
;;              3 [9.0%]  (FALLTHRU,CAN_FALLTHRU,LOOP_EXIT)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 3 [bx] 4 [si] 5 [di] 7 [sp] 17 [flags]
;; live  in  	 7 [sp]
;; live  gen 	 3 [bx] 4 [si] 5 [di] 7 [sp]
;; live  kill	 17 [flags]
(code_label 31 26 32 4 56 "" [1 uses])
(note 32 31 51 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(note 51 32 52 4 NOTE_INSN_EPILOGUE_BEG)
(insn/f:TI 52 51 53 4 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0  A8]))
        ]) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1250 943 {pro_epilogue_adjust_stack_si_add}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (nil))))
(insn/f:TI 53 52 54 4 (set (reg:SI 3 bx)
        (mem:SI (post_inc:SI (reg/f:SI 7 sp)) [0  S4 A8])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1250 74 {*popsi1}
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:SI 7 sp)
            (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])))
        (expr_list:REG_CFA_RESTORE (reg:SI 3 bx)
            (nil))))
(insn/f:TI 54 53 55 4 (set (reg:SI 4 si)
        (mem:SI (post_inc:SI (reg/f:SI 7 sp)) [0  S4 A8])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1250 74 {*popsi1}
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:SI 7 sp)
            (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])))
        (expr_list:REG_CFA_RESTORE (reg:SI 4 si)
            (nil))))
(insn/f:TI 55 54 56 4 (set (reg:SI 5 di)
        (mem:SI (post_inc:SI (reg/f:SI 7 sp)) [0  S4 A8])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1250 74 {*popsi1}
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:SI 7 sp)
            (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])))
        (expr_list:REG_CFA_RESTORE (reg:SI 5 di)
            (nil))))
(jump_insn:TI 56 55 57 4 (parallel [
            (simple_return)
            (use (const_int 4 [0x4]))
        ]) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1250 660 {simple_return_pop_internal}
     (nil)
 -> simple_return)
;;  succ:       EXIT [100.0%] 
;; lr  out 	 3 [bx] 4 [si] 5 [di] 7 [sp]
;; live  out 	 3 [bx] 4 [si] 5 [di] 7 [sp]

(barrier 57 56 43)
(note 43 57 0 NOTE_INSN_DELETED)

;; Function void __tcf_1() (__tcf_1, funcdef_no=6107, decl_uid=80892, symbol_order=3644)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;;   ======================================================
;;   -- basic block 2 from 14 to 20 -- after reload
;;   ======================================================

;;	  0--> b  0: i  14{sp=sp-0x1c;clobber flags;clobber [scratch];}:athlon-direct,athlon-ieu
;;	  0--> b  0: i   6ax=[const(`s'+0x8)]                     :athlon-direct,athlon-load
;;	  0--> b  0: i   8cx=`s'                                  :athlon-direct,athlon-ieu
;;	  3--> b  0: i   7[sp]=ax                                 :athlon-direct,athlon-agu,athlon-store
;;	  4--> b  0: i   9{call [`_ZNSt8_Rb_treeIySt4pairIKyiESt10_Select1stIS2_ESt4lessIyESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E'];sp=sp+0x4;}:athlon-vector,athlon-ieu
;;	  5--> b  0: i  10{sp=sp-0x4;clobber flags;}              :athlon-direct,athlon-ieu
;;	  6--> b  0: i  19{sp=sp+0x1c;clobber flags;clobber [scratch];}:athlon-direct,athlon-ieu
;;	  7--> b  0: i  20simple_return                           :athlon-vector,athlon-ieu,athlon-ieu
;;	Ready list (final):  
;;   total time = 7
;;   new head = 14
;;   new tail = 20



starting the processing of deferred insns
ending the processing of deferred insns


void __tcf_1()

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 29 [mm0] 30 [mm1] 31 [mm2]
;;  exit block uses 	 7 [sp]
;;  regs ever live 	 0[ax] 2[cx] 7[sp] 17[flags]
;;  ref usage 	r0={3d,1u} r1={2d} r2={3d,1u} r7={5d,13u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r17={4d} r18={1d} r19={1d} r21={2d} r22={2d} r23={2d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={2d} r30={2d} r31={2d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} 
;;    total ref usage 104{89d,15u,0e} in 8{7 regular + 1 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;; live  in  	 7 [sp]
;; live  gen 	 0 [ax] 2 [cx] 7 [sp]
;; live  kill	 17 [flags]
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 14 2 NOTE_INSN_FUNCTION_BEG)
(insn/f:TI 14 2 15 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -28 [0xffffffffffffffe4])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0  A8]))
        ]) D:\LHX\7.5 contest\t1.cpp:20 943 {pro_epilogue_adjust_stack_si_add}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -28 [0xffffffffffffffe4])))
            (nil))))
(note 15 14 6 2 NOTE_INSN_PROLOGUE_END)
(insn 6 15 8 2 (set (reg/f:SI 0 ax [orig:85 MEM[(struct _Rb_tree_node_base * *)&s + 8B] ] [85])
        (mem/f/c:SI (const:SI (plus:SI (symbol_ref:SI ("s") [flags 0x2]  <var_decl 06d9cd20 s>)
                    (const_int 8 [0x8]))) [6 MEM[(struct _Rb_tree_node_base * *)&s + 8B]+0 S4 A32])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:715 90 {*movsi_internal}
     (expr_list:REG_EQUIV (mem/f/c:SI (const:SI (plus:SI (symbol_ref:SI ("s") [flags 0x2]  <var_decl 06d9cd20 s>)
                    (const_int 8 [0x8]))) [6 MEM[(struct _Rb_tree_node_base * *)&s + 8B]+0 S4 A32])
        (nil)))
(insn 8 6 7 2 (set (reg:SI 2 cx)
        (symbol_ref:SI ("s") [flags 0x2]  <var_decl 06d9cd20 s>)) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:715 90 {*movsi_internal}
     (nil))
(insn:TI 7 8 9 2 (set (mem:SI (reg/f:SI 7 sp) [0  S4 A32])
        (reg/f:SI 0 ax [orig:85 MEM[(struct _Rb_tree_node_base * *)&s + 8B] ] [85])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:715 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 0 ax [orig:85 MEM[(struct _Rb_tree_node_base * *)&s + 8B] ] [85])
        (nil)))
(call_insn:TI 9 7 10 2 (parallel [
            (call (mem:QI (symbol_ref:SI ("_ZNSt8_Rb_treeIySt4pairIKyiESt10_Select1stIS2_ESt4lessIyESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E") [flags 0x3]  <function_decl 06e20200 _M_erase>) [0 _M_erase S1 A8])
                (const_int 4 [0x4]))
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 4 [0x4])))
        ]) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:715 646 {*call_pop}
     (expr_list:REG_DEAD (reg:SI 2 cx)
        (expr_list:REG_ARGS_SIZE (const_int -4 [0xfffffffffffffffc])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 2 cx))
        (expr_list:SI (use (mem/f:SI (reg/f:SI 7 sp) [0  S4 A32]))
            (nil))))
(insn:TI 10 9 22 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:715 220 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(note 22 10 19 2 NOTE_INSN_EPILOGUE_BEG)
(insn/f:TI 19 22 20 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 28 [0x1c])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0  A8]))
        ]) D:\LHX\7.5 contest\t1.cpp:20 943 {pro_epilogue_adjust_stack_si_add}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 28 [0x1c])))
            (nil))))
(jump_insn:TI 20 19 21 2 (simple_return) D:\LHX\7.5 contest\t1.cpp:20 658 {simple_return_internal}
     (nil)
 -> simple_return)
;;  succ:       EXIT [100.0%] 
;; lr  out 	 7 [sp]
;; live  out 	 7 [sp]

(barrier 21 20 13)
(note 13 21 0 NOTE_INSN_DELETED)

;; Function std::pair<std::_Rb_tree_node_base*, std::_Rb_tree_node_base*> std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_get_insert_unique_pos(const key_type&) [with _Key = long long unsigned int; _Val = std::pair<const long long unsigned int, int>; _KeyOfValue = std::_Select1st<std::pair<const long long unsigned int, int> >; _Compare = std::less<long long unsigned int>; _Alloc = std::allocator<std::pair<const long long unsigned int, int> >; std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::key_type = long long unsigned int] (_ZNSt8_Rb_treeIySt4pairIKyiESt10_Select1stIS2_ESt4lessIyESaIS2_EE24_M_get_insert_unique_posERS1_, funcdef_no=5998, decl_uid=70242, symbol_order=3498)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 21 n_edges 32 count 24 (  1.1)


std::pair<std::_Rb_tree_node_base*, std::_Rb_tree_node_base*> std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_get_insert_unique_pos(const key_type&) [with _Key = long long unsigned int; _Val = std::pair<const long long unsigned int, int>; _KeyOfValue = std::_Select1st<std::pair<const long long unsigned int, int> >; _Compare = std::less<long long unsigned int>; _Alloc = std::allocator<std::pair<const long long unsigned int, int> >; std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::key_type = long long unsigned int]

Dataflow summary:
def_info->table_size = 115, use_info->table_size = 0
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 29 [mm0] 30 [mm1] 31 [mm2]
;;  exit block uses 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 3[bx] 4[si] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={9d,12u} r1={7d,4u} r2={4d,6u} r3={7d,13u} r4={6d,6u} r5={5d,5u} r6={5d,4u} r7={16d,48u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r17={18d,12u} r18={1d} r19={1d} r21={2d} r22={2d} r23={2d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={2d} r30={2d} r31={2d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} 
;;    total ref usage 259{149d,110u,0e} in 73{72 regular + 1 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(4){ }d-1(5){ }d-1(6){ }d-1(7){ }d-1(21){ }d-1(22){ }d-1(23){ }d-1(29){ }d-1(30){ }d-1(31){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 29 [mm0] 30 [mm1] 31 [mm2]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 29 [mm0] 30 [mm1] 31 [mm2]
;; live  kill	
;; lr  out 	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;; live  out 	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]

( 0 )->[2]->( 3 14 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;; lr  use 	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;; lr  def 	 3 [bx] 7 [sp] 17 [flags]
;; live  in  	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;; live  gen 	 0 [ax] 3 [bx] 7 [sp] 17 [flags]
;; live  kill	 17 [flags]
;; lr  out 	 2 [cx] 3 [bx] 7 [sp]
;; live  out 	 2 [cx] 3 [bx] 7 [sp]

( 2 )->[3]->( 8 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 5 [di] 6 [bp]
;; live  in  	 3 [bx] 7 [sp]
;; live  gen 	 0 [ax] 5 [di] 6 [bp]
;; live  kill	
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp]

( 8 )->[4]->( 6 5 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags]
;; lr  use 	 7 [sp] 17 [flags]
;; lr  def 	
;; live  in  	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags]
;; live  gen 	
;; live  kill	
;; lr  out 	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;; live  out 	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]

( 4 )->[5]->( 9 6 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }}
;; lr  in  	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;; lr  use 	 4 [si] 6 [bp] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;; live  out 	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]

( 5 4 )->[6]->( 7 10 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }}
;; lr  in  	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 17 [flags]
;; live  in  	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx]
;; live  kill	
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]

( 6 9 )->[7]->( 8 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 5 [di] 6 [bp] 7 [sp]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 3 [bx]
;; live  in  	 0 [ax] 5 [di] 6 [bp] 7 [sp]
;; live  gen 	 3 [bx]
;; live  kill	
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp]

( 7 3 )->[8]->( 9 4 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp]
;; lr  use 	 3 [bx] 5 [di] 7 [sp]
;; lr  def 	 2 [cx] 4 [si] 17 [flags]
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp]
;; live  gen 	 2 [cx] 4 [si] 17 [flags]
;; live  kill	
;; lr  out 	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags]
;; live  out 	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags]

( 8 5 )->[9]->( 7 10 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(7){ }}
;; lr  in  	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 17 [flags]
;; live  in  	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]

( 6 9 )->[10]->( 15 11 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;; lr  use 	 1 [dx] 3 [bx] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;; live  out 	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]

( 10 )->[11]->( 12 17 )
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(7){ }}
;; lr  in  	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;; lr  use 	 2 [cx] 5 [di] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 3 [bx] 4 [si] 6 [bp] 7 [sp] 17 [flags]
;; live  out 	 3 [bx] 4 [si] 6 [bp] 7 [sp] 17 [flags]

( 11 18 16 )->[12]->( 13 )
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 7 [sp]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 17 [flags]
;; live  in  	 3 [bx] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 1 [dx] 7 [sp]
;; live  out 	 0 [ax] 1 [dx] 7 [sp]

( 12 20 )->[13]->( 1 )
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 7 [sp]
;; lr  use 	 0 [ax] 1 [dx] 7 [sp]
;; lr  def 	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 7 [sp]
;; live  gen 	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]

( 2 )->[14]->( 15 )
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(7){ }}
;; lr  in  	 2 [cx] 7 [sp]
;; lr  use 	 2 [cx] 7 [sp]
;; lr  def 	 3 [bx]
;; live  in  	 2 [cx] 7 [sp]
;; live  gen 	 3 [bx]
;; live  kill	
;; lr  out 	 3 [bx] 7 [sp]
;; live  out 	 3 [bx] 7 [sp]

( 10 14 )->[15]->( 20 16 )
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 7 [sp]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
;; live  in  	 3 [bx] 7 [sp]
;; live  gen 	 0 [ax] 17 [flags]
;; live  kill	
;; lr  out 	 3 [bx] 7 [sp]
;; live  out 	 3 [bx] 7 [sp]

( 15 )->[16]->( 12 17 )
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 7 [sp]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;; live  in  	 3 [bx] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp]
;; live  kill	
;; lr  out 	 3 [bx] 4 [si] 6 [bp] 7 [sp] 17 [flags]
;; live  out 	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]

( 11 16 )->[17]->( 19 18 )
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 4 [si] 6 [bp] 7 [sp] 17 [flags]
;; lr  use 	 7 [sp] 17 [flags]
;; lr  def 	
;; live  in  	 3 [bx] 4 [si] 6 [bp] 7 [sp] 17 [flags]
;; live  gen 	
;; live  kill	
;; lr  out 	 3 [bx] 4 [si] 6 [bp] 7 [sp]
;; live  out 	 3 [bx] 4 [si] 6 [bp] 7 [sp]

( 17 )->[18]->( 12 19 )
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 4 [si] 6 [bp] 7 [sp]
;; lr  use 	 4 [si] 6 [bp] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 3 [bx] 4 [si] 6 [bp] 7 [sp]
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 3 [bx] 7 [sp]
;; live  out 	 3 [bx] 7 [sp]

( 18 17 )->[19]->( 1 )
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags]
;; live  in  	 7 [sp]
;; live  gen 	 0 [ax] 1 [dx]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;; live  out 	 0 [ax] 1 [dx] 7 [sp]

( 15 )->[20]->( 13 )
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 7 [sp]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 17 [flags]
;; live  in  	 3 [bx] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 1 [dx] 7 [sp]
;; live  out 	 0 [ax] 1 [dx] 7 [sp]

( 13 19 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ }u-1(1){ }u-1(3){ }u-1(4){ }u-1(5){ }u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;; lr  use 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;; lr  def 	
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 15 to worklist
  Adding insn 148 to worklist
  Adding insn 153 to worklist
  Adding insn 152 to worklist
  Adding insn 151 to worklist
  Adding insn 150 to worklist
  Adding insn 201 to worklist
  Adding insn 28 to worklist
  Adding insn 30 to worklist
  Adding insn 43 to worklist
  Adding insn 26 to worklist
  Adding insn 182 to worklist
  Adding insn 46 to worklist
  Adding insn 8 to worklist
  Adding insn 67 to worklist
  Adding insn 164 to worklist
  Adding insn 89 to worklist
  Adding insn 51 to worklist
  Adding insn 186 to worklist
  Adding insn 9 to worklist
  Adding insn 60 to worklist
  Adding insn 59 to worklist
  Adding insn 69 to worklist
  Adding insn 71 to worklist
  Adding insn 196 to worklist
  Adding insn 189 to worklist
  Adding insn 207 to worklist
Finished finding needed instructions:
processing block 7 lr out =  3 [bx] 5 [di] 6 [bp] 7 [sp]
  Adding insn 5 to worklist
processing block 13 lr out =  0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
  Adding insn 163 to worklist
  Adding insn 162 to worklist
  Adding insn 161 to worklist
  Adding insn 160 to worklist
  Adding insn 159 to worklist
processing block 20 lr out =  0 [ax] 1 [dx] 7 [sp]
  Adding insn 54 to worklist
  Adding insn 168 to worklist
processing block 12 lr out =  0 [ax] 1 [dx] 7 [sp]
  Adding insn 166 to worklist
  Adding insn 80 to worklist
processing block 19 lr out =  0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
  Adding insn 195 to worklist
  Adding insn 194 to worklist
  Adding insn 193 to worklist
  Adding insn 192 to worklist
  Adding insn 191 to worklist
  Adding insn 75 to worklist
  Adding insn 167 to worklist
processing block 18 lr out =  3 [bx] 7 [sp]
  Adding insn 70 to worklist
processing block 17 lr out =  3 [bx] 4 [si] 6 [bp] 7 [sp]
processing block 16 lr out =  3 [bx] 4 [si] 6 [bp] 7 [sp] 17 [flags]
  Adding insn 185 to worklist
  Adding insn 10 to worklist
  Adding insn 114 to worklist
  Adding insn 113 to worklist
  Adding insn 112 to worklist
  Adding insn 111 to worklist
  Adding insn 146 to worklist
processing block 15 lr out =  3 [bx] 7 [sp]
  Adding insn 50 to worklist
  Adding insn 145 to worklist
processing block 11 lr out =  3 [bx] 4 [si] 6 [bp] 7 [sp] 17 [flags]
  Adding insn 66 to worklist
processing block 10 lr out =  2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
  Adding insn 45 to worklist
processing block 9 lr out =  0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
  Adding insn 181 to worklist
  Adding insn 169 to worklist
  Adding insn 38 to worklist
processing block 6 lr out =  0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
  Adding insn 42 to worklist
  Adding insn 6 to worklist
  Adding insn 33 to worklist
processing block 5 lr out =  2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
  Adding insn 29 to worklist
processing block 4 lr out =  2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
processing block 8 lr out =  2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags]
  Adding insn 25 to worklist
  Adding insn 110 to worklist
  Adding insn 109 to worklist
processing block 3 lr out =  3 [bx] 5 [di] 6 [bp] 7 [sp]
  Adding insn 108 to worklist
  Adding insn 107 to worklist
  Adding insn 143 to worklist
processing block 14 lr out =  3 [bx] 7 [sp]
  Adding insn 149 to worklist
processing block 2 lr out =  2 [cx] 3 [bx] 7 [sp]
  Adding insn 14 to worklist
  Adding insn 13 to worklist
  Adding insn 154 to worklist
df_worklist_dataflow_doublequeue:n_basic_blocks 21 n_edges 32 count 25 (  1.2)
;;   ======================================================
;;   -- basic block 2 from 150 to 15 -- after reload
;;   ======================================================

;;	  0--> b  0: i 150[--sp]=bp                               :athlon-direct,athlon-agu,athlon-store
;;	  0--> b  0: i 151[--sp]=di                               :athlon-direct,athlon-agu,athlon-store
;;	  1--> b  0: i 152[--sp]=si                               :athlon-direct,athlon-agu,athlon-store
;;	  1--> b  0: i 153[--sp]=bx                               :athlon-direct,athlon-agu,athlon-store
;;	  3--> b  0: i 154{sp=sp-0x2c;clobber flags;clobber [scratch];}:athlon-direct,athlon-ieu
;;	  3--> b  0: i  13bx=[cx+0x8]                             :athlon-direct,athlon-load
;;	  4--> b  0: i 148[sp+0x1c]=cx                            :athlon-direct,athlon-agu,athlon-store
;;	  6--> b  0: i  14flags=cmp(bx,0)                         :athlon-direct,athlon-ieu
;;	  7--> b  0: i  15pc={(flags==0)?L200:pc}                 :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 7
;;   new head = 150
;;   new tail = 15

;;   ======================================================
;;   -- basic block 3 from 143 to 201 -- after reload
;;   ======================================================

;;	  0--> b  0: i 143ax=[sp+0x40]                            :athlon-direct,athlon-load
;;	  3--> b  0: i 107bp=[ax]                                 :athlon-direct,athlon-load
;;	  3--> b  0: i 108di=[ax+0x4]                             :athlon-direct,athlon-load
;;	  3--> b  0: i 201pc=L41                                  :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 3
;;   new head = 143
;;   new tail = 201

;;   ======================================================
;;   -- basic block 4 from 28 to 28 -- after reload
;;   ======================================================

;;	  0--> b  0: i  28pc={(gtu(flags,0))?L105:pc}             :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 28
;;   new tail = 28

;;   ======================================================
;;   -- basic block 5 from 29 to 30 -- after reload
;;   ======================================================

;;	  0--> b  0: i  29flags=cmp(si,bp)                        :athlon-direct,athlon-ieu
;;	  1--> b  0: i  30pc={(leu(flags,0))?L36:pc}              :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 29
;;   new tail = 30

;;   ======================================================
;;   -- basic block 6 from 33 to 43 -- after reload
;;   ======================================================

;;	  0--> b  0: i  33ax=[bx+0x8]                             :athlon-direct,athlon-load
;;	  0--> b  0: i   6dx=0x1                                  :athlon-direct,athlon-ieu
;;	  3--> b  0: i  42flags=cmp(ax,0)                         :athlon-direct,athlon-ieu
;;	  4--> b  0: i  43pc={(flags==0)?L203:pc}                 :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 4
;;   new head = 33
;;   new tail = 43

;;   ======================================================
;;   -- basic block 7 from 5 to 5 -- after reload
;;   ======================================================

;;	  0--> b  0: i   5bx=ax                                   :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 5
;;   new tail = 5

;;   ======================================================
;;   -- basic block 8 from 109 to 26 -- after reload
;;   ======================================================

;;	  0--> b  0: i 110cx=[bx+0x14]                            :athlon-direct,athlon-load
;;	  0--> b  0: i 109si=[bx+0x10]                            :athlon-direct,athlon-load
;;	  3--> b  0: i  25flags=cmp(cx,di)                        :athlon-direct,athlon-ieu
;;	  4--> b  0: i  26pc={(geu(flags,0))?L204:pc}             :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 4
;;   new head = 109
;;   new tail = 26

;;   ======================================================
;;   -- basic block 9 from 38 to 182 -- after reload
;;   ======================================================

;;	  0--> b  0: i  38ax=[bx+0xc]                             :athlon-direct,athlon-load
;;	  0--> b  0: i 169{dx=0;clobber flags;}                   :athlon-direct,athlon-ieu
;;	  3--> b  0: i 181flags=cmp(ax,0)                         :athlon-direct,athlon-ieu
;;	  4--> b  0: i 182pc={(flags!=0)?L94:pc}                  :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 4
;;   new head = 38
;;   new tail = 182

;;   ======================================================
;;   -- basic block 10 from 8 to 46 -- after reload
;;   ======================================================

;;	  0--> b  0: i  45flags=cmp(dx,0)                         :athlon-direct,athlon-ieu
;;	  0--> b  0: i   8[sp+0x18]=bx                            :athlon-direct,athlon-agu,athlon-store
;;	  1--> b  0: i  46pc={(flags!=0)?L47:pc}                  :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 8
;;   new tail = 46

;;   ======================================================
;;   -- basic block 11 from 66 to 67 -- after reload
;;   ======================================================

;;	  0--> b  0: i  66flags=cmp(cx,di)                        :athlon-direct,athlon-ieu
;;	  1--> b  0: i  67pc={(leu(flags,0))?L205:pc}             :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 66
;;   new tail = 67

;;   ======================================================
;;   -- basic block 12 from 80 to 166 -- after reload
;;   ======================================================

;;	  0--> b  0: i  80ax=bx                                   :athlon-direct,athlon-ieu
;;	  0--> b  0: i 166{dx=0;clobber flags;}                   :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 80
;;   new tail = 166

;;   ======================================================
;;   -- basic block 13 from 89 to 164 -- after reload
;;   ======================================================

;;	  0--> b  0: i 159{sp=sp+0x2c;clobber flags;clobber [scratch];}:athlon-direct,athlon-ieu
;;	  0--> b  0: i  89use ax                                  :nothing
;;	  1--> b  0: i 160bx=[sp++]                               :athlon-vector,athlon-load,athlon-ieu
;;	  2--> b  0: i 161si=[sp++]                               :athlon-vector,athlon-load,athlon-ieu
;;	  3--> b  0: i 162di=[sp++]                               :athlon-vector,athlon-load,athlon-ieu
;;	  4--> b  0: i 163bp=[sp++]                               :athlon-vector,athlon-load,athlon-ieu
;;	  5--> b  0: i 164{simple_return;use 0x4;}                :athlon-vector,athlon-ieu,athlon-ieu
;;	Ready list (final):  
;;   total time = 5
;;   new head = 89
;;   new tail = 164

;;   ======================================================
;;   -- basic block 14 from 149 to 149 -- after reload
;;   ======================================================

;;	  0--> b  0: i 149bx=cx+0x4                               :athlon-direct,athlon-agu,nothing
;;	Ready list (final):  
;;   total time = 0
;;   new head = 149
;;   new tail = 149

;;   ======================================================
;;   -- basic block 15 from 145 to 51 -- after reload
;;   ======================================================

;;	  0--> b  0: i 145ax=[sp+0x1c]                            :athlon-direct,athlon-load
;;	  3--> b  0: i  50flags=cmp([ax+0xc],bx)                  :athlon-direct,athlon-load,athlon-ieu
;;	  7--> b  0: i  51pc={(flags==0)?L206:pc}                 :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 7
;;   new head = 145
;;   new tail = 51

;;   ======================================================
;;   -- basic block 16 from 59 to 186 -- after reload
;;   ======================================================

;;	  0--> b  0: i  59[sp]=bx                                 :athlon-direct,athlon-agu,athlon-store
;;	  1--> b  0: i  60ax=call [`_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base']:athlon-vector,athlon-ieu
;;	  2--> b  0: i 146si=[sp+0x40]                            :athlon-direct,athlon-load
;;	  2--> b  0: i 114cx=[ax+0x14]                            :athlon-direct,athlon-load
;;	  3--> b  0: i   9[sp+0x18]=bx                            :athlon-direct,athlon-agu,athlon-store
;;	  3--> b  0: i  10bx=ax                                   :athlon-direct,athlon-ieu
;;	  5--> b  0: i 112di=[si+0x4]                             :athlon-direct,athlon-load
;;	  5--> b  0: i 111bp=[si]                                 :athlon-direct,athlon-load
;;	  6--> b  0: i 113si=[ax+0x10]                            :athlon-direct,athlon-load
;;	  8--> b  0: i 185flags=cmp(cx,di)                        :athlon-direct,athlon-ieu
;;	  9--> b  0: i 186pc={(gtu(flags,0))?L78:pc}              :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 9
;;   new head = 59
;;   new tail = 186

;;   ======================================================
;;   -- basic block 17 from 69 to 69 -- after reload
;;   ======================================================

;;	  0--> b  0: i  69pc={(ltu(flags,0))?L106:pc}             :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 69
;;   new tail = 69

;;   ======================================================
;;   -- basic block 18 from 70 to 71 -- after reload
;;   ======================================================

;;	  0--> b  0: i  70flags=cmp(si,bp)                        :athlon-direct,athlon-ieu
;;	  1--> b  0: i  71pc={(geu(flags,0))?L78:pc}              :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 70
;;   new tail = 71

;;   ======================================================
;;   -- basic block 19 from 167 to 196 -- after reload
;;   ======================================================

;;	  0--> b  0: i  75dx=[sp+0x18]                            :athlon-direct,athlon-load
;;	  0--> b  0: i 191{sp=sp+0x2c;clobber flags;clobber [scratch];}:athlon-direct,athlon-ieu
;;	  0--> b  0: i 167{ax=0;clobber flags;}                   :athlon-direct,athlon-ieu
;;	  1--> b  0: i 192bx=[sp++]                               :athlon-vector,athlon-load,athlon-ieu
;;	  1--> b  0: i 189use ax                                  :nothing
;;	  2--> b  0: i 193si=[sp++]                               :athlon-vector,athlon-load,athlon-ieu
;;	  3--> b  0: i 194di=[sp++]                               :athlon-vector,athlon-load,athlon-ieu
;;	  4--> b  0: i 195bp=[sp++]                               :athlon-vector,athlon-load,athlon-ieu
;;	  5--> b  0: i 196{simple_return;use 0x4;}                :athlon-vector,athlon-ieu,athlon-ieu
;;	Ready list (final):  
;;   total time = 5
;;   new head = 167
;;   new tail = 196

;;   ======================================================
;;   -- basic block 20 from 168 to 207 -- after reload
;;   ======================================================

;;	  0--> b  0: i 168{ax=0;clobber flags;}                   :athlon-direct,athlon-ieu
;;	  0--> b  0: i  54dx=bx                                   :athlon-direct,athlon-ieu
;;	  0--> b  0: i 207pc=L82                                  :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 168
;;   new tail = 207



starting the processing of deferred insns
ending the processing of deferred insns


std::pair<std::_Rb_tree_node_base*, std::_Rb_tree_node_base*> std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_get_insert_unique_pos(const key_type&) [with _Key = long long unsigned int; _Val = std::pair<const long long unsigned int, int>; _KeyOfValue = std::_Select1st<std::pair<const long long unsigned int, int> >; _Compare = std::less<long long unsigned int>; _Alloc = std::allocator<std::pair<const long long unsigned int, int> >; std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::key_type = long long unsigned int]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 29 [mm0] 30 [mm1] 31 [mm2]
;;  exit block uses 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 3[bx] 4[si] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={9d,12u} r1={7d,4u} r2={4d,6u} r3={7d,13u} r4={6d,6u} r5={5d,5u} r6={5d,4u} r7={16d,48u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r17={18d,12u} r18={1d} r19={1d} r21={2d} r22={2d} r23={2d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={2d} r30={2d} r31={2d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} 
;;    total ref usage 259{149d,110u,0e} in 73{72 regular + 1 call} insns.
(note 1 0 11 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 900, maybe hot
;;  prev block 0, next block 3, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;; lr  use 	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;; lr  def 	 3 [bx] 7 [sp] 17 [flags]
;; live  in  	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;; live  gen 	 3 [bx] 7 [sp] 17 [flags]
;; live  kill	 17 [flags]
(note 11 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 3 11 4 2 NOTE_INSN_DELETED)
(note 4 3 150 2 NOTE_INSN_FUNCTION_BEG)
(insn/f:TI 150 4 151 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A8])
        (reg:SI 6 bp)) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1435 66 {*pushsi2}
     (expr_list:REG_DEAD (reg:SI 6 bp)
        (nil)))
(insn/f 151 150 152 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A8])
        (reg:SI 5 di)) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1435 66 {*pushsi2}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (nil)))
(insn/f:TI 152 151 153 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A8])
        (reg:SI 4 si)) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1435 66 {*pushsi2}
     (expr_list:REG_DEAD (reg:SI 4 si)
        (nil)))
(insn/f 153 152 154 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A8])
        (reg:SI 3 bx)) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1435 66 {*pushsi2}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil)))
(insn/f:TI 154 153 155 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -44 [0xffffffffffffffd4])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0  A8]))
        ]) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1435 943 {pro_epilogue_adjust_stack_si_add}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -44 [0xffffffffffffffd4])))
            (nil))))
(note 155 154 13 2 NOTE_INSN_PROLOGUE_END)
(insn 13 155 148 2 (set (reg/f:SI 3 bx [orig:86 __j ] [86])
        (mem/f:SI (plus:SI (reg/f:SI 2 cx [orig:93 this ] [93])
                (const_int 8 [0x8])) [6 MEM[(struct _Rb_tree_node_base * *)this_6(D) + 8B]+0 S4 A32])) 90 {*movsi_internal}
     (nil))
(insn:TI 148 13 14 2 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 28 [0x1c])) [45 %sfp+-4 S4 A32])
        (reg/f:SI 2 cx [orig:93 this ] [93])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1435 90 {*movsi_internal}
     (nil))
(insn:TI 14 148 15 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:SI 3 bx [orig:86 __j ] [86])
            (const_int 0 [0]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1442 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn:TI 15 14 21 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 200)
            (pc))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1442 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 900 (nil)))
 -> 200)
;;  succ:       3 [91.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              14 [9.0%]  (CAN_FALLTHRU)
;; lr  out 	 2 [cx] 3 [bx] 7 [sp]
;; live  out 	 2 [cx] 3 [bx] 7 [sp]

;; basic block 3, loop depth 0, count 0, freq 819, maybe hot
;;  prev block 2, next block 4, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [91.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 5 [di] 6 [bp]
;; live  in  	 3 [bx] 7 [sp]
;; live  gen 	 0 [ax] 5 [di] 6 [bp]
;; live  kill	
(note 21 15 143 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn:TI 143 21 107 3 (set (reg:SI 0 ax [112])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 64 [0x40])) [6 __k+0 S4 A32])) 90 {*movsi_internal}
     (nil))
(insn:TI 107 143 108 3 (set (reg:SI 6 bp [orig:96 D.83085 ] [96])
        (mem:SI (reg:SI 0 ax [112]) [34 MEM[(const long long unsigned int &)__k_8(D)]+0 S4 A64])) 90 {*movsi_internal}
     (nil))
(insn 108 107 201 3 (set (reg:SI 5 di [orig:97 D.83085+4 ] [97])
        (mem:SI (plus:SI (reg:SI 0 ax [113])
                (const_int 4 [0x4])) [34 MEM[(const long long unsigned int &)__k_8(D)]+4 S4 A32])) 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [113])
        (nil)))
(jump_insn 201 108 202 3 (set (pc)
        (label_ref 41)) 636 {jump}
     (nil)
 -> 41)
;;  succ:       8 [100.0%]  (CAN_FALLTHRU)
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp]

(barrier 202 201 204)
;; basic block 4, loop depth 0, count 0, freq 4550, maybe hot
;;  prev block 3, next block 5, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       8 [50.0%]  (CAN_FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags]
;; lr  use 	 7 [sp] 17 [flags]
;; lr  def 	
;; live  in  	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags]
;; live  gen 	
;; live  kill	
(code_label 204 202 99 4 85 "" [1 uses])
(note 99 204 28 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(jump_insn:TI 28 99 100 4 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 105)
            (pc))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1446 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 105)
;;  succ:       6 [50.0%]  (CAN_FALLTHRU)
;;              5 [50.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;; live  out 	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]

;; basic block 5, loop depth 0, count 0, freq 2275, maybe hot
;;  prev block 4, next block 6, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       4 [50.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }}
;; lr  in  	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;; lr  use 	 4 [si] 6 [bp] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;; live  gen 	 17 [flags]
;; live  kill	
(note 100 28 29 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn:TI 29 100 30 5 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 4 si [orig:98 D.83085 ] [98])
            (reg:SI 6 bp [orig:96 D.83085 ] [96]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1446 7 {*cmpsi_1}
     (nil))
(jump_insn:TI 30 29 105 5 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 36)
            (pc))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1446 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 36)
;;  succ:       9 [50.0%]  (CAN_FALLTHRU)
;;              6 [50.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;; live  out 	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]

;; basic block 6, loop depth 0, count 0, freq 4550, maybe hot
;; Invalid sum of incoming frequencies 3413, should be 4550
;;  prev block 5, next block 7, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       5 [50.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              4 [50.0%]  (CAN_FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }}
;; lr  in  	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 17 [flags]
;; live  in  	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 17 [flags]
;; live  kill	
(code_label 105 30 32 6 79 "" [1 uses])
(note 32 105 33 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn:TI 33 32 6 6 (set (reg/f:SI 0 ax [orig:84 __j ] [84])
        (mem/f:SI (plus:SI (reg/f:SI 3 bx [orig:86 __j ] [86])
                (const_int 8 [0x8])) [6 MEM[(struct _Rb_tree_node_base * *)__j_43 + 8B]+0 S4 A32])) 90 {*movsi_internal}
     (nil))
(insn 6 33 42 6 (set (reg/v:QI 1 dx [orig:83 __comp ] [83])
        (const_int 1 [0x1])) 93 {*movqi_internal}
     (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))
(insn:TI 42 6 43 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:SI 0 ax [orig:84 __j ] [84])
            (const_int 0 [0]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1442 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn:TI 43 42 94 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 203)
            (pc))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1442 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 900 (nil)))
 -> 203)
;;  succ:       7 [91.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              10 [9.0%]  (CAN_FALLTHRU,LOOP_EXIT)
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]

;; basic block 7, loop depth 0, count 0, freq 8281, maybe hot
;;  prev block 6, next block 8, flags: (REACHABLE, RTL)
;;  pred:       6 [91.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              9 [91.0%]  (CAN_FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 5 [di] 6 [bp] 7 [sp]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 3 [bx]
;; live  in  	 0 [ax] 5 [di] 6 [bp] 7 [sp]
;; live  gen 	 3 [bx]
;; live  kill	
(code_label 94 43 93 7 77 "" [1 uses])
(note 93 94 5 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn:TI 5 93 41 7 (set (reg/f:SI 3 bx [orig:86 __j ] [86])
        (reg/f:SI 0 ax [orig:84 __j ] [84])) 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 0 ax [orig:84 __j ] [84])
        (nil)))
;;  succ:       8 [100.0%]  (FALLTHRU,DFS_BACK,CAN_FALLTHRU)
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp]

;; basic block 8, loop depth 0, count 0, freq 9100, maybe hot
;;  prev block 7, next block 9, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       7 [100.0%]  (FALLTHRU,DFS_BACK,CAN_FALLTHRU)
;;              3 [100.0%]  (CAN_FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp]
;; lr  use 	 3 [bx] 5 [di] 7 [sp]
;; lr  def 	 2 [cx] 4 [si] 17 [flags]
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp]
;; live  gen 	 2 [cx] 4 [si] 17 [flags]
;; live  kill	
(code_label 41 5 23 8 71 "" [1 uses])
(note 23 41 110 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn:TI 110 23 109 8 (set (reg:SI 2 cx [orig:99 D.83085+4 ] [99])
        (mem:SI (plus:SI (reg/f:SI 3 bx [orig:86 __j ] [86])
                (const_int 20 [0x14])) [34 MEM[(const long long unsigned int &)__j_43 + 16]+4 S4 A32])) 90 {*movsi_internal}
     (nil))
(insn 109 110 25 8 (set (reg:SI 4 si [orig:98 D.83085 ] [98])
        (mem:SI (plus:SI (reg/f:SI 3 bx [orig:86 __j ] [86])
                (const_int 16 [0x10])) [34 MEM[(const long long unsigned int &)__j_43 + 16]+0 S4 A64])) 90 {*movsi_internal}
     (nil))
(insn:TI 25 109 26 8 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 2 cx [orig:99 D.83085+4 ] [99])
            (reg:SI 5 di [orig:97 D.83085+4 ] [97]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1446 7 {*cmpsi_1}
     (nil))
(jump_insn:TI 26 25 36 8 (set (pc)
        (if_then_else (geu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 204)
            (pc))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1446 596 {*jcc_1}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 204)
;;  succ:       9 [50.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              4 [50.0%]  (CAN_FALLTHRU)
;; lr  out 	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags]
;; live  out 	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags]

;; basic block 9, loop depth 0, count 0, freq 4550, maybe hot
;; Invalid sum of incoming frequencies 5688, should be 4550
;;  prev block 8, next block 10, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       8 [50.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              5 [50.0%]  (CAN_FALLTHRU)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(7){ }}
;; lr  in  	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 17 [flags]
;; live  in  	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 17 [flags]
;; live  kill	 17 [flags]
(code_label 36 26 37 9 68 "" [1 uses])
(note 37 36 38 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn:TI 38 37 169 9 (set (reg/f:SI 0 ax [orig:84 __j ] [84])
        (mem/f:SI (plus:SI (reg/f:SI 3 bx [orig:86 __j ] [86])
                (const_int 12 [0xc])) [6 MEM[(struct _Rb_tree_node_base * *)__j_43 + 12B]+0 S4 A32])) 90 {*movsi_internal}
     (nil))
(insn 169 38 181 9 (parallel [
            (set (reg:SI 1 dx [orig:83 __comp ] [83])
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1446 82 {*movsi_xor}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn:TI 181 169 182 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:SI 0 ax [orig:84 __j ] [84])
            (const_int 0 [0]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1442 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn:TI 182 181 203 9 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 94)
            (pc))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1442 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 9100 (nil)))
 -> 94)
;;  succ:       7 [91.0%]  (CAN_FALLTHRU)
;;              10 [9.0%]  (FALLTHRU,CAN_FALLTHRU,LOOP_EXIT)
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]

;; basic block 10, loop depth 0, count 0, freq 819, maybe hot
;;  prev block 9, next block 11, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       6 [9.0%]  (CAN_FALLTHRU,LOOP_EXIT)
;;              9 [9.0%]  (FALLTHRU,CAN_FALLTHRU,LOOP_EXIT)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;; lr  use 	 1 [dx] 3 [bx] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;; live  gen 	 17 [flags]
;; live  kill	
(code_label 203 182 44 10 84 "" [1 uses])
(note 44 203 45 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn:TI 45 44 8 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:QI 1 dx [orig:83 __comp ] [83])
            (const_int 0 [0]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1449 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg/v:QI 1 dx [orig:83 __comp ] [83])
        (nil)))
(insn 8 45 46 10 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [45 %sfp+-8 S4 A32])
        (reg/f:SI 3 bx [orig:86 __j ] [86])) 90 {*movsi_internal}
     (nil))
(jump_insn:TI 46 8 65 10 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 47)
            (pc))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1449 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 4505 (nil)))
 -> 47)
;;  succ:       15 [45.0%]  (CAN_FALLTHRU)
;;              11 [55.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;; live  out 	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]

;; basic block 11, loop depth 0, count 0, freq 450, maybe hot
;;  prev block 10, next block 12, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       10 [55.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(7){ }}
;; lr  in  	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;; lr  use 	 2 [cx] 5 [di] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;; live  gen 	 17 [flags]
;; live  kill	
(note 65 46 66 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn:TI 66 65 67 11 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 2 cx [orig:99 D.83085+4 ] [99])
            (reg:SI 5 di [orig:97 D.83085+4 ] [97]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1456 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 5 di [orig:97 D.83085+4 ] [97])
        (expr_list:REG_DEAD (reg:SI 2 cx [orig:99 D.83085+4 ] [99])
            (nil))))
(jump_insn:TI 67 66 78 11 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 205)
            (pc))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1456 596 {*jcc_1}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 205)
;;  succ:       12 [50.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              17 [50.0%]  (CAN_FALLTHRU)
;; lr  out 	 3 [bx] 4 [si] 6 [bp] 7 [sp] 17 [flags]
;; live  out 	 3 [bx] 4 [si] 6 [bp] 7 [sp] 17 [flags]

;; basic block 12, loop depth 0, count 0, freq 521, maybe hot
;;  prev block 11, next block 13, flags: (REACHABLE, RTL)
;;  pred:       11 [50.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              18 [50.0%]  (CAN_FALLTHRU)
;;              16 [50.0%]  (CAN_FALLTHRU)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 7 [sp]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 17 [flags]
;; live  in  	 3 [bx] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx]
;; live  kill	 17 [flags]
(code_label 78 67 79 12 75 "" [2 uses])
(note 79 78 80 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn:TI 80 79 166 12 (set (reg:SI 0 ax [orig:100 D.81357 ] [100])
        (reg/f:SI 3 bx [orig:86 __j ] [86])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1458 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 3 bx [orig:86 __j ] [86])
        (nil)))
(insn 166 80 82 12 (parallel [
            (set (reg:SI 1 dx [orig:101 D.81357+4 ] [101])
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1458 82 {*movsi_xor}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
;;  succ:       13 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 1 [dx] 7 [sp]
;; live  out 	 0 [ax] 1 [dx] 7 [sp]

;; basic block 13, loop depth 0, count 0, freq 567, maybe hot
;;  prev block 12, next block 14, flags: (REACHABLE, RTL)
;;  pred:       12 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              20 [100.0%]  (CAN_FALLTHRU)
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 7 [sp]
;; lr  use 	 0 [ax] 1 [dx] 7 [sp]
;; lr  def 	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 7 [sp]
;; live  gen 	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;; live  kill	 17 [flags]
(code_label 82 166 83 13 74 "" [1 uses])
(note 83 82 209 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(note 209 83 159 13 NOTE_INSN_EPILOGUE_BEG)
(insn/f:TI 159 209 89 13 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 44 [0x2c])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0  A8]))
        ]) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1459 943 {pro_epilogue_adjust_stack_si_add}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 44 [0x2c])))
            (nil))))
(insn 89 159 160 13 (use (reg/i:DI 0 ax)) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1459 -1
     (nil))
(insn/f:TI 160 89 161 13 (set (reg:SI 3 bx)
        (mem:SI (post_inc:SI (reg/f:SI 7 sp)) [0  S4 A8])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1459 74 {*popsi1}
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:SI 7 sp)
            (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])))
        (expr_list:REG_CFA_RESTORE (reg:SI 3 bx)
            (nil))))
(insn/f:TI 161 160 162 13 (set (reg:SI 4 si)
        (mem:SI (post_inc:SI (reg/f:SI 7 sp)) [0  S4 A8])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1459 74 {*popsi1}
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:SI 7 sp)
            (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])))
        (expr_list:REG_CFA_RESTORE (reg:SI 4 si)
            (nil))))
(insn/f:TI 162 161 163 13 (set (reg:SI 5 di)
        (mem:SI (post_inc:SI (reg/f:SI 7 sp)) [0  S4 A8])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1459 74 {*popsi1}
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:SI 7 sp)
            (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])))
        (expr_list:REG_CFA_RESTORE (reg:SI 5 di)
            (nil))))
(insn/f:TI 163 162 164 13 (set (reg:SI 6 bp)
        (mem:SI (post_inc:SI (reg/f:SI 7 sp)) [0  S4 A8])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1459 74 {*popsi1}
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:SI 7 sp)
            (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])))
        (expr_list:REG_CFA_RESTORE (reg:SI 6 bp)
            (nil))))
(jump_insn:TI 164 163 165 13 (parallel [
            (simple_return)
            (use (const_int 4 [0x4]))
        ]) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1459 660 {simple_return_pop_internal}
     (nil)
 -> simple_return)
;;  succ:       EXIT [100.0%] 
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]

(barrier 165 164 200)
;; basic block 14, loop depth 0, count 0, freq 81, maybe hot
;;  prev block 13, next block 15, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [9.0%]  (CAN_FALLTHRU)
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(7){ }}
;; lr  in  	 2 [cx] 7 [sp]
;; lr  use 	 2 [cx] 7 [sp]
;; lr  def 	 3 [bx]
;; live  in  	 2 [cx] 7 [sp]
;; live  gen 	 3 [bx]
;; live  kill	
(code_label 200 165 16 14 83 "" [1 uses])
(note 16 200 149 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn:TI 149 16 47 14 (set (reg/f:SI 3 bx [orig:86 __j ] [86])
        (plus:SI (reg/f:SI 2 cx [orig:93 this ] [93])
            (const_int 4 [0x4]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:529 213 {*leasi}
     (expr_list:REG_DEAD (reg/f:SI 2 cx [orig:93 this ] [93])
        (nil)))
;;  succ:       15 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 3 [bx] 7 [sp]
;; live  out 	 3 [bx] 7 [sp]

;; basic block 15, loop depth 0, count 0, freq 450, maybe hot
;;  prev block 14, next block 16, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       10 [45.0%]  (CAN_FALLTHRU)
;;              14 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 7 [sp]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
;; live  in  	 3 [bx] 7 [sp]
;; live  gen 	 0 [ax] 17 [flags]
;; live  kill	
(code_label 47 149 48 15 67 "" [1 uses])
(note 48 47 49 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(note 49 48 145 15 NOTE_INSN_DELETED)
(insn:TI 145 49 50 15 (set (reg/f:SI 0 ax [orig:93 this ] [93])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 28 [0x1c])) [45 %sfp+-4 S4 A32])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1451 90 {*movsi_internal}
     (nil))
(insn:TI 50 145 51 15 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f:SI (plus:SI (reg/f:SI 0 ax [orig:93 this ] [93])
                    (const_int 12 [0xc])) [6 MEM[(struct _Rb_tree_node_base * *)this_6(D) + 12B]+0 S4 A32])
            (reg/f:SI 3 bx [orig:86 __j ] [86]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1451 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg/f:SI 0 ax [orig:93 this ] [93])
        (nil)))
(jump_insn:TI 51 50 58 15 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 206)
            (pc))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1451 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 1014 (nil)))
 -> 206)
;;  succ:       20 [10.1%]  (CAN_FALLTHRU)
;;              16 [89.9%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 3 [bx] 7 [sp]
;; live  out 	 3 [bx] 7 [sp]

;; basic block 16, loop depth 0, count 0, freq 404, maybe hot
;;  prev block 15, next block 17, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       15 [89.9%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 7 [sp]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;; live  in  	 3 [bx] 7 [sp]
;; live  gen 	 0 [ax] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 17 [flags]
;; live  kill	
(note 58 51 59 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn:TI 59 58 60 16 (set (mem:SI (reg/f:SI 7 sp) [0  S4 A32])
        (reg/f:SI 3 bx [orig:86 __j ] [86])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:218 90 {*movsi_internal}
     (nil))
(call_insn/i:TI 60 59 146 16 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base") [flags 0x43]  <function_decl 06b62500 _Rb_tree_decrement>) [0 _Rb_tree_decrement S1 A8])
            (const_int 4 [0x4]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:218 648 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (mem/f:SI (reg/f:SI 7 sp) [0  S4 A32]))
        (nil)))
(insn:TI 146 60 114 16 (set (reg:SI 4 si [115])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 64 [0x40])) [6 __k+0 S4 A32])) 90 {*movsi_internal}
     (nil))
(insn 114 146 9 16 (set (reg:SI 2 cx [orig:99 D.83085+4 ] [99])
        (mem:SI (plus:SI (reg/f:SI 0 ax [orig:88 __j ] [88])
                (const_int 20 [0x14])) [34 MEM[(const long long unsigned int &)__j_25 + 16]+4 S4 A32])) 90 {*movsi_internal}
     (nil))
(insn:TI 9 114 10 16 (set (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [45 %sfp+-8 S4 A32])
        (reg/f:SI 3 bx [orig:86 __j ] [86])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:218 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 3 bx [orig:86 __j ] [86])
        (nil)))
(insn 10 9 112 16 (set (reg/f:SI 3 bx [orig:86 __j ] [86])
        (reg/f:SI 0 ax [orig:88 __j ] [88])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:218 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 0 ax [orig:88 __j ] [88])
        (nil)))
(insn:TI 112 10 111 16 (set (reg:SI 5 di [orig:97 D.83085+4 ] [97])
        (mem:SI (plus:SI (reg:SI 4 si [116])
                (const_int 4 [0x4])) [34 MEM[(const long long unsigned int &)__k_8(D)]+4 S4 A32])) 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [116])
        (nil)))
(insn 111 112 113 16 (set (reg:SI 6 bp [orig:96 D.83085 ] [96])
        (mem:SI (reg:SI 4 si [115]) [34 MEM[(const long long unsigned int &)__k_8(D)]+0 S4 A64])) 90 {*movsi_internal}
     (nil))
(insn:TI 113 111 185 16 (set (reg:SI 4 si [orig:98 D.83085 ] [98])
        (mem:SI (plus:SI (reg/f:SI 0 ax [orig:88 __j ] [88])
                (const_int 16 [0x10])) [34 MEM[(const long long unsigned int &)__j_25 + 16]+0 S4 A64])) 90 {*movsi_internal}
     (nil))
(insn:TI 185 113 186 16 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 2 cx [orig:99 D.83085+4 ] [99])
            (reg:SI 5 di [orig:97 D.83085+4 ] [97]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1456 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 5 di [orig:97 D.83085+4 ] [97])
        (expr_list:REG_DEAD (reg:SI 2 cx [orig:99 D.83085+4 ] [99])
            (nil))))
(jump_insn:TI 186 185 205 16 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 78)
            (pc))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1456 596 {*jcc_1}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 78)
;;  succ:       12 [50.0%]  (CAN_FALLTHRU)
;;              17 [50.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 3 [bx] 4 [si] 6 [bp] 7 [sp] 17 [flags]
;; live  out 	 3 [bx] 4 [si] 6 [bp] 7 [sp] 17 [flags]

;; basic block 17, loop depth 0, count 0, freq 427, maybe hot
;;  prev block 16, next block 18, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       11 [50.0%]  (CAN_FALLTHRU)
;;              16 [50.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 4 [si] 6 [bp] 7 [sp] 17 [flags]
;; lr  use 	 7 [sp] 17 [flags]
;; lr  def 	
;; live  in  	 3 [bx] 4 [si] 6 [bp] 7 [sp] 17 [flags]
;; live  gen 	
;; live  kill	
(code_label 205 186 102 17 86 "" [1 uses])
(note 102 205 69 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(jump_insn:TI 69 102 103 17 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 106)
            (pc))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1456 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 106)
;;  succ:       19 [50.0%]  (CAN_FALLTHRU)
;;              18 [50.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 3 [bx] 4 [si] 6 [bp] 7 [sp]
;; live  out 	 3 [bx] 4 [si] 6 [bp] 7 [sp]

;; basic block 18, loop depth 0, count 0, freq 214, maybe hot
;;  prev block 17, next block 19, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       17 [50.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 4 [si] 6 [bp] 7 [sp]
;; lr  use 	 4 [si] 6 [bp] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 3 [bx] 4 [si] 6 [bp] 7 [sp]
;; live  gen 	 17 [flags]
;; live  kill	
(note 103 69 70 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn:TI 70 103 71 18 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 4 si [orig:98 D.83085 ] [98])
            (reg:SI 6 bp [orig:96 D.83085 ] [96]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1456 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 6 bp [orig:96 D.83085 ] [96])
        (expr_list:REG_DEAD (reg:SI 4 si [orig:98 D.83085 ] [98])
            (nil))))
(jump_insn:TI 71 70 106 18 (set (pc)
        (if_then_else (geu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 78)
            (pc))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1456 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 78)
;;  succ:       12 [50.0%]  (CAN_FALLTHRU)
;;              19 [50.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 3 [bx] 7 [sp]
;; live  out 	 3 [bx] 7 [sp]

;; basic block 19, loop depth 0, count 0, freq 333, maybe hot
;;  prev block 18, next block 20, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       18 [50.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              17 [50.0%]  (CAN_FALLTHRU)
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags]
;; live  in  	 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;; live  kill	 17 [flags]
(code_label 106 71 73 19 80 "" [1 uses])
(note 73 106 75 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn:TI 75 73 210 19 (set (reg:SI 1 dx [orig:101 D.81357+4 ] [101])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 24 [0x18])) [45 %sfp+-8 S4 A32])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1457 90 {*movsi_internal}
     (nil))
(note 210 75 191 19 NOTE_INSN_EPILOGUE_BEG)
(insn/f 191 210 167 19 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 44 [0x2c])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0  A8]))
        ]) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1459 943 {pro_epilogue_adjust_stack_si_add}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 44 [0x2c])))
            (nil))))
(insn 167 191 192 19 (parallel [
            (set (reg:SI 0 ax [orig:100 D.81357 ] [100])
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1457 82 {*movsi_xor}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn/f:TI 192 167 189 19 (set (reg:SI 3 bx)
        (mem:SI (post_inc:SI (reg/f:SI 7 sp)) [0  S4 A8])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1459 74 {*popsi1}
     (expr_list:REG_CFA_RESTORE (reg:SI 3 bx)
        (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 4 [0x4])))
            (nil))))
(insn 189 192 193 19 (use (reg/i:DI 0 ax)) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1459 -1
     (nil))
(insn/f:TI 193 189 194 19 (set (reg:SI 4 si)
        (mem:SI (post_inc:SI (reg/f:SI 7 sp)) [0  S4 A8])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1459 74 {*popsi1}
     (expr_list:REG_CFA_RESTORE (reg:SI 4 si)
        (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 4 [0x4])))
            (nil))))
(insn/f:TI 194 193 195 19 (set (reg:SI 5 di)
        (mem:SI (post_inc:SI (reg/f:SI 7 sp)) [0  S4 A8])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1459 74 {*popsi1}
     (expr_list:REG_CFA_RESTORE (reg:SI 5 di)
        (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 4 [0x4])))
            (nil))))
(insn/f:TI 195 194 196 19 (set (reg:SI 6 bp)
        (mem:SI (post_inc:SI (reg/f:SI 7 sp)) [0  S4 A8])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1459 74 {*popsi1}
     (expr_list:REG_CFA_RESTORE (reg:SI 6 bp)
        (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 4 [0x4])))
            (nil))))
(jump_insn:TI 196 195 199 19 (parallel [
            (simple_return)
            (use (const_int 4 [0x4]))
        ]) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1459 660 {simple_return_pop_internal}
     (nil)
 -> simple_return)
;;  succ:       EXIT [100.0%] 
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]

(barrier 199 196 206)
;; basic block 20, loop depth 0, count 0, freq 46, maybe hot
;;  prev block 19, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       15 [10.1%]  (CAN_FALLTHRU)
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 7 [sp]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 17 [flags]
;; live  in  	 3 [bx] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx]
;; live  kill	 17 [flags]
(code_label 206 199 52 20 87 "" [1 uses])
(note 52 206 168 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn:TI 168 52 54 20 (parallel [
            (set (reg:SI 0 ax [orig:100 D.81357 ] [100])
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1452 82 {*movsi_xor}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 54 168 207 20 (set (reg:SI 1 dx [orig:101 D.81357+4 ] [101])
        (reg/f:SI 3 bx [orig:86 __j ] [86])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1452 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 3 bx [orig:86 __j ] [86])
        (nil)))
(jump_insn 207 54 208 20 (set (pc)
        (label_ref 82)) 636 {jump}
     (nil)
 -> 82)
;;  succ:       13 [100.0%]  (CAN_FALLTHRU)
;; lr  out 	 0 [ax] 1 [dx] 7 [sp]
;; live  out 	 0 [ax] 1 [dx] 7 [sp]

(barrier 208 207 140)
(note 140 208 0 NOTE_INSN_DELETED)

;; Function std::pair<std::_Rb_tree_node_base*, std::_Rb_tree_node_base*> std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_get_insert_hint_unique_pos(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::const_iterator, const key_type&) [with _Key = long long unsigned int; _Val = std::pair<const long long unsigned int, int>; _KeyOfValue = std::_Select1st<std::pair<const long long unsigned int, int> >; _Compare = std::less<long long unsigned int>; _Alloc = std::allocator<std::pair<const long long unsigned int, int> >; std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::const_iterator = std::_Rb_tree_const_iterator<std::pair<const long long unsigned int, int> >; std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::key_type = long long unsigned int] (_ZNSt8_Rb_treeIySt4pairIKyiESt10_Select1stIS2_ESt4lessIyESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERS1_, funcdef_no=5939, decl_uid=70248, symbol_order=3443)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 28 n_edges 45 count 28 (    1)


std::pair<std::_Rb_tree_node_base*, std::_Rb_tree_node_base*> std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_get_insert_hint_unique_pos(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::const_iterator, const key_type&) [with _Key = long long unsigned int; _Val = std::pair<const long long unsigned int, int>; _KeyOfValue = std::_Select1st<std::pair<const long long unsigned int, int> >; _Compare = std::less<long long unsigned int>; _Alloc = std::allocator<std::pair<const long long unsigned int, int> >; std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::const_iterator = std::_Rb_tree_const_iterator<std::pair<const long long unsigned int, int> >; std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::key_type = long long unsigned int]

Dataflow summary:
def_info->table_size = 272, use_info->table_size = 0
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 29 [mm0] 30 [mm1] 31 [mm2]
;;  exit block uses 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 3[bx] 4[si] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={17d,21u} r1={13d,11u} r2={7d,7u} r3={8d,20u} r4={6d,5u} r5={9d,9u} r6={6d,6u} r7={28d,75u} r8={3d} r9={3d} r10={3d} r11={3d} r12={3d} r13={3d} r14={3d} r15={3d} r16={1e} r17={27d,22u} r18={3d} r19={3d} r21={4d} r22={4d} r23={4d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={4d} r30={4d} r31={4d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={3d} r38={3d} r39={3d} r40={3d} r41={3d} r42={3d} r43={3d} r44={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r76={3d} 
;;    total ref usage 502{325d,176u,1e} in 110{107 regular + 3 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(4){ }d-1(5){ }d-1(6){ }d-1(7){ }d-1(21){ }d-1(22){ }d-1(23){ }d-1(29){ }d-1(30){ }d-1(31){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 29 [mm0] 30 [mm1] 31 [mm2]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 29 [mm0] 30 [mm1] 31 [mm2]
;; live  kill	
;; lr  out 	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;; live  out 	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]

( 0 )->[2]->( 20 3 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;; lr  use 	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 3 [bx] 4 [si] 7 [sp] 17 [flags]
;; live  in  	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;; live  gen 	 0 [ax] 3 [bx] 4 [si] 7 [sp] 17 [flags]
;; live  kill	 17 [flags]
;; lr  out 	 2 [cx] 3 [bx] 4 [si] 7 [sp]
;; live  out 	 2 [cx] 3 [bx] 4 [si] 7 [sp]

( 2 )->[3]->( 9 4 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 4 [si] 7 [sp]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 5 [di] 6 [bp] 17 [flags]
;; live  in  	 3 [bx] 4 [si] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 5 [di] 6 [bp] 17 [flags]
;; live  kill	
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags]

( 3 )->[4]->( 13 5 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags]
;; lr  use 	 7 [sp] 17 [flags]
;; lr  def 	
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags]
;; live  gen 	
;; live  kill	
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]

( 4 )->[5]->( 6 13 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;; lr  use 	 1 [dx] 5 [di] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]

( 5 )->[6]->( 9 7 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;; live  out 	 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]

( 6 )->[7]->( 8 9 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;; lr  use 	 1 [dx] 5 [di] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;; live  out 	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]

( 7 )->[8]->( 1 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 7 [sp]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags]
;; live  in  	 3 [bx] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;; live  out 	 0 [ax] 1 [dx] 7 [sp]

( 7 6 3 )->[9]->( 22 10 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;; lr  use 	 3 [bx] 4 [si] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;; live  out 	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]

( 9 )->[10]->( 15 11 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;; live  in  	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 17 [flags]
;; live  kill	
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 7 [sp] 17 [flags]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 7 [sp] 17 [flags]

( 10 )->[11]->( 12 23 )
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 7 [sp] 17 [flags]
;; lr  use 	 7 [sp] 17 [flags]
;; lr  def 	
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 7 [sp] 17 [flags]
;; live  gen 	
;; live  kill	
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 7 [sp]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 7 [sp]

( 11 24 )->[12]->( 1 )
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 3 [bx] 7 [sp]
;; lr  use 	 1 [dx] 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags]
;; live  in  	 1 [dx] 3 [bx] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 17 [flags]
;; live  kill	
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;; live  out 	 0 [ax] 1 [dx] 7 [sp]

( 5 4 )->[13]->( 14 16 )
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;; lr  use 	 3 [bx] 4 [si] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 17 [flags]
;; live  in  	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 17 [flags]
;; live  kill	
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]

( 13 )->[14]->( 15 17 )
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;; live  in  	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 17 [flags]
;; live  kill	
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 7 [sp] 17 [flags]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 7 [sp] 17 [flags]

( 25 20 14 18 10 23 27 )->[15]->( 16 )
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(7){ }}
;; lr  in  	 4 [si] 7 [sp]
;; lr  use 	 4 [si] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;; live  in  	 4 [si] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 1 [dx] 7 [sp]
;; live  out 	 0 [ax] 1 [dx] 7 [sp]

( 13 15 22 )->[16]->( 1 )
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 7 [sp]
;; lr  use 	 0 [ax] 1 [dx] 7 [sp]
;; lr  def 	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 7 [sp]
;; live  gen 	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]

( 14 )->[17]->( 19 18 )
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 7 [sp] 17 [flags]
;; lr  use 	 7 [sp] 17 [flags]
;; lr  def 	
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 7 [sp] 17 [flags]
;; live  gen 	
;; live  kill	
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 7 [sp]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 7 [sp]

( 17 )->[18]->( 15 19 )
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 7 [sp]
;; lr  use 	 0 [ax] 5 [di] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 7 [sp]
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 1 [dx] 3 [bx] 4 [si] 7 [sp]
;; live  out 	 1 [dx] 3 [bx] 4 [si] 7 [sp]

( 18 17 )->[19]->( 1 )
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 3 [bx] 7 [sp]
;; lr  use 	 1 [dx] 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags]
;; live  in  	 1 [dx] 3 [bx] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 17 [flags]
;; live  kill	
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;; live  out 	 0 [ax] 1 [dx] 7 [sp]

( 2 )->[20]->( 21 15 )
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(7){ }}
;; lr  in  	 2 [cx] 4 [si] 7 [sp]
;; lr  use 	 2 [cx] 7 [sp]
;; lr  def 	 3 [bx] 17 [flags]
;; live  in  	 2 [cx] 4 [si] 7 [sp]
;; live  gen 	 3 [bx] 17 [flags]
;; live  kill	
;; lr  out 	 2 [cx] 4 [si] 7 [sp]
;; live  out 	 2 [cx] 4 [si] 7 [sp]

( 20 )->[21]->( 22 25 )
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(7){ }}
;; lr  in  	 2 [cx] 4 [si] 7 [sp]
;; lr  use 	 2 [cx] 7 [sp]
;; lr  def 	 0 [ax] 3 [bx] 5 [di] 17 [flags]
;; live  in  	 2 [cx] 4 [si] 7 [sp]
;; live  gen 	 0 [ax] 3 [bx] 5 [di] 17 [flags]
;; live  kill	
;; lr  out 	 0 [ax] 3 [bx] 4 [si] 7 [sp] 17 [flags]
;; live  out 	 0 [ax] 3 [bx] 4 [si] 7 [sp] 17 [flags]

( 21 26 9 )->[22]->( 16 )
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 7 [sp]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 17 [flags]
;; live  in  	 3 [bx] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 1 [dx] 7 [sp]
;; live  out 	 0 [ax] 1 [dx] 7 [sp]

( 11 )->[23]->( 15 24 )
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 7 [sp]
;; lr  use 	 0 [ax] 5 [di] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 7 [sp]
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 1 [dx] 3 [bx] 4 [si] 7 [sp]
;; live  out 	 1 [dx] 3 [bx] 4 [si] 7 [sp]

( 23 )->[24]->( 12 )
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 3 [bx] 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	
;; live  in  	
;; live  gen 	
;; live  kill	
;; lr  out 	 1 [dx] 3 [bx] 7 [sp]
;; live  out 	

( 21 )->[25]->( 15 26 )
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 4 [si] 7 [sp] 17 [flags]
;; lr  use 	 7 [sp] 17 [flags]
;; lr  def 	
;; live  in  	 0 [ax] 3 [bx] 4 [si] 7 [sp] 17 [flags]
;; live  gen 	
;; live  kill	
;; lr  out 	 0 [ax] 3 [bx] 4 [si] 7 [sp]
;; live  out 	 0 [ax] 3 [bx] 4 [si] 7 [sp]

( 25 )->[26]->( 22 27 )
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 4 [si] 7 [sp]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 5 [di] 17 [flags]
;; live  in  	 0 [ax] 3 [bx] 4 [si] 7 [sp]
;; live  gen 	 5 [di] 17 [flags]
;; live  kill	
;; lr  out 	 3 [bx] 4 [si] 7 [sp]
;; live  out 	 3 [bx] 4 [si] 7 [sp]

( 26 )->[27]->( 15 )
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u-1(7){ }}
;; lr  in  	 4 [si] 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	
;; live  in  	
;; live  gen 	
;; live  kill	
;; lr  out 	 4 [si] 7 [sp]
;; live  out 	

( 16 8 12 19 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ }u-1(1){ }u-1(3){ }u-1(4){ }u-1(5){ }u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;; lr  use 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;; lr  def 	
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 11 to worklist
  Adding insn 218 to worklist
  Adding insn 217 to worklist
  Adding insn 216 to worklist
  Adding insn 215 to worklist
  Adding insn 33 to worklist
  Adding insn 35 to worklist
  Adding insn 37 to worklist
  Adding insn 88 to worklist
  Adding insn 90 to worklist
  Adding insn 261 to worklist
  Adding insn 254 to worklist
  Adding insn 95 to worklist
  Adding insn 107 to worklist
  Adding insn 104 to worklist
  Adding insn 103 to worklist
  Adding insn 109 to worklist
  Adding insn 273 to worklist
  Adding insn 266 to worklist
  Adding insn 42 to worklist
  Adding insn 54 to worklist
  Adding insn 51 to worklist
  Adding insn 50 to worklist
  Adding insn 78 to worklist
  Adding insn 213 to worklist
  Adding insn 229 to worklist
  Adding insn 144 to worklist
  Adding insn 56 to worklist
  Adding insn 58 to worklist
  Adding insn 285 to worklist
  Adding insn 278 to worklist
  Adding insn 14 to worklist
  Adding insn 19 to worklist
  Adding insn 293 to worklist
  Adding insn 111 to worklist
  Adding insn 296 to worklist
  Adding insn 21 to worklist
  Adding insn 23 to worklist
  Adding insn 299 to worklist
Finished finding needed instructions:
processing block 16 lr out =  0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
  Adding insn 228 to worklist
  Adding insn 227 to worklist
  Adding insn 226 to worklist
  Adding insn 225 to worklist
  Adding insn 224 to worklist
processing block 22 lr out =  0 [ax] 1 [dx] 7 [sp]
  Adding insn 139 to worklist
  Adding insn 234 to worklist
processing block 15 lr out =  0 [ax] 1 [dx] 7 [sp]
  Adding insn 79 to worklist
  Adding insn 77 to worklist
  Adding insn 76 to worklist
processing block 27 lr out =  4 [si] 7 [sp]
processing block 26 lr out =  3 [bx] 4 [si] 7 [sp]
  Adding insn 22 to worklist
  Adding insn 208 to worklist
processing block 25 lr out =  0 [ax] 3 [bx] 4 [si] 7 [sp]
processing block 21 lr out =  0 [ax] 3 [bx] 4 [si] 7 [sp] 17 [flags]
  Adding insn 18 to worklist
  Adding insn 207 to worklist
  Adding insn 206 to worklist
  Adding insn 165 to worklist
  Adding insn 16 to worklist
processing block 20 lr out =  2 [cx] 4 [si] 7 [sp]
  Adding insn 241 to worklist
  Adding insn 240 to worklist
processing block 12 lr out =  0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
  Adding insn 272 to worklist
  Adding insn 271 to worklist
  Adding insn 270 to worklist
  Adding insn 269 to worklist
  Adding insn 268 to worklist
  Adding insn 187 to worklist
  Adding insn 185 to worklist
  Adding insn 203 to worklist
  Adding insn 237 to worklist
  Adding insn 236 to worklist
processing block 24 lr out =  1 [dx] 3 [bx] 7 [sp]
processing block 23 lr out =  1 [dx] 3 [bx] 4 [si] 7 [sp]
  Adding insn 110 to worklist
processing block 11 lr out =  0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 7 [sp]
processing block 10 lr out =  0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 7 [sp] 17 [flags]
  Adding insn 106 to worklist
  Adding insn 105 to worklist
processing block 9 lr out =  3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
  Adding insn 94 to worklist
processing block 19 lr out =  0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
  Adding insn 284 to worklist
  Adding insn 283 to worklist
  Adding insn 282 to worklist
  Adding insn 281 to worklist
  Adding insn 280 to worklist
  Adding insn 182 to worklist
  Adding insn 180 to worklist
  Adding insn 211 to worklist
  Adding insn 204 to worklist
  Adding insn 239 to worklist
  Adding insn 238 to worklist
processing block 18 lr out =  1 [dx] 3 [bx] 4 [si] 7 [sp]
  Adding insn 57 to worklist
processing block 17 lr out =  0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 7 [sp]
processing block 14 lr out =  0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 7 [sp] 17 [flags]
  Adding insn 53 to worklist
  Adding insn 52 to worklist
processing block 13 lr out =  0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
  Adding insn 41 to worklist
  Adding insn 45 to worklist
  Adding insn 44 to worklist
processing block 8 lr out =  0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
  Adding insn 260 to worklist
  Adding insn 259 to worklist
  Adding insn 258 to worklist
  Adding insn 257 to worklist
  Adding insn 256 to worklist
  Adding insn 235 to worklist
  Adding insn 129 to worklist
processing block 7 lr out =  3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
  Adding insn 89 to worklist
processing block 6 lr out =  1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
  Adding insn 87 to worklist
processing block 5 lr out =  0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
  Adding insn 36 to worklist
processing block 4 lr out =  0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
processing block 3 lr out =  0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags]
  Adding insn 32 to worklist
  Adding insn 170 to worklist
  Adding insn 169 to worklist
  Adding insn 168 to worklist
  Adding insn 167 to worklist
  Adding insn 209 to worklist
processing block 2 lr out =  2 [cx] 3 [bx] 4 [si] 7 [sp]
  Adding insn 10 to worklist
  Adding insn 214 to worklist
  Adding insn 3 to worklist
  Adding insn 2 to worklist
  Adding insn 219 to worklist
df_worklist_dataflow_doublequeue:n_basic_blocks 28 n_edges 45 count 28 (    1)
;;   ======================================================
;;   -- basic block 2 from 215 to 11 -- after reload
;;   ======================================================

;;	  0--> b  0: i 215[--sp]=bp                               :athlon-direct,athlon-agu,athlon-store
;;	  0--> b  0: i 216[--sp]=di                               :athlon-direct,athlon-agu,athlon-store
;;	  0--> b  0: i 214ax=cx+0x4                               :athlon-direct,athlon-agu,nothing
;;	  1--> b  0: i 217[--sp]=si                               :athlon-direct,athlon-agu,athlon-store
;;	  1--> b  0: i 218[--sp]=bx                               :athlon-direct,athlon-agu,athlon-store
;;	  1--> b  0: i   2si=cx                                   :athlon-direct,athlon-ieu
;;	  3--> b  0: i 219{sp=sp-0x1c;clobber flags;clobber [scratch];}:athlon-direct,athlon-ieu
;;	  4--> b  0: i   3bx=[sp+0x30]                            :athlon-direct,athlon-load
;;	  7--> b  0: i  10flags=cmp(bx,ax)                        :athlon-direct,athlon-ieu
;;	  8--> b  0: i  11pc={(flags==0)?L289:pc}                 :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 8
;;   new head = 215
;;   new tail = 11

;;   ======================================================
;;   -- basic block 3 from 209 to 33 -- after reload
;;   ======================================================

;;	  0--> b  0: i 209ax=[sp+0x34]                            :athlon-direct,athlon-load
;;	  0--> b  0: i 169dx=[bx+0x10]                            :athlon-direct,athlon-load
;;	  3--> b  0: i 168bp=[ax+0x4]                             :athlon-direct,athlon-load
;;	  3--> b  0: i 167di=[ax]                                 :athlon-direct,athlon-load
;;	  4--> b  0: i 170ax=[bx+0x14]                            :athlon-direct,athlon-load
;;	  7--> b  0: i  32flags=cmp(bp,ax)                        :athlon-direct,athlon-ieu
;;	  8--> b  0: i  33pc={(gtu(flags,0))?L163:pc}             :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 8
;;   new head = 209
;;   new tail = 33

;;   ======================================================
;;   -- basic block 4 from 35 to 35 -- after reload
;;   ======================================================

;;	  0--> b  0: i  35pc={(ltu(flags,0))?L161:pc}             :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 35
;;   new tail = 35

;;   ======================================================
;;   -- basic block 5 from 36 to 37 -- after reload
;;   ======================================================

;;	  0--> b  0: i  36flags=cmp(di,dx)                        :athlon-direct,athlon-ieu
;;	  1--> b  0: i  37pc={(ltu(flags,0))?L161:pc}             :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 36
;;   new tail = 37

;;   ======================================================
;;   -- basic block 6 from 87 to 88 -- after reload
;;   ======================================================

;;	  0--> b  0: i  87flags=cmp(bp,ax)                        :athlon-direct,athlon-ieu
;;	  1--> b  0: i  88pc={(gtu(flags,0))?L163:pc}             :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 87
;;   new tail = 88

;;   ======================================================
;;   -- basic block 7 from 89 to 90 -- after reload
;;   ======================================================

;;	  0--> b  0: i  89flags=cmp(di,dx)                        :athlon-direct,athlon-ieu
;;	  1--> b  0: i  90pc={(gtu(flags,0))?L163:pc}             :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 89
;;   new tail = 90

;;   ======================================================
;;   -- basic block 8 from 129 to 261 -- after reload
;;   ======================================================

;;	  0--> b  0: i 256{sp=sp+0x1c;clobber flags;clobber [scratch];}:athlon-direct,athlon-ieu
;;	  0--> b  0: i 129ax=bx                                   :athlon-direct,athlon-ieu
;;	  0--> b  0: i 235{dx=0;clobber flags;}                   :athlon-direct,athlon-ieu
;;	  1--> b  0: i 257bx=[sp++]                               :athlon-vector,athlon-load,athlon-ieu
;;	  1--> b  0: i 254use ax                                  :nothing
;;	  2--> b  0: i 258si=[sp++]                               :athlon-vector,athlon-load,athlon-ieu
;;	  3--> b  0: i 259di=[sp++]                               :athlon-vector,athlon-load,athlon-ieu
;;	  4--> b  0: i 260bp=[sp++]                               :athlon-vector,athlon-load,athlon-ieu
;;	  5--> b  0: i 261{simple_return;use 0x8;}                :athlon-vector,athlon-ieu,athlon-ieu
;;	Ready list (final):  
;;   total time = 5
;;   new head = 129
;;   new tail = 261

;;   ======================================================
;;   -- basic block 9 from 94 to 95 -- after reload
;;   ======================================================

;;	  0--> b  0: i  94flags=cmp([si+0x10],bx)                 :athlon-direct,athlon-load,athlon-ieu
;;	  4--> b  0: i  95pc={(flags==0)?L136:pc}                 :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 4
;;   new head = 94
;;   new tail = 95

;;   ======================================================
;;   -- basic block 10 from 103 to 107 -- after reload
;;   ======================================================

;;	  0--> b  0: i 103[sp]=bx                                 :athlon-direct,athlon-agu,athlon-store
;;	  1--> b  0: i 104ax=call [`_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base']:athlon-vector,athlon-ieu
;;	  2--> b  0: i 106flags=cmp(bp,[ax+0x14])                 :athlon-direct,athlon-load,athlon-ieu
;;	  2--> b  0: i 105dx=ax                                   :athlon-direct,athlon-ieu
;;	  6--> b  0: i 107pc={(gtu(flags,0))?L74:pc}              :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 6
;;   new head = 103
;;   new tail = 107

;;   ======================================================
;;   -- basic block 11 from 109 to 109 -- after reload
;;   ======================================================

;;	  0--> b  0: i 109pc={(geu(flags,0))?L290:pc}             :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 109
;;   new tail = 109

;;   ======================================================
;;   -- basic block 12 from 236 to 273 -- after reload
;;   ======================================================

;;	  0--> b  0: i 236ax=[bx+0xc]                             :athlon-direct,athlon-load
;;	  3--> b  0: i 237flags=cmp(ax,0)                         :athlon-direct,athlon-ieu
;;	  3--> b  0: i 203ax=0                                    :athlon-direct,athlon-ieu
;;	  4--> b  0: i 185ax={(flags!=0)?dx:ax}                   :athlon-direct,athlon-ieu
;;	  4--> b  0: i 187dx={(flags!=0)?dx:bx}                   :athlon-direct,athlon-ieu
;;	  4--> b  0: i 268{sp=sp+0x1c;clobber flags;clobber [scratch];}:athlon-direct,athlon-ieu
;;	  5--> b  0: i 269bx=[sp++]                               :athlon-vector,athlon-load,athlon-ieu
;;	  5--> b  0: i 266use ax                                  :nothing
;;	  6--> b  0: i 270si=[sp++]                               :athlon-vector,athlon-load,athlon-ieu
;;	  7--> b  0: i 271di=[sp++]                               :athlon-vector,athlon-load,athlon-ieu
;;	  8--> b  0: i 272bp=[sp++]                               :athlon-vector,athlon-load,athlon-ieu
;;	  9--> b  0: i 273{simple_return;use 0x8;}                :athlon-vector,athlon-ieu,athlon-ieu
;;	Ready list (final):  
;;   total time = 9
;;   new head = 236
;;   new tail = 273

;;   ======================================================
;;   -- basic block 13 from 44 to 42 -- after reload
;;   ======================================================

;;	  0--> b  0: i  41flags=cmp([si+0xc],bx)                  :athlon-direct,athlon-load,athlon-ieu
;;	  0--> b  0: i  44ax=bx                                   :athlon-direct,athlon-ieu
;;	  0--> b  0: i  45dx=bx                                   :athlon-direct,athlon-ieu
;;	  4--> b  0: i  42pc={(flags==0)?L177:pc}                 :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 4
;;   new head = 44
;;   new tail = 42

;;   ======================================================
;;   -- basic block 14 from 50 to 54 -- after reload
;;   ======================================================

;;	  0--> b  0: i  50[sp]=bx                                 :athlon-direct,athlon-agu,athlon-store
;;	  1--> b  0: i  51ax=call [`_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base']:athlon-vector,athlon-ieu
;;	  2--> b  0: i  53flags=cmp(bp,[ax+0x14])                 :athlon-direct,athlon-load,athlon-ieu
;;	  2--> b  0: i  52dx=ax                                   :athlon-direct,athlon-ieu
;;	  6--> b  0: i  54pc={(geu(flags,0))?L291:pc}             :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 6
;;   new head = 50
;;   new tail = 54

;;   ======================================================
;;   -- basic block 15 from 76 to 79 -- after reload
;;   ======================================================

;;	  0--> b  0: i  76ax=[sp+0x34]                            :athlon-direct,athlon-load
;;	  0--> b  0: i  77cx=si                                   :athlon-direct,athlon-ieu
;;	  3--> b  0: i 213[sp]=ax                                 :athlon-direct,athlon-agu,athlon-store
;;	  4--> b  0: i  78{ax=call [`_ZNSt8_Rb_treeIySt4pairIKyiESt10_Select1stIS2_ESt4lessIyESaIS2_EE24_M_get_insert_unique_posERS1_'];sp=sp+0x4;}:athlon-vector,athlon-ieu
;;	  5--> b  0: i  79{sp=sp-0x4;clobber flags;}              :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 5
;;   new head = 76
;;   new tail = 79

;;   ======================================================
;;   -- basic block 16 from 144 to 229 -- after reload
;;   ======================================================

;;	  0--> b  0: i 224{sp=sp+0x1c;clobber flags;clobber [scratch];}:athlon-direct,athlon-ieu
;;	  0--> b  0: i 144use ax                                  :nothing
;;	  1--> b  0: i 225bx=[sp++]                               :athlon-vector,athlon-load,athlon-ieu
;;	  2--> b  0: i 226si=[sp++]                               :athlon-vector,athlon-load,athlon-ieu
;;	  3--> b  0: i 227di=[sp++]                               :athlon-vector,athlon-load,athlon-ieu
;;	  4--> b  0: i 228bp=[sp++]                               :athlon-vector,athlon-load,athlon-ieu
;;	  5--> b  0: i 229{simple_return;use 0x8;}                :athlon-vector,athlon-ieu,athlon-ieu
;;	Ready list (final):  
;;   total time = 5
;;   new head = 144
;;   new tail = 229

;;   ======================================================
;;   -- basic block 17 from 56 to 56 -- after reload
;;   ======================================================

;;	  0--> b  0: i  56pc={(gtu(flags,0))?L162:pc}             :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 56
;;   new tail = 56

;;   ======================================================
;;   -- basic block 18 from 57 to 58 -- after reload
;;   ======================================================

;;	  0--> b  0: i  57flags=cmp(di,[ax+0x10])                 :athlon-direct,athlon-load,athlon-ieu
;;	  4--> b  0: i  58pc={(leu(flags,0))?L74:pc}              :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 4
;;   new head = 57
;;   new tail = 58

;;   ======================================================
;;   -- basic block 19 from 238 to 285 -- after reload
;;   ======================================================

;;	  0--> b  0: i 238cx=[dx+0xc]                             :athlon-direct,athlon-load
;;	  3--> b  0: i 239flags=cmp(cx,0)                         :athlon-direct,athlon-ieu
;;	  3--> b  0: i 204cx=0                                    :athlon-direct,athlon-ieu
;;	  4--> b  0: i 211ax=cx                                   :athlon-direct,athlon-ieu
;;	  4--> b  0: i 182dx={(flags==0)?dx:bx}                   :athlon-direct,athlon-ieu
;;	  5--> b  0: i 180ax={(flags!=0)?bx:ax}                   :athlon-direct,athlon-ieu
;;	  5--> b  0: i 280{sp=sp+0x1c;clobber flags;clobber [scratch];}:athlon-direct,athlon-ieu
;;	  5--> b  0: i 278use ax                                  :nothing
;;	  6--> b  0: i 281bx=[sp++]                               :athlon-vector,athlon-load,athlon-ieu
;;	  7--> b  0: i 282si=[sp++]                               :athlon-vector,athlon-load,athlon-ieu
;;	  8--> b  0: i 283di=[sp++]                               :athlon-vector,athlon-load,athlon-ieu
;;	  9--> b  0: i 284bp=[sp++]                               :athlon-vector,athlon-load,athlon-ieu
;;	 10--> b  0: i 285{simple_return;use 0x8;}                :athlon-vector,athlon-ieu,athlon-ieu
;;	Ready list (final):  
;;   total time = 10
;;   new head = 238
;;   new tail = 285

;;   ======================================================
;;   -- basic block 20 from 240 to 14 -- after reload
;;   ======================================================

;;	  0--> b  0: i 240bx=[cx+0x14]                            :athlon-direct,athlon-load
;;	  3--> b  0: i 241flags=cmp(bx,0)                         :athlon-direct,athlon-ieu
;;	  4--> b  0: i  14pc={(flags==0)?L74:pc}                  :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 4
;;   new head = 240
;;   new tail = 14

;;   ======================================================
;;   -- basic block 21 from 16 to 19 -- after reload
;;   ======================================================

;;	  0--> b  0: i  16bx=[cx+0x10]                            :athlon-direct,athlon-load
;;	  0--> b  0: i 206di=[sp+0x34]                            :athlon-direct,athlon-load
;;	  3--> b  0: i 207di=[di+0x4]                             :athlon-direct,athlon-load
;;	  3--> b  0: i  18flags=cmp([bx+0x14],di)                 :athlon-direct,athlon-load,athlon-ieu
;;	  4--> b  0: i 165ax=[bx+0x10]                            :athlon-direct,athlon-load
;;	  7--> b  0: i  19pc={(geu(flags,0))?L292:pc}             :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 7
;;   new head = 16
;;   new tail = 19

;;   ======================================================
;;   -- basic block 22 from 234 to 293 -- after reload
;;   ======================================================

;;	  0--> b  0: i 234{ax=0;clobber flags;}                   :athlon-direct,athlon-ieu
;;	  0--> b  0: i 139dx=bx                                   :athlon-direct,athlon-ieu
;;	  0--> b  0: i 293pc=L177                                 :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 234
;;   new tail = 293

;;   ======================================================
;;   -- basic block 23 from 110 to 111 -- after reload
;;   ======================================================

;;	  0--> b  0: i 110flags=cmp(di,[ax+0x10])                 :athlon-direct,athlon-load,athlon-ieu
;;	  4--> b  0: i 111pc={(geu(flags,0))?L74:pc}              :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 4
;;   new head = 110
;;   new tail = 111

;;   ======================================================
;;   -- basic block 24 from 296 to 296 -- after reload
;;   ======================================================

;;	  0--> b  0: i 296pc=L164                                 :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 296
;;   new tail = 296

;;   ======================================================
;;   -- basic block 25 from 21 to 21 -- after reload
;;   ======================================================

;;	  0--> b  0: i  21pc={(gtu(flags,0))?L74:pc}              :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 21
;;   new tail = 21

;;   ======================================================
;;   -- basic block 26 from 208 to 23 -- after reload
;;   ======================================================

;;	  0--> b  0: i 208di=[sp+0x34]                            :athlon-direct,athlon-load
;;	  3--> b  0: i  22flags=cmp(ax,[di])                      :athlon-direct,athlon-load,athlon-ieu
;;	  7--> b  0: i  23pc={(ltu(flags,0))?L136:pc}             :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 7
;;   new head = 208
;;   new tail = 23

;;   ======================================================
;;   -- basic block 27 from 299 to 299 -- after reload
;;   ======================================================

;;	  0--> b  0: i 299pc=L74                                  :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 299
;;   new tail = 299



starting the processing of deferred insns
ending the processing of deferred insns


std::pair<std::_Rb_tree_node_base*, std::_Rb_tree_node_base*> std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_get_insert_hint_unique_pos(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::const_iterator, const key_type&) [with _Key = long long unsigned int; _Val = std::pair<const long long unsigned int, int>; _KeyOfValue = std::_Select1st<std::pair<const long long unsigned int, int> >; _Compare = std::less<long long unsigned int>; _Alloc = std::allocator<std::pair<const long long unsigned int, int> >; std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::const_iterator = std::_Rb_tree_const_iterator<std::pair<const long long unsigned int, int> >; std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::key_type = long long unsigned int]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 29 [mm0] 30 [mm1] 31 [mm2]
;;  exit block uses 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 3[bx] 4[si] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={17d,21u} r1={13d,11u} r2={7d,7u} r3={8d,20u} r4={6d,5u} r5={9d,9u} r6={6d,6u} r7={28d,75u} r8={3d} r9={3d} r10={3d} r11={3d} r12={3d} r13={3d} r14={3d} r15={3d} r16={1e} r17={27d,22u} r18={3d} r19={3d} r21={4d} r22={4d} r23={4d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={4d} r30={4d} r31={4d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={3d} r38={3d} r39={3d} r40={3d} r41={3d} r42={3d} r43={3d} r44={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r76={3d} 
;;    total ref usage 502{325d,176u,1e} in 110{107 regular + 3 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 3, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;; lr  use 	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 3 [bx] 4 [si] 7 [sp] 17 [flags]
;; live  in  	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;; live  gen 	 0 [ax] 3 [bx] 4 [si] 7 [sp] 17 [flags]
;; live  kill	 17 [flags]
(note 6 1 4 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 4 6 5 2 NOTE_INSN_DELETED)
(note 5 4 215 2 NOTE_INSN_FUNCTION_BEG)
(insn/f:TI 215 5 216 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A8])
        (reg:SI 6 bp)) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1532 66 {*pushsi2}
     (expr_list:REG_DEAD (reg:SI 6 bp)
        (nil)))
(insn/f 216 215 214 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A8])
        (reg:SI 5 di)) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1532 66 {*pushsi2}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (nil)))
(insn 214 216 217 2 (set (reg/f:SI 0 ax [orig:104 D.83088 ] [104])
        (plus:SI (reg/f:SI 2 cx [orig:101 this ] [101])
            (const_int 4 [0x4]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:529 213 {*leasi}
     (nil))
(insn/f:TI 217 214 218 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A8])
        (reg:SI 4 si)) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1532 66 {*pushsi2}
     (expr_list:REG_DEAD (reg:SI 4 si)
        (nil)))
(insn/f 218 217 2 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A8])
        (reg:SI 3 bx)) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1532 66 {*pushsi2}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil)))
(insn 2 218 219 2 (set (reg/f:SI 4 si [orig:101 this ] [101])
        (reg:SI 2 cx [ this ])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1532 90 {*movsi_internal}
     (nil))
(insn/f:TI 219 2 220 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -28 [0xffffffffffffffe4])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0  A8]))
        ]) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1532 943 {pro_epilogue_adjust_stack_si_add}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -28 [0xffffffffffffffe4])))
            (nil))))
(note 220 219 3 2 NOTE_INSN_PROLOGUE_END)
(insn:TI 3 220 10 2 (set (reg/v:SI 3 bx [orig:102 __position ] [102])
        (mem/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 48 [0x30])) [36 __position+0 S4 A32])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1532 90 {*movsi_internal}
     (expr_list:REG_EQUIV (mem/c:SI (reg/f:SI 16 argp) [36 __position+0 S4 A32])
        (nil)))
(insn:TI 10 3 11 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 3 bx [orig:102 __position ] [102])
            (reg/f:SI 0 ax [orig:104 D.83088 ] [104]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1540 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg/f:SI 0 ax [orig:104 D.83088 ] [104])
        (nil)))
(jump_insn:TI 11 10 29 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 289)
            (pc))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1540 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 1500 (nil)))
 -> 289)
;;  succ:       20 [15.0%]  (CAN_FALLTHRU)
;;              3 [85.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 2 [cx] 3 [bx] 4 [si] 7 [sp]
;; live  out 	 2 [cx] 3 [bx] 4 [si] 7 [sp]

;; basic block 3, loop depth 0, count 0, freq 8500, maybe hot
;;  prev block 2, next block 4, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [85.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 4 [si] 7 [sp]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 5 [di] 6 [bp] 17 [flags]
;; live  in  	 3 [bx] 4 [si] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 5 [di] 6 [bp] 17 [flags]
;; live  kill	
(note 29 11 209 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn:TI 209 29 169 3 (set (reg:SI 0 ax [122])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 52 [0x34])) [6 __k+0 S4 A32])) 90 {*movsi_internal}
     (nil))
(insn 169 209 168 3 (set (reg:SI 1 dx [orig:109 D.83091 ] [109])
        (mem:SI (plus:SI (reg/v:SI 3 bx [orig:102 __position ] [102])
                (const_int 16 [0x10])) [34 MEM[(const long long unsigned int &)_33 + 16]+0 S4 A64])) 90 {*movsi_internal}
     (nil))
(insn:TI 168 169 167 3 (set (reg:SI 6 bp [orig:108 D.83091+4 ] [108])
        (mem:SI (plus:SI (reg:SI 0 ax [123])
                (const_int 4 [0x4])) [34 MEM[(const long long unsigned int &)__k_9(D)]+4 S4 A32])) 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [123])
        (nil)))
(insn 167 168 170 3 (set (reg:SI 5 di [orig:107 D.83091 ] [107])
        (mem:SI (reg:SI 0 ax [122]) [34 MEM[(const long long unsigned int &)__k_9(D)]+0 S4 A64])) 90 {*movsi_internal}
     (nil))
(insn:TI 170 167 32 3 (set (reg:SI 0 ax [orig:110 D.83091+4 ] [110])
        (mem:SI (plus:SI (reg/v:SI 3 bx [orig:102 __position ] [102])
                (const_int 20 [0x14])) [34 MEM[(const long long unsigned int &)_33 + 16]+4 S4 A32])) 90 {*movsi_internal}
     (nil))
(insn:TI 32 170 33 3 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 6 bp [orig:108 D.83091+4 ] [108])
            (reg:SI 0 ax [orig:110 D.83091+4 ] [110]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1548 7 {*cmpsi_1}
     (nil))
(jump_insn:TI 33 32 149 3 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 163)
            (pc))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1548 596 {*jcc_1}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 163)
;;  succ:       9 [50.0%]  (CAN_FALLTHRU)
;;              4 [50.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags]

;; basic block 4, loop depth 0, count 0, freq 4250, maybe hot
;;  prev block 3, next block 5, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       3 [50.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags]
;; lr  use 	 7 [sp] 17 [flags]
;; lr  def 	
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags]
;; live  gen 	
;; live  kill	
(note 149 33 35 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(jump_insn:TI 35 149 150 4 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 161)
            (pc))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1548 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 161)
;;  succ:       13 [50.0%]  (CAN_FALLTHRU)
;;              5 [50.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]

;; basic block 5, loop depth 0, count 0, freq 2125, maybe hot
;;  prev block 4, next block 6, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       4 [50.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;; lr  use 	 1 [dx] 5 [di] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;; live  gen 	 17 [flags]
;; live  kill	
(note 150 35 36 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn:TI 36 150 37 5 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 5 di [orig:107 D.83091 ] [107])
            (reg:SI 1 dx [orig:109 D.83091 ] [109]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1548 7 {*cmpsi_1}
     (nil))
(jump_insn:TI 37 36 84 5 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 161)
            (pc))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1548 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 161)
;;  succ:       6 [50.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              13 [50.0%]  (CAN_FALLTHRU)
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]

;; basic block 6, loop depth 0, count 0, freq 0
;; Invalid sum of incoming frequencies 1063, should be 0
;;  prev block 5, next block 7, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       5 [50.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;; live  gen 	 17 [flags]
;; live  kill	
(note 84 37 87 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn:TI 87 84 88 6 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 6 bp [orig:108 D.83091+4 ] [108])
            (reg:SI 0 ax [orig:110 D.83091+4 ] [110]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1564 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:110 D.83091+4 ] [110])
        (nil)))
(jump_insn:TI 88 87 156 6 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 163)
            (pc))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1564 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 0 (nil)))
 -> 163)
;;  succ:       9 (CAN_FALLTHRU)
;;              7 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;; live  out 	 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]

;; basic block 7, loop depth 0, count 0, freq 1063, maybe hot
;; Invalid sum of incoming frequencies 0, should be 1063
;;  prev block 6, next block 8, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       6 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;; lr  use 	 1 [dx] 5 [di] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;; live  gen 	 17 [flags]
;; live  kill	
(note 156 88 89 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn:TI 89 156 90 7 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 5 di [orig:107 D.83091 ] [107])
            (reg:SI 1 dx [orig:109 D.83091 ] [109]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1564 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 1 dx [orig:109 D.83091 ] [109])
        (nil)))
(jump_insn:TI 90 89 128 7 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 163)
            (pc))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1564 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 163)
;;  succ:       8 [50.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              9 [50.0%]  (CAN_FALLTHRU)
;; lr  out 	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;; live  out 	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]

;; basic block 8, loop depth 0, count 0, freq 2125, maybe hot
;; Invalid sum of incoming frequencies 532, should be 2125
;;  prev block 7, next block 9, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       7 [50.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 7 [sp]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags]
;; live  in  	 3 [bx] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;; live  kill	 17 [flags]
(note 128 90 301 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(note 301 128 256 8 NOTE_INSN_EPILOGUE_BEG)
(insn/f:TI 256 301 129 8 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 28 [0x1c])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0  A8]))
        ]) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1583 943 {pro_epilogue_adjust_stack_si_add}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 28 [0x1c])))
            (nil))))
(insn 129 256 235 8 (set (reg:SI 0 ax [orig:111 D.81243 ] [111])
        (reg/v:SI 3 bx [orig:102 __position ] [102])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1582 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 3 bx [orig:102 __position ] [102])
        (nil)))
(insn 235 129 257 8 (parallel [
            (set (reg:SI 1 dx [orig:112 D.81243+4 ] [112])
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1582 82 {*movsi_xor}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn/f:TI 257 235 254 8 (set (reg:SI 3 bx)
        (mem:SI (post_inc:SI (reg/f:SI 7 sp)) [0  S4 A8])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1583 74 {*popsi1}
     (expr_list:REG_CFA_RESTORE (reg:SI 3 bx)
        (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 4 [0x4])))
            (nil))))
(insn 254 257 258 8 (use (reg/i:DI 0 ax)) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1583 -1
     (nil))
(insn/f:TI 258 254 259 8 (set (reg:SI 4 si)
        (mem:SI (post_inc:SI (reg/f:SI 7 sp)) [0  S4 A8])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1583 74 {*popsi1}
     (expr_list:REG_CFA_RESTORE (reg:SI 4 si)
        (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 4 [0x4])))
            (nil))))
(insn/f:TI 259 258 260 8 (set (reg:SI 5 di)
        (mem:SI (post_inc:SI (reg/f:SI 7 sp)) [0  S4 A8])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1583 74 {*popsi1}
     (expr_list:REG_CFA_RESTORE (reg:SI 5 di)
        (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 4 [0x4])))
            (nil))))
(insn/f:TI 260 259 261 8 (set (reg:SI 6 bp)
        (mem:SI (post_inc:SI (reg/f:SI 7 sp)) [0  S4 A8])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1583 74 {*popsi1}
     (expr_list:REG_CFA_RESTORE (reg:SI 6 bp)
        (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 4 [0x4])))
            (nil))))
(jump_insn:TI 261 260 264 8 (parallel [
            (simple_return)
            (use (const_int 8 [0x8]))
        ]) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1583 660 {simple_return_pop_internal}
     (nil)
 -> simple_return)
;;  succ:       EXIT [100.0%] 
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]

(barrier 264 261 163)
;; basic block 9, loop depth 0, count 0, freq 2125, maybe hot
;; Invalid sum of incoming frequencies 4782, should be 2125
;;  prev block 8, next block 10, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       7 [50.0%]  (CAN_FALLTHRU)
;;              6 (CAN_FALLTHRU)
;;              3 [50.0%]  (CAN_FALLTHRU)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;; lr  use 	 3 [bx] 4 [si] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;; live  gen 	 17 [flags]
;; live  kill	
(code_label 163 264 92 9 106 "" [3 uses])
(note 92 163 93 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(note 93 92 94 9 NOTE_INSN_DELETED)
(insn:TI 94 93 95 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f:SI (plus:SI (reg/f:SI 4 si [orig:101 this ] [101])
                    (const_int 16 [0x10])) [6 MEM[(struct _Rb_tree_node_base * &)this_5(D) + 16]+0 S4 A32])
            (reg/v:SI 3 bx [orig:102 __position ] [102]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1568 7 {*cmpsi_1}
     (nil))
(jump_insn:TI 95 94 102 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 136)
            (pc))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1568 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 1014 (nil)))
 -> 136)
;;  succ:       22 [10.1%]  (CAN_FALLTHRU)
;;              10 [89.9%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;; live  out 	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]

;; basic block 10, loop depth 0, count 0, freq 1910, maybe hot
;;  prev block 9, next block 11, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       9 [89.9%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;; live  in  	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 17 [flags]
;; live  kill	
(note 102 95 103 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn:TI 103 102 104 10 (set (mem:SI (reg/f:SI 7 sp) [0  S4 A32])
        (reg/v:SI 3 bx [orig:102 __position ] [102])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:203 90 {*movsi_internal}
     (nil))
(call_insn/i:TI 104 103 106 10 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base") [flags 0x43]  <function_decl 06b62400 _Rb_tree_increment>) [0 _Rb_tree_increment S1 A8])
            (const_int 4 [0x4]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:203 648 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (mem/f:SI (reg/f:SI 7 sp) [0  S4 A32]))
        (nil)))
(insn:TI 106 104 105 10 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 6 bp [orig:108 D.83091+4 ] [108])
            (mem:SI (plus:SI (reg/f:SI 0 ax [orig:98 D.83090 ] [98])
                    (const_int 20 [0x14])) [34 MEM[(const long long unsigned int &)_36 + 16]+4 S4 A32]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1570 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 6 bp [orig:108 D.83091+4 ] [108])
        (nil)))
(insn 105 106 107 10 (set (reg/f:SI 1 dx [orig:98 D.83090 ] [98])
        (reg:SI 0 ax)) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:203 90 {*movsi_internal}
     (nil))
(jump_insn:TI 107 105 158 10 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 74)
            (pc))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1570 596 {*jcc_1}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 74)
;;  succ:       15 [50.0%]  (CAN_FALLTHRU)
;;              11 [50.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 7 [sp] 17 [flags]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 7 [sp] 17 [flags]

;; basic block 11, loop depth 0, count 0, freq 955, maybe hot
;;  prev block 10, next block 12, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       10 [50.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 7 [sp] 17 [flags]
;; lr  use 	 7 [sp] 17 [flags]
;; lr  def 	
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 7 [sp] 17 [flags]
;; live  gen 	
;; live  kill	
(note 158 107 109 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(jump_insn:TI 109 158 164 11 (set (pc)
        (if_then_else (geu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 290)
            (pc))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1570 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 290)
;;  succ:       12 [50.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              23 [50.0%]  (CAN_FALLTHRU)
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 7 [sp]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 7 [sp]

;; basic block 12, loop depth 0, count 0, freq 1514, maybe hot
;; Invalid sum of incoming frequencies 717, should be 1514
;;  prev block 11, next block 13, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       11 [50.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              24 [100.0%]  (CAN_FALLTHRU)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 3 [bx] 7 [sp]
;; lr  use 	 1 [dx] 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags]
;; live  in  	 1 [dx] 3 [bx] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags]
;; live  kill	 17 [flags]
(code_label 164 109 113 12 107 "" [1 uses])
(note 113 164 236 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn:TI 236 113 237 12 (set (reg:SI 0 ax)
        (mem/f:SI (plus:SI (reg/v:SI 3 bx [orig:102 __position ] [102])
                (const_int 12 [0xc])) [6 MEM[(struct _Rb_tree_node_base * *)_33 + 12B]+0 S4 A32])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1573 90 {*movsi_internal}
     (nil))
(insn:TI 237 236 203 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax)
            (const_int 0 [0]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1573 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 203 237 185 12 (set (reg:SI 0 ax [118])
        (const_int 0 [0])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1573 90 {*movsi_internal}
     (expr_list:REG_EQUIV (const_int 0 [0])
        (nil)))
(insn:TI 185 203 187 12 (set (reg:SI 0 ax [orig:111 D.81243 ] [111])
        (if_then_else:SI (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (reg/f:SI 1 dx [orig:98 D.83090 ] [98])
            (reg:SI 0 ax [118]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1573 927 {*movsicc_noc}
     (nil))
(insn 187 185 302 12 (set (reg:SI 1 dx [orig:112 D.81243+4 ] [112])
        (if_then_else:SI (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (reg/f:SI 1 dx [orig:98 D.83090 ] [98])
            (reg/v:SI 3 bx [orig:102 __position ] [102]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1573 927 {*movsicc_noc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_DEAD (reg/v:SI 3 bx [orig:102 __position ] [102])
            (nil))))
(note 302 187 268 12 NOTE_INSN_EPILOGUE_BEG)
(insn/f 268 302 269 12 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 28 [0x1c])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0  A8]))
        ]) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1583 943 {pro_epilogue_adjust_stack_si_add}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 28 [0x1c])))
            (nil))))
(insn/f:TI 269 268 266 12 (set (reg:SI 3 bx)
        (mem:SI (post_inc:SI (reg/f:SI 7 sp)) [0  S4 A8])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1583 74 {*popsi1}
     (expr_list:REG_CFA_RESTORE (reg:SI 3 bx)
        (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 4 [0x4])))
            (nil))))
(insn 266 269 270 12 (use (reg/i:DI 0 ax)) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1583 -1
     (nil))
(insn/f:TI 270 266 271 12 (set (reg:SI 4 si)
        (mem:SI (post_inc:SI (reg/f:SI 7 sp)) [0  S4 A8])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1583 74 {*popsi1}
     (expr_list:REG_CFA_RESTORE (reg:SI 4 si)
        (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 4 [0x4])))
            (nil))))
(insn/f:TI 271 270 272 12 (set (reg:SI 5 di)
        (mem:SI (post_inc:SI (reg/f:SI 7 sp)) [0  S4 A8])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1583 74 {*popsi1}
     (expr_list:REG_CFA_RESTORE (reg:SI 5 di)
        (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 4 [0x4])))
            (nil))))
(insn/f:TI 272 271 273 12 (set (reg:SI 6 bp)
        (mem:SI (post_inc:SI (reg/f:SI 7 sp)) [0  S4 A8])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1583 74 {*popsi1}
     (expr_list:REG_CFA_RESTORE (reg:SI 6 bp)
        (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 4 [0x4])))
            (nil))))
(jump_insn:TI 273 272 276 12 (parallel [
            (simple_return)
            (use (const_int 8 [0x8]))
        ]) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1583 660 {simple_return_pop_internal}
     (nil)
 -> simple_return)
;;  succ:       EXIT [100.0%] 
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]

(barrier 276 273 161)
;; basic block 13, loop depth 0, count 0, freq 4250, maybe hot
;; Invalid sum of incoming frequencies 3188, should be 4250
;;  prev block 12, next block 14, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       5 [50.0%]  (CAN_FALLTHRU)
;;              4 [50.0%]  (CAN_FALLTHRU)
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;; lr  use 	 3 [bx] 4 [si] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 17 [flags]
;; live  in  	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 17 [flags]
;; live  kill	
(code_label 161 276 39 13 104 "" [2 uses])
(note 39 161 40 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(note 40 39 41 13 NOTE_INSN_DELETED)
(insn:TI 41 40 44 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f:SI (plus:SI (reg/f:SI 4 si [orig:101 this ] [101])
                    (const_int 12 [0xc])) [6 MEM[(struct _Rb_tree_node_base * &)this_5(D) + 12]+0 S4 A32])
            (reg/v:SI 3 bx [orig:102 __position ] [102]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1552 7 {*cmpsi_1}
     (nil))
(insn 44 41 45 13 (set (reg:SI 0 ax [orig:111 D.81243 ] [111])
        (reg/v:SI 3 bx [orig:102 __position ] [102])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1553 90 {*movsi_internal}
     (nil))
(insn 45 44 42 13 (set (reg:SI 1 dx [orig:112 D.81243+4 ] [112])
        (reg:SI 3 bx [orig:111 D.81243 ] [111])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1553 90 {*movsi_internal}
     (nil))
(jump_insn:TI 42 45 49 13 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 177)
            (pc))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1552 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 1014 (nil)))
 -> 177)
;;  succ:       14 [89.9%]  (FALLTHRU,CAN_FALLTHRU)
;;              16 [10.1%]  (CAN_FALLTHRU)
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]

;; basic block 14, loop depth 0, count 0, freq 3819, maybe hot
;;  prev block 13, next block 15, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       13 [89.9%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;; live  in  	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 17 [flags]
;; live  kill	
(note 49 42 50 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn:TI 50 49 51 14 (set (mem:SI (reg/f:SI 7 sp) [0  S4 A32])
        (reg/v:SI 3 bx [orig:102 __position ] [102])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:218 90 {*movsi_internal}
     (nil))
(call_insn/i:TI 51 50 53 14 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base") [flags 0x43]  <function_decl 06b62500 _Rb_tree_decrement>) [0 _Rb_tree_decrement S1 A8])
            (const_int 4 [0x4]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:218 648 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (mem/f:SI (reg/f:SI 7 sp) [0  S4 A32]))
        (nil)))
(insn:TI 53 51 52 14 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 6 bp [orig:108 D.83091+4 ] [108])
            (mem:SI (plus:SI (reg/f:SI 0 ax [orig:97 D.83090 ] [97])
                    (const_int 20 [0x14])) [34 MEM[(const long long unsigned int &)_35 + 16]+4 S4 A32]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1554 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 6 bp [orig:108 D.83091+4 ] [108])
        (nil)))
(insn 52 53 54 14 (set (reg/f:SI 1 dx [orig:97 D.83090 ] [97])
        (reg:SI 0 ax)) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:218 90 {*movsi_internal}
     (nil))
(jump_insn:TI 54 52 74 14 (set (pc)
        (if_then_else (geu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 291)
            (pc))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1554 596 {*jcc_1}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 291)
;;  succ:       15 [50.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              17 [50.0%]  (CAN_FALLTHRU)
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 7 [sp] 17 [flags]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 7 [sp] 17 [flags]

;; basic block 15, loop depth 0, count 0, freq 2311, maybe hot
;; Invalid sum of incoming frequencies 4614, should be 2311
;;  prev block 14, next block 16, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       25 [50.0%]  (CAN_FALLTHRU)
;;              20 [50.0%]  (CAN_FALLTHRU)
;;              14 [50.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              18 [50.0%]  (CAN_FALLTHRU)
;;              10 [50.0%]  (CAN_FALLTHRU)
;;              23 [50.0%]  (CAN_FALLTHRU)
;;              27 [100.0%]  (CAN_FALLTHRU)
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(7){ }}
;; lr  in  	 4 [si] 7 [sp]
;; lr  use 	 4 [si] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;; live  in  	 4 [si] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;; live  kill	 17 [flags]
(code_label 74 54 75 15 90 "" [6 uses])
(note 75 74 76 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn:TI 76 75 77 15 (set (reg:SI 0 ax [125])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 52 [0x34])) [6 __k+0 S4 A32])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1562 90 {*movsi_internal}
     (nil))
(insn 77 76 213 15 (set (reg:SI 2 cx)
        (reg/f:SI 4 si [orig:101 this ] [101])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1562 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 4 si [orig:101 this ] [101])
        (nil)))
(insn:TI 213 77 78 15 (set (mem:SI (reg/f:SI 7 sp) [0  S4 A32])
        (reg:SI 0 ax [125])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1562 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [125])
        (nil)))
(call_insn:TI 78 213 79 15 (parallel [
            (set (reg:DI 0 ax)
                (call (mem:QI (symbol_ref:SI ("_ZNSt8_Rb_treeIySt4pairIKyiESt10_Select1stIS2_ESt4lessIyESaIS2_EE24_M_get_insert_unique_posERS1_") [flags 0x3]  <function_decl 06e17c80 _M_get_insert_unique_pos>) [0 _M_get_insert_unique_pos S1 A8])
                    (const_int 4 [0x4])))
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 4 [0x4])))
        ]) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1562 653 {*call_value_pop}
     (expr_list:REG_DEAD (reg:SI 2 cx)
        (expr_list:REG_ARGS_SIZE (const_int -4 [0xfffffffffffffffc])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 2 cx))
        (expr_list:SI (use (mem/f:SI (reg/f:SI 7 sp) [0  S4 A32]))
            (nil))))
(insn:TI 79 78 177 15 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1562 220 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
;;  succ:       16 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 1 [dx] 7 [sp]
;; live  out 	 0 [ax] 1 [dx] 7 [sp]

;; basic block 16, loop depth 0, count 0, freq 3333, maybe hot
;;  prev block 15, next block 17, flags: (REACHABLE, RTL)
;;  pred:       13 [10.1%]  (CAN_FALLTHRU)
;;              15 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              22 [100.0%]  (CAN_FALLTHRU)
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 7 [sp]
;; lr  use 	 0 [ax] 1 [dx] 7 [sp]
;; lr  def 	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 7 [sp]
;; live  gen 	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;; live  kill	 17 [flags]
(code_label 177 79 145 16 108 "" [2 uses])
(note 145 177 303 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(note 303 145 224 16 NOTE_INSN_EPILOGUE_BEG)
(insn/f:TI 224 303 144 16 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 28 [0x1c])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0  A8]))
        ]) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1583 943 {pro_epilogue_adjust_stack_si_add}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 28 [0x1c])))
            (nil))))
(insn 144 224 225 16 (use (reg/i:DI 0 ax)) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1583 -1
     (nil))
(insn/f:TI 225 144 226 16 (set (reg:SI 3 bx)
        (mem:SI (post_inc:SI (reg/f:SI 7 sp)) [0  S4 A8])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1583 74 {*popsi1}
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:SI 7 sp)
            (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])))
        (expr_list:REG_CFA_RESTORE (reg:SI 3 bx)
            (nil))))
(insn/f:TI 226 225 227 16 (set (reg:SI 4 si)
        (mem:SI (post_inc:SI (reg/f:SI 7 sp)) [0  S4 A8])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1583 74 {*popsi1}
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:SI 7 sp)
            (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])))
        (expr_list:REG_CFA_RESTORE (reg:SI 4 si)
            (nil))))
(insn/f:TI 227 226 228 16 (set (reg:SI 5 di)
        (mem:SI (post_inc:SI (reg/f:SI 7 sp)) [0  S4 A8])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1583 74 {*popsi1}
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:SI 7 sp)
            (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])))
        (expr_list:REG_CFA_RESTORE (reg:SI 5 di)
            (nil))))
(insn/f:TI 228 227 229 16 (set (reg:SI 6 bp)
        (mem:SI (post_inc:SI (reg/f:SI 7 sp)) [0  S4 A8])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1583 74 {*popsi1}
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:SI 7 sp)
            (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])))
        (expr_list:REG_CFA_RESTORE (reg:SI 6 bp)
            (nil))))
(jump_insn:TI 229 228 230 16 (parallel [
            (simple_return)
            (use (const_int 8 [0x8]))
        ]) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1583 660 {simple_return_pop_internal}
     (nil)
 -> simple_return)
;;  succ:       EXIT [100.0%] 
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]

(barrier 230 229 291)
;; basic block 17, loop depth 0, count 0, freq 1910, maybe hot
;;  prev block 16, next block 18, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       14 [50.0%]  (CAN_FALLTHRU)
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 7 [sp] 17 [flags]
;; lr  use 	 7 [sp] 17 [flags]
;; lr  def 	
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 7 [sp] 17 [flags]
;; live  gen 	
;; live  kill	
(code_label 291 230 152 17 112 "" [1 uses])
(note 152 291 56 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(jump_insn:TI 56 152 153 17 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 162)
            (pc))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1554 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 162)
;;  succ:       19 [50.0%]  (CAN_FALLTHRU)
;;              18 [50.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 7 [sp]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 7 [sp]

;; basic block 18, loop depth 0, count 0, freq 955, maybe hot
;;  prev block 17, next block 19, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       17 [50.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 7 [sp]
;; lr  use 	 0 [ax] 5 [di] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 7 [sp]
;; live  gen 	 17 [flags]
;; live  kill	
(note 153 56 57 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn:TI 57 153 58 18 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 5 di [orig:107 D.83091 ] [107])
            (mem:SI (plus:SI (reg/f:SI 0 ax [orig:97 D.83090 ] [97])
                    (const_int 16 [0x10])) [34 MEM[(const long long unsigned int &)_35 + 16]+0 S4 A64]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1554 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 5 di [orig:107 D.83091 ] [107])
        (expr_list:REG_DEAD (reg/f:SI 0 ax [orig:97 D.83090 ] [97])
            (nil))))
(jump_insn:TI 58 57 162 18 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 74)
            (pc))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1554 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 74)
;;  succ:       15 [50.0%]  (CAN_FALLTHRU)
;;              19 [50.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 1 [dx] 3 [bx] 4 [si] 7 [sp]
;; live  out 	 1 [dx] 3 [bx] 4 [si] 7 [sp]

;; basic block 19, loop depth 0, count 0, freq 3028, maybe hot
;; Invalid sum of incoming frequencies 1433, should be 3028
;;  prev block 18, next block 20, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       18 [50.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              17 [50.0%]  (CAN_FALLTHRU)
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 3 [bx] 7 [sp]
;; lr  use 	 1 [dx] 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags]
;; live  in  	 1 [dx] 3 [bx] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags]
;; live  kill	 17 [flags]
(code_label 162 58 60 19 105 "" [1 uses])
(note 60 162 238 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn:TI 238 60 239 19 (set (reg:SI 2 cx)
        (mem/f:SI (plus:SI (reg/f:SI 1 dx [orig:97 D.83090 ] [97])
                (const_int 12 [0xc])) [6 MEM[(struct _Rb_tree_node_base * *)_35 + 12B]+0 S4 A32])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1557 90 {*movsi_internal}
     (nil))
(insn:TI 239 238 204 19 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 2 cx)
            (const_int 0 [0]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1557 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 2 cx)
        (nil)))
(insn 204 239 211 19 (set (reg:SI 2 cx [117])
        (const_int 0 [0])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1557 90 {*movsi_internal}
     (expr_list:REG_EQUIV (const_int 0 [0])
        (nil)))
(insn:TI 211 204 182 19 (set (reg:SI 0 ax [orig:111 D.81243 ] [111])
        (reg:SI 2 cx [117])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1557 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 2 cx [117])
        (nil)))
(insn 182 211 180 19 (set (reg:SI 1 dx [orig:112 D.81243+4 ] [112])
        (if_then_else:SI (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (reg/f:SI 1 dx [orig:97 D.83090 ] [97])
            (reg/v:SI 3 bx [orig:102 __position ] [102]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1557 927 {*movsicc_noc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_DEAD (reg/v:SI 3 bx [orig:102 __position ] [102])
            (nil))))
(insn:TI 180 182 304 19 (set (reg:SI 0 ax [orig:111 D.81243 ] [111])
        (if_then_else:SI (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (reg/v:SI 3 bx [orig:102 __position ] [102])
            (reg:SI 0 ax [orig:111 D.81243 ] [111]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1557 927 {*movsicc_noc}
     (nil))
(note 304 180 280 19 NOTE_INSN_EPILOGUE_BEG)
(insn/f 280 304 278 19 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 28 [0x1c])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0  A8]))
        ]) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1583 943 {pro_epilogue_adjust_stack_si_add}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 28 [0x1c])))
            (nil))))
(insn 278 280 281 19 (use (reg/i:DI 0 ax)) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1583 -1
     (nil))
(insn/f:TI 281 278 282 19 (set (reg:SI 3 bx)
        (mem:SI (post_inc:SI (reg/f:SI 7 sp)) [0  S4 A8])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1583 74 {*popsi1}
     (expr_list:REG_CFA_RESTORE (reg:SI 3 bx)
        (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 4 [0x4])))
            (nil))))
(insn/f:TI 282 281 283 19 (set (reg:SI 4 si)
        (mem:SI (post_inc:SI (reg/f:SI 7 sp)) [0  S4 A8])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1583 74 {*popsi1}
     (expr_list:REG_CFA_RESTORE (reg:SI 4 si)
        (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 4 [0x4])))
            (nil))))
(insn/f:TI 283 282 284 19 (set (reg:SI 5 di)
        (mem:SI (post_inc:SI (reg/f:SI 7 sp)) [0  S4 A8])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1583 74 {*popsi1}
     (expr_list:REG_CFA_RESTORE (reg:SI 5 di)
        (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 4 [0x4])))
            (nil))))
(insn/f:TI 284 283 285 19 (set (reg:SI 6 bp)
        (mem:SI (post_inc:SI (reg/f:SI 7 sp)) [0  S4 A8])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1583 74 {*popsi1}
     (expr_list:REG_CFA_RESTORE (reg:SI 6 bp)
        (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 4 [0x4])))
            (nil))))
(jump_insn:TI 285 284 288 19 (parallel [
            (simple_return)
            (use (const_int 8 [0x8]))
        ]) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1583 660 {simple_return_pop_internal}
     (nil)
 -> simple_return)
;;  succ:       EXIT [100.0%] 
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]

(barrier 288 285 289)
;; basic block 20, loop depth 0, count 0, freq 1500, maybe hot
;;  prev block 19, next block 21, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [15.0%]  (CAN_FALLTHRU)
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(7){ }}
;; lr  in  	 2 [cx] 4 [si] 7 [sp]
;; lr  use 	 2 [cx] 7 [sp]
;; lr  def 	 3 [bx] 17 [flags]
;; live  in  	 2 [cx] 4 [si] 7 [sp]
;; live  gen 	 3 [bx] 17 [flags]
;; live  kill	
(code_label 289 288 12 20 110 "" [1 uses])
(note 12 289 240 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn:TI 240 12 241 20 (set (reg:SI 3 bx)
        (mem:SI (plus:SI (reg/f:SI 2 cx [orig:101 this ] [101])
                (const_int 20 [0x14])) [21 MEM[(unsigned int *)this_5(D) + 20B]+0 S4 A32])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1542 90 {*movsi_internal}
     (nil))
(insn:TI 241 240 14 20 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 3 bx)
            (const_int 0 [0]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1542 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil)))
(jump_insn:TI 14 241 15 20 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 74)
            (pc))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1542 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 74)
;;  succ:       21 [50.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              15 [50.0%]  (CAN_FALLTHRU)
;; lr  out 	 2 [cx] 4 [si] 7 [sp]
;; live  out 	 2 [cx] 4 [si] 7 [sp]

;; basic block 21, loop depth 0, count 0, freq 750, maybe hot
;;  prev block 20, next block 22, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       20 [50.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(7){ }}
;; lr  in  	 2 [cx] 4 [si] 7 [sp]
;; lr  use 	 2 [cx] 7 [sp]
;; lr  def 	 0 [ax] 3 [bx] 5 [di] 17 [flags]
;; live  in  	 2 [cx] 4 [si] 7 [sp]
;; live  gen 	 0 [ax] 3 [bx] 5 [di] 17 [flags]
;; live  kill	
(note 15 14 166 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(note 166 15 16 21 NOTE_INSN_DELETED)
(insn:TI 16 166 206 21 (set (reg/f:SI 3 bx [orig:85 D.83090 ] [85])
        (mem/f:SI (plus:SI (reg/f:SI 2 cx [orig:101 this ] [101])
                (const_int 16 [0x10])) [6 MEM[(struct _Rb_tree_node_base * &)this_5(D) + 16]+0 S4 A32])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1543 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 2 cx [orig:101 this ] [101])
        (nil)))
(insn 206 16 207 21 (set (reg:SI 5 di [119])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 52 [0x34])) [6 __k+0 S4 A32])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1542 90 {*movsi_internal}
     (nil))
(insn:TI 207 206 18 21 (set (reg:SI 5 di [120])
        (mem:SI (plus:SI (reg:SI 5 di [119])
                (const_int 4 [0x4])) [34 MEM[(const long long unsigned int &)__k_9(D)]+4 S4 A32])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1542 90 {*movsi_internal}
     (nil))
(insn 18 207 165 21 (set (reg:CC 17 flags)
        (compare:CC (mem:SI (plus:SI (reg/f:SI 3 bx [orig:85 D.83090 ] [85])
                    (const_int 20 [0x14])) [34 MEM[(const long long unsigned int &)_7 + 16]+4 S4 A32])
            (reg:SI 5 di [120]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1542 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 5 di [120])
        (nil)))
(insn:TI 165 18 19 21 (set (reg:SI 0 ax [orig:115 MEM[(const long long unsigned int &)_7 + 16] ] [115])
        (mem:SI (plus:SI (reg/f:SI 3 bx [orig:85 D.83090 ] [85])
                (const_int 16 [0x10])) [34 MEM[(const long long unsigned int &)_7 + 16]+0 S4 A64])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1542 90 {*movsi_internal}
     (nil))
(jump_insn:TI 19 165 136 21 (set (pc)
        (if_then_else (geu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 292)
            (pc))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1542 596 {*jcc_1}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 292)
;;  succ:       22 [50.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              25 [50.0%]  (CAN_FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 4 [si] 7 [sp] 17 [flags]
;; live  out 	 0 [ax] 3 [bx] 4 [si] 7 [sp] 17 [flags]

;; basic block 22, loop depth 0, count 0, freq 590, maybe hot
;;  prev block 21, next block 23, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       21 [50.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              26 [50.0%]  (CAN_FALLTHRU)
;;              9 [10.1%]  (CAN_FALLTHRU)
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 7 [sp]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 17 [flags]
;; live  in  	 3 [bx] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx]
;; live  kill	 17 [flags]
(code_label 136 19 137 22 91 "" [2 uses])
(note 137 136 234 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn:TI 234 137 139 22 (parallel [
            (set (reg:SI 0 ax [orig:111 D.81243 ] [111])
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1544 82 {*movsi_xor}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 139 234 293 22 (set (reg:SI 1 dx [orig:112 D.81243+4 ] [112])
        (reg/f:SI 3 bx [orig:85 D.83090 ] [85])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1544 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 3 bx [orig:85 D.83090 ] [85])
        (nil)))
(jump_insn 293 139 294 22 (set (pc)
        (label_ref 177)) 636 {jump}
     (nil)
 -> 177)
;;  succ:       16 [100.0%]  (CAN_FALLTHRU)
;; lr  out 	 0 [ax] 1 [dx] 7 [sp]
;; live  out 	 0 [ax] 1 [dx] 7 [sp]

(barrier 294 293 290)
;; basic block 23, loop depth 0, count 0, freq 478, maybe hot
;;  prev block 22, next block 24, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       11 [50.0%]  (CAN_FALLTHRU)
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 7 [sp]
;; lr  use 	 0 [ax] 5 [di] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 7 [sp]
;; live  gen 	 17 [flags]
;; live  kill	
(code_label 290 294 159 23 111 "" [1 uses])
(note 159 290 110 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn:TI 110 159 111 23 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 5 di [orig:107 D.83091 ] [107])
            (mem:SI (plus:SI (reg/f:SI 0 ax [orig:98 D.83090 ] [98])
                    (const_int 16 [0x10])) [34 MEM[(const long long unsigned int &)_36 + 16]+0 S4 A64]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1570 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 5 di [orig:107 D.83091 ] [107])
        (expr_list:REG_DEAD (reg/f:SI 0 ax [orig:98 D.83090 ] [98])
            (nil))))
(jump_insn:TI 111 110 295 23 (set (pc)
        (if_then_else (geu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 74)
            (pc))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1570 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 74)
;;  succ:       15 [50.0%]  (CAN_FALLTHRU)
;;              24 [50.0%]  (FALLTHRU)
;; lr  out 	 1 [dx] 3 [bx] 4 [si] 7 [sp]
;; live  out 	 1 [dx] 3 [bx] 4 [si] 7 [sp]

;; basic block 24, loop depth 0, count 0, freq 239, maybe hot
;;  prev block 23, next block 25, flags: (NEW, RTL, MODIFIED)
;;  pred:       23 [50.0%]  (FALLTHRU)
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 3 [bx] 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	
;; live  in  	 1 [dx] 3 [bx] 7 [sp]
;; live  gen 	
;; live  kill	
(note 295 111 296 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(jump_insn:TI 296 295 297 24 (set (pc)
        (label_ref 164)) 636 {jump}
     (nil)
 -> 164)
;;  succ:       12 [100.0%]  (CAN_FALLTHRU)
;; lr  out 	 1 [dx] 3 [bx] 7 [sp]
;; live  out 	 1 [dx] 3 [bx] 7 [sp]

(barrier 297 296 292)
;; basic block 25, loop depth 0, count 0, freq 375, maybe hot
;;  prev block 24, next block 26, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       21 [50.0%]  (CAN_FALLTHRU)
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 4 [si] 7 [sp] 17 [flags]
;; lr  use 	 7 [sp] 17 [flags]
;; lr  def 	
;; live  in  	 0 [ax] 3 [bx] 4 [si] 7 [sp] 17 [flags]
;; live  gen 	
;; live  kill	
(code_label 292 297 146 25 113 "" [1 uses])
(note 146 292 21 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(jump_insn:TI 21 146 147 25 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 74)
            (pc))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1542 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 74)
;;  succ:       15 [50.0%]  (CAN_FALLTHRU)
;;              26 [50.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 4 [si] 7 [sp]
;; live  out 	 0 [ax] 3 [bx] 4 [si] 7 [sp]

;; basic block 26, loop depth 0, count 0, freq 188, maybe hot
;;  prev block 25, next block 27, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       25 [50.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 4 [si] 7 [sp]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 5 [di] 17 [flags]
;; live  in  	 0 [ax] 3 [bx] 4 [si] 7 [sp]
;; live  gen 	 5 [di] 17 [flags]
;; live  kill	
(note 147 21 208 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn:TI 208 147 22 26 (set (reg:SI 5 di [121])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 52 [0x34])) [6 __k+0 S4 A32])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1542 90 {*movsi_internal}
     (nil))
(insn:TI 22 208 23 26 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 0 ax [orig:115 MEM[(const long long unsigned int &)_7 + 16] ] [115])
            (mem:SI (reg:SI 5 di [121]) [34 MEM[(const long long unsigned int &)__k_9(D)]+0 S4 A64]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1542 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 5 di [121])
        (expr_list:REG_DEAD (reg:SI 0 ax [orig:115 MEM[(const long long unsigned int &)_7 + 16] ] [115])
            (nil))))
(jump_insn:TI 23 22 298 26 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 136)
            (pc))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1542 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 136)
;;  succ:       22 [50.0%]  (CAN_FALLTHRU)
;;              27 [50.0%]  (FALLTHRU)
;; lr  out 	 3 [bx] 4 [si] 7 [sp]
;; live  out 	 3 [bx] 4 [si] 7 [sp]

;; basic block 27, loop depth 0, count 0, freq 94, maybe hot
;;  prev block 26, next block 1, flags: (NEW, RTL, MODIFIED)
;;  pred:       26 [50.0%]  (FALLTHRU)
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u-1(7){ }}
;; lr  in  	 4 [si] 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	
;; live  in  	 4 [si] 7 [sp]
;; live  gen 	
;; live  kill	
(note 298 23 299 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(jump_insn:TI 299 298 300 27 (set (pc)
        (label_ref 74)) 636 {jump}
     (nil)
 -> 74)
;;  succ:       15 [100.0%]  (CAN_FALLTHRU)
;; lr  out 	 4 [si] 7 [sp]
;; live  out 	 4 [si] 7 [sp]

(barrier 300 299 205)
(note 205 300 0 NOTE_INSN_DELETED)

;; Function int main() (main, funcdef_no=5706, decl_uid=72670, symbol_order=3172) (executed once)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 116 n_edges 190 count 135 (  1.2)


int main()

Dataflow summary:
def_info->table_size = 2178, use_info->table_size = 0
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 29 [mm0] 30 [mm1] 31 [mm2]
;;  exit block uses 	 0 [ax] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 3[bx] 4[si] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={119d,164u} r1={65d,56u} r2={66d,55u} r3={39d,59u} r4={38d,56u} r5={33d,47u} r6={3d,236u} r7={26d,239u,2e} r8={23d} r9={23d} r10={23d} r11={23d} r12={23d} r13={23d} r14={23d} r15={23d} r17={202d,89u} r18={23d} r19={23d} r20={1d,1u,3e} r21={24d} r22={24d} r23={24d} r24={23d} r25={23d} r26={23d} r27={23d} r28={23d} r29={24d} r30={24d} r31={24d} r32={23d} r33={23d} r34={23d} r35={23d} r36={23d} r37={23d} r38={23d} r39={23d} r40={23d} r41={23d} r42={23d} r43={23d} r44={23d} r45={23d} r46={23d} r47={23d} r48={23d} r49={23d} r50={23d} r51={23d} r52={23d} r53={23d} r54={23d} r55={23d} r56={23d} r57={23d} r58={23d} r59={23d} r60={23d} r61={23d} r62={23d} r63={23d} r64={23d} r65={23d} r66={23d} r67={23d} r68={23d} r69={23d} r70={23d} r71={23d} r72={23d} r73={23d} r74={23d} r75={23d} r76={23d} 
;;    total ref usage 3123{2116d,1002u,5e} in 587{564 regular + 23 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(4){ }d-1(5){ }d-1(6){ }d-1(7){ }d-1(20){ }d-1(21){ }d-1(22){ }d-1(23){ }d-1(29){ }d-1(30){ }d-1(31){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 29 [mm0] 30 [mm1] 31 [mm2]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 29 [mm0] 30 [mm1] 31 [mm2]
;; live  kill	
;; lr  out 	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]

( 0 )->[2]->( 3 115 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;; live  in  	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 17 [flags]
;; live  kill	 17 [flags]
;; lr  out 	 1 [dx] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 1 [dx] 6 [bp] 7 [sp] 20 [frame]

( 2 )->[3]->( 4 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 1 [dx] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 3 [bx] 4 [si] 5 [di] 17 [flags]
;; live  in  	 1 [dx] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 3 [bx] 4 [si] 5 [di]
;; live  kill	 17 [flags]
;; lr  out 	 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]

( 3 4 )->[4]->( 4 5 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;; live  in  	 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 17 [flags]
;; live  kill	 17 [flags]
;; lr  out 	 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]

( 4 )->[5]->( 6 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp]
;; lr  def 	 3 [bx]
;; live  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 3 [bx]
;; live  kill	
;; lr  out 	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame]

( 5 115 )->[6]->( 7 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 1 [dx] 6 [bp] 7 [sp]
;; lr  def 	 2 [cx] 4 [si] 5 [di] 17 [flags]
;; live  in  	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 2 [cx] 4 [si] 5 [di]
;; live  kill	 17 [flags]
;; lr  out 	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]

( 7 6 )->[7]->( 7 8 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;; live  in  	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 17 [flags]
;; live  kill	 17 [flags]
;; lr  out 	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]

( 7 )->[8]->( 9 113 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 3 [bx] 4 [si] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 3 [bx] 17 [flags]
;; live  in  	 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 17 [flags]
;; live  kill	 17 [flags]
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 20 [frame]

( 8 )->[9]->( 10 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 20 [frame]

( 9 16 )->[10]->( 11 56 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 2 [cx] 3 [bx] 17 [flags]
;; live  kill	 17 [flags]
;; lr  out 	 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame]

( 10 )->[11]->( 12 )
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 4 [si] 17 [flags]
;; live  in  	 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 4 [si]
;; live  kill	 17 [flags]
;; lr  out 	 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame]

( 11 12 )->[12]->( 12 13 )
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;; live  in  	 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 2 [cx] 3 [bx] 4 [si] 17 [flags]
;; live  kill	 17 [flags]
;; lr  out 	 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame]

( 12 )->[13]->( 14 )
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 4 [si] 6 [bp] 7 [sp]
;; lr  def 	
;; live  in  	 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; lr  out 	 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame]

( 13 56 )->[14]->( 15 )
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 4 [si] 5 [di] 17 [flags]
;; live  in  	 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 4 [si] 5 [di]
;; live  kill	 17 [flags]
;; lr  out 	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]

( 15 14 )->[15]->( 15 16 )
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;; live  in  	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 17 [flags]
;; live  kill	 17 [flags]
;; lr  out 	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]

( 15 )->[16]->( 10 17 )
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 3 [bx] 4 [si] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 5 [di] 17 [flags]
;; live  in  	 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 5 [di] 17 [flags]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

( 16 )->[17]->( 18 22 )
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

( 17 )->[18]->( 19 )
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 3 [bx] 4 [si] 17 [flags]
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 3 [bx] 4 [si]
;; live  kill	 17 [flags]
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame]

( 18 19 )->[19]->( 19 20 )
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 17 [flags]
;; live  kill	 17 [flags]
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame]

( 19 )->[20]->( 21 )
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 4 [si] 5 [di]
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 4 [si] 5 [di]
;; live  kill	
;; lr  out 	 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 5 [di] 6 [bp] 7 [sp] 20 [frame]

( 20 21 )->[21]->( 21 22 )
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 17 [flags]
;; live  in  	 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 17 [flags]
;; live  kill	 17 [flags]
;; lr  out 	 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 5 [di] 6 [bp] 7 [sp] 20 [frame]

( 21 17 )->[22]->( 25 23 )
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 2 [cx] 3 [bx] 5 [di] 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 2 [cx] 3 [bx] 5 [di] 17 [flags]
;; live  kill	
;; lr  out 	 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 20 [frame]

( 22 )->[23]->( 114 )
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
;; live  in  	
;; live  gen 	
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]
;; live  out 	

( 25 96 )->[24]->( 25 98 )
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 2 [cx] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp]
;; lr  def 	 3 [bx] 17 [flags]
;; live  in  	 2 [cx] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 3 [bx] 17 [flags]
;; live  kill	 17 [flags]
;; lr  out 	 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 20 [frame]

( 22 24 97 )->[25]->( 24 26 )
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 3 [bx] 17 [flags]
;; live  in  	 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 17 [flags]
;; live  kill	 17 [flags]
;; lr  out 	 2 [cx] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 2 [cx] 5 [di] 6 [bp] 7 [sp] 20 [frame]

( 25 )->[26]->( 27 112 )
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 2 [cx] 3 [bx] 4 [si] 5 [di] 7 [sp] 17 [flags]
;; live  kill	 0 [ax] 17 [flags]
;; lr  out 	 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]

( 26 )->[27]->( 28 )
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 17 [flags]
;; live  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 3 [bx]
;; live  kill	 17 [flags]
;; lr  out 	 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame]

( 27 30 )->[28]->( 29 30 )
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 2 [cx] 6 [bp] 7 [sp]
;; lr  def 	 4 [si] 17 [flags]
;; live  in  	 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 4 [si] 17 [flags]
;; live  kill	 17 [flags]
;; lr  out 	 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame]

( 28 )->[29]->( 30 )
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 4 [si] 5 [di] 17 [flags]
;; live  in  	 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di]
;; live  kill	 17 [flags]
;; lr  out 	 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame]

( 28 29 )->[30]->( 28 31 )
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 2 [cx] 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 17 [flags]
;; live  in  	 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 17 [flags]
;; live  kill	 0 [ax] 17 [flags]
;; lr  out 	 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame]

( 30 )->[31]->( 32 )
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 5 [di]
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 5 [di]
;; live  kill	
;; lr  out 	 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 5 [di] 6 [bp] 7 [sp] 20 [frame]

( 31 112 )->[32]->( 33 111 )
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
;; live  in  	 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 17 [flags]
;; live  kill	
;; lr  out 	 0 [ax] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 0 [ax] 5 [di] 6 [bp] 7 [sp] 20 [frame]

( 32 )->[33]->( 34 )
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 2 [cx] 3 [bx] 17 [flags]
;; live  in  	 0 [ax] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 2 [cx] 3 [bx]
;; live  kill	 17 [flags]
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 20 [frame]

( 33 54 )->[34]->( 35 45 )
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 3 [bx] 5 [di] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 17 [flags]
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 17 [flags]
;; live  kill	 17 [flags]
;; lr  out 	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]

( 34 )->[35]->( 39 )
;; bb 35 artificial_defs: { }
;; bb 35 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 2 [cx]
;; live  in  	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 2 [cx]
;; live  kill	
;; lr  out 	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]

( 39 )->[36]->( 38 37 )
;; bb 36 artificial_defs: { }
;; bb 36 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 17 [flags]
;; lr  def 	
;; live  in  	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 20 [frame]
;; live  gen 	
;; live  kill	
;; lr  out 	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]

( 36 )->[37]->( 40 38 )
;; bb 37 artificial_defs: { }
;; bb 37 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 2 [cx] 4 [si] 6 [bp] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]

( 37 36 )->[38]->( 39 41 )
;; bb 38 artificial_defs: { }
;; bb 38 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 2 [cx] 6 [bp] 7 [sp]
;; lr  def 	 2 [cx] 3 [bx] 17 [flags]
;; live  in  	 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 2 [cx] 3 [bx]
;; live  kill	
;; lr  out 	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]

( 40 38 35 )->[39]->( 40 36 )
;; bb 39 artificial_defs: { }
;; bb 39 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 2 [cx] 5 [di] 6 [bp] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 20 [frame]
;; live  out 	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 20 [frame]

( 39 37 )->[40]->( 39 41 )
;; bb 40 artificial_defs: { }
;; bb 40 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 2 [cx] 6 [bp] 7 [sp]
;; lr  def 	 2 [cx] 17 [flags]
;; live  in  	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 2 [cx]
;; live  kill	
;; lr  out 	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]

( 38 40 )->[41]->( 45 42 )
;; bb 41 artificial_defs: { }
;; bb 41 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]

( 41 )->[42]->( 45 43 )
;; bb 42 artificial_defs: { }
;; bb 42 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 3 [bx] 5 [di] 6 [bp] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 20 [frame]
;; live  out 	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 20 [frame]

( 42 )->[43]->( 52 44 )
;; bb 43 artificial_defs: { }
;; bb 43 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 17 [flags]
;; lr  def 	
;; live  in  	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 20 [frame]
;; live  gen 	
;; live  kill	
;; lr  out 	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]

( 43 )->[44]->( 45 52 )
;; bb 44 artificial_defs: { }
;; bb 44 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 3 [bx] 4 [si] 6 [bp] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]

( 34 41 42 44 )->[45]->( 46 101 )
;; bb 45 artificial_defs: { }
;; bb 45 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;; live  in  	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 7 [sp] 17 [flags]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]

( 45 )->[46]->( 51 47 )
;; bb 46 artificial_defs: { }
;; bb 46 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 17 [flags]
;; live  kill	
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]

( 46 )->[47]->( 51 48 )
;; bb 47 artificial_defs: { }
;; bb 47 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 1 [dx] 6 [bp] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]

( 47 )->[48]->( 51 49 )
;; bb 48 artificial_defs: { }
;; bb 48 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 1 [dx] 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 2 [cx] 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 2 [cx] 17 [flags]
;; live  kill	
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 20 [frame]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 20 [frame]

( 48 )->[49]->( 55 50 )
;; bb 49 artificial_defs: { }
;; bb 49 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 17 [flags]
;; lr  def 	
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 20 [frame]
;; live  gen 	
;; live  kill	
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]

( 49 )->[50]->( 51 55 )
;; bb 50 artificial_defs: { }
;; bb 50 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 1 [dx] 6 [bp] 7 [sp]
;; lr  def 	 2 [cx] 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 2 [cx] 17 [flags]
;; live  kill	
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]

( 47 50 48 46 55 )->[51]->( 52 )
;; bb 51 artificial_defs: { }
;; bb 51 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	 17 [flags]
;; lr  out 	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]

( 51 44 43 101 )->[52]->( 57 53 )
;; bb 52 artificial_defs: { }
;; bb 52 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 2 [cx] 17 [flags]
;; live  in  	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 2 [cx] 17 [flags]
;; live  kill	
;; lr  out 	 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]

( 91 68 52 85 )->[53]->( 54 94 )
;; bb 53 artificial_defs: { }
;; bb 53 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 3 [bx] 5 [di] 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 3 [bx] 5 [di] 17 [flags]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 20 [frame]

( 53 )->[54]->( 34 )
;; bb 54 artificial_defs: { }
;; bb 54 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax]
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax]
;; live  kill	
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 20 [frame]

( 49 50 )->[55]->( 51 )
;; bb 55 artificial_defs: { }
;; bb 55 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
;; live  in  	 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]

( 10 )->[56]->( 14 )
;; bb 56 artificial_defs: { }
;; bb 56 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
;; live  in  	 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; lr  out 	 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame]

( 52 )->[57]->( 62 58 )
;; bb 57 artificial_defs: { }
;; bb 57 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 17 [flags]
;; live  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 17 [flags]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]

( 57 )->[58]->( 86 )
;; bb 58 artificial_defs: { }
;; bb 58 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
;; live  in  	
;; live  gen 	
;; live  kill	
;; lr  out 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	

( 62 )->[59]->( 61 60 )
;; bb 59 artificial_defs: { }
;; bb 59 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 17 [flags]
;; lr  def 	
;; live  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 20 [frame]
;; live  gen 	
;; live  kill	
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]

( 59 )->[60]->( 63 61 )
;; bb 60 artificial_defs: { }
;; bb 60 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 0 [ax] 2 [cx] 6 [bp] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]

( 60 59 )->[61]->( 62 64 )
;; bb 61 artificial_defs: { }
;; bb 61 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 17 [flags]
;; live  in  	 0 [ax] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx]
;; live  kill	
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]

( 57 61 63 )->[62]->( 63 59 )
;; bb 62 artificial_defs: { }
;; bb 62 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 0 [ax] 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 20 [frame]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 20 [frame]

( 62 60 )->[63]->( 62 64 )
;; bb 63 artificial_defs: { }
;; bb 63 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax]
;; live  kill	
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]

( 61 63 )->[64]->( 86 65 )
;; bb 64 artificial_defs: { }
;; bb 64 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 1 [dx] 6 [bp] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]

( 64 )->[65]->( 86 66 )
;; bb 65 artificial_defs: { }
;; bb 65 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 1 [dx] 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 20 [frame]
;; live  out 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 20 [frame]

( 65 )->[66]->( 68 67 )
;; bb 66 artificial_defs: { }
;; bb 66 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 17 [flags]
;; lr  def 	
;; live  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 20 [frame]
;; live  gen 	
;; live  kill	
;; lr  out 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]

( 66 )->[67]->( 86 68 )
;; bb 67 artificial_defs: { }
;; bb 67 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 1 [dx] 2 [cx] 6 [bp] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]

( 66 67 )->[68]->( 69 53 )
;; bb 68 artificial_defs: { }
;; bb 68 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 1 [dx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
;; live  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 17 [flags]
;; live  kill	
;; lr  out 	 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]

( 68 )->[69]->( 70 )
;; bb 69 artificial_defs: { }
;; bb 69 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax]
;; live  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax]
;; live  kill	
;; lr  out 	 0 [ax] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 0 [ax] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]

( 92 69 )->[70]->( 74 )
;; bb 70 artificial_defs: { }
;; bb 70 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 3 [bx]
;; live  in  	 0 [ax] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 3 [bx]
;; live  kill	
;; lr  out 	 0 [ax] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 0 [ax] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]

( 74 )->[71]->( 73 72 )
;; bb 71 artificial_defs: { }
;; bb 71 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 17 [flags]
;; lr  def 	
;; live  in  	 0 [ax] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 20 [frame]
;; live  gen 	
;; live  kill	
;; lr  out 	 0 [ax] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 0 [ax] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]

( 71 )->[72]->( 75 73 )
;; bb 72 artificial_defs: { }
;; bb 72 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 0 [ax] 4 [si] 6 [bp] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 0 [ax] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 0 [ax] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 0 [ax] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]

( 72 71 )->[73]->( 74 76 )
;; bb 73 artificial_defs: { }
;; bb 73 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 3 [bx] 17 [flags]
;; live  in  	 0 [ax] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 3 [bx]
;; live  kill	
;; lr  out 	 0 [ax] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 0 [ax] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]

( 75 73 70 )->[74]->( 75 71 )
;; bb 74 artificial_defs: { }
;; bb 74 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 0 [ax] 5 [di] 6 [bp] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 0 [ax] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 0 [ax] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 20 [frame]
;; live  out 	 0 [ax] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 20 [frame]

( 74 72 )->[75]->( 74 76 )
;; bb 75 artificial_defs: { }
;; bb 75 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
;; live  in  	 0 [ax] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax]
;; live  kill	
;; lr  out 	 0 [ax] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 0 [ax] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]

( 73 75 )->[76]->( 80 77 )
;; bb 76 artificial_defs: { }
;; bb 76 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]

( 76 )->[77]->( 80 78 )
;; bb 77 artificial_defs: { }
;; bb 77 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 3 [bx] 5 [di] 6 [bp] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 20 [frame]
;; live  out 	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 20 [frame]

( 77 )->[78]->( 85 79 )
;; bb 78 artificial_defs: { }
;; bb 78 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 17 [flags]
;; lr  def 	
;; live  in  	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 20 [frame]
;; live  gen 	
;; live  kill	
;; lr  out 	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]

( 78 )->[79]->( 80 85 )
;; bb 79 artificial_defs: { }
;; bb 79 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 3 [bx] 4 [si] 6 [bp] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]

( 79 76 77 93 )->[80]->( 81 104 )
;; bb 80 artificial_defs: { }
;; bb 80 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;; live  in  	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 7 [sp] 17 [flags]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame]

( 80 )->[81]->( 84 82 )
;; bb 81 artificial_defs: { }
;; bb 81 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 17 [flags]
;; live  kill	
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame]

( 81 )->[82]->( 84 83 )
;; bb 82 artificial_defs: { }
;; bb 82 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 1 [dx] 6 [bp] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame]

( 82 )->[83]->( 84 108 )
;; bb 83 artificial_defs: { }
;; bb 83 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 1 [dx] 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 2 [cx] 5 [di] 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 2 [cx] 5 [di] 17 [flags]
;; live  kill	
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 17 [flags] 20 [frame]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 17 [flags] 20 [frame]

( 82 109 83 81 110 )->[84]->( 85 )
;; bb 84 artificial_defs: { }
;; bb 84 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	 17 [flags]
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame]

( 84 79 78 104 )->[85]->( 53 )
;; bb 85 artificial_defs: { }
;; bb 85 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	 17 [flags]
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 20 [frame]

( 67 64 65 58 )->[86]->( 87 103 )
;; bb 86 artificial_defs: { }
;; bb 86 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 1 [dx] 2 [cx] 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;; live  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 7 [sp] 17 [flags]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 0 [ax] 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]

( 86 )->[87]->( 90 88 )
;; bb 87 artificial_defs: { }
;; bb 87 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 17 [flags]
;; live  kill	
;; lr  out 	 0 [ax] 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 0 [ax] 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]

( 87 )->[88]->( 90 89 )
;; bb 88 artificial_defs: { }
;; bb 88 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 1 [dx] 6 [bp] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 0 [ax] 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 0 [ax] 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]

( 88 )->[89]->( 90 105 )
;; bb 89 artificial_defs: { }
;; bb 89 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 1 [dx] 6 [bp] 7 [sp]
;; lr  def 	 2 [cx] 3 [bx] 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 2 [cx] 3 [bx] 17 [flags]
;; live  kill	
;; lr  out 	 0 [ax] 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 20 [frame]
;; live  out 	 0 [ax] 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 20 [frame]

( 88 106 89 87 107 )->[90]->( 91 )
;; bb 90 artificial_defs: { }
;; bb 90 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 0 [ax] 1 [dx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;; live  in  	 0 [ax] 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 3 [bx]
;; live  kill	 17 [flags]
;; lr  out 	 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]

( 90 103 )->[91]->( 92 53 )
;; bb 91 artificial_defs: { }
;; bb 91 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 17 [flags]
;; live  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 17 [flags]
;; live  kill	
;; lr  out 	 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]

( 91 )->[92]->( 70 93 )
;; bb 92 artificial_defs: { }
;; bb 92 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
;; live  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 17 [flags]
;; live  kill	
;; lr  out 	 0 [ax] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 0 [ax] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]

( 92 )->[93]->( 80 )
;; bb 93 artificial_defs: { }
;; bb 93 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 3 [bx]
;; live  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 3 [bx]
;; live  kill	
;; lr  out 	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]

( 53 )->[94]->( 95 )
;; bb 94 artificial_defs: { }
;; bb 94 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 20 [frame]

( 94 111 )->[95]->( 102 96 )
;; bb 95 artificial_defs: { }
;; bb 95 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 2 [cx] 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 2 [cx] 17 [flags]
;; live  kill	
;; lr  out 	 2 [cx] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 2 [cx] 6 [bp] 7 [sp] 20 [frame]

( 95 )->[96]->( 97 24 )
;; bb 96 artificial_defs: { }
;; bb 96 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 2 [cx] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 2 [cx] 6 [bp] 7 [sp]
;; lr  def 	 5 [di] 17 [flags]
;; live  in  	 2 [cx] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 5 [di] 17 [flags]
;; live  kill	
;; lr  out 	 2 [cx] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 2 [cx] 5 [di] 6 [bp] 7 [sp] 20 [frame]

( 96 102 )->[97]->( 25 98 )
;; bb 97 artificial_defs: { }
;; bb 97 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 2 [cx] 5 [di] 7 [sp]
;; live  kill	 17 [flags]
;; lr  out 	 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 2 [cx] 5 [di] 6 [bp] 7 [sp] 20 [frame]

( 24 97 114 )->[98]->( 99 100 )
;; bb 98 artificial_defs: { }
;; bb 98 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 2 [cx] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 2 [cx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;; live  in  	 2 [cx] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 17 [flags]
;; live  kill	 17 [flags]
;; lr  out 	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame]

( 98 99 )->[99]->( 99 100 )
;; bb 99 artificial_defs: { }
;; bb 99 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 1 [dx] 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;; live  in  	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 17 [flags]
;; live  kill	 17 [flags]
;; lr  out 	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame]

( 98 99 )->[100]->( 1 )
;; bb 100 artificial_defs: { }
;; bb 100 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 0 [ax] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]

( 45 )->[101]->( 52 )
;; bb 101 artificial_defs: { }
;; bb 101 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 0 [ax] 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;; live  in  	 0 [ax] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 3 [bx]
;; live  kill	
;; lr  out 	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]

( 95 )->[102]->( 97 )
;; bb 102 artificial_defs: { }
;; bb 102 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax]
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax]
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 20 [frame]

( 86 )->[103]->( 91 )
;; bb 103 artificial_defs: { }
;; bb 103 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;; live  in  	 0 [ax] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax]
;; live  kill	
;; lr  out 	 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]

( 80 )->[104]->( 85 )
;; bb 104 artificial_defs: { }
;; bb 104 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 0 [ax] 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 3 [bx]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame]

( 89 )->[105]->( 107 106 )
;; bb 105 artificial_defs: { }
;; bb 105 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 17 [flags]
;; lr  def 	
;; live  in  	 0 [ax] 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 20 [frame]
;; live  gen 	
;; live  kill	
;; lr  out 	 0 [ax] 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 0 [ax] 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]

( 105 )->[106]->( 90 107 )
;; bb 106 artificial_defs: { }
;; bb 106 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 1 [dx] 6 [bp] 7 [sp]
;; lr  def 	 3 [bx] 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 3 [bx] 17 [flags]
;; live  kill	
;; lr  out 	 0 [ax] 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 0 [ax] 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]

( 105 106 )->[107]->( 90 )
;; bb 107 artificial_defs: { }
;; bb 107 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
;; live  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 0 [ax] 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]

( 83 )->[108]->( 110 109 )
;; bb 108 artificial_defs: { }
;; bb 108 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 17 [flags] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 17 [flags]
;; lr  def 	
;; live  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 17 [flags] 20 [frame]
;; live  gen 	
;; live  kill	
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame]

( 108 )->[109]->( 84 110 )
;; bb 109 artificial_defs: { }
;; bb 109 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 1 [dx] 2 [cx] 6 [bp] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame]

( 108 109 )->[110]->( 84 )
;; bb 110 artificial_defs: { }
;; bb 110 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
;; live  in  	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame]

( 32 )->[111]->( 95 )
;; bb 111 artificial_defs: { }
;; bb 111 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 20 [frame]

( 26 )->[112]->( 32 )
;; bb 112 artificial_defs: { }
;; bb 112 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
;; live  in  	 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; lr  out 	 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 5 [di] 6 [bp] 7 [sp] 20 [frame]

( 8 )->[113]->( 114 )
;; bb 113 artificial_defs: { }
;; bb 113 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 20 [frame]

( 113 23 )->[114]->( 98 )
;; bb 114 artificial_defs: { }
;; bb 114 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 2 [cx]
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 2 [cx]
;; live  kill	
;; lr  out 	 2 [cx] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 2 [cx] 6 [bp] 7 [sp] 20 [frame]

( 2 )->[115]->( 6 )
;; bb 115 artificial_defs: { }
;; bb 115 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 1 [dx] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 3 [bx]
;; live  in  	 1 [dx] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 3 [bx]
;; live  kill	
;; lr  out 	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame]

( 100 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ }u-1(3){ }u-1(4){ }u-1(5){ }u-1(6){ }u-1(7){ }u-1(20){ }}
;; lr  in  	 0 [ax] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 0 [ax] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 0 [ax] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 58 to worklist
  Adding insn 53 to worklist
  Adding insn 3 to worklist
  Adding insn 1453 to worklist
  Adding insn 1452 to worklist
  Adding insn 1451 to worklist
  Adding insn 1450 to worklist
  Adding insn 1448 to worklist
  Adding insn 1447 to worklist
  Adding insn 72 to worklist
  Adding insn 66 to worklist
  Adding insn 1064 to worklist
  Adding insn 91 to worklist
  Adding insn 85 to worklist
  Adding insn 103 to worklist
  Adding insn 101 to worklist
  Adding insn 7 to worklist
  Adding insn 110 to worklist
  Adding insn 105 to worklist
  Adding insn 124 to worklist
  Adding insn 118 to worklist
  Adding insn 1071 to worklist
  Adding insn 143 to worklist
  Adding insn 137 to worklist
  Adding insn 158 to worklist
  Adding insn 1239 to worklist
  Adding insn 153 to worklist
  Adding insn 161 to worklist
  Adding insn 1244 to worklist
  Adding insn 1074 to worklist
  Adding insn 186 to worklist
  Adding insn 1319 to worklist
  Adding insn 1418 to worklist
  Adding insn 1417 to worklist
  Adding insn 1307 to worklist
  Adding insn 209 to worklist
  Adding insn 1407 to worklist
  Adding insn 1406 to worklist
  Adding insn 1299 to worklist
  Adding insn 214 to worklist
  Adding insn 212 to worklist
  Adding insn 1591 to worklist
  Adding insn 616 to worklist
  Adding insn 612 to worklist
  Adding insn 225 to worklist
  Adding insn 1161 to worklist
  Adding insn 245 to worklist
  Adding insn 1249 to worklist
  Adding insn 240 to worklist
  Adding insn 238 to worklist
  Adding insn 236 to worklist
  Adding insn 234 to worklist
  Adding insn 231 to worklist
  Adding insn 229 to worklist
  Adding insn 1392 to worklist
  Adding insn 1391 to worklist
  Adding insn 1081 to worklist
  Adding insn 1388 to worklist
  Adding insn 1387 to worklist
  Adding insn 252 to worklist
  Adding insn 259 to worklist
  Adding insn 1384 to worklist
  Adding insn 1383 to worklist
  Adding insn 274 to worklist
  Adding insn 268 to worklist
  Adding insn 1380 to worklist
  Adding insn 1379 to worklist
  Adding insn 278 to worklist
  Adding insn 1085 to worklist
  Adding insn 22 to worklist
  Adding insn 21 to worklist
  Adding insn 301 to worklist
  Adding insn 1192 to worklist
  Adding insn 1191 to worklist
  Adding insn 1374 to worklist
  Adding insn 1373 to worklist
  Adding insn 1593 to worklist
  Adding insn 307 to worklist
  Adding insn 309 to worklist
  Adding insn 322 to worklist
  Adding insn 305 to worklist
  Adding insn 1573 to worklist
  Adding insn 325 to worklist
  Adding insn 328 to worklist
  Adding insn 330 to worklist
  Adding insn 332 to worklist
  Adding insn 680 to worklist
  Adding insn 673 to worklist
  Adding insn 671 to worklist
  Adding insn 670 to worklist
  Adding insn 668 to worklist
  Adding insn 1354 to worklist
  Adding insn 1353 to worklist
  Adding insn 665 to worklist
  Adding insn 664 to worklist
  Adding insn 1269 to worklist
  Adding insn 341 to worklist
  Adding insn 345 to worklist
  Adding insn 350 to worklist
  Adding insn 1281 to worklist
  Adding insn 352 to worklist
  Adding insn 354 to worklist
  Adding insn 373 to worklist
  Adding insn 365 to worklist
  Adding insn 364 to worklist
  Adding insn 362 to worklist
  Adding insn 361 to worklist
  Adding insn 360 to worklist
  Adding insn 384 to worklist
  Adding insn 571 to worklist
  Adding insn 567 to worklist
  Adding insn 1599 to worklist
  Adding insn 1339 to worklist
  Adding insn 1601 to worklist
  Adding insn 1603 to worklist
  Adding insn 880 to worklist
  Adding insn 397 to worklist
  Adding insn 1259 to worklist
  Adding insn 1606 to worklist
  Adding insn 403 to worklist
  Adding insn 405 to worklist
  Adding insn 418 to worklist
  Adding insn 401 to worklist
  Adding insn 1577 to worklist
  Adding insn 421 to worklist
  Adding insn 424 to worklist
  Adding insn 426 to worklist
  Adding insn 428 to worklist
  Adding insn 771 to worklist
  Adding insn 1610 to worklist
  Adding insn 487 to worklist
  Adding insn 489 to worklist
  Adding insn 502 to worklist
  Adding insn 485 to worklist
  Adding insn 1581 to worklist
  Adding insn 505 to worklist
  Adding insn 508 to worklist
  Adding insn 510 to worklist
  Adding insn 512 to worklist
  Adding insn 743 to worklist
  Adding insn 736 to worklist
  Adding insn 734 to worklist
  Adding insn 733 to worklist
  Adding insn 731 to worklist
  Adding insn 1345 to worklist
  Adding insn 1344 to worklist
  Adding insn 728 to worklist
  Adding insn 727 to worklist
  Adding insn 1278 to worklist
  Adding insn 521 to worklist
  Adding insn 525 to worklist
  Adding insn 530 to worklist
  Adding insn 553 to worklist
  Adding insn 545 to worklist
  Adding insn 544 to worklist
  Adding insn 542 to worklist
  Adding insn 541 to worklist
  Adding insn 540 to worklist
  Adding insn 1616 to worklist
  Adding insn 564 to worklist
  Adding insn 563 to worklist
  Adding insn 704 to worklist
  Adding insn 697 to worklist
  Adding insn 695 to worklist
  Adding insn 694 to worklist
  Adding insn 692 to worklist
  Adding insn 1352 to worklist
  Adding insn 1351 to worklist
  Adding insn 1273 to worklist
  Adding insn 689 to worklist
  Adding insn 688 to worklist
  Adding insn 1348 to worklist
  Adding insn 1347 to worklist
  Adding insn 1276 to worklist
  Adding insn 437 to worklist
  Adding insn 441 to worklist
  Adding insn 446 to worklist
  Adding insn 1280 to worklist
  Adding insn 469 to worklist
  Adding insn 461 to worklist
  Adding insn 460 to worklist
  Adding insn 458 to worklist
  Adding insn 457 to worklist
  Adding insn 456 to worklist
  Adding insn 478 to worklist
  Adding insn 715 to worklist
  Adding insn 1620 to worklist
  Adding insn 1104 to worklist
  Adding insn 582 to worklist
  Adding insn 600 to worklist
  Adding insn 1588 to worklist
  Adding insn 1586 to worklist
  Adding insn 1224 to worklist
  Adding insn 605 to worklist
  Adding insn 603 to worklist
  Adding insn 635 to worklist
  Adding insn 627 to worklist
  Adding insn 626 to worklist
  Adding insn 625 to worklist
  Adding insn 624 to worklist
  Adding insn 656 to worklist
  Adding insn 646 to worklist
  Adding insn 645 to worklist
  Adding insn 644 to worklist
  Adding insn 1466 to worklist
  Adding insn 777 to worklist
  Adding insn 1623 to worklist
  Adding insn 378 to worklist
  Adding insn 377 to worklist
  Adding insn 1256 to worklist
  Adding insn 1625 to worklist
  Adding insn 588 to worklist
  Adding insn 584 to worklist
  Adding insn 1627 to worklist
  Adding insn 34 to worklist
  Adding insn 474 to worklist
  Adding insn 473 to worklist
  Adding insn 1264 to worklist
  Adding insn 1629 to worklist
  Adding insn 558 to worklist
  Adding insn 557 to worklist
  Adding insn 1266 to worklist
  Adding insn 448 to worklist
  Adding insn 450 to worklist
  Adding insn 1631 to worklist
  Adding insn 532 to worklist
  Adding insn 534 to worklist
  Adding insn 1633 to worklist
  Adding insn 1635 to worklist
  Adding insn 41 to worklist
  Adding insn 1637 to worklist
  Adding insn 1376 to worklist
  Adding insn 1375 to worklist
  Adding insn 758 to worklist
  Adding insn 1639 to worklist
  Adding insn 1641 to worklist
  Adding insn 878 to worklist
Finished finding needed instructions:
processing block 100 lr out =  0 [ax] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
  Adding insn 1465 to worklist
  Adding insn 1464 to worklist
  Adding insn 1463 to worklist
  Adding insn 1462 to worklist
  Adding insn 1461 to worklist
  Adding insn 1460 to worklist
  Adding insn 1459 to worklist
  Adding insn 1472 to worklist
processing block 99 lr out =  1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame]
  Adding insn 655 to worklist
  Adding insn 654 to worklist
  Adding insn 653 to worklist
  Adding insn 1229 to worklist
  Adding insn 649 to worklist
  Adding insn 647 to worklist
  Adding insn 643 to worklist
processing block 98 lr out =  1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame]
  Adding insn 634 to worklist
  Adding insn 1479 to worklist
  Adding insn 633 to worklist
  Adding insn 632 to worklist
  Adding insn 1227 to worklist
  Adding insn 629 to worklist
  Adding insn 623 to worklist
  Adding insn 622 to worklist
  Adding insn 621 to worklist
processing block 24 lr out =  2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 20 [frame]
  Adding insn 615 to worklist
  Adding insn 611 to worklist
  Adding insn 1225 to worklist
processing block 54 lr out =  3 [bx] 5 [di] 6 [bp] 7 [sp] 20 [frame]
  Adding insn 574 to worklist
processing block 97 lr out =  2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 20 [frame]
  Adding insn 1587 to worklist
  Adding insn 1585 to worklist
  Adding insn 1584 to worklist
  Adding insn 905 to worklist
  Adding insn 904 to worklist
  Adding insn 607 to worklist
  Adding insn 606 to worklist
  Adding insn 604 to worklist
  Adding insn 1223 to worklist
processing block 102 lr out =  6 [bp] 7 [sp] 20 [frame]
  Adding insn 587 to worklist
  Adding insn 1219 to worklist
processing block 96 lr out =  2 [cx] 5 [di] 6 [bp] 7 [sp] 20 [frame]
  Adding insn 599 to worklist
  Adding insn 903 to worklist
processing block 95 lr out =  2 [cx] 6 [bp] 7 [sp] 20 [frame]
  Adding insn 581 to worklist
  Adding insn 580 to worklist
processing block 94 lr out =  6 [bp] 7 [sp] 20 [frame]
processing block 53 lr out =  0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 20 [frame]
  Adding insn 570 to worklist
  Adding insn 1357 to worklist
  Adding insn 1356 to worklist
  Adding insn 1285 to worklist
  Adding insn 566 to worklist
processing block 85 lr out =  6 [bp] 7 [sp] 20 [frame]
processing block 84 lr out =  3 [bx] 6 [bp] 7 [sp] 20 [frame]
processing block 110 lr out =  0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame]
  Adding insn 1480 to worklist
processing block 109 lr out =  0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame]
  Adding insn 533 to worklist
processing block 108 lr out =  0 [ax] 1 [dx] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame]
processing block 83 lr out =  0 [ax] 1 [dx] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 17 [flags] 20 [frame]
  Adding insn 529 to worklist
  Adding insn 1212 to worklist
  Adding insn 869 to worklist
processing block 82 lr out =  0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame]
  Adding insn 524 to worklist
processing block 81 lr out =  0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame]
  Adding insn 39 to worklist
  Adding insn 520 to worklist
processing block 104 lr out =  3 [bx] 6 [bp] 7 [sp] 20 [frame]
  Adding insn 40 to worklist
  Adding insn 1267 to worklist
processing block 80 lr out =  0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame]
  Adding insn 742 to worklist
  Adding insn 737 to worklist
  Adding insn 735 to worklist
  Adding insn 1279 to worklist
  Adding insn 1346 to worklist
  Adding insn 729 to worklist
processing block 79 lr out =  3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
  Adding insn 511 to worklist
processing block 78 lr out =  3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
processing block 77 lr out =  3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 20 [frame]
  Adding insn 507 to worklist
processing block 76 lr out =  3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
  Adding insn 504 to worklist
processing block 75 lr out =  0 [ax] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
  Adding insn 1580 to worklist
  Adding insn 497 to worklist
processing block 73 lr out =  0 [ax] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
  Adding insn 501 to worklist
  Adding insn 37 to worklist
  Adding insn 36 to worklist
processing block 72 lr out =  0 [ax] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
  Adding insn 488 to worklist
processing block 71 lr out =  0 [ax] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
processing block 74 lr out =  0 [ax] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 20 [frame]
  Adding insn 484 to worklist
processing block 70 lr out =  0 [ax] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
  Adding insn 888 to worklist
processing block 93 lr out =  3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
  Adding insn 885 to worklist
processing block 92 lr out =  0 [ax] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
  Adding insn 714 to worklist
  Adding insn 712 to worklist
processing block 91 lr out =  4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
  Adding insn 1482 to worklist
  Adding insn 1481 to worklist
  Adding insn 1211 to worklist
processing block 90 lr out =  4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
  Adding insn 1209 to worklist
processing block 107 lr out =  0 [ax] 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
  Adding insn 1483 to worklist
processing block 106 lr out =  0 [ax] 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
  Adding insn 449 to worklist
  Adding insn 1288 to worklist
processing block 105 lr out =  0 [ax] 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
processing block 89 lr out =  0 [ax] 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 20 [frame]
  Adding insn 445 to worklist
  Adding insn 1208 to worklist
  Adding insn 867 to worklist
  Adding insn 1263 to worklist
processing block 88 lr out =  0 [ax] 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
  Adding insn 440 to worklist
processing block 87 lr out =  0 [ax] 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
  Adding insn 33 to worklist
  Adding insn 436 to worklist
processing block 103 lr out =  4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
  Adding insn 1265 to worklist
  Adding insn 1210 to worklist
processing block 86 lr out =  0 [ax] 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
  Adding insn 703 to worklist
  Adding insn 698 to worklist
  Adding insn 696 to worklist
  Adding insn 1277 to worklist
  Adding insn 693 to worklist
  Adding insn 1350 to worklist
  Adding insn 1349 to worklist
processing block 69 lr out =  0 [ax] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
  Adding insn 891 to worklist
processing block 68 lr out =  4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
  Adding insn 1474 to worklist
  Adding insn 1473 to worklist
processing block 67 lr out =  1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
  Adding insn 427 to worklist
processing block 66 lr out =  1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
processing block 65 lr out =  1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 20 [frame]
  Adding insn 423 to worklist
processing block 64 lr out =  1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
  Adding insn 420 to worklist
processing block 63 lr out =  0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
  Adding insn 1576 to worklist
  Adding insn 413 to worklist
processing block 61 lr out =  0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
  Adding insn 417 to worklist
  Adding insn 31 to worklist
  Adding insn 30 to worklist
processing block 60 lr out =  0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
  Adding insn 404 to worklist
processing block 59 lr out =  0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
processing block 62 lr out =  0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 20 [frame]
  Adding insn 400 to worklist
processing block 58 lr out =  1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
processing block 57 lr out =  0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
  Adding insn 889 to worklist
  Adding insn 396 to worklist
  Adding insn 395 to worklist
  Adding insn 1363 to worklist
  Adding insn 1362 to worklist
  Adding insn 1361 to worklist
  Adding insn 1360 to worklist
  Adding insn 391 to worklist
  Adding insn 389 to worklist
  Adding insn 1200 to worklist
  Adding insn 388 to worklist
  Adding insn 387 to worklist
  Adding insn 1260 to worklist
  Adding insn 1196 to worklist
  Adding insn 386 to worklist
  Adding insn 1359 to worklist
  Adding insn 1358 to worklist
  Adding insn 1194 to worklist
processing block 52 lr out =  4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
  Adding insn 1485 to worklist
  Adding insn 1484 to worklist
processing block 51 lr out =  3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
processing block 55 lr out =  0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
  Adding insn 1486 to worklist
processing block 50 lr out =  0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
  Adding insn 353 to worklist
  Adding insn 1289 to worklist
processing block 49 lr out =  0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
processing block 48 lr out =  0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 20 [frame]
  Adding insn 349 to worklist
  Adding insn 1193 to worklist
  Adding insn 865 to worklist
processing block 47 lr out =  0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
  Adding insn 344 to worklist
processing block 46 lr out =  0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
  Adding insn 27 to worklist
  Adding insn 340 to worklist
processing block 101 lr out =  3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
  Adding insn 28 to worklist
  Adding insn 1257 to worklist
processing block 45 lr out =  0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
  Adding insn 679 to worklist
  Adding insn 674 to worklist
  Adding insn 672 to worklist
  Adding insn 1270 to worklist
  Adding insn 1355 to worklist
  Adding insn 666 to worklist
processing block 44 lr out =  3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
  Adding insn 331 to worklist
processing block 43 lr out =  3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
processing block 42 lr out =  3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 20 [frame]
  Adding insn 327 to worklist
processing block 41 lr out =  3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
  Adding insn 324 to worklist
processing block 40 lr out =  2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
  Adding insn 1572 to worklist
  Adding insn 317 to worklist
processing block 38 lr out =  2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
  Adding insn 321 to worklist
  Adding insn 25 to worklist
  Adding insn 24 to worklist
processing block 37 lr out =  2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
  Adding insn 308 to worklist
processing block 36 lr out =  2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
processing block 39 lr out =  2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 20 [frame]
  Adding insn 304 to worklist
processing block 35 lr out =  2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
  Adding insn 1088 to worklist
processing block 34 lr out =  3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
  Adding insn 1492 to worklist
  Adding insn 1491 to worklist
  Adding insn 890 to worklist
  Adding insn 864 to worklist
  Adding insn 863 to worklist
  Adding insn 1372 to worklist
  Adding insn 1371 to worklist
  Adding insn 1189 to worklist
  Adding insn 1370 to worklist
  Adding insn 1369 to worklist
  Adding insn 1368 to worklist
  Adding insn 1367 to worklist
  Adding insn 291 to worklist
  Adding insn 289 to worklist
  Adding insn 1187 to worklist
  Adding insn 288 to worklist
  Adding insn 1490 to worklist
  Adding insn 1489 to worklist
  Adding insn 1488 to worklist
  Adding insn 1487 to worklist
  Adding insn 1366 to worklist
  Adding insn 1365 to worklist
  Adding insn 1364 to worklist
  Adding insn 1181 to worklist
processing block 33 lr out =  3 [bx] 5 [di] 6 [bp] 7 [sp] 20 [frame]
  Adding insn 899 to worklist
  Adding insn 1493 to worklist
processing block 111 lr out =  6 [bp] 7 [sp] 20 [frame]
processing block 32 lr out =  0 [ax] 5 [di] 6 [bp] 7 [sp] 20 [frame]
  Adding insn 277 to worklist
  Adding insn 1252 to worklist
processing block 31 lr out =  5 [di] 6 [bp] 7 [sp] 20 [frame]
  Adding insn 1083 to worklist
processing block 30 lr out =  2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame]
  Adding insn 273 to worklist
  Adding insn 1178 to worklist
  Adding insn 1497 to worklist
  Adding insn 1496 to worklist
  Adding insn 266 to worklist
  Adding insn 1295 to worklist
  Adding insn 265 to worklist
  Adding insn 1495 to worklist
  Adding insn 1494 to worklist
  Adding insn 1378 to worklist
processing block 29 lr out =  2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame]
  Adding insn 257 to worklist
  Adding insn 1174 to worklist
  Adding insn 256 to worklist
  Adding insn 1501 to worklist
  Adding insn 1500 to worklist
  Adding insn 1499 to worklist
  Adding insn 1498 to worklist
  Adding insn 1382 to worklist
  Adding insn 1381 to worklist
processing block 28 lr out =  2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame]
  Adding insn 251 to worklist
  Adding insn 248 to worklist
  Adding insn 1167 to worklist
processing block 27 lr out =  2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame]
  Adding insn 1390 to worklist
  Adding insn 1389 to worklist
  Adding insn 1502 to worklist
  Adding insn 1385 to worklist
processing block 112 lr out =  5 [di] 6 [bp] 7 [sp] 20 [frame]
processing block 26 lr out =  4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
  Adding insn 244 to worklist
  Adding insn 1394 to worklist
  Adding insn 1393 to worklist
  Adding insn 911 to worklist
  Adding insn 241 to worklist
  Adding insn 232 to worklist
  Adding insn 230 to worklist
  Adding insn 228 to worklist
processing block 25 lr out =  2 [cx] 5 [di] 6 [bp] 7 [sp] 20 [frame]
  Adding insn 224 to worklist
  Adding insn 895 to worklist
  Adding insn 1396 to worklist
  Adding insn 1395 to worklist
  Adding insn 1159 to worklist
processing block 114 lr out =  2 [cx] 6 [bp] 7 [sp] 20 [frame]
  Adding insn 216 to worklist
processing block 23 lr out =  6 [bp] 7 [sp] 20 [frame]
processing block 22 lr out =  2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 20 [frame]
  Adding insn 1504 to worklist
  Adding insn 1079 to worklist
  Adding insn 1503 to worklist
  Adding insn 15 to worklist
  Adding insn 221 to worklist
processing block 21 lr out =  5 [di] 6 [bp] 7 [sp] 20 [frame]
  Adding insn 208 to worklist
  Adding insn 206 to worklist
  Adding insn 1403 to worklist
  Adding insn 1402 to worklist
  Adding insn 202 to worklist
  Adding insn 1400 to worklist
  Adding insn 200 to worklist
  Adding insn 1154 to worklist
  Adding insn 195 to worklist
  Adding insn 1399 to worklist
  Adding insn 1398 to worklist
  Adding insn 1397 to worklist
  Adding insn 191 to worklist
processing block 20 lr out =  5 [di] 6 [bp] 7 [sp] 20 [frame]
  Adding insn 1076 to worklist
  Adding insn 13 to worklist
processing block 19 lr out =  3 [bx] 6 [bp] 7 [sp] 20 [frame]
  Adding insn 185 to worklist
  Adding insn 183 to worklist
  Adding insn 1301 to worklist
  Adding insn 1320 to worklist
  Adding insn 1414 to worklist
  Adding insn 1413 to worklist
  Adding insn 179 to worklist
  Adding insn 1411 to worklist
  Adding insn 177 to worklist
  Adding insn 1149 to worklist
  Adding insn 172 to worklist
  Adding insn 1410 to worklist
  Adding insn 1409 to worklist
  Adding insn 1408 to worklist
  Adding insn 168 to worklist
  Adding insn 1324 to worklist
processing block 18 lr out =  3 [bx] 6 [bp] 7 [sp] 20 [frame]
  Adding insn 1075 to worklist
  Adding insn 12 to worklist
  Adding insn 163 to worklist
processing block 17 lr out =  0 [ax] 6 [bp] 7 [sp] 20 [frame]
  Adding insn 160 to worklist
processing block 16 lr out =  0 [ax] 6 [bp] 7 [sp] 20 [frame]
  Adding insn 157 to worklist
  Adding insn 155 to worklist
  Adding insn 154 to worklist
  Adding insn 1240 to worklist
  Adding insn 149 to worklist
  Adding insn 1139 to worklist
processing block 15 lr out =  2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
  Adding insn 142 to worklist
  Adding insn 1428 to worklist
  Adding insn 139 to worklist
  Adding insn 1427 to worklist
  Adding insn 1426 to worklist
  Adding insn 1425 to worklist
  Adding insn 1424 to worklist
  Adding insn 1423 to worklist
  Adding insn 133 to worklist
  Adding insn 1422 to worklist
  Adding insn 1421 to worklist
  Adding insn 1646 to worklist
  Adding insn 1645 to worklist
  Adding insn 1644 to worklist
  Adding insn 1643 to worklist
  Adding insn 1420 to worklist
  Adding insn 1419 to worklist
processing block 14 lr out =  2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
  Adding insn 1476 to worklist
  Adding insn 1475 to worklist
processing block 13 lr out =  2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame]
processing block 12 lr out =  2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame]
  Adding insn 123 to worklist
  Adding insn 1429 to worklist
  Adding insn 120 to worklist
  Adding insn 937 to worklist
  Adding insn 934 to worklist
  Adding insn 1130 to worklist
  Adding insn 932 to worklist
processing block 11 lr out =  2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame]
  Adding insn 1505 to worklist
processing block 56 lr out =  2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame]
processing block 10 lr out =  2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame]
  Adding insn 109 to worklist
  Adding insn 859 to worklist
  Adding insn 1430 to worklist
  Adding insn 107 to worklist
processing block 9 lr out =  6 [bp] 7 [sp] 20 [frame]
processing block 113 lr out =  6 [bp] 7 [sp] 20 [frame]
processing block 8 lr out =  6 [bp] 7 [sp] 20 [frame]
  Adding insn 102 to worklist
  Adding insn 1431 to worklist
  Adding insn 96 to worklist
  Adding insn 1128 to worklist
processing block 7 lr out =  2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
  Adding insn 90 to worklist
  Adding insn 1442 to worklist
  Adding insn 87 to worklist
  Adding insn 1441 to worklist
  Adding insn 1440 to worklist
  Adding insn 1439 to worklist
  Adding insn 1438 to worklist
  Adding insn 1437 to worklist
  Adding insn 81 to worklist
  Adding insn 1436 to worklist
  Adding insn 1435 to worklist
  Adding insn 1650 to worklist
  Adding insn 1649 to worklist
  Adding insn 1648 to worklist
  Adding insn 1647 to worklist
  Adding insn 1434 to worklist
  Adding insn 1433 to worklist
processing block 6 lr out =  2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
  Adding insn 1108 to worklist
  Adding insn 1478 to worklist
  Adding insn 1477 to worklist
processing block 5 lr out =  1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame]
  Adding insn 1063 to worklist
processing block 4 lr out =  1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
  Adding insn 71 to worklist
  Adding insn 1443 to worklist
  Adding insn 68 to worklist
  Adding insn 931 to worklist
  Adding insn 928 to worklist
  Adding insn 926 to worklist
processing block 3 lr out =  1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
  Adding insn 927 to worklist
  Adding insn 1506 to worklist
  Adding insn 855 to worklist
processing block 115 lr out =  1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame]
  Adding insn 877 to worklist
processing block 2 lr out =  1 [dx] 6 [bp] 7 [sp] 20 [frame]
  Adding insn 57 to worklist
  Adding insn 1444 to worklist
  Adding insn 55 to worklist
  Adding insn 1454 to worklist
  Adding insn 1449 to worklist
  Adding insn 1446 to worklist
  Adding insn 1445 to worklist
df_worklist_dataflow_doublequeue:n_basic_blocks 116 n_edges 190 count 254 (  2.2)
;;   ======================================================
;;   -- basic block 2 from 1445 to 58 -- after reload
;;   ======================================================

;;	  0--> b  0: i1445cx=sp+0x4                               :athlon-direct,athlon-agu,nothing
;;	  0--> b  0: i1446{sp=sp&0xfffffffffffffff0;clobber flags;}:athlon-direct,athlon-ieu
;;	  2--> b  0: i1447[--sp]=[cx-0x4]                         :athlon-direct,athlon-agu,athlon-store
;;	  2--> b  0: i1448[--sp]=bp                               :athlon-direct,athlon-agu,athlon-store
;;	  4--> b  0: i1449bp=sp                                   :athlon-direct,athlon-ieu
;;	  4--> b  0: i1450[--sp]=di                               :athlon-direct,athlon-agu,athlon-store
;;	  4--> b  0: i1451[--sp]=si                               :athlon-direct,athlon-agu,athlon-store
;;	  5--> b  0: i1452[--sp]=bx                               :athlon-direct,athlon-agu,athlon-store
;;	  5--> b  0: i1453[--sp]=cx                               :athlon-direct,athlon-agu,athlon-store
;;	  7--> b  0: i1454{sp=sp-0x58;clobber flags;clobber [scratch];}:athlon-direct,athlon-ieu
;;	  8--> b  0: i   3call [`__main']                         :athlon-vector,athlon-ieu
;;	  9--> b  0: i  53ax=call [`getchar']                     :athlon-vector,athlon-ieu
;;	 10--> b  0: i  55dx=ax                                   :athlon-direct,athlon-ieu
;;	 10--> b  0: i1444{ax=ax-0x30;clobber flags;}             :athlon-direct,athlon-ieu
;;	 11--> b  0: i  57flags=cmp(ax,0x9)                       :athlon-direct,athlon-ieu
;;	 12--> b  0: i  58pc={(leu(flags,0))?L780:pc}             :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 12
;;   new head = 1445
;;   new tail = 58

;;   ======================================================
;;   -- basic block 3 from 855 to 927 -- after reload
;;   ======================================================

;;	  0--> b  0: i 855si=0x1                                  :athlon-direct,athlon-ieu
;;	  0--> b  0: i1506{di=0;clobber flags;}                   :athlon-direct,athlon-ieu
;;	  0--> b  0: i 927bx=0xffffffffffffffff                   :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 855
;;   new tail = 927

;;   ======================================================
;;   -- basic block 4 from 926 to 72 -- after reload
;;   ======================================================

;;	  0--> b  0: i 926flags=cmp(dx,0x2d)                      :athlon-direct,athlon-ieu
;;	  1--> b  0: i 928si={(flags!=0)?si:bx}                   :athlon-direct,athlon-ieu
;;	  1--> b  0: i 931di={(flags!=0)?di:bx}                   :athlon-direct,athlon-ieu
;;	  2--> b  0: i  66ax=call [`getchar']                     :athlon-vector,athlon-ieu
;;	  3--> b  0: i  68dx=ax                                   :athlon-direct,athlon-ieu
;;	  3--> b  0: i1443{ax=ax-0x30;clobber flags;}             :athlon-direct,athlon-ieu
;;	  4--> b  0: i  71flags=cmp(ax,0x9)                       :athlon-direct,athlon-ieu
;;	  5--> b  0: i  72pc={(gtu(flags,0))?L69:pc}              :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 5
;;   new head = 926
;;   new tail = 72

;;   ======================================================
;;   -- basic block 5 from 1063 to 1064 -- after reload
;;   ======================================================

;;	  0--> b  0: i1063bx=si                                   :athlon-direct,athlon-ieu
;;	  0--> b  0: i1064[bp-0x30]=di                            :athlon-direct,athlon-agu,athlon-store
;;	Ready list (final):  
;;   total time = 0
;;   new head = 1063
;;   new tail = 1064

;;   ======================================================
;;   -- basic block 6 from 1477 to 1108 -- after reload
;;   ======================================================

;;	  0--> b  0: i1477{si=0;clobber flags;}                   :athlon-direct,athlon-ieu
;;	  0--> b  0: i1478{di=0;clobber flags;}                   :athlon-direct,athlon-ieu
;;	  0--> b  0: i1108cx=dx                                   :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 1477
;;   new tail = 1108

;;   ======================================================
;;   -- basic block 7 from 1433 to 91 -- after reload
;;   ======================================================

;;	  0--> b  0: i1433ax=si                                   :athlon-direct,athlon-ieu
;;	  0--> b  0: i1434dx=di                                   :athlon-direct,athlon-ieu
;;	  1--> b  0: i1647{dx=dx<<0x1|ax 0>>0x20-0x1;clobber flags;}:athlon-vector,athlon-ieu,athlon-ieu
;;	  2--> b  0: i1649{di=di<<0x3|si 0>>0x20-0x3;clobber flags;}:athlon-vector,athlon-ieu,athlon-ieu
;;	  3--> b  0: i1648{ax=ax+ax;clobber flags;}               :athlon-direct,athlon-ieu
;;	  3--> b  0: i1650{si=si<<0x3;clobber flags;}             :athlon-direct,athlon-ieu
;;	  4--> b  0: i1435{flags=unspec[si,ax] 28;si=si+ax;}      :athlon-direct,athlon-ieu
;;	  4--> b  0: i  81ax=sxn(cx)                              :athlon-direct,athlon-ieu
;;	  5--> b  0: i1436{di=di+ltu(flags,0)+dx;clobber flags;}  :athlon-direct,athlon-ieu
;;	  5--> b  0: i1437{dx=ax>>0x1f;clobber flags;}            :athlon-direct,athlon-ieu
;;	  5--> b  0: i1438{flags=unspec[si,ax] 28;si=si+ax;}      :athlon-direct,athlon-ieu
;;	  6--> b  0: i1439{di=di+ltu(flags,0)+dx;clobber flags;}  :athlon-direct,athlon-ieu
;;	  6--> b  0: i1440{flags=unspec[si,0xffffffffffffffd0] 28;si=si-0x30;}:athlon-direct,athlon-ieu
;;	  7--> b  0: i1441{di=di+ltu(flags,0)-0x1;clobber flags;} :athlon-direct,athlon-ieu
;;	  8--> b  0: i  85ax=call [`getchar']                     :athlon-vector,athlon-ieu
;;	  9--> b  0: i  87cx=ax                                   :athlon-direct,athlon-ieu
;;	  9--> b  0: i1442{ax=ax-0x30;clobber flags;}             :athlon-direct,athlon-ieu
;;	 10--> b  0: i  90flags=cmp(ax,0x9)                       :athlon-direct,athlon-ieu
;;	 11--> b  0: i  91pc={(leu(flags,0))?L88:pc}              :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 11
;;   new head = 1433
;;   new tail = 91

;;   ======================================================
;;   -- basic block 8 from 1128 to 103 -- after reload
;;   ======================================================

;;	  0--> b  0: i1128ax=bx                                   :athlon-direct,athlon-ieu
;;	  1--> b  0: i  96{ax=zxn(ax)*zxn(si);clobber flags;}     :athlon-direct0,athlon-ieu0,athlon-mult,athlon-ieu0
;;	  4--> b  0: i1431bx=ax                                   :athlon-direct,athlon-ieu
;;	  4--> b  0: i 102flags=cmp(ax,0)                         :athlon-direct,athlon-ieu
;;	  5--> b  0: i 101[`n']=bx                                :athlon-direct,athlon-agu,athlon-store
;;	  5--> b  0: i 103pc={(flags<=0)?L756:pc}                 :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 5
;;   new head = 1128
;;   new tail = 103

;;   ======================================================
;;   -- basic block 9 from 7 to 7 -- after reload
;;   ======================================================

;;	  0--> b  0: i   7[bp-0x38]=0x1                           :athlon-direct,athlon-agu,athlon-store
;;	Ready list (final):  
;;   total time = 0
;;   new head = 7
;;   new tail = 7

;;   ======================================================
;;   -- basic block 10 from 105 to 110 -- after reload
;;   ======================================================

;;	  0--> b  0: i 105ax=call [`getchar']                     :athlon-vector,athlon-ieu
;;	  1--> b  0: i 107cx=ax                                   :athlon-direct,athlon-ieu
;;	  1--> b  0: i1430{ax=ax-0x30;clobber flags;}             :athlon-direct,athlon-ieu
;;	  1--> b  0: i 859bx=0x1                                  :athlon-direct,athlon-ieu
;;	  2--> b  0: i 109flags=cmp(ax,0x9)                       :athlon-direct,athlon-ieu
;;	  3--> b  0: i 110pc={(leu(flags,0))?L783:pc}             :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 3
;;   new head = 105
;;   new tail = 110

;;   ======================================================
;;   -- basic block 11 from 1505 to 1505 -- after reload
;;   ======================================================

;;	  0--> b  0: i1505{si=0;clobber flags;}                   :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 1505
;;   new tail = 1505

;;   ======================================================
;;   -- basic block 12 from 932 to 124 -- after reload
;;   ======================================================

;;	  0--> b  0: i 932flags=cmp(cx,0x2d)                      :athlon-direct,athlon-ieu
;;	  0--> b  0: i1130ax=0xffffffffffffffff                   :athlon-direct,athlon-ieu
;;	  1--> b  0: i 934bx={(flags!=0)?bx:ax}                   :athlon-direct,athlon-ieu
;;	  1--> b  0: i 937si={(flags!=0)?si:ax}                   :athlon-direct,athlon-ieu
;;	  2--> b  0: i 118ax=call [`getchar']                     :athlon-vector,athlon-ieu
;;	  3--> b  0: i 120cx=ax                                   :athlon-direct,athlon-ieu
;;	  3--> b  0: i1429{ax=ax-0x30;clobber flags;}             :athlon-direct,athlon-ieu
;;	  4--> b  0: i 123flags=cmp(ax,0x9)                       :athlon-direct,athlon-ieu
;;	  5--> b  0: i 124pc={(gtu(flags,0))?L121:pc}             :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 5
;;   new head = 932
;;   new tail = 124

;;   ======================================================
;;   -- basic block 13 from 1071 to 1071 -- after reload
;;   ======================================================

;;	  0--> b  0: i1071[bp-0x30]=si                            :athlon-direct,athlon-agu,athlon-store
;;	Ready list (final):  
;;   total time = 0
;;   new head = 1071
;;   new tail = 1071

;;   ======================================================
;;   -- basic block 14 from 1475 to 1476 -- after reload
;;   ======================================================

;;	  0--> b  0: i1475{si=0;clobber flags;}                   :athlon-direct,athlon-ieu
;;	  0--> b  0: i1476{di=0;clobber flags;}                   :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 1475
;;   new tail = 1476

;;   ======================================================
;;   -- basic block 15 from 1419 to 143 -- after reload
;;   ======================================================

;;	  0--> b  0: i1419ax=si                                   :athlon-direct,athlon-ieu
;;	  0--> b  0: i1420dx=di                                   :athlon-direct,athlon-ieu
;;	  1--> b  0: i1643{dx=dx<<0x1|ax 0>>0x20-0x1;clobber flags;}:athlon-vector,athlon-ieu,athlon-ieu
;;	  2--> b  0: i1645{di=di<<0x3|si 0>>0x20-0x3;clobber flags;}:athlon-vector,athlon-ieu,athlon-ieu
;;	  3--> b  0: i1644{ax=ax+ax;clobber flags;}               :athlon-direct,athlon-ieu
;;	  3--> b  0: i1646{si=si<<0x3;clobber flags;}             :athlon-direct,athlon-ieu
;;	  4--> b  0: i1421{flags=unspec[si,ax] 28;si=si+ax;}      :athlon-direct,athlon-ieu
;;	  4--> b  0: i 133ax=sxn(cx)                              :athlon-direct,athlon-ieu
;;	  5--> b  0: i1422{di=di+ltu(flags,0)+dx;clobber flags;}  :athlon-direct,athlon-ieu
;;	  5--> b  0: i1423{dx=ax>>0x1f;clobber flags;}            :athlon-direct,athlon-ieu
;;	  5--> b  0: i1424{flags=unspec[si,ax] 28;si=si+ax;}      :athlon-direct,athlon-ieu
;;	  6--> b  0: i1425{di=di+ltu(flags,0)+dx;clobber flags;}  :athlon-direct,athlon-ieu
;;	  6--> b  0: i1426{flags=unspec[si,0xffffffffffffffd0] 28;si=si-0x30;}:athlon-direct,athlon-ieu
;;	  7--> b  0: i1427{di=di+ltu(flags,0)-0x1;clobber flags;} :athlon-direct,athlon-ieu
;;	  8--> b  0: i 137ax=call [`getchar']                     :athlon-vector,athlon-ieu
;;	  9--> b  0: i 139cx=ax                                   :athlon-direct,athlon-ieu
;;	  9--> b  0: i1428{ax=ax-0x30;clobber flags;}             :athlon-direct,athlon-ieu
;;	 10--> b  0: i 142flags=cmp(ax,0x9)                       :athlon-direct,athlon-ieu
;;	 11--> b  0: i 143pc={(leu(flags,0))?L140:pc}             :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 11
;;   new head = 1419
;;   new tail = 143

;;   ======================================================
;;   -- basic block 16 from 1139 to 158 -- after reload
;;   ======================================================

;;	  0--> b  0: i1139ax=bx                                   :athlon-direct,athlon-ieu
;;	  0--> b  0: i1240di=[bp-0x38]                            :athlon-direct,athlon-load
;;	  1--> b  0: i 149{ax=zxn(ax)*zxn(si);clobber flags;}     :athlon-direct0,athlon-ieu0,athlon-mult,athlon-ieu0
;;	  4--> b  0: i 153[di*0x4+`a']=ax                         :athlon-direct,athlon-agu,athlon-store
;;	  4--> b  0: i 155ax=[`n']                                :athlon-direct,athlon-load
;;	  4--> b  0: i 154{di=di+0x1;clobber flags;}              :athlon-direct,athlon-ieu
;;	  5--> b  0: i1239[bp-0x38]=di                            :athlon-direct,athlon-agu,athlon-store
;;	  7--> b  0: i 157flags=cmp(ax,di)                        :athlon-direct,athlon-ieu
;;	  8--> b  0: i 158pc={(flags>=0)?L156:pc}                 :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 8
;;   new head = 1139
;;   new tail = 158

;;   ======================================================
;;   -- basic block 17 from 1244 to 161 -- after reload
;;   ======================================================

;;	  0--> b  0: i 160flags=cmp(ax,0)                         :athlon-direct,athlon-ieu
;;	  0--> b  0: i1244[bp-0x3c]=ax                            :athlon-direct,athlon-agu,athlon-store
;;	  1--> b  0: i 161pc={(flags<=0)?L210:pc}                 :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 1244
;;   new tail = 161

;;   ======================================================
;;   -- basic block 18 from 163 to 1075 -- after reload
;;   ======================================================

;;	  0--> b  0: i 163{ax=ax+0x1;clobber flags;}              :athlon-direct,athlon-ieu
;;	  0--> b  0: i  12si=0x1                                  :athlon-direct,athlon-ieu
;;	  1--> b  0: i1074[bp-0x30]=si                            :athlon-direct,athlon-agu,athlon-store
;;	  1--> b  0: i1075bx=ax                                   :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 163
;;   new tail = 1075

;;   ======================================================
;;   -- basic block 19 from 1324 to 186 -- after reload
;;   ======================================================

;;	  0--> b  0: i1324cx=[bp-0x30]                            :athlon-direct,athlon-load
;;	  3--> b  0: i 172{ax=[cx*0x8+const(`pre'-0x4)]*0x125e591;clobber flags;}:athlon-vector,athlon-load,athlon-ieu,athlon-mult,athlon-ieu
;;	  4--> b  0: i 168dx=[cx*0x4+`a']                         :athlon-direct,athlon-load
;;	  7--> b  0: i1408si=dx                                   :athlon-direct,athlon-ieu
;;	  7--> b  0: i1409di=dx                                   :athlon-direct,athlon-ieu
;;	  8--> b  0: i1410{di=di>>0x1f;clobber flags;}            :athlon-direct,athlon-ieu
;;	  9--> b  0: i1307[bp-0x38]=ax                            :athlon-direct,athlon-agu,athlon-store
;;	  9--> b  0: i1149ax=0x125e591                            :athlon-direct,athlon-ieu
;;	 10--> b  0: i 177{ax=zxn(ax)*zxn([cx*0x8+const(`pre'-0x8)]);clobber flags;}:athlon-vector,athlon-load,athlon-ieu,athlon-mult,athlon-ieu
;;	 16--> b  0: i1411cx=dx                                   :athlon-direct,athlon-ieu
;;	 16--> b  0: i 179{cx=cx+[bp-0x38];clobber flags;}        :athlon-direct,athlon-load,athlon-ieu
;;	 16--> b  0: i1413{flags=unspec[si,ax] 28;si=si+ax;}      :athlon-direct,athlon-ieu
;;	 20--> b  0: i1414{di=di+ltu(flags,0)+cx;clobber flags;}  :athlon-direct,athlon-ieu
;;	 20--> b  0: i1320cx=[bp-0x30]                            :athlon-direct,athlon-load
;;	 23--> b  0: i1301ax=cx                                   :athlon-direct,athlon-ieu
;;	 23--> b  0: i1417[cx*0x8+`pre']=si                       :athlon-direct,athlon-agu,athlon-store
;;	 23--> b  0: i1418[cx*0x8+const(`pre'+0x4)]=di            :athlon-direct,athlon-agu,athlon-store
;;	 24--> b  0: i 183{ax=ax+0x1;clobber flags;}              :athlon-direct,athlon-ieu
;;	 25--> b  0: i 185flags=cmp(ax,bx)                        :athlon-direct,athlon-ieu
;;	 25--> b  0: i1319[bp-0x30]=ax                            :athlon-direct,athlon-agu,athlon-store
;;	 26--> b  0: i 186pc={(flags!=0)?L184:pc}                 :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 26
;;   new head = 1324
;;   new tail = 186

;;   ======================================================
;;   -- basic block 20 from 13 to 1076 -- after reload
;;   ======================================================

;;	  0--> b  0: i  13si=[bp-0x3c]                            :athlon-direct,athlon-load
;;	  3--> b  0: i1076di=si                                   :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 3
;;   new head = 13
;;   new tail = 1076

;;   ======================================================
;;   -- basic block 21 from 191 to 209 -- after reload
;;   ======================================================

;;	  0--> b  0: i 195{ax=[di*0x8+const(`suf'+0xc)]*0x125e591;clobber flags;}:athlon-vector,athlon-load,athlon-ieu,athlon-mult,athlon-ieu
;;	  1--> b  0: i 191dx=[di*0x4+`a']                         :athlon-direct,athlon-load
;;	  4--> b  0: i1397bx=dx                                   :athlon-direct,athlon-ieu
;;	  4--> b  0: i1398si=dx                                   :athlon-direct,athlon-ieu
;;	  5--> b  0: i1399{si=si>>0x1f;clobber flags;}            :athlon-direct,athlon-ieu
;;	  6--> b  0: i1299[bp-0x30]=ax                            :athlon-direct,athlon-agu,athlon-store
;;	  6--> b  0: i1154ax=0x125e591                            :athlon-direct,athlon-ieu
;;	  7--> b  0: i 200{ax=zxn(ax)*zxn([di*0x8+const(`suf'+0x8)]);clobber flags;}:athlon-vector,athlon-load,athlon-ieu,athlon-mult,athlon-ieu
;;	 13--> b  0: i1400cx=dx                                   :athlon-direct,athlon-ieu
;;	 13--> b  0: i 202{cx=cx+[bp-0x30];clobber flags;}        :athlon-direct,athlon-load,athlon-ieu
;;	 13--> b  0: i1402{flags=unspec[bx,ax] 28;bx=bx+ax;}      :athlon-direct,athlon-ieu
;;	 14--> b  0: i1406[di*0x8+`suf']=bx                       :athlon-direct,athlon-agu,athlon-store
;;	 17--> b  0: i1403{si=si+ltu(flags,0)+cx;clobber flags;}  :athlon-direct,athlon-ieu
;;	 18--> b  0: i1407[di*0x8+const(`suf'+0x4)]=si            :athlon-direct,athlon-agu,athlon-store
;;	 18--> b  0: i 206{di=di-0x1;clobber flags;}              :athlon-direct,athlon-ieu
;;	 19--> b  0: i 208flags=cmp(di,0)                         :athlon-direct,athlon-ieu
;;	 20--> b  0: i 209pc={(flags>0)?L207:pc}                  :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 20
;;   new head = 191
;;   new tail = 209

;;   ======================================================
;;   -- basic block 22 from 212 to 214 -- after reload
;;   ======================================================

;;	  0--> b  0: i1503ax=[bp-0x3c]                            :athlon-direct,athlon-load
;;	  0--> b  0: i 212[bp-0x1c]=0x1                           :athlon-direct,athlon-agu,athlon-store
;;	  0--> b  0: i  15bx=0x1                                  :athlon-direct,athlon-ieu
;;	  1--> b  0: i 221cx=[`ans']                              :athlon-direct,athlon-load
;;	  1--> b  0: i1079di=[bp-0x3c]                            :athlon-direct,athlon-load
;;	  3--> b  0: i1504flags=cmp(ax,0)                         :athlon-direct,athlon-ieu
;;	  4--> b  0: i 214pc={(flags>0)?L941:pc}                  :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 4
;;   new head = 212
;;   new tail = 214

;;   ======================================================
;;   -- basic block 23 from 1591 to 1591 -- after reload
;;   ======================================================

;;	  0--> b  0: i1591pc=L759                                 :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 1591
;;   new tail = 1591

;;   ======================================================
;;   -- basic block 24 from 1225 to 616 -- after reload
;;   ======================================================

;;	  0--> b  0: i1225bx=[bp-0x3c]                            :athlon-direct,athlon-load
;;	  3--> b  0: i 611{bx=bx+0x1;clobber flags;}              :athlon-direct,athlon-ieu
;;	  4--> b  0: i 615flags=cmp(di,bx)                        :athlon-direct,athlon-ieu
;;	  4--> b  0: i 612[bp-0x1c]=bx                            :athlon-direct,athlon-agu,athlon-store
;;	  5--> b  0: i 616pc={(flags<0)?L617:pc}                  :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 5
;;   new head = 1225
;;   new tail = 616

;;   ======================================================
;;   -- basic block 25 from 1159 to 225 -- after reload
;;   ======================================================

;;	  0--> b  0: i1159ax=di                                   :athlon-direct,athlon-ieu
;;	  1--> b  0: i1395{dx=ax>>0x1f;clobber flags;}            :athlon-direct,athlon-ieu
;;	  2--> b  0: i1396{ax=ax/bx;dx=ax%bx;use dx;clobber flags;}:athlon-vector,(athlon-ieu0*6+(athlon-fpsched,athlon-fvector))
;;	  3--> b  0: i 895bx=[bp-0x1c]                            :athlon-direct,athlon-load
;;	  6--> b  0: i1161[bp-0x3c]=bx                            :athlon-direct,athlon-agu,athlon-store
;;	  8--> b  0: i 224flags=cmp(ax,cx)                        :athlon-direct,athlon-ieu
;;	  9--> b  0: i 225pc={(flags<0)?L608:pc}                  :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 9
;;   new head = 1159
;;   new tail = 225

;;   ======================================================
;;   -- basic block 26 from 228 to 245 -- after reload
;;   ======================================================

;;	  0--> b  0: i 228ax=[const(`s'+0x8)]                     :athlon-direct,athlon-load
;;	  0--> b  0: i 230cx=`s'                                  :athlon-direct,athlon-ieu
;;	  3--> b  0: i 229[sp]=ax                                 :athlon-direct,athlon-agu,athlon-store
;;	  4--> b  0: i 231{call [`_ZNSt8_Rb_treeIySt4pairIKyiESt10_Select1stIS2_ESt4lessIyESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E'];sp=sp+0x4;}:athlon-vector,athlon-ieu
;;	  5--> b  0: i 241ax=[bp-0x1c]                            :athlon-direct,athlon-load
;;	  5--> b  0: i 232{sp=sp-0x4;clobber flags;}              :athlon-direct,athlon-ieu
;;	  5--> b  0: i 234[const(`s'+0xc)]=const(`s'+0x4)         :athlon-direct,athlon-agu,athlon-store
;;	  6--> b  0: i 236[const(`s'+0x8)]=0                      :athlon-direct,athlon-agu,athlon-store
;;	  6--> b  0: i 238[const(`s'+0x10)]=const(`s'+0x4)        :athlon-direct,athlon-agu,athlon-store
;;	  7--> b  0: i 240[const(`s'+0x14)]=0                     :athlon-direct,athlon-agu,athlon-store
;;	  8--> b  0: i1393si=ax                                   :athlon-direct,athlon-ieu
;;	  8--> b  0: i1249[bp-0x3c]=ax                            :athlon-direct,athlon-agu,athlon-store
;;	  8--> b  0: i 911di=ax                                   :athlon-direct,athlon-ieu
;;	  9--> b  0: i1394{si=si>>0x1f;clobber flags;}            :athlon-direct,athlon-ieu
;;	 10--> b  0: i 244{flags=cmp(ax|si,0);clobber ax;}        :athlon-direct,athlon-ieu
;;	 11--> b  0: i 245pc={(flags==0)?L789:pc}                 :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 11
;;   new head = 228
;;   new tail = 245

;;   ======================================================
;;   -- basic block 27 from 1385 to 1392 -- after reload
;;   ======================================================

;;	  0--> b  0: i1385ax=0x125e591                            :athlon-direct,athlon-ieu
;;	  0--> b  0: i1502{dx=0;clobber flags;}                   :athlon-direct,athlon-ieu
;;	  0--> b  0: i1387[bp-0x38]=0x1                           :athlon-direct,athlon-agu,athlon-store
;;	  1--> b  0: i1388[bp-0x34]=0                             :athlon-direct,athlon-agu,athlon-store
;;	  1--> b  0: i1389cx=di                                   :athlon-direct,athlon-ieu
;;	  1--> b  0: i1390bx=si                                   :athlon-direct,athlon-ieu
;;	  2--> b  0: i1081[bp-0x48]=di                            :athlon-direct,athlon-agu,athlon-store
;;	  2--> b  0: i1391[bp-0x30]=ax                            :athlon-direct,athlon-agu,athlon-store
;;	  3--> b  0: i1392[bp-0x2c]=dx                            :athlon-direct,athlon-agu,athlon-store
;;	Ready list (final):  
;;   total time = 3
;;   new head = 1385
;;   new tail = 1392

;;   ======================================================
;;   -- basic block 28 from 1167 to 252 -- after reload
;;   ======================================================

;;	  0--> b  0: i1167si=cx                                   :athlon-direct,athlon-ieu
;;	  1--> b  0: i 248{si=si&0x1;clobber flags;}              :athlon-direct,athlon-ieu
;;	  2--> b  0: i 251flags=cmp(si,0)                         :athlon-direct,athlon-ieu
;;	  3--> b  0: i 252pc={(flags==0)?L261:pc}                 :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 3
;;   new head = 1167
;;   new tail = 252

;;   ======================================================
;;   -- basic block 29 from 1381 to 259 -- after reload
;;   ======================================================

;;	  0--> b  0: i1382dx=[bp-0x34]                            :athlon-direct,athlon-load
;;	  0--> b  0: i1381ax=[bp-0x38]                            :athlon-direct,athlon-load
;;	  1--> b  0: i1498di=[bp-0x30]                            :athlon-direct,athlon-load
;;	  1--> b  0: i1500si=[bp-0x2c]                            :athlon-direct,athlon-load
;;	  4--> b  0: i1499{di=di*dx;clobber flags;}               :athlon-direct0,athlon-ieu0,athlon-mult,athlon-ieu0
;;	  5--> b  0: i1501{si=si*ax;clobber flags;}               :athlon-direct0,athlon-ieu0,athlon-mult,athlon-ieu0
;;	  5--> b  0: i1174ax=[bp-0x38]                            :athlon-direct,athlon-load
;;	  6--> b  0: i 257{ax=zxn(ax)*zxn([bp-0x30]);clobber flags;}:athlon-vector,athlon-load,athlon-ieu,athlon-mult,athlon-ieu
;;	  8--> b  0: i 256{si=si+di;clobber flags;}               :athlon-direct,athlon-ieu
;;	 12--> b  0: i1384[bp-0x34]=dx                            :athlon-direct,athlon-agu,athlon-store
;;	 12--> b  0: i 259{[bp-0x34]=[bp-0x34]+si;clobber flags;} :athlon-direct,athlon-load,athlon-ieu,athlon-store,athlon-store
;;	 13--> b  0: i1383[bp-0x38]=ax                            :athlon-direct,athlon-agu,athlon-store
;;	Ready list (final):  
;;   total time = 13
;;   new head = 1381
;;   new tail = 259

;;   ======================================================
;;   -- basic block 30 from 1378 to 274 -- after reload
;;   ======================================================

;;	  0--> b  0: i1378dx=[bp-0x2c]                            :athlon-direct,athlon-load
;;	  0--> b  0: i1494si=[bp-0x30]                            :athlon-direct,athlon-load
;;	  1--> b  0: i1295ax=[bp-0x30]                            :athlon-direct,athlon-load
;;	  2--> b  0: i1496{cx=cx 0>>0x1|bx<<0x20-0x1;clobber flags;}:athlon-vector,athlon-ieu,athlon-ieu
;;	  3--> b  0: i1495{si=si*dx;clobber flags;}               :athlon-direct0,athlon-ieu0,athlon-mult,athlon-ieu0
;;	  3--> b  0: i1497{bx=bx 0>>0x1;clobber flags;}           :athlon-direct,athlon-ieu
;;	  4--> b  0: i 266{ax=zxn(ax)*zxn(ax);clobber flags;}     :athlon-direct0,athlon-ieu0,athlon-mult,athlon-ieu0
;;	  6--> b  0: i 265{si=si<<0x1;clobber flags;}             :athlon-direct,athlon-ieu
;;	  7--> b  0: i1379[bp-0x30]=ax                            :athlon-direct,athlon-agu,athlon-store
;;	  7--> b  0: i1178ax=bx                                   :athlon-direct,athlon-ieu
;;	  7--> b  0: i1380[bp-0x2c]=dx                            :athlon-direct,athlon-agu,athlon-store
;;	  8--> b  0: i 268{[bp-0x2c]=[bp-0x2c]+si;clobber flags;} :athlon-direct,athlon-load,athlon-ieu,athlon-store,athlon-store
;;	  8--> b  0: i 273{flags=cmp(ax|cx,0);clobber ax;}        :athlon-direct,athlon-ieu
;;	  9--> b  0: i 274pc={(flags!=0)?L271:pc}                 :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 9
;;   new head = 1378
;;   new tail = 274

;;   ======================================================
;;   -- basic block 31 from 1083 to 1083 -- after reload
;;   ======================================================

;;	  0--> b  0: i1083di=[bp-0x48]                            :athlon-direct,athlon-load
;;	Ready list (final):  
;;   total time = 0
;;   new head = 1083
;;   new tail = 1083

;;   ======================================================
;;   -- basic block 32 from 1252 to 278 -- after reload
;;   ======================================================

;;	  0--> b  0: i1252ax=[bp-0x3c]                            :athlon-direct,athlon-load
;;	  0--> b  0: i 277flags=cmp(ax,[`n'])                     :athlon-direct,athlon-load,athlon-ieu
;;	  4--> b  0: i 278pc={(flags>0)?L791:pc}                  :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 4
;;   new head = 1252
;;   new tail = 278

;;   ======================================================
;;   -- basic block 33 from 1493 to 1085 -- after reload
;;   ======================================================

;;	  0--> b  0: i1493{cx=0;clobber flags;}                   :athlon-direct,athlon-ieu
;;	  0--> b  0: i 899bx=ax+0x1                               :athlon-direct,athlon-agu,nothing
;;	  0--> b  0: i  21[bp-0x50]=0                             :athlon-direct,athlon-agu,athlon-store
;;	  1--> b  0: i  22[bp-0x30]=0x1                           :athlon-direct,athlon-agu,athlon-store
;;	  1--> b  0: i1085[bp-0x3c]=cx                            :athlon-direct,athlon-agu,athlon-store
;;	Ready list (final):  
;;   total time = 1
;;   new head = 1493
;;   new tail = 1085

;;   ======================================================
;;   -- basic block 34 from 1181 to 301 -- after reload
;;   ======================================================

;;	  0--> b  0: i1181ax=[bp-0x30]                            :athlon-direct,athlon-load
;;	  0--> b  0: i1366dx=[bp-0x34]                            :athlon-direct,athlon-load
;;	  3--> b  0: i1364cx=ax-0x1                               :athlon-direct,athlon-agu,nothing
;;	  3--> b  0: i1365ax=[bp-0x38]                            :athlon-direct,athlon-load
;;	  5--> b  0: i1487si=[cx*0x8+`pre']                       :athlon-direct,athlon-load
;;	  8--> b  0: i1488{si=si*dx;clobber flags;}               :athlon-direct0,athlon-ieu0,athlon-mult,athlon-ieu0
;;	  8--> b  0: i1489dx=[cx*0x8+const(`pre'+0x4)]            :athlon-direct,athlon-load
;;	 11--> b  0: i1490{dx=dx*ax;clobber flags;}               :athlon-direct0,athlon-ieu0,athlon-mult,athlon-ieu0
;;	 11--> b  0: i1187ax=[bp-0x38]                            :athlon-direct,athlon-load
;;	 14--> b  0: i 288{si=si+dx;clobber flags;}               :athlon-direct,athlon-ieu
;;	 15--> b  0: i 289{ax=zxn(ax)*zxn([cx*0x8+`pre']);clobber flags;}:athlon-vector,athlon-load,athlon-ieu,athlon-mult,athlon-ieu
;;	 21--> b  0: i 291{dx=dx+si;clobber flags;}               :athlon-direct,athlon-ieu
;;	 21--> b  0: i1367si=[di*0x8+`pre']                       :athlon-direct,athlon-load
;;	 21--> b  0: i1368di=[di*0x8+const(`pre'+0x4)]            :athlon-direct,athlon-load
;;	 24--> b  0: i1369{flags=cmp(si,ax);si=si-ax;}            :athlon-direct,athlon-ieu
;;	 24--> b  0: i1189ax=[bp-0x30]                            :athlon-direct,athlon-load
;;	 25--> b  0: i1370{di=di-ltu(flags,0)+dx;clobber flags;}  :athlon-direct,athlon-ieu
;;	 27--> b  0: i1371dx=[ax*0x8+const(`suf'+0x4)]            :athlon-direct,athlon-load
;;	 27--> b  0: i1372ax=[ax*0x8+`suf']                       :athlon-direct,athlon-load
;;	 30--> b  0: i1373[bp-0x48]=ax                            :athlon-direct,athlon-agu,athlon-store
;;	 30--> b  0: i 863ax=[bx*0x8+`suf']                       :athlon-direct,athlon-load
;;	 31--> b  0: i1374[bp-0x44]=dx                            :athlon-direct,athlon-agu,athlon-store
;;	 33--> b  0: i1191[bp-0x40]=ax                            :athlon-direct,athlon-agu,athlon-store
;;	 33--> b  0: i 864ax=[bx*0x8+const(`suf'+0x4)]            :athlon-direct,athlon-load
;;	 33--> b  0: i 890bx=const(`s'+0x4)                       :athlon-direct,athlon-ieu
;;	 36--> b  0: i1192[bp-0x4c]=ax                            :athlon-direct,athlon-agu,athlon-store
;;	 36--> b  0: i1491ax=[bp-0x3c]                            :athlon-direct,athlon-load
;;	 39--> b  0: i1492flags=cmp(ax,0)                         :athlon-direct,athlon-ieu
;;	 40--> b  0: i 301pc={(flags==0)?L661:pc}                 :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 40
;;   new head = 1181
;;   new tail = 301

;;   ======================================================
;;   -- basic block 35 from 1088 to 1593 -- after reload
;;   ======================================================

;;	  0--> b  0: i1088cx=[bp-0x3c]                            :athlon-direct,athlon-load
;;	  0--> b  0: i1593pc=L320                                 :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 1088
;;   new tail = 1593

;;   ======================================================
;;   -- basic block 36 from 307 to 307 -- after reload
;;   ======================================================

;;	  0--> b  0: i 307pc={(ltu(flags,0))?L852:pc}             :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 307
;;   new tail = 307

;;   ======================================================
;;   -- basic block 37 from 308 to 309 -- after reload
;;   ======================================================

;;	  0--> b  0: i 308flags=cmp(si,[cx+0x10])                 :athlon-direct,athlon-load,athlon-ieu
;;	  4--> b  0: i 309pc={(gtu(flags,0))?L315:pc}             :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 4
;;   new head = 308
;;   new tail = 309

;;   ======================================================
;;   -- basic block 38 from 24 to 322 -- after reload
;;   ======================================================

;;	  0--> b  0: i  24bx=cx                                   :athlon-direct,athlon-ieu
;;	  0--> b  0: i  25cx=[cx+0x8]                             :athlon-direct,athlon-load
;;	  3--> b  0: i 321flags=cmp(cx,0)                         :athlon-direct,athlon-ieu
;;	  4--> b  0: i 322pc={(flags==0)?L1595:pc}                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 4
;;   new head = 24
;;   new tail = 322

;;   ======================================================
;;   -- basic block 39 from 304 to 305 -- after reload
;;   ======================================================

;;	  0--> b  0: i 304flags=cmp(di,[cx+0x14])                 :athlon-direct,athlon-load,athlon-ieu
;;	  4--> b  0: i 305pc={(leu(flags,0))?L1596:pc}            :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 4
;;   new head = 304
;;   new tail = 305

;;   ======================================================
;;   -- basic block 40 from 317 to 1573 -- after reload
;;   ======================================================

;;	  0--> b  0: i 317cx=[cx+0xc]                             :athlon-direct,athlon-load
;;	  3--> b  0: i1572flags=cmp(cx,0)                         :athlon-direct,athlon-ieu
;;	  4--> b  0: i1573pc={(flags!=0)?L320:pc}                 :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 4
;;   new head = 317
;;   new tail = 1573

;;   ======================================================
;;   -- basic block 41 from 324 to 325 -- after reload
;;   ======================================================

;;	  0--> b  0: i 324flags=cmp(bx,const(`s'+0x4))            :athlon-direct,athlon-ieu
;;	  1--> b  0: i 325pc={(flags==0)?L661:pc}                 :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 324
;;   new tail = 325

;;   ======================================================
;;   -- basic block 42 from 327 to 328 -- after reload
;;   ======================================================

;;	  0--> b  0: i 327flags=cmp(di,[bx+0x14])                 :athlon-direct,athlon-load,athlon-ieu
;;	  4--> b  0: i 328pc={(ltu(flags,0))?L661:pc}             :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 4
;;   new head = 327
;;   new tail = 328

;;   ======================================================
;;   -- basic block 43 from 330 to 330 -- after reload
;;   ======================================================

;;	  0--> b  0: i 330pc={(gtu(flags,0))?L381:pc}             :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 330
;;   new tail = 330

;;   ======================================================
;;   -- basic block 44 from 331 to 332 -- after reload
;;   ======================================================

;;	  0--> b  0: i 331flags=cmp(si,[bx+0x10])                 :athlon-direct,athlon-load,athlon-ieu
;;	  4--> b  0: i 332pc={(geu(flags,0))?L381:pc}             :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 4
;;   new head = 331
;;   new tail = 332

rescanning insn with uid = 1353.
rescanning insn with uid = 1353.
rescanning insn with uid = 1354.
rescanning insn with uid = 1354.
rescanning insn with uid = 668.
rescanning insn with uid = 668.
;;   ======================================================
;;   -- basic block 45 from 1269 to 680 -- after reload
;;   ======================================================

;;	  0--> b  0: i 664[sp]=0x20                               :athlon-direct,athlon-agu,athlon-store
;;	  0--> b  0: i1269[bp-0x3c]=bx                            :athlon-direct,athlon-agu,athlon-store
;;	  1--> b  0: i 665ax=call [`_Znwj']                       :athlon-vector,athlon-ieu
;;	  2--> b  0: i1270dx=[bp-0x3c]                            :athlon-direct,athlon-load
;;	  2--> b  0: i1353[ax+0x10]=si                            :athlon-direct,athlon-agu,athlon-store
;;	  2--> b  0: i 666bx=ax                                   :athlon-direct,athlon-ieu
;;	  3--> b  0: i1354[ax+0x14]=di                            :athlon-direct,athlon-agu,athlon-store
;;	  3--> b  0: i 668[ax+0x18]=0                             :athlon-direct,athlon-agu,athlon-store
;;	  3--> b  0: i1355ax=ax+0x10                              :athlon-direct,athlon-agu,nothing
;;	  4--> b  0: i 672cx=`s'                                  :athlon-direct,athlon-ieu
;;	  5--> b  0: i 670[sp+0x4]=ax                             :athlon-direct,athlon-agu,athlon-store
;;	  5--> b  0: i 671[sp]=dx                                 :athlon-direct,athlon-agu,athlon-store
;;	  6--> b  0: i 673{ax=call [`_ZNSt8_Rb_treeIySt4pairIKyiESt10_Select1stIS2_ESt4lessIyESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERS1_'];sp=sp+0x8;}:athlon-vector,athlon-ieu
;;	  7--> b  0: i 674{sp=sp-0x8;clobber flags;}              :athlon-direct,athlon-ieu
;;	  7--> b  0: i 679flags=cmp(dx,0)                         :athlon-direct,athlon-ieu
;;	  8--> b  0: i 680pc={(flags==0)?L1597:pc}                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 8
;;   new head = 1269
;;   new tail = 680

;;   ======================================================
;;   -- basic block 46 from 340 to 341 -- after reload
;;   ======================================================

;;	  0--> b  0: i 340flags=cmp(ax,0)                         :athlon-direct,athlon-ieu
;;	  0--> b  0: i  27ax=0x1                                  :athlon-direct,athlon-ieu
;;	  1--> b  0: i 341pc={(flags!=0)?L358:pc}                 :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 340
;;   new tail = 341

;;   ======================================================
;;   -- basic block 47 from 344 to 345 -- after reload
;;   ======================================================

;;	  0--> b  0: i 344flags=cmp(dx,const(`s'+0x4))            :athlon-direct,athlon-ieu
;;	  1--> b  0: i 345pc={(flags==0)?L358:pc}                 :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 344
;;   new tail = 345

;;   ======================================================
;;   -- basic block 48 from 865 to 350 -- after reload
;;   ======================================================

;;	  0--> b  0: i 865cx=[bx+0x10]                            :athlon-direct,athlon-load
;;	  3--> b  0: i1281[bp-0x3c]=cx                            :athlon-direct,athlon-agu,athlon-store
;;	  3--> b  0: i1193cx=[dx+0x14]                            :athlon-direct,athlon-load
;;	  4--> b  0: i 349flags=cmp([bx+0x14],cx)                 :athlon-direct,athlon-load,athlon-ieu
;;	  8--> b  0: i 350pc={(ltu(flags,0))?L358:pc}             :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 8
;;   new head = 865
;;   new tail = 350

;;   ======================================================
;;   -- basic block 49 from 352 to 352 -- after reload
;;   ======================================================

;;	  0--> b  0: i 352pc={(gtu(flags,0))?L355:pc}             :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 352
;;   new tail = 352

;;   ======================================================
;;   -- basic block 50 from 1289 to 354 -- after reload
;;   ======================================================

;;	  0--> b  0: i1289cx=[bp-0x3c]                            :athlon-direct,athlon-load
;;	  0--> b  0: i 353flags=cmp(cx,[dx+0x10])                 :athlon-direct,athlon-load,athlon-ieu
;;	  4--> b  0: i 354pc={(geu(flags,0))?L355:pc}             :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 4
;;   new head = 1289
;;   new tail = 354

;;   ======================================================
;;   -- basic block 51 from 360 to 373 -- after reload
;;   ======================================================

;;	  0--> b  0: i 360[sp+0xc]=const(`s'+0x4)                 :athlon-direct,athlon-agu,athlon-store
;;	  0--> b  0: i 361[sp+0x8]=dx                             :athlon-direct,athlon-agu,athlon-store
;;	  1--> b  0: i 362[sp+0x4]=bx                             :athlon-direct,athlon-agu,athlon-store
;;	  1--> b  0: i 364[sp]=ax                                 :athlon-direct,athlon-agu,athlon-store
;;	  2--> b  0: i 365call [`_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_']:athlon-vector,athlon-ieu
;;	  3--> b  0: i 373{[const(`s'+0x14)]=[const(`s'+0x14)]+0x1;clobber flags;}:athlon-direct,athlon-load,athlon-ieu,athlon-store,athlon-store
;;	Ready list (final):  
;;   total time = 3
;;   new head = 360
;;   new tail = 373

;;   ======================================================
;;   -- basic block 52 from 1484 to 384 -- after reload
;;   ======================================================

;;	  0--> b  0: i1484cx=[bx+0x18]                            :athlon-direct,athlon-load
;;	  3--> b  0: i1485flags=cmp(cx,0)                         :athlon-direct,athlon-ieu
;;	  4--> b  0: i 384pc={(flags==0)?L1598:pc}                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 4
;;   new head = 1484
;;   new tail = 384

;;   ======================================================
;;   -- basic block 53 from 566 to 571 -- after reload
;;   ======================================================

;;	  0--> b  0: i 566ax=[bp-0x1c]                            :athlon-direct,athlon-load
;;	  0--> b  0: i 567{[bp-0x30]=[bp-0x30]+ax;clobber flags;} :athlon-direct,athlon-load,athlon-ieu,athlon-store,athlon-store
;;	  1--> b  0: i1285di=[bp-0x30]                            :athlon-direct,athlon-load
;;	  4--> b  0: i1356bx=ax+di                                :athlon-direct,athlon-agu,nothing
;;	  6--> b  0: i1357di=bx-0x1                               :athlon-direct,athlon-agu,nothing
;;	  6--> b  0: i 570flags=cmp(di,[`n'])                     :athlon-direct,athlon-load,athlon-ieu
;;	 10--> b  0: i 571pc={(flags>0)?L1117:pc}                 :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 10
;;   new head = 566
;;   new tail = 571

;;   ======================================================
;;   -- basic block 54 from 574 to 1599 -- after reload
;;   ======================================================

;;	  0--> b  0: i 574ax=[const(`s'+0x8)]                     :athlon-direct,athlon-load
;;	  3--> b  0: i1339[bp-0x3c]=ax                            :athlon-direct,athlon-agu,athlon-store
;;	  3--> b  0: i1599pc=L575                                 :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 3
;;   new head = 574
;;   new tail = 1599

;;   ======================================================
;;   -- basic block 55 from 1486 to 1601 -- after reload
;;   ======================================================

;;	  0--> b  0: i1486{ax=0;clobber flags;}                   :athlon-direct,athlon-ieu
;;	  0--> b  0: i1601pc=L358                                 :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 1486
;;   new tail = 1601

;;   ======================================================
;;   -- basic block 56 from 880 to 1603 -- after reload
;;   ======================================================

;;	  0--> b  0: i 880[bp-0x30]=0                             :athlon-direct,athlon-agu,athlon-store
;;	  0--> b  0: i1603pc=L752                                 :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 880
;;   new tail = 1603

;;   ======================================================
;;   -- basic block 57 from 1194 to 397 -- after reload
;;   ======================================================

;;	  0--> b  0: i1358ax=[bp-0x38]                            :athlon-direct,athlon-load
;;	  0--> b  0: i1359dx=[bp-0x34]                            :athlon-direct,athlon-load
;;	  1--> b  0: i1194cx=[bp-0x4c]                            :athlon-direct,athlon-load
;;	  1--> b  0: i1260bx=[bp-0x40]                            :athlon-direct,athlon-load
;;	  4--> b  0: i 386{cx=cx*ax;clobber flags;}               :athlon-direct0,athlon-ieu0,athlon-mult,athlon-ieu0
;;	  4--> b  0: i1196ax=dx                                   :athlon-direct,athlon-ieu
;;	  5--> b  0: i 387{ax=ax*bx;clobber flags;}               :athlon-direct0,athlon-ieu0,athlon-mult,athlon-ieu0
;;	  8--> b  0: i 388{cx=cx+ax;clobber flags;}               :athlon-direct,athlon-ieu
;;	  8--> b  0: i1200ax=bx                                   :athlon-direct,athlon-ieu
;;	  8--> b  0: i1361bx=[bp-0x44]                            :athlon-direct,athlon-load
;;	  9--> b  0: i 389{ax=zxn(ax)*zxn([bp-0x38]);clobber flags;}:athlon-vector,athlon-load,athlon-ieu,athlon-mult,athlon-ieu
;;	 15--> b  0: i 391{dx=dx+cx;clobber flags;}               :athlon-direct,athlon-ieu
;;	 15--> b  0: i1360cx=[bp-0x48]                            :athlon-direct,athlon-load
;;	 18--> b  0: i1362{flags=cmp(cx,ax);cx=cx-ax;}            :athlon-direct,athlon-ieu
;;	 18--> b  0: i 395ax=[const(`s'+0x8)]                     :athlon-direct,athlon-load
;;	 19--> b  0: i1363{bx=bx-ltu(flags,0)+dx;clobber flags;}  :athlon-direct,athlon-ieu
;;	 19--> b  0: i 889dx=const(`s'+0x4)                       :athlon-direct,athlon-ieu
;;	 21--> b  0: i 396flags=cmp(ax,0)                         :athlon-direct,athlon-ieu
;;	 21--> b  0: i1259[bp-0x3c]=ax                            :athlon-direct,athlon-agu,athlon-store
;;	 22--> b  0: i 397pc={(flags!=0)?L416:pc}                 :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 22
;;   new head = 1194
;;   new tail = 397

;;   ======================================================
;;   -- basic block 58 from 1606 to 1606 -- after reload
;;   ======================================================

;;	  0--> b  0: i1606pc=L685                                 :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 1606
;;   new tail = 1606

;;   ======================================================
;;   -- basic block 59 from 403 to 403 -- after reload
;;   ======================================================

;;	  0--> b  0: i 403pc={(ltu(flags,0))?L853:pc}             :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 403
;;   new tail = 403

;;   ======================================================
;;   -- basic block 60 from 404 to 405 -- after reload
;;   ======================================================

;;	  0--> b  0: i 404flags=cmp(cx,[ax+0x10])                 :athlon-direct,athlon-load,athlon-ieu
;;	  4--> b  0: i 405pc={(gtu(flags,0))?L411:pc}             :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 4
;;   new head = 404
;;   new tail = 405

;;   ======================================================
;;   -- basic block 61 from 30 to 418 -- after reload
;;   ======================================================

;;	  0--> b  0: i  30dx=ax                                   :athlon-direct,athlon-ieu
;;	  0--> b  0: i  31ax=[ax+0x8]                             :athlon-direct,athlon-load
;;	  3--> b  0: i 417flags=cmp(ax,0)                         :athlon-direct,athlon-ieu
;;	  4--> b  0: i 418pc={(flags==0)?L1608:pc}                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 4
;;   new head = 30
;;   new tail = 418

;;   ======================================================
;;   -- basic block 62 from 400 to 401 -- after reload
;;   ======================================================

;;	  0--> b  0: i 400flags=cmp(bx,[ax+0x14])                 :athlon-direct,athlon-load,athlon-ieu
;;	  4--> b  0: i 401pc={(leu(flags,0))?L1609:pc}            :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 4
;;   new head = 400
;;   new tail = 401

;;   ======================================================
;;   -- basic block 63 from 413 to 1577 -- after reload
;;   ======================================================

;;	  0--> b  0: i 413ax=[ax+0xc]                             :athlon-direct,athlon-load
;;	  3--> b  0: i1576flags=cmp(ax,0)                         :athlon-direct,athlon-ieu
;;	  4--> b  0: i1577pc={(flags!=0)?L416:pc}                 :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 4
;;   new head = 413
;;   new tail = 1577

;;   ======================================================
;;   -- basic block 64 from 420 to 421 -- after reload
;;   ======================================================

;;	  0--> b  0: i 420flags=cmp(dx,const(`s'+0x4))            :athlon-direct,athlon-ieu
;;	  1--> b  0: i 421pc={(flags==0)?L685:pc}                 :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 420
;;   new tail = 421

;;   ======================================================
;;   -- basic block 65 from 423 to 424 -- after reload
;;   ======================================================

;;	  0--> b  0: i 423flags=cmp(bx,[dx+0x14])                 :athlon-direct,athlon-load,athlon-ieu
;;	  4--> b  0: i 424pc={(ltu(flags,0))?L685:pc}             :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 4
;;   new head = 423
;;   new tail = 424

;;   ======================================================
;;   -- basic block 66 from 426 to 426 -- after reload
;;   ======================================================

;;	  0--> b  0: i 426pc={(gtu(flags,0))?L767:pc}             :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 426
;;   new tail = 426

;;   ======================================================
;;   -- basic block 67 from 427 to 428 -- after reload
;;   ======================================================

;;	  0--> b  0: i 427flags=cmp(cx,[dx+0x10])                 :athlon-direct,athlon-load,athlon-ieu
;;	  4--> b  0: i 428pc={(ltu(flags,0))?L685:pc}             :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 4
;;   new head = 427
;;   new tail = 428

;;   ======================================================
;;   -- basic block 68 from 1473 to 771 -- after reload
;;   ======================================================

;;	  0--> b  0: i1473ax=[dx+0x18]                            :athlon-direct,athlon-load
;;	  3--> b  0: i1474flags=cmp(ax,0)                         :athlon-direct,athlon-ieu
;;	  4--> b  0: i 771pc={(flags!=0)?L721:pc}                 :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 4
;;   new head = 1473
;;   new tail = 771

;;   ======================================================
;;   -- basic block 69 from 891 to 891 -- after reload
;;   ======================================================

;;	  0--> b  0: i 891ax=[bp-0x3c]                            :athlon-direct,athlon-load
;;	Ready list (final):  
;;   total time = 0
;;   new head = 891
;;   new tail = 891

;;   ======================================================
;;   -- basic block 70 from 888 to 1610 -- after reload
;;   ======================================================

;;	  0--> b  0: i 888bx=const(`s'+0x4)                       :athlon-direct,athlon-ieu
;;	  0--> b  0: i1610pc=L500                                 :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 888
;;   new tail = 1610

;;   ======================================================
;;   -- basic block 71 from 487 to 487 -- after reload
;;   ======================================================

;;	  0--> b  0: i 487pc={(ltu(flags,0))?L854:pc}             :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 487
;;   new tail = 487

;;   ======================================================
;;   -- basic block 72 from 488 to 489 -- after reload
;;   ======================================================

;;	  0--> b  0: i 488flags=cmp(si,[ax+0x10])                 :athlon-direct,athlon-load,athlon-ieu
;;	  4--> b  0: i 489pc={(gtu(flags,0))?L495:pc}             :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 4
;;   new head = 488
;;   new tail = 489

;;   ======================================================
;;   -- basic block 73 from 36 to 502 -- after reload
;;   ======================================================

;;	  0--> b  0: i  36bx=ax                                   :athlon-direct,athlon-ieu
;;	  0--> b  0: i  37ax=[ax+0x8]                             :athlon-direct,athlon-load
;;	  3--> b  0: i 501flags=cmp(ax,0)                         :athlon-direct,athlon-ieu
;;	  4--> b  0: i 502pc={(flags==0)?L1612:pc}                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 4
;;   new head = 36
;;   new tail = 502

;;   ======================================================
;;   -- basic block 74 from 484 to 485 -- after reload
;;   ======================================================

;;	  0--> b  0: i 484flags=cmp(di,[ax+0x14])                 :athlon-direct,athlon-load,athlon-ieu
;;	  4--> b  0: i 485pc={(leu(flags,0))?L1613:pc}            :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 4
;;   new head = 484
;;   new tail = 485

;;   ======================================================
;;   -- basic block 75 from 497 to 1581 -- after reload
;;   ======================================================

;;	  0--> b  0: i 497ax=[ax+0xc]                             :athlon-direct,athlon-load
;;	  3--> b  0: i1580flags=cmp(ax,0)                         :athlon-direct,athlon-ieu
;;	  4--> b  0: i1581pc={(flags!=0)?L500:pc}                 :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 4
;;   new head = 497
;;   new tail = 1581

;;   ======================================================
;;   -- basic block 76 from 504 to 505 -- after reload
;;   ======================================================

;;	  0--> b  0: i 504flags=cmp(bx,const(`s'+0x4))            :athlon-direct,athlon-ieu
;;	  1--> b  0: i 505pc={(flags==0)?L724:pc}                 :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 504
;;   new tail = 505

;;   ======================================================
;;   -- basic block 77 from 507 to 508 -- after reload
;;   ======================================================

;;	  0--> b  0: i 507flags=cmp(di,[bx+0x14])                 :athlon-direct,athlon-load,athlon-ieu
;;	  4--> b  0: i 508pc={(ltu(flags,0))?L724:pc}             :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 4
;;   new head = 507
;;   new tail = 508

;;   ======================================================
;;   -- basic block 78 from 510 to 510 -- after reload
;;   ======================================================

;;	  0--> b  0: i 510pc={(gtu(flags,0))?L561:pc}             :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 510
;;   new tail = 510

;;   ======================================================
;;   -- basic block 79 from 511 to 512 -- after reload
;;   ======================================================

;;	  0--> b  0: i 511flags=cmp(si,[bx+0x10])                 :athlon-direct,athlon-load,athlon-ieu
;;	  4--> b  0: i 512pc={(geu(flags,0))?L561:pc}             :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 4
;;   new head = 511
;;   new tail = 512

rescanning insn with uid = 1344.
rescanning insn with uid = 1344.
rescanning insn with uid = 1345.
rescanning insn with uid = 1345.
rescanning insn with uid = 731.
rescanning insn with uid = 731.
;;   ======================================================
;;   -- basic block 80 from 1278 to 743 -- after reload
;;   ======================================================

;;	  0--> b  0: i 727[sp]=0x20                               :athlon-direct,athlon-agu,athlon-store
;;	  0--> b  0: i1278[bp-0x3c]=bx                            :athlon-direct,athlon-agu,athlon-store
;;	  1--> b  0: i 728ax=call [`_Znwj']                       :athlon-vector,athlon-ieu
;;	  2--> b  0: i1279dx=[bp-0x3c]                            :athlon-direct,athlon-load
;;	  2--> b  0: i1344[ax+0x10]=si                            :athlon-direct,athlon-agu,athlon-store
;;	  2--> b  0: i 729bx=ax                                   :athlon-direct,athlon-ieu
;;	  3--> b  0: i1345[ax+0x14]=di                            :athlon-direct,athlon-agu,athlon-store
;;	  3--> b  0: i 731[ax+0x18]=0                             :athlon-direct,athlon-agu,athlon-store
;;	  3--> b  0: i1346ax=ax+0x10                              :athlon-direct,athlon-agu,nothing
;;	  4--> b  0: i 735cx=`s'                                  :athlon-direct,athlon-ieu
;;	  5--> b  0: i 733[sp+0x4]=ax                             :athlon-direct,athlon-agu,athlon-store
;;	  5--> b  0: i 734[sp]=dx                                 :athlon-direct,athlon-agu,athlon-store
;;	  6--> b  0: i 736{ax=call [`_ZNSt8_Rb_treeIySt4pairIKyiESt10_Select1stIS2_ESt4lessIyESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERS1_'];sp=sp+0x8;}:athlon-vector,athlon-ieu
;;	  7--> b  0: i 737{sp=sp-0x8;clobber flags;}              :athlon-direct,athlon-ieu
;;	  7--> b  0: i 742flags=cmp(dx,0)                         :athlon-direct,athlon-ieu
;;	  8--> b  0: i 743pc={(flags==0)?L1614:pc}                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 8
;;   new head = 1278
;;   new tail = 743

;;   ======================================================
;;   -- basic block 81 from 520 to 521 -- after reload
;;   ======================================================

;;	  0--> b  0: i 520flags=cmp(ax,0)                         :athlon-direct,athlon-ieu
;;	  0--> b  0: i  39ax=0x1                                  :athlon-direct,athlon-ieu
;;	  1--> b  0: i 521pc={(flags!=0)?L538:pc}                 :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 520
;;   new tail = 521

;;   ======================================================
;;   -- basic block 82 from 524 to 525 -- after reload
;;   ======================================================

;;	  0--> b  0: i 524flags=cmp(dx,const(`s'+0x4))            :athlon-direct,athlon-ieu
;;	  1--> b  0: i 525pc={(flags==0)?L538:pc}                 :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 524
;;   new tail = 525

;;   ======================================================
;;   -- basic block 83 from 869 to 530 -- after reload
;;   ======================================================

;;	  0--> b  0: i1212di=[dx+0x14]                            :athlon-direct,athlon-load
;;	  0--> b  0: i 529flags=cmp([bx+0x14],di)                 :athlon-direct,athlon-load,athlon-ieu
;;	  1--> b  0: i 869cx=[bx+0x10]                            :athlon-direct,athlon-load
;;	  4--> b  0: i 530pc={(geu(flags,0))?L1615:pc}            :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 4
;;   new head = 869
;;   new tail = 530

;;   ======================================================
;;   -- basic block 84 from 540 to 553 -- after reload
;;   ======================================================

;;	  0--> b  0: i 540[sp+0xc]=const(`s'+0x4)                 :athlon-direct,athlon-agu,athlon-store
;;	  0--> b  0: i 541[sp+0x8]=dx                             :athlon-direct,athlon-agu,athlon-store
;;	  1--> b  0: i 542[sp+0x4]=bx                             :athlon-direct,athlon-agu,athlon-store
;;	  1--> b  0: i 544[sp]=ax                                 :athlon-direct,athlon-agu,athlon-store
;;	  2--> b  0: i 545call [`_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_']:athlon-vector,athlon-ieu
;;	  3--> b  0: i 553{[const(`s'+0x14)]=[const(`s'+0x14)]+0x1;clobber flags;}:athlon-direct,athlon-load,athlon-ieu,athlon-store,athlon-store
;;	Ready list (final):  
;;   total time = 3
;;   new head = 540
;;   new tail = 553

;;   ======================================================
;;   -- basic block 85 from 563 to 1616 -- after reload
;;   ======================================================

;;	  0--> b  0: i 563[bx+0x18]=0x1                           :athlon-direct,athlon-agu,athlon-store
;;	  0--> b  0: i 564{[bp-0x50]=[bp-0x50]+0x1;clobber flags;}:athlon-direct,athlon-load,athlon-ieu,athlon-store,athlon-store
;;	  0--> b  0: i1616pc=L721                                 :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 563
;;   new tail = 1616

rescanning insn with uid = 1351.
rescanning insn with uid = 1351.
rescanning insn with uid = 1352.
rescanning insn with uid = 1352.
rescanning insn with uid = 692.
rescanning insn with uid = 692.
;;   ======================================================
;;   -- basic block 86 from 1276 to 704 -- after reload
;;   ======================================================

;;	  0--> b  0: i 688[sp]=0x20                               :athlon-direct,athlon-agu,athlon-store
;;	  0--> b  0: i1276[bp-0x40]=dx                            :athlon-direct,athlon-agu,athlon-store
;;	  1--> b  0: i1347[bp-0x48]=cx                            :athlon-direct,athlon-agu,athlon-store
;;	  1--> b  0: i1348[bp-0x44]=bx                            :athlon-direct,athlon-agu,athlon-store
;;	  2--> b  0: i 689ax=call [`_Znwj']                       :athlon-vector,athlon-ieu
;;	  3--> b  0: i1349cx=[bp-0x48]                            :athlon-direct,athlon-load
;;	  3--> b  0: i1350bx=[bp-0x44]                            :athlon-direct,athlon-load
;;	  4--> b  0: i1277dx=[bp-0x40]                            :athlon-direct,athlon-load
;;	  4--> b  0: i 692[ax+0x18]=0                             :athlon-direct,athlon-agu,athlon-store
;;	  5--> b  0: i1273[bp-0x3c]=ax                            :athlon-direct,athlon-agu,athlon-store
;;	  5--> b  0: i 693{ax=ax+0x10;clobber flags;}             :athlon-direct,athlon-ieu
rescanning insn with uid = 1352.
rescanning insn with uid = 1351.
;;	  6--> b  0: i1351[ax]=cx                                 :athlon-direct,athlon-agu,athlon-store
;;	  6--> b  0: i1352[ax+0x4]=bx                             :athlon-direct,athlon-agu,athlon-store
;;	  6--> b  0: i 696cx=`s'                                  :athlon-direct,athlon-ieu
;;	  7--> b  0: i 694[sp+0x4]=ax                             :athlon-direct,athlon-agu,athlon-store
;;	  7--> b  0: i 695[sp]=dx                                 :athlon-direct,athlon-agu,athlon-store
;;	  8--> b  0: i 697{ax=call [`_ZNSt8_Rb_treeIySt4pairIKyiESt10_Select1stIS2_ESt4lessIyESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERS1_'];sp=sp+0x8;}:athlon-vector,athlon-ieu
;;	  9--> b  0: i 698{sp=sp-0x8;clobber flags;}              :athlon-direct,athlon-ieu
;;	  9--> b  0: i 703flags=cmp(dx,0)                         :athlon-direct,athlon-ieu
;;	 10--> b  0: i 704pc={(flags==0)?L1618:pc}                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 10
;;   new head = 1276
;;   new tail = 704

;;   ======================================================
;;   -- basic block 87 from 436 to 437 -- after reload
;;   ======================================================

;;	  0--> b  0: i 436flags=cmp(ax,0)                         :athlon-direct,athlon-ieu
;;	  0--> b  0: i  33ax=0x1                                  :athlon-direct,athlon-ieu
;;	  1--> b  0: i 437pc={(flags!=0)?L454:pc}                 :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 436
;;   new tail = 437

;;   ======================================================
;;   -- basic block 88 from 440 to 441 -- after reload
;;   ======================================================

;;	  0--> b  0: i 440flags=cmp(dx,const(`s'+0x4))            :athlon-direct,athlon-ieu
;;	  1--> b  0: i 441pc={(flags==0)?L454:pc}                 :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 1
;;   new head = 440
;;   new tail = 441

;;   ======================================================
;;   -- basic block 89 from 1263 to 446 -- after reload
;;   ======================================================

;;	  0--> b  0: i1263bx=[bp-0x3c]                            :athlon-direct,athlon-load
;;	  3--> b  0: i 867cx=[bx+0x10]                            :athlon-direct,athlon-load
;;	  6--> b  0: i1280[bp-0x48]=cx                            :athlon-direct,athlon-agu,athlon-store
;;	  6--> b  0: i1208cx=[dx+0x14]                            :athlon-direct,athlon-load
;;	  7--> b  0: i 445flags=cmp([bx+0x14],cx)                 :athlon-direct,athlon-load,athlon-ieu
;;	 11--> b  0: i 446pc={(geu(flags,0))?L1619:pc}            :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 11
;;   new head = 1263
;;   new tail = 446

;;   ======================================================
;;   -- basic block 90 from 456 to 469 -- after reload
;;   ======================================================

;;	  0--> b  0: i1209bx=[bp-0x3c]                            :athlon-direct,athlon-load
;;	  0--> b  0: i 456[sp+0xc]=const(`s'+0x4)                 :athlon-direct,athlon-agu,athlon-store
;;	  1--> b  0: i 457[sp+0x8]=dx                             :athlon-direct,athlon-agu,athlon-store
;;	  1--> b  0: i 460[sp]=ax                                 :athlon-direct,athlon-agu,athlon-store
;;	  3--> b  0: i 458[sp+0x4]=bx                             :athlon-direct,athlon-agu,athlon-store
;;	  4--> b  0: i 461call [`_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_']:athlon-vector,athlon-ieu
;;	  5--> b  0: i 469{[const(`s'+0x14)]=[const(`s'+0x14)]+0x1;clobber flags;}:athlon-direct,athlon-load,athlon-ieu,athlon-store,athlon-store
;;	Ready list (final):  
;;   total time = 5
;;   new head = 456
;;   new tail = 469

;;   ======================================================
;;   -- basic block 91 from 1211 to 478 -- after reload
;;   ======================================================

;;	  0--> b  0: i1211ax=[bp-0x3c]                            :athlon-direct,athlon-load
;;	  3--> b  0: i1481dx=[ax+0x18]                            :athlon-direct,athlon-load
;;	  6--> b  0: i1482flags=cmp(dx,0)                         :athlon-direct,athlon-ieu
;;	  7--> b  0: i 478pc={(flags!=0)?L721:pc}                 :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 7
;;   new head = 1211
;;   new tail = 478

;;   ======================================================
;;   -- basic block 92 from 712 to 715 -- after reload
;;   ======================================================

;;	  0--> b  0: i 712ax=[const(`s'+0x8)]                     :athlon-direct,athlon-load
;;	  3--> b  0: i 714flags=cmp(ax,0)                         :athlon-direct,athlon-ieu
;;	  4--> b  0: i 715pc={(flags!=0)?L713:pc}                 :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 4
;;   new head = 712
;;   new tail = 715

;;   ======================================================
;;   -- basic block 93 from 885 to 1620 -- after reload
;;   ======================================================

;;	  0--> b  0: i 885bx=const(`s'+0x4)                       :athlon-direct,athlon-ieu
;;	  0--> b  0: i1620pc=L724                                 :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 885
;;   new tail = 1620

;;   ======================================================
;;   -- basic block 94 from 1104 to 1104 -- after reload
;;   ======================================================

;;	  0--> b  0: i1104[bp-0x3c]=ax                            :athlon-direct,athlon-agu,athlon-store
;;	Ready list (final):  
;;   total time = 0
;;   new head = 1104
;;   new tail = 1104

;;   ======================================================
;;   -- basic block 95 from 580 to 582 -- after reload
;;   ======================================================

;;	  0--> b  0: i 580cx=[`ans']                              :athlon-direct,athlon-load
;;	  0--> b  0: i 581flags=cmp(cx,[bp-0x50])                 :athlon-direct,athlon-load,athlon-ieu
;;	  4--> b  0: i 582pc={(flags<0)?L1622:pc}                 :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 4
;;   new head = 580
;;   new tail = 582

;;   ======================================================
;;   -- basic block 96 from 903 to 600 -- after reload
;;   ======================================================

;;	  0--> b  0: i 599flags=cmp([bp-0x50],cx)                 :athlon-direct,athlon-load,athlon-ieu
;;	  0--> b  0: i 903di=[`n']                                :athlon-direct,athlon-load
;;	  4--> b  0: i 600pc={(flags!=0)?L608:pc}                 :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 4
;;   new head = 903
;;   new tail = 600

;;   ======================================================
;;   -- basic block 97 from 1223 to 1588 -- after reload
;;   ======================================================

;;	  0--> b  0: i1223ax=bp-0x1c                              :athlon-direct,athlon-agu,nothing
;;	  0--> b  0: i 604cx=`num'                                :athlon-direct,athlon-ieu
;;	  2--> b  0: i 603[sp]=ax                                 :athlon-direct,athlon-agu,athlon-store
;;	  3--> b  0: i 605{call [`_ZNSt6vectorIiSaIiEE9push_backERKi'];sp=sp+0x4;}:athlon-vector,athlon-ieu
;;	  4--> b  0: i 905ax=[bp-0x1c]                            :athlon-direct,athlon-load
;;	  4--> b  0: i 904di=[`n']                                :athlon-direct,athlon-load
;;	  4--> b  0: i 606{sp=sp-0x4;clobber flags;}              :athlon-direct,athlon-ieu
;;	  5--> b  0: i 607cx=[`ans']                              :athlon-direct,athlon-load
;;	  7--> b  0: i1224[bp-0x3c]=ax                            :athlon-direct,athlon-agu,athlon-store
;;	  7--> b  0: i1584bx=[bp-0x3c]                            :athlon-direct,athlon-load
;;	 10--> b  0: i1585{bx=bx+0x1;clobber flags;}              :athlon-direct,athlon-ieu
;;	 11--> b  0: i1587flags=cmp(di,bx)                        :athlon-direct,athlon-ieu
;;	 11--> b  0: i1586[bp-0x1c]=bx                            :athlon-direct,athlon-agu,athlon-store
;;	 12--> b  0: i1588pc={(flags>=0)?L941:pc}                 :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 12
;;   new head = 1223
;;   new tail = 1588

;;   ======================================================
;;   -- basic block 98 from 621 to 635 -- after reload
;;   ======================================================

;;	  0--> b  0: i 621ax=[const(`num'+0x4)]                   :athlon-direct,athlon-load
;;	  0--> b  0: i 622{ax=ax-[`num'];clobber flags;}          :athlon-direct,athlon-load,athlon-ieu
;;	  0--> b  0: i1479{bx=0;clobber flags;}                   :athlon-direct,athlon-ieu
;;	  1--> b  0: i 625[sp+0x4]=cx                             :athlon-direct,athlon-agu,athlon-store
;;	  1--> b  0: i 626[sp]=`*LC0'                             :athlon-direct,athlon-agu,athlon-store
;;	  4--> b  0: i 623{ax=ax>>0x2;clobber flags;}             :athlon-direct,athlon-ieu
;;	  5--> b  0: i 624[sp+0x8]=ax                             :athlon-direct,athlon-agu,athlon-store
;;	  6--> b  0: i 627ax=call [`_ZL6printfPKcz']              :athlon-vector,athlon-ieu
;;	  7--> b  0: i 629dx=[`num']                              :athlon-direct,athlon-load
;;	  7--> b  0: i1227ax=[const(`num'+0x4)]                   :athlon-direct,athlon-load
;;	 10--> b  0: i 632{ax=ax-dx;clobber flags;}               :athlon-direct,athlon-ieu
;;	 11--> b  0: i 633{ax=ax>>0x2;clobber flags;}             :athlon-direct,athlon-ieu
;;	 12--> b  0: i 634flags=cmp(ax,0)                         :athlon-direct,athlon-ieu
;;	 13--> b  0: i 635pc={(flags==0)?L1032:pc}                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 13
;;   new head = 621
;;   new tail = 635

;;   ======================================================
;;   -- basic block 99 from 643 to 656 -- after reload
;;   ======================================================

;;	  0--> b  0: i 643ax=[bx*0x4+dx]                          :athlon-direct,athlon-load
;;	  0--> b  0: i 645[sp]=`*LC1'                             :athlon-direct,athlon-agu,athlon-store
;;	  0--> b  0: i 647{bx=bx+0x1;clobber flags;}              :athlon-direct,athlon-ieu
;;	  3--> b  0: i 644[sp+0x4]=ax                             :athlon-direct,athlon-agu,athlon-store
;;	  4--> b  0: i 646ax=call [`_ZL6printfPKcz']              :athlon-vector,athlon-ieu
;;	  5--> b  0: i 649dx=[`num']                              :athlon-direct,athlon-load
;;	  5--> b  0: i1229ax=[const(`num'+0x4)]                   :athlon-direct,athlon-load
;;	  8--> b  0: i 653{ax=ax-dx;clobber flags;}               :athlon-direct,athlon-ieu
;;	  9--> b  0: i 654{ax=ax>>0x2;clobber flags;}             :athlon-direct,athlon-ieu
;;	 10--> b  0: i 655flags=cmp(bx,ax)                        :athlon-direct,athlon-ieu
;;	 11--> b  0: i 656pc={(ltu(flags,0))?L939:pc}             :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 11
;;   new head = 643
;;   new tail = 656

;;   ======================================================
;;   -- basic block 100 from 1472 to 1466 -- after reload
;;   ======================================================

;;	  0--> b  0: i1459{sp=bp-0x10;clobber flags;clobber [scratch];}:athlon-direct,athlon-agu,nothing
;;	  0--> b  0: i1472{ax=0;clobber flags;}                   :athlon-direct,athlon-ieu
;;	  0--> b  0: i 777use ax                                  :nothing
;;	  2--> b  0: i1460cx=[sp++]                               :athlon-vector,athlon-load,athlon-ieu
;;	  3--> b  0: i1461bx=[sp++]                               :athlon-vector,athlon-load,athlon-ieu
;;	  4--> b  0: i1462si=[sp++]                               :athlon-vector,athlon-load,athlon-ieu
;;	  5--> b  0: i1463di=[sp++]                               :athlon-vector,athlon-load,athlon-ieu
;;	  6--> b  0: i1464bp=[sp++]                               :athlon-vector,athlon-load,athlon-ieu
;;	  7--> b  0: i1465sp=cx-0x4                               :athlon-direct,athlon-agu,nothing
;;	  8--> b  0: i1466simple_return                           :athlon-vector,athlon-ieu,athlon-ieu
;;	Ready list (final):  
;;   total time = 8
;;   new head = 1472
;;   new tail = 1466

;;   ======================================================
;;   -- basic block 101 from 1256 to 1623 -- after reload
;;   ======================================================

;;	  0--> b  0: i 377[sp]=bx                                 :athlon-direct,athlon-agu,athlon-store
;;	  0--> b  0: i1256[bp-0x3c]=ax                            :athlon-direct,athlon-agu,athlon-store
;;	  1--> b  0: i 378call [`_ZdlPv']                         :athlon-vector,athlon-ieu
;;	  2--> b  0: i1257ax=[bp-0x3c]                            :athlon-direct,athlon-load
;;	  5--> b  0: i  28bx=ax                                   :athlon-direct,athlon-ieu
;;	  5--> b  0: i1623pc=L381                                 :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 5
;;   new head = 1256
;;   new tail = 1623

;;   ======================================================
;;   -- basic block 102 from 1219 to 1625 -- after reload
;;   ======================================================

;;	  0--> b  0: i1219ax=[bp-0x50]                            :athlon-direct,athlon-load
;;	  3--> b  0: i 584[`ans']=ax                              :athlon-direct,athlon-agu,athlon-store
;;	  3--> b  0: i 587ax=[`num']                              :athlon-direct,athlon-load
;;	  6--> b  0: i 588[const(`num'+0x4)]=ax                   :athlon-direct,athlon-agu,athlon-store
;;	  6--> b  0: i1625pc=L1469                                :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 6
;;   new head = 1219
;;   new tail = 1625

;;   ======================================================
;;   -- basic block 103 from 1264 to 1627 -- after reload
;;   ======================================================

;;	  0--> b  0: i1264[bp-0x48]=ax                            :athlon-direct,athlon-agu,athlon-store
;;	  0--> b  0: i1210ax=[bp-0x3c]                            :athlon-direct,athlon-load
;;	  3--> b  0: i 473[sp]=ax                                 :athlon-direct,athlon-agu,athlon-store
;;	  4--> b  0: i 474call [`_ZdlPv']                         :athlon-vector,athlon-ieu
;;	  5--> b  0: i1265ax=[bp-0x48]                            :athlon-direct,athlon-load
;;	  8--> b  0: i  34[bp-0x3c]=ax                            :athlon-direct,athlon-agu,athlon-store
;;	  8--> b  0: i1627pc=L475                                 :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 8
;;   new head = 1264
;;   new tail = 1627

;;   ======================================================
;;   -- basic block 104 from 1266 to 1629 -- after reload
;;   ======================================================

;;	  0--> b  0: i 557[sp]=bx                                 :athlon-direct,athlon-agu,athlon-store
;;	  0--> b  0: i1266[bp-0x3c]=ax                            :athlon-direct,athlon-agu,athlon-store
;;	  1--> b  0: i 558call [`_ZdlPv']                         :athlon-vector,athlon-ieu
;;	  2--> b  0: i1267ax=[bp-0x3c]                            :athlon-direct,athlon-load
;;	  5--> b  0: i  40bx=ax                                   :athlon-direct,athlon-ieu
;;	  5--> b  0: i1629pc=L561                                 :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 5
;;   new head = 1266
;;   new tail = 1629

;;   ======================================================
;;   -- basic block 105 from 448 to 448 -- after reload
;;   ======================================================

;;	  0--> b  0: i 448pc={(gtu(flags,0))?L451:pc}             :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 448
;;   new tail = 448

;;   ======================================================
;;   -- basic block 106 from 1288 to 450 -- after reload
;;   ======================================================

;;	  0--> b  0: i1288bx=[bp-0x48]                            :athlon-direct,athlon-load
;;	  0--> b  0: i 449flags=cmp(bx,[dx+0x10])                 :athlon-direct,athlon-load,athlon-ieu
;;	  4--> b  0: i 450pc={(ltu(flags,0))?L454:pc}             :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 4
;;   new head = 1288
;;   new tail = 450

;;   ======================================================
;;   -- basic block 107 from 1483 to 1631 -- after reload
;;   ======================================================

;;	  0--> b  0: i1483{ax=0;clobber flags;}                   :athlon-direct,athlon-ieu
;;	  0--> b  0: i1631pc=L454                                 :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 1483
;;   new tail = 1631

;;   ======================================================
;;   -- basic block 108 from 532 to 532 -- after reload
;;   ======================================================

;;	  0--> b  0: i 532pc={(gtu(flags,0))?L535:pc}             :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 532
;;   new tail = 532

;;   ======================================================
;;   -- basic block 109 from 533 to 534 -- after reload
;;   ======================================================

;;	  0--> b  0: i 533flags=cmp(cx,[dx+0x10])                 :athlon-direct,athlon-load,athlon-ieu
;;	  4--> b  0: i 534pc={(ltu(flags,0))?L538:pc}             :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 4
;;   new head = 533
;;   new tail = 534

;;   ======================================================
;;   -- basic block 110 from 1480 to 1633 -- after reload
;;   ======================================================

;;	  0--> b  0: i1480{ax=0;clobber flags;}                   :athlon-direct,athlon-ieu
;;	  0--> b  0: i1633pc=L538                                 :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 1480
;;   new tail = 1633

;;   ======================================================
;;   -- basic block 111 from 41 to 1635 -- after reload
;;   ======================================================

;;	  0--> b  0: i  41[bp-0x50]=0                             :athlon-direct,athlon-agu,athlon-store
;;	  0--> b  0: i1635pc=L578                                 :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 41
;;   new tail = 1635

;;   ======================================================
;;   -- basic block 112 from 1375 to 1637 -- after reload
;;   ======================================================

;;	  0--> b  0: i1375[bp-0x38]=0x1                           :athlon-direct,athlon-agu,athlon-store
;;	  0--> b  0: i1376[bp-0x34]=0                             :athlon-direct,athlon-agu,athlon-store
;;	  0--> b  0: i1637pc=L275                                 :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 1375
;;   new tail = 1637

;;   ======================================================
;;   -- basic block 113 from 758 to 758 -- after reload
;;   ======================================================

;;	  0--> b  0: i 758[bp-0x1c]=0x1                           :athlon-direct,athlon-agu,athlon-store
;;	Ready list (final):  
;;   total time = 0
;;   new head = 758
;;   new tail = 758

;;   ======================================================
;;   -- basic block 114 from 216 to 1639 -- after reload
;;   ======================================================

;;	  0--> b  0: i 216cx=[`ans']                              :athlon-direct,athlon-load
;;	  0--> b  0: i1639pc=L617                                 :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 216
;;   new tail = 1639

;;   ======================================================
;;   -- basic block 115 from 877 to 1641 -- after reload
;;   ======================================================

;;	  0--> b  0: i 877bx=0x1                                  :athlon-direct,athlon-ieu
;;	  0--> b  0: i 878[bp-0x30]=0                             :athlon-direct,athlon-agu,athlon-store
;;	  0--> b  0: i1641pc=L748                                 :athlon-direct,athlon-ieu
;;	Ready list (final):  
;;   total time = 0
;;   new head = 877
;;   new tail = 1641



starting the processing of deferred insns
ending the processing of deferred insns


int main()

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 29 [mm0] 30 [mm1] 31 [mm2]
;;  exit block uses 	 0 [ax] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 3[bx] 4[si] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={119d,164u} r1={65d,56u} r2={66d,55u} r3={39d,59u} r4={38d,56u} r5={33d,47u} r6={3d,236u} r7={26d,239u,2e} r8={23d} r9={23d} r10={23d} r11={23d} r12={23d} r13={23d} r14={23d} r15={23d} r17={202d,89u} r18={23d} r19={23d} r20={1d,1u,3e} r21={24d} r22={24d} r23={24d} r24={23d} r25={23d} r26={23d} r27={23d} r28={23d} r29={24d} r30={24d} r31={24d} r32={23d} r33={23d} r34={23d} r35={23d} r36={23d} r37={23d} r38={23d} r39={23d} r40={23d} r41={23d} r42={23d} r43={23d} r44={23d} r45={23d} r46={23d} r47={23d} r48={23d} r49={23d} r50={23d} r51={23d} r52={23d} r53={23d} r54={23d} r55={23d} r56={23d} r57={23d} r58={23d} r59={23d} r60={23d} r61={23d} r62={23d} r63={23d} r64={23d} r65={23d} r66={23d} r67={23d} r68={23d} r69={23d} r70={23d} r71={23d} r72={23d} r73={23d} r74={23d} r75={23d} r76={23d} 
;;    total ref usage 3123{2116d,1002u,5e} in 587{564 regular + 23 call} insns.
(note 1 0 51 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 9, maybe hot
;;  prev block 0, next block 3, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;; live  in  	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 17 [flags]
;; live  kill	 17 [flags]
(note 51 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 51 1445 2 NOTE_INSN_FUNCTION_BEG)
(insn/f:TI 1445 2 1446 2 (set (reg:SI 2 cx)
        (plus:SI (reg/f:SI 7 sp)
            (const_int 4 [0x4]))) D:\LHX\7.5 contest\t1.cpp:32 213 {*leasi}
     (nil))
(insn/f 1446 1445 1447 2 (parallel [
            (set (reg/f:SI 7 sp)
                (and:SI (reg/f:SI 7 sp)
                    (const_int -16 [0xfffffffffffffff0])))
            (clobber (reg:CC 17 flags))
        ]) D:\LHX\7.5 contest\t1.cpp:32 370 {*andsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn/f:TI 1447 1446 1448 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A8])
        (mem/c:SI (plus:SI (reg:SI 2 cx)
                (const_int -4 [0xfffffffffffffffc])) [49  S4 A8])) D:\LHX\7.5 contest\t1.cpp:32 66 {*pushsi2}
     (nil))
(insn/f 1448 1447 1449 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A8])
        (reg/f:SI 6 bp)) D:\LHX\7.5 contest\t1.cpp:32 66 {*pushsi2}
     (nil))
(insn/f:TI 1449 1448 1450 2 (set (reg/f:SI 6 bp)
        (reg/f:SI 7 sp)) D:\LHX\7.5 contest\t1.cpp:32 90 {*movsi_internal}
     (nil))
(insn/f 1450 1449 1451 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A8])
        (reg:SI 5 di)) D:\LHX\7.5 contest\t1.cpp:32 66 {*pushsi2}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (nil)))
(insn/f 1451 1450 1452 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A8])
        (reg:SI 4 si)) D:\LHX\7.5 contest\t1.cpp:32 66 {*pushsi2}
     (expr_list:REG_DEAD (reg:SI 4 si)
        (nil)))
(insn/f:TI 1452 1451 1453 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A8])
        (reg:SI 3 bx)) D:\LHX\7.5 contest\t1.cpp:32 66 {*pushsi2}
     (expr_list:REG_DEAD (reg:SI 3 bx)
        (nil)))
(insn/f 1453 1452 1454 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A8])
        (reg:SI 2 cx)) D:\LHX\7.5 contest\t1.cpp:32 66 {*pushsi2}
     (expr_list:REG_DEAD (reg:SI 2 cx)
        (nil)))
(insn/f:TI 1454 1453 1455 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -88 [0xffffffffffffffa8])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0  A8]))
        ]) D:\LHX\7.5 contest\t1.cpp:32 943 {pro_epilogue_adjust_stack_si_add}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(note 1455 1454 3 2 NOTE_INSN_PROLOGUE_END)
(call_insn:TI 3 1455 53 2 (call (mem:QI (symbol_ref:SI ("__main") [flags 0x43]) [0  S1 A8])
        (const_int 0 [0])) D:\LHX\7.5 contest\t1.cpp:32 641 {*call}
     (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
        (nil))
    (nil))
(call_insn:TI 53 3 55 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("getchar") [flags 0x43]  <function_decl 0267a780 getchar>) [0 getchar S1 A8])
            (const_int 0 [0]))) D:\LHX\7.5 contest\t1.cpp:11 648 {*call_value}
     (nil)
    (nil))
(insn:TI 55 53 1444 2 (set (reg/v:QI 1 dx [orig:151 ch ] [151])
        (reg:QI 0 ax [orig:149 D.83218 ] [149])) D:\LHX\7.5 contest\t1.cpp:11 93 {*movqi_internal}
     (nil))
(insn 1444 55 57 2 (parallel [
            (set (reg:SI 0 ax [orig:261 D.83228 ] [261])
                (plus:SI (reg:SI 0 ax [orig:149 D.83218 ] [149])
                    (const_int -48 [0xffffffffffffffd0])))
            (clobber (reg:CC 17 flags))
        ]) D:\LHX\7.5 contest\t1.cpp:12 220 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn:TI 57 1444 58 2 (set (reg:CC 17 flags)
        (compare:CC (reg:QI 0 ax [orig:261 D.83228 ] [261])
            (const_int 9 [0x9]))) D:\LHX\7.5 contest\t1.cpp:12 5 {*cmpqi_1}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:261 D.83228 ] [261])
        (nil)))
(jump_insn:TI 58 57 59 2 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 780)
            (pc))) D:\LHX\7.5 contest\t1.cpp:12 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 900 (nil)))
 -> 780)
;;  succ:       3 [91.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              115 [9.0%]  (CAN_FALLTHRU)
;; lr  out 	 1 [dx] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 1 [dx] 6 [bp] 7 [sp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 8, maybe hot
;;  prev block 2, next block 4, flags: (REACHABLE, RTL)
;;  pred:       2 [91.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 1 [dx] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 3 [bx] 4 [si] 5 [di] 17 [flags]
;; live  in  	 1 [dx] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 3 [bx] 4 [si] 5 [di]
;; live  kill	 17 [flags]
(note 59 58 1235 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(note 1235 59 1234 3 NOTE_INSN_DELETED)
(note 1234 1235 855 3 NOTE_INSN_DELETED)
(insn:TI 855 1234 1506 3 (set (reg:SI 4 si [orig:429 flag ] [429])
        (const_int 1 [0x1])) D:\LHX\7.5 contest\t1.cpp:12 90 {*movsi_internal}
     (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))
(insn 1506 855 927 3 (parallel [
            (set (reg:SI 5 di [orig:430 flag+4 ] [430])
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) D:\LHX\7.5 contest\t1.cpp:12 82 {*movsi_xor}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 927 1506 69 3 (set (reg:SI 3 bx [461])
        (const_int -1 [0xffffffffffffffff])) D:\LHX\7.5 contest\t1.cpp:13 90 {*movsi_internal}
     (expr_list:REG_EQUIV (const_int -1 [0xffffffffffffffff])
        (nil)))
;;  succ:       4 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 92, maybe hot
;;  prev block 3, next block 5, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       3 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              4 [91.0%]  (DFS_BACK,CAN_FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;; live  in  	 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 17 [flags]
;; live  kill	 17 [flags]
(code_label 69 927 60 4 117 "" [1 uses])
(note 60 69 926 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn:TI 926 60 928 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:QI 1 dx [orig:151 ch ] [151])
            (const_int 45 [0x2d]))) D:\LHX\7.5 contest\t1.cpp:13 5 {*cmpqi_1}
     (expr_list:REG_DEAD (reg/v:QI 1 dx [orig:151 ch ] [151])
        (nil)))
(insn:TI 928 926 931 4 (set (reg:SI 4 si [orig:429 flag ] [429])
        (if_then_else:SI (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (reg:SI 4 si [orig:429 flag ] [429])
            (reg:SI 3 bx [461]))) D:\LHX\7.5 contest\t1.cpp:13 927 {*movsicc_noc}
     (nil))
(insn 931 928 66 4 (set (reg:SI 5 di [orig:430 flag+4 ] [430])
        (if_then_else:SI (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (reg:SI 5 di [orig:430 flag+4 ] [430])
            (reg:SI 3 bx [461]))) D:\LHX\7.5 contest\t1.cpp:13 927 {*movsicc_noc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil)))
(call_insn:TI 66 931 68 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("getchar") [flags 0x43]  <function_decl 0267a780 getchar>) [0 getchar S1 A8])
            (const_int 0 [0]))) D:\LHX\7.5 contest\t1.cpp:14 648 {*call_value}
     (nil)
    (nil))
(insn:TI 68 66 1443 4 (set (reg/v:QI 1 dx [orig:151 ch ] [151])
        (reg:QI 0 ax [orig:150 D.83218 ] [150])) D:\LHX\7.5 contest\t1.cpp:14 93 {*movqi_internal}
     (nil))
(insn 1443 68 71 4 (parallel [
            (set (reg:SI 0 ax [orig:262 D.83228 ] [262])
                (plus:SI (reg:SI 0 ax [orig:150 D.83218 ] [150])
                    (const_int -48 [0xffffffffffffffd0])))
            (clobber (reg:CC 17 flags))
        ]) D:\LHX\7.5 contest\t1.cpp:12 220 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn:TI 71 1443 72 4 (set (reg:CC 17 flags)
        (compare:CC (reg:QI 0 ax [orig:262 D.83228 ] [262])
            (const_int 9 [0x9]))) D:\LHX\7.5 contest\t1.cpp:12 5 {*cmpqi_1}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:262 D.83228 ] [262])
        (nil)))
(jump_insn:TI 72 71 987 4 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 69)
            (pc))) D:\LHX\7.5 contest\t1.cpp:12 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 9100 (nil)))
 -> 69)
;;  succ:       4 [91.0%]  (DFS_BACK,CAN_FALLTHRU)
;;              5 [9.0%]  (FALLTHRU,CAN_FALLTHRU,LOOP_EXIT)
;; lr  out 	 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 8, maybe hot
;;  prev block 4, next block 6, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       4 [9.0%]  (FALLTHRU,CAN_FALLTHRU,LOOP_EXIT)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp]
;; lr  def 	 3 [bx]
;; live  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 3 [bx]
;; live  kill	
(note 987 72 1063 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1063 987 1064 5 (set (reg:SI 3 bx [orig:429 flag ] [429])
        (reg:SI 4 si [orig:429 flag ] [429])) 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [orig:429 flag ] [429])
        (nil)))
(insn 1064 1063 748 5 (set (mem/c:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [45 %sfp+-24 S4 A64])
        (reg:SI 5 di [orig:430 flag+4 ] [430])) 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 5 di [orig:430 flag+4 ] [430])
        (nil)))
;;  succ:       6 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame]

;; basic block 6, loop depth 0, count 0, freq 9, maybe hot
;;  prev block 5, next block 7, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       5 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              115 [100.0%]  (CAN_FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 1 [dx] 6 [bp] 7 [sp]
;; lr  def 	 2 [cx] 4 [si] 5 [di] 17 [flags]
;; live  in  	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 2 [cx] 4 [si] 5 [di]
;; live  kill	 17 [flags]
(code_label 748 1064 749 6 115 "" [1 uses])
(note 749 748 1477 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1477 749 1478 6 (parallel [
            (set (reg:SI 4 si [orig:159 re ] [159])
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) D:\LHX\7.5 contest\t1.cpp:13 82 {*movsi_xor}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 1478 1477 1108 6 (parallel [
            (set (reg:SI 5 di [ re+4 ])
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) D:\LHX\7.5 contest\t1.cpp:13 82 {*movsi_xor}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 1108 1478 88 6 (set (reg/v:QI 2 cx [orig:151 ch ] [151])
        (reg/v:QI 1 dx [orig:151 ch ] [151])) 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg/v:QI 1 dx [orig:151 ch ] [151])
        (nil)))
;;  succ:       7 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]

;; basic block 7, loop depth 0, count 0, freq 92, maybe hot
;;  prev block 6, next block 8, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       7 [91.0%]  (DFS_BACK,CAN_FALLTHRU)
;;              6 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;; live  in  	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 17 [flags]
;; live  kill	 17 [flags]
(code_label 88 1108 76 7 118 "" [1 uses])
(note 76 88 1433 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1433 76 1434 7 (set (reg:SI 0 ax [orig:263 D.83229 ] [263])
        (reg:SI 4 si [orig:159 re ] [159])) D:\LHX\7.5 contest\t1.cpp:16 90 {*movsi_internal}
     (nil))
(insn 1434 1433 1647 7 (set (reg:SI 1 dx [ D.83229+4 ])
        (reg:SI 5 di [ re+4 ])) D:\LHX\7.5 contest\t1.cpp:16 90 {*movsi_internal}
     (nil))
(insn:TI 1647 1434 1649 7 (parallel [
            (set (reg:SI 1 dx [ D.83229+4 ])
                (ior:SI (ashift:SI (reg:SI 1 dx [ D.83229+4 ])
                        (const_int 1 [0x1]))
                    (lshiftrt:SI (reg:SI 0 ax [orig:263 D.83229 ] [263])
                        (minus:QI (const_int 32 [0x20])
                            (const_int 1 [0x1])))))
            (clobber (reg:CC 17 flags))
        ]) D:\LHX\7.5 contest\t1.cpp:16 491 {x86_shld}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn:TI 1649 1647 1648 7 (parallel [
            (set (reg:SI 5 di [ D.83229+4 ])
                (ior:SI (ashift:SI (reg:SI 5 di [ D.83229+4 ])
                        (const_int 3 [0x3]))
                    (lshiftrt:SI (reg:SI 4 si [orig:264 D.83229 ] [264])
                        (minus:QI (const_int 32 [0x20])
                            (const_int 3 [0x3])))))
            (clobber (reg:CC 17 flags))
        ]) D:\LHX\7.5 contest\t1.cpp:16 491 {x86_shld}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn:TI 1648 1649 1650 7 (parallel [
            (set (reg:SI 0 ax [orig:263 D.83229 ] [263])
                (plus:SI (reg:SI 0 ax [orig:263 D.83229 ] [263])
                    (reg:SI 0 ax [orig:263 D.83229 ] [263])))
            (clobber (reg:CC 17 flags))
        ]) D:\LHX\7.5 contest\t1.cpp:16 220 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 1650 1648 1435 7 (parallel [
            (set (reg:SI 4 si [orig:264 D.83229 ] [264])
                (ashift:SI (reg:SI 4 si [orig:264 D.83229 ] [264])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) D:\LHX\7.5 contest\t1.cpp:16 496 {*ashlsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn:TI 1435 1650 81 7 (parallel [
            (set (reg:CC 17 flags)
                (unspec:CC [
                        (reg:SI 4 si [orig:264 D.83229 ] [264])
                        (reg:SI 0 ax [orig:263 D.83229 ] [263])
                    ] UNSPEC_ADD_CARRY))
            (set (reg:SI 4 si [orig:265 D.83229 ] [265])
                (plus:SI (reg:SI 4 si [orig:264 D.83229 ] [264])
                    (reg:SI 0 ax [orig:263 D.83229 ] [263])))
        ]) D:\LHX\7.5 contest\t1.cpp:16 217 {*addsi3_cc}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:263 D.83229 ] [263])
        (nil)))
(insn 81 1435 1436 7 (set (reg:SI 0 ax [orig:267 ch ] [267])
        (sign_extend:SI (reg/v:QI 2 cx [orig:151 ch ] [151]))) D:\LHX\7.5 contest\t1.cpp:16 148 {extendqisi2}
     (expr_list:REG_DEAD (reg/v:QI 2 cx [orig:151 ch ] [151])
        (nil)))
(insn:TI 1436 81 1437 7 (parallel [
            (set (reg:SI 5 di [ D.83229+4 ])
                (plus:SI (reg:SI 5 di [ D.83229+4 ])
                    (plus:SI (ltu:SI (reg:CC 17 flags)
                            (const_int 0 [0]))
                        (reg:SI 1 dx [ D.83229+4 ]))))
            (clobber (reg:CC 17 flags))
        ]) D:\LHX\7.5 contest\t1.cpp:16 289 {*addsi3_carry}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (expr_list:REG_DEAD (reg:SI 1 dx [ D.83229+4 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 1437 1436 1438 7 (parallel [
            (set (reg:SI 1 dx [ D.83229+4 ])
                (ashiftrt:SI (reg:SI 0 ax [orig:266 D.83229 ] [266])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) D:\LHX\7.5 contest\t1.cpp:16 523 {ashrsi3_cvt}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 1438 1437 1439 7 (parallel [
            (set (reg:CC 17 flags)
                (unspec:CC [
                        (reg:SI 4 si [orig:265 D.83229 ] [265])
                        (reg:SI 0 ax [orig:266 D.83229 ] [266])
                    ] UNSPEC_ADD_CARRY))
            (set (reg:SI 4 si [orig:158 D.83229 ] [158])
                (plus:SI (reg:SI 4 si [orig:265 D.83229 ] [265])
                    (reg:SI 0 ax [orig:266 D.83229 ] [266])))
        ]) D:\LHX\7.5 contest\t1.cpp:16 217 {*addsi3_cc}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:266 D.83229 ] [266])
        (nil)))
(insn:TI 1439 1438 1440 7 (parallel [
            (set (reg:SI 5 di [ D.83229+4 ])
                (plus:SI (reg:SI 5 di [ D.83229+4 ])
                    (plus:SI (ltu:SI (reg:CC 17 flags)
                            (const_int 0 [0]))
                        (reg:SI 1 dx [ D.83229+4 ]))))
            (clobber (reg:CC 17 flags))
        ]) D:\LHX\7.5 contest\t1.cpp:16 289 {*addsi3_carry}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (expr_list:REG_DEAD (reg:SI 1 dx [ D.83229+4 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 1440 1439 1441 7 (parallel [
            (set (reg:CC 17 flags)
                (unspec:CC [
                        (reg:SI 4 si [orig:159 re ] [159])
                        (const_int -48 [0xffffffffffffffd0])
                    ] UNSPEC_ADD_CARRY))
            (set (reg:SI 4 si [orig:159 re ] [159])
                (plus:SI (reg:SI 4 si [orig:159 re ] [159])
                    (const_int -48 [0xffffffffffffffd0])))
        ]) D:\LHX\7.5 contest\t1.cpp:16 217 {*addsi3_cc}
     (nil))
(insn:TI 1441 1440 85 7 (parallel [
            (set (reg:SI 5 di [ re+4 ])
                (plus:SI (reg:SI 5 di [ re+4 ])
                    (plus:SI (ltu:SI (reg:CC 17 flags)
                            (const_int 0 [0]))
                        (const_int -1 [0xffffffffffffffff]))))
            (clobber (reg:CC 17 flags))
        ]) D:\LHX\7.5 contest\t1.cpp:16 289 {*addsi3_carry}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(call_insn:TI 85 1441 87 7 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("getchar") [flags 0x43]  <function_decl 0267a780 getchar>) [0 getchar S1 A8])
            (const_int 0 [0]))) D:\LHX\7.5 contest\t1.cpp:16 648 {*call_value}
     (nil)
    (nil))
(insn:TI 87 85 1442 7 (set (reg/v:QI 2 cx [orig:151 ch ] [151])
        (reg:QI 0 ax [orig:160 D.83218 ] [160])) D:\LHX\7.5 contest\t1.cpp:16 93 {*movqi_internal}
     (nil))
(insn 1442 87 90 7 (parallel [
            (set (reg:SI 0 ax [orig:268 D.83228 ] [268])
                (plus:SI (reg:SI 0 ax [orig:160 D.83218 ] [160])
                    (const_int -48 [0xffffffffffffffd0])))
            (clobber (reg:CC 17 flags))
        ]) D:\LHX\7.5 contest\t1.cpp:16 220 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn:TI 90 1442 91 7 (set (reg:CC 17 flags)
        (compare:CC (reg:QI 0 ax [orig:268 D.83228 ] [268])
            (const_int 9 [0x9]))) D:\LHX\7.5 contest\t1.cpp:16 5 {*cmpqi_1}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:268 D.83228 ] [268])
        (nil)))
(jump_insn:TI 91 90 92 7 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 88)
            (pc))) D:\LHX\7.5 contest\t1.cpp:16 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 9100 (nil)))
 -> 88)
;;  succ:       7 [91.0%]  (DFS_BACK,CAN_FALLTHRU)
;;              8 [9.0%]  (FALLTHRU,CAN_FALLTHRU,LOOP_EXIT)
;; lr  out 	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]

;; basic block 8, loop depth 0, count 0, freq 8, maybe hot
;;  prev block 7, next block 9, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       7 [9.0%]  (FALLTHRU,CAN_FALLTHRU,LOOP_EXIT)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 3 [bx] 4 [si] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 3 [bx] 17 [flags]
;; live  in  	 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 17 [flags]
;; live  kill	 17 [flags]
(note 92 91 97 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(note 97 92 1128 8 NOTE_INSN_DELETED)
(insn:TI 1128 97 96 8 (set (reg:SI 0 ax [orig:272 D.83229 ] [272])
        (reg:SI 3 bx [orig:429 flag ] [429])) D:\LHX\7.5 contest\t1.cpp:17 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 3 bx [orig:429 flag ] [429])
        (nil)))
(insn:TI 96 1128 1431 8 (parallel [
            (set (reg:DI 0 ax [orig:272 D.83229 ] [272])
                (mult:DI (zero_extend:DI (reg:SI 0 ax [orig:272 D.83229 ] [272]))
                    (zero_extend:DI (reg:SI 4 si [orig:159 re ] [159]))))
            (clobber (reg:CC 17 flags))
        ]) D:\LHX\7.5 contest\t1.cpp:17 323 {*umulsidi3_1}
     (expr_list:REG_DEAD (reg:SI 4 si [orig:159 re ] [159])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_UNUSED (reg:SI 1 dx)
                (nil)))))
(insn:TI 1431 96 102 8 (set (reg:SI 3 bx [orig:272 D.83229 ] [272])
        (reg:SI 0 ax [orig:272 D.83229 ] [272])) D:\LHX\7.5 contest\t1.cpp:17 90 {*movsi_internal}
     (nil))
(insn 102 1431 101 8 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:85 D.83218 ] [85])
            (const_int 0 [0]))) D:\LHX\7.5 contest\t1.cpp:38 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:85 D.83218 ] [85])
        (nil)))
(insn:TI 101 102 103 8 (set (mem/c:SI (symbol_ref:SI ("n") [flags 0x2]  <var_decl 06e5d660 n>) [21 n+0 S4 A32])
        (reg:SI 3 bx [orig:272 D.83229 ] [272])) D:\LHX\7.5 contest\t1.cpp:37 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 3 bx [orig:272 D.83229 ] [272])
        (nil)))
(jump_insn 103 101 781 8 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 756)
            (pc))) D:\LHX\7.5 contest\t1.cpp:38 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (int_list:REG_BR_PROB 100 (nil)))
 -> 756)
;;  succ:       9 [99.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              113 [1.0%]  (CAN_FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 9, loop depth 0, count 0, freq 8, maybe hot
;;  prev block 8, next block 10, flags: (REACHABLE, RTL)
;;  pred:       8 [99.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
(note 781 103 7 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn:TI 7 781 933 9 (set (mem/c:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [45 %sfp+-32 S4 A64])
        (const_int 1 [0x1])) D:\LHX\7.5 contest\t1.cpp:38 90 {*movsi_internal}
     (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))
(note 933 7 156 9 NOTE_INSN_DELETED)
;;  succ:       10 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 10, loop depth 0, count 0, freq 900, maybe hot
;;  prev block 9, next block 11, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       9 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              16 [99.0%]  (DFS_BACK,CAN_FALLTHRU)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 2 [cx] 3 [bx] 17 [flags]
;; live  kill	 17 [flags]
(code_label 156 933 104 10 124 "" [1 uses])
(note 104 156 105 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(call_insn:TI 105 104 107 10 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("getchar") [flags 0x43]  <function_decl 0267a780 getchar>) [0 getchar S1 A8])
            (const_int 0 [0]))) D:\LHX\7.5 contest\t1.cpp:11 648 {*call_value}
     (nil)
    (nil))
(insn:TI 107 105 1430 10 (set (reg/v:QI 2 cx [orig:167 ch ] [167])
        (reg:QI 0 ax [orig:84 D.83218 ] [84])) D:\LHX\7.5 contest\t1.cpp:11 93 {*movqi_internal}
     (nil))
(insn 1430 107 859 10 (parallel [
            (set (reg:SI 0 ax [orig:274 D.83228 ] [274])
                (plus:SI (reg:SI 0 ax [orig:84 D.83218 ] [84])
                    (const_int -48 [0xffffffffffffffd0])))
            (clobber (reg:CC 17 flags))
        ]) D:\LHX\7.5 contest\t1.cpp:12 220 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 859 1430 109 10 (set (reg:SI 3 bx [orig:431 flag ] [431])
        (const_int 1 [0x1])) D:\LHX\7.5 contest\t1.cpp:12 90 {*movsi_internal}
     (nil))
(insn:TI 109 859 110 10 (set (reg:CC 17 flags)
        (compare:CC (reg:QI 0 ax [orig:274 D.83228 ] [274])
            (const_int 9 [0x9]))) D:\LHX\7.5 contest\t1.cpp:12 5 {*cmpqi_1}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:274 D.83228 ] [274])
        (nil)))
(jump_insn:TI 110 109 111 10 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 783)
            (pc))) D:\LHX\7.5 contest\t1.cpp:12 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 900 (nil)))
 -> 783)
;;  succ:       11 [91.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              56 [9.0%]  (CAN_FALLTHRU)
;; lr  out 	 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame]

;; basic block 11, loop depth 0, count 0, freq 819, maybe hot
;;  prev block 10, next block 12, flags: (REACHABLE, RTL)
;;  pred:       10 [91.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 4 [si] 17 [flags]
;; live  in  	 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 4 [si]
;; live  kill	 17 [flags]
(note 111 110 1238 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(note 1238 111 1505 11 NOTE_INSN_DELETED)
(insn:TI 1505 1238 1237 11 (parallel [
            (set (reg:SI 4 si [orig:432 flag+4 ] [432])
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) D:\LHX\7.5 contest\t1.cpp:12 82 {*movsi_xor}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(note 1237 1505 121 11 NOTE_INSN_DELETED)
;;  succ:       12 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame]

;; basic block 12, loop depth 0, count 0, freq 9100, maybe hot
;;  prev block 11, next block 13, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       11 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              12 [91.0%]  (DFS_BACK,CAN_FALLTHRU)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;; live  in  	 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 2 [cx] 3 [bx] 4 [si] 17 [flags]
;; live  kill	 17 [flags]
(code_label 121 1237 112 12 122 "" [1 uses])
(note 112 121 932 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn:TI 932 112 1130 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:QI 2 cx [orig:167 ch ] [167])
            (const_int 45 [0x2d]))) D:\LHX\7.5 contest\t1.cpp:13 5 {*cmpqi_1}
     (expr_list:REG_DEAD (reg/v:QI 2 cx [orig:167 ch ] [167])
        (nil)))
(insn 1130 932 934 12 (set (reg:SI 0 ax [509])
        (const_int -1 [0xffffffffffffffff])) D:\LHX\7.5 contest\t1.cpp:13 90 {*movsi_internal}
     (nil))
(insn:TI 934 1130 937 12 (set (reg:SI 3 bx [orig:431 flag ] [431])
        (if_then_else:SI (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (reg:SI 3 bx [orig:431 flag ] [431])
            (reg:SI 0 ax [509]))) D:\LHX\7.5 contest\t1.cpp:13 927 {*movsicc_noc}
     (nil))
(insn 937 934 118 12 (set (reg:SI 4 si [orig:432 flag+4 ] [432])
        (if_then_else:SI (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (reg:SI 4 si [orig:432 flag+4 ] [432])
            (reg:SI 0 ax [510]))) D:\LHX\7.5 contest\t1.cpp:13 927 {*movsicc_noc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_DEAD (reg:SI 0 ax [510])
            (nil))))
(call_insn:TI 118 937 120 12 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("getchar") [flags 0x43]  <function_decl 0267a780 getchar>) [0 getchar S1 A8])
            (const_int 0 [0]))) D:\LHX\7.5 contest\t1.cpp:14 648 {*call_value}
     (nil)
    (nil))
(insn:TI 120 118 1429 12 (set (reg/v:QI 2 cx [orig:167 ch ] [167])
        (reg:QI 0 ax [orig:166 D.83218 ] [166])) D:\LHX\7.5 contest\t1.cpp:14 93 {*movqi_internal}
     (nil))
(insn 1429 120 123 12 (parallel [
            (set (reg:SI 0 ax [orig:275 D.83228 ] [275])
                (plus:SI (reg:SI 0 ax [orig:166 D.83218 ] [166])
                    (const_int -48 [0xffffffffffffffd0])))
            (clobber (reg:CC 17 flags))
        ]) D:\LHX\7.5 contest\t1.cpp:12 220 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn:TI 123 1429 124 12 (set (reg:CC 17 flags)
        (compare:CC (reg:QI 0 ax [orig:275 D.83228 ] [275])
            (const_int 9 [0x9]))) D:\LHX\7.5 contest\t1.cpp:12 5 {*cmpqi_1}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:275 D.83228 ] [275])
        (nil)))
(jump_insn:TI 124 123 990 12 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 121)
            (pc))) D:\LHX\7.5 contest\t1.cpp:12 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 9100 (nil)))
 -> 121)
;;  succ:       12 [91.0%]  (DFS_BACK,CAN_FALLTHRU)
;;              13 [9.0%]  (FALLTHRU,CAN_FALLTHRU,LOOP_EXIT)
;; lr  out 	 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame]

;; basic block 13, loop depth 0, count 0, freq 819, maybe hot
;;  prev block 12, next block 14, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       12 [9.0%]  (FALLTHRU,CAN_FALLTHRU,LOOP_EXIT)
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 4 [si] 6 [bp] 7 [sp]
;; lr  def 	
;; live  in  	 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
(note 990 124 1071 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1071 990 752 13 (set (mem/c:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [45 %sfp+-24 S4 A64])
        (reg:SI 4 si [orig:432 flag+4 ] [432])) 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [orig:432 flag+4 ] [432])
        (nil)))
;;  succ:       14 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame]

;; basic block 14, loop depth 0, count 0, freq 900, maybe hot
;;  prev block 13, next block 15, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       13 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              56 [100.0%]  (CAN_FALLTHRU)
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 4 [si] 5 [di] 17 [flags]
;; live  in  	 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 4 [si] 5 [di]
;; live  kill	 17 [flags]
(code_label 752 1071 753 14 120 "" [1 uses])
(note 753 752 1475 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1475 753 1476 14 (parallel [
            (set (reg:SI 4 si [orig:175 re ] [175])
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) D:\LHX\7.5 contest\t1.cpp:13 82 {*movsi_xor}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 1476 1475 140 14 (parallel [
            (set (reg:SI 5 di [ re+4 ])
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) D:\LHX\7.5 contest\t1.cpp:13 82 {*movsi_xor}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
;;  succ:       15 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]

;; basic block 15, loop depth 0, count 0, freq 9100, maybe hot
;;  prev block 14, next block 16, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       15 [91.0%]  (DFS_BACK,CAN_FALLTHRU)
;;              14 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;; live  in  	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 17 [flags]
;; live  kill	 17 [flags]
(code_label 140 1476 128 15 123 "" [1 uses])
(note 128 140 1419 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1419 128 1420 15 (set (reg:SI 0 ax [orig:276 D.83229 ] [276])
        (reg:SI 4 si [orig:175 re ] [175])) D:\LHX\7.5 contest\t1.cpp:16 90 {*movsi_internal}
     (nil))
(insn 1420 1419 1643 15 (set (reg:SI 1 dx [ D.83229+4 ])
        (reg:SI 5 di [ re+4 ])) D:\LHX\7.5 contest\t1.cpp:16 90 {*movsi_internal}
     (nil))
(insn:TI 1643 1420 1645 15 (parallel [
            (set (reg:SI 1 dx [ D.83229+4 ])
                (ior:SI (ashift:SI (reg:SI 1 dx [ D.83229+4 ])
                        (const_int 1 [0x1]))
                    (lshiftrt:SI (reg:SI 0 ax [orig:276 D.83229 ] [276])
                        (minus:QI (const_int 32 [0x20])
                            (const_int 1 [0x1])))))
            (clobber (reg:CC 17 flags))
        ]) D:\LHX\7.5 contest\t1.cpp:16 491 {x86_shld}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn:TI 1645 1643 1644 15 (parallel [
            (set (reg:SI 5 di [ D.83229+4 ])
                (ior:SI (ashift:SI (reg:SI 5 di [ D.83229+4 ])
                        (const_int 3 [0x3]))
                    (lshiftrt:SI (reg:SI 4 si [orig:277 D.83229 ] [277])
                        (minus:QI (const_int 32 [0x20])
                            (const_int 3 [0x3])))))
            (clobber (reg:CC 17 flags))
        ]) D:\LHX\7.5 contest\t1.cpp:16 491 {x86_shld}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn:TI 1644 1645 1646 15 (parallel [
            (set (reg:SI 0 ax [orig:276 D.83229 ] [276])
                (plus:SI (reg:SI 0 ax [orig:276 D.83229 ] [276])
                    (reg:SI 0 ax [orig:276 D.83229 ] [276])))
            (clobber (reg:CC 17 flags))
        ]) D:\LHX\7.5 contest\t1.cpp:16 220 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 1646 1644 1421 15 (parallel [
            (set (reg:SI 4 si [orig:277 D.83229 ] [277])
                (ashift:SI (reg:SI 4 si [orig:277 D.83229 ] [277])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) D:\LHX\7.5 contest\t1.cpp:16 496 {*ashlsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn:TI 1421 1646 133 15 (parallel [
            (set (reg:CC 17 flags)
                (unspec:CC [
                        (reg:SI 4 si [orig:277 D.83229 ] [277])
                        (reg:SI 0 ax [orig:276 D.83229 ] [276])
                    ] UNSPEC_ADD_CARRY))
            (set (reg:SI 4 si [orig:278 D.83229 ] [278])
                (plus:SI (reg:SI 4 si [orig:277 D.83229 ] [277])
                    (reg:SI 0 ax [orig:276 D.83229 ] [276])))
        ]) D:\LHX\7.5 contest\t1.cpp:16 217 {*addsi3_cc}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:276 D.83229 ] [276])
        (nil)))
(insn 133 1421 1422 15 (set (reg:SI 0 ax [orig:280 ch ] [280])
        (sign_extend:SI (reg/v:QI 2 cx [orig:167 ch ] [167]))) D:\LHX\7.5 contest\t1.cpp:16 148 {extendqisi2}
     (expr_list:REG_DEAD (reg/v:QI 2 cx [orig:167 ch ] [167])
        (nil)))
(insn:TI 1422 133 1423 15 (parallel [
            (set (reg:SI 5 di [ D.83229+4 ])
                (plus:SI (reg:SI 5 di [ D.83229+4 ])
                    (plus:SI (ltu:SI (reg:CC 17 flags)
                            (const_int 0 [0]))
                        (reg:SI 1 dx [ D.83229+4 ]))))
            (clobber (reg:CC 17 flags))
        ]) D:\LHX\7.5 contest\t1.cpp:16 289 {*addsi3_carry}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (expr_list:REG_DEAD (reg:SI 1 dx [ D.83229+4 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 1423 1422 1424 15 (parallel [
            (set (reg:SI 1 dx [ D.83229+4 ])
                (ashiftrt:SI (reg:SI 0 ax [orig:279 D.83229 ] [279])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) D:\LHX\7.5 contest\t1.cpp:16 523 {ashrsi3_cvt}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 1424 1423 1425 15 (parallel [
            (set (reg:CC 17 flags)
                (unspec:CC [
                        (reg:SI 4 si [orig:278 D.83229 ] [278])
                        (reg:SI 0 ax [orig:279 D.83229 ] [279])
                    ] UNSPEC_ADD_CARRY))
            (set (reg:SI 4 si [orig:174 D.83229 ] [174])
                (plus:SI (reg:SI 4 si [orig:278 D.83229 ] [278])
                    (reg:SI 0 ax [orig:279 D.83229 ] [279])))
        ]) D:\LHX\7.5 contest\t1.cpp:16 217 {*addsi3_cc}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:279 D.83229 ] [279])
        (nil)))
(insn:TI 1425 1424 1426 15 (parallel [
            (set (reg:SI 5 di [ D.83229+4 ])
                (plus:SI (reg:SI 5 di [ D.83229+4 ])
                    (plus:SI (ltu:SI (reg:CC 17 flags)
                            (const_int 0 [0]))
                        (reg:SI 1 dx [ D.83229+4 ]))))
            (clobber (reg:CC 17 flags))
        ]) D:\LHX\7.5 contest\t1.cpp:16 289 {*addsi3_carry}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (expr_list:REG_DEAD (reg:SI 1 dx [ D.83229+4 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 1426 1425 1427 15 (parallel [
            (set (reg:CC 17 flags)
                (unspec:CC [
                        (reg:SI 4 si [orig:175 re ] [175])
                        (const_int -48 [0xffffffffffffffd0])
                    ] UNSPEC_ADD_CARRY))
            (set (reg:SI 4 si [orig:175 re ] [175])
                (plus:SI (reg:SI 4 si [orig:175 re ] [175])
                    (const_int -48 [0xffffffffffffffd0])))
        ]) D:\LHX\7.5 contest\t1.cpp:16 217 {*addsi3_cc}
     (nil))
(insn:TI 1427 1426 137 15 (parallel [
            (set (reg:SI 5 di [ re+4 ])
                (plus:SI (reg:SI 5 di [ re+4 ])
                    (plus:SI (ltu:SI (reg:CC 17 flags)
                            (const_int 0 [0]))
                        (const_int -1 [0xffffffffffffffff]))))
            (clobber (reg:CC 17 flags))
        ]) D:\LHX\7.5 contest\t1.cpp:16 289 {*addsi3_carry}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(call_insn:TI 137 1427 139 15 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("getchar") [flags 0x43]  <function_decl 0267a780 getchar>) [0 getchar S1 A8])
            (const_int 0 [0]))) D:\LHX\7.5 contest\t1.cpp:16 648 {*call_value}
     (nil)
    (nil))
(insn:TI 139 137 1428 15 (set (reg/v:QI 2 cx [orig:167 ch ] [167])
        (reg:QI 0 ax [orig:176 D.83218 ] [176])) D:\LHX\7.5 contest\t1.cpp:16 93 {*movqi_internal}
     (nil))
(insn 1428 139 142 15 (parallel [
            (set (reg:SI 0 ax [orig:281 D.83228 ] [281])
                (plus:SI (reg:SI 0 ax [orig:176 D.83218 ] [176])
                    (const_int -48 [0xffffffffffffffd0])))
            (clobber (reg:CC 17 flags))
        ]) D:\LHX\7.5 contest\t1.cpp:16 220 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn:TI 142 1428 143 15 (set (reg:CC 17 flags)
        (compare:CC (reg:QI 0 ax [orig:281 D.83228 ] [281])
            (const_int 9 [0x9]))) D:\LHX\7.5 contest\t1.cpp:16 5 {*cmpqi_1}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:281 D.83228 ] [281])
        (nil)))
(jump_insn:TI 143 142 144 15 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 140)
            (pc))) D:\LHX\7.5 contest\t1.cpp:16 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 9100 (nil)))
 -> 140)
;;  succ:       15 [91.0%]  (DFS_BACK,CAN_FALLTHRU)
;;              16 [9.0%]  (FALLTHRU,CAN_FALLTHRU,LOOP_EXIT)
;; lr  out 	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]

;; basic block 16, loop depth 0, count 0, freq 819, maybe hot
;;  prev block 15, next block 17, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       15 [9.0%]  (FALLTHRU,CAN_FALLTHRU,LOOP_EXIT)
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 3 [bx] 4 [si] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 5 [di] 17 [flags]
;; live  in  	 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 5 [di] 17 [flags]
;; live  kill	 17 [flags]
(note 144 143 150 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(note 150 144 1139 16 NOTE_INSN_DELETED)
(insn:TI 1139 150 1240 16 (set (reg:SI 0 ax [orig:286 D.83229 ] [286])
        (reg:SI 3 bx [orig:431 flag ] [431])) D:\LHX\7.5 contest\t1.cpp:17 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 3 bx [orig:431 flag ] [431])
        (nil)))
(insn 1240 1139 149 16 (set (reg/v:SI 5 di [orig:87 i ] [87])
        (mem/c:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [45 %sfp+-32 S4 A64])) D:\LHX\7.5 contest\t1.cpp:38 90 {*movsi_internal}
     (nil))
(insn:TI 149 1240 153 16 (parallel [
            (set (reg:DI 0 ax [orig:286 D.83229 ] [286])
                (mult:DI (zero_extend:DI (reg:SI 0 ax [orig:286 D.83229 ] [286]))
                    (zero_extend:DI (reg:SI 4 si [orig:175 re ] [175]))))
            (clobber (reg:CC 17 flags))
        ]) D:\LHX\7.5 contest\t1.cpp:17 323 {*umulsidi3_1}
     (expr_list:REG_DEAD (reg:SI 4 si [orig:175 re ] [175])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_UNUSED (reg:SI 1 dx)
                (nil)))))
(insn:TI 153 149 155 16 (set (mem:SI (plus:SI (mult:SI (reg/v:SI 5 di [orig:87 i ] [87])
                    (const_int 4 [0x4]))
                (symbol_ref:SI ("a") [flags 0x2]  <var_decl 06e5d780 a>)) [21 MEM[symbol: a, index: _30, step: 4, offset: 0B]+0 S4 A32])
        (reg:SI 0 ax [orig:286 D.83229 ] [286])) D:\LHX\7.5 contest\t1.cpp:38 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:286 D.83229 ] [286])
        (nil)))
(insn 155 153 154 16 (set (reg:SI 0 ax [orig:449 D.83218 ] [449])
        (mem/c:SI (symbol_ref:SI ("n") [flags 0x2]  <var_decl 06e5d660 n>) [21 n+0 S4 A32])) D:\LHX\7.5 contest\t1.cpp:38 90 {*movsi_internal}
     (nil))
(insn 154 155 1239 16 (parallel [
            (set (reg/v:SI 5 di [orig:87 i ] [87])
                (plus:SI (reg/v:SI 5 di [orig:87 i ] [87])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) D:\LHX\7.5 contest\t1.cpp:38 220 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn:TI 1239 154 157 16 (set (mem/c:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [45 %sfp+-32 S4 A64])
        (reg/v:SI 5 di [orig:87 i ] [87])) D:\LHX\7.5 contest\t1.cpp:38 90 {*movsi_internal}
     (nil))
(insn:TI 157 1239 158 16 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 0 ax [orig:449 D.83218 ] [449])
            (reg/v:SI 5 di [orig:87 i ] [87]))) D:\LHX\7.5 contest\t1.cpp:38 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg/v:SI 5 di [orig:87 i ] [87])
        (nil)))
(jump_insn:TI 158 157 159 16 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 156)
            (pc))) D:\LHX\7.5 contest\t1.cpp:38 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (int_list:REG_BR_PROB 9900 (nil)))
 -> 156)
;;  succ:       10 [99.0%]  (DFS_BACK,CAN_FALLTHRU)
;;              17 [1.0%]  (FALLTHRU,CAN_FALLTHRU,LOOP_EXIT)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

;; basic block 17, loop depth 0, count 0, freq 9, maybe hot
;;  prev block 16, next block 18, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       16 [1.0%]  (FALLTHRU,CAN_FALLTHRU,LOOP_EXIT)
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 17 [flags]
;; live  kill	
(note 159 158 160 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn:TI 160 159 1244 17 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:449 D.83218 ] [449])
            (const_int 0 [0]))) D:\LHX\7.5 contest\t1.cpp:39 3 {*cmpsi_ccno_1}
     (nil))
(insn 1244 160 161 17 (set (mem/c:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -60 [0xffffffffffffffc4])) [45 %sfp+-36 S4 A32])
        (reg:SI 0 ax [orig:449 D.83218 ] [449])) 90 {*movsi_internal}
     (nil))
(jump_insn:TI 161 1244 162 17 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 210)
            (pc))) D:\LHX\7.5 contest\t1.cpp:39 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (int_list:REG_BR_PROB 100 (nil)))
 -> 210)
;;  succ:       18 [99.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              22 [1.0%]  (CAN_FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

;; basic block 18, loop depth 0, count 0, freq 9, maybe hot
;;  prev block 17, next block 19, flags: (REACHABLE, RTL)
;;  pred:       17 [99.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 3 [bx] 4 [si] 17 [flags]
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 3 [bx] 4 [si]
;; live  kill	 17 [flags]
(note 162 161 1242 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(note 1242 162 176 18 NOTE_INSN_DELETED)
(note 176 1242 163 18 NOTE_INSN_DELETED)
(insn:TI 163 176 12 18 (parallel [
            (set (reg:SI 0 ax [orig:240 D.83218 ] [240])
                (plus:SI (reg:SI 0 ax [orig:449 D.83218 ] [449])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 220 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 12 163 1074 18 (set (reg/v:SI 4 si [orig:94 i ] [94])
        (const_int 1 [0x1])) D:\LHX\7.5 contest\t1.cpp:39 90 {*movsi_internal}
     (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))
(insn:TI 1074 12 1075 18 (set (mem/c:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [45 %sfp+-24 S4 A64])
        (reg/v:SI 4 si [orig:94 i ] [94])) D:\LHX\7.5 contest\t1.cpp:40 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 4 si [orig:94 i ] [94])
        (nil)))
(insn 1075 1074 184 18 (set (reg:SI 3 bx [orig:240 D.83218 ] [240])
        (reg:SI 0 ax [orig:240 D.83218 ] [240])) D:\LHX\7.5 contest\t1.cpp:40 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:240 D.83218 ] [240])
        (nil)))
;;  succ:       19 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame]

;; basic block 19, loop depth 0, count 0, freq 900, maybe hot
;;  prev block 18, next block 20, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       18 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              19 [99.0%]  (DFS_BACK,CAN_FALLTHRU)
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 17 [flags]
;; live  kill	 17 [flags]
(code_label 184 1075 164 19 126 "" [1 uses])
(note 164 184 1245 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(note 1245 164 171 19 NOTE_INSN_DELETED)
(note 171 1245 1322 19 NOTE_INSN_DELETED)
(note 1322 171 178 19 NOTE_INSN_DELETED)
(note 178 1322 1304 19 NOTE_INSN_DELETED)
(note 1304 178 1324 19 NOTE_INSN_DELETED)
(insn:TI 1324 1304 172 19 (set (reg/v:SI 2 cx [orig:94 i ] [94])
        (mem/c:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [45 %sfp+-24 S4 A64])) D:\LHX\7.5 contest\t1.cpp:40 90 {*movsi_internal}
     (nil))
(insn:TI 172 1324 168 19 (parallel [
            (set (reg:SI 0 ax [293])
                (mult:SI (mem:SI (plus:SI (mult:SI (reg/v:SI 2 cx [orig:94 i ] [94])
                                (const_int 8 [0x8]))
                            (const:SI (plus:SI (symbol_ref:SI ("pre") [flags 0x2]  <var_decl 06e5d8a0 pre>)
                                    (const_int -4 [0xfffffffffffffffc])))) [34 MEM[symbol: pre, index: _39, step: 8, offset: 4294967288B]+4 S4 A32])
                    (const_int 19260817 [0x125e591])))
            (clobber (reg:CC 17 flags))
        ]) D:\LHX\7.5 contest\t1.cpp:40 306 {*mulsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn:TI 168 172 1408 19 (set (reg:SI 1 dx [orig:291 MEM[symbol: a, index: _39, step: 4, offset: 0B] ] [291])
        (mem:SI (plus:SI (mult:SI (reg/v:SI 2 cx [orig:94 i ] [94])
                    (const_int 4 [0x4]))
                (symbol_ref:SI ("a") [flags 0x2]  <var_decl 06e5d780 a>)) [21 MEM[symbol: a, index: _39, step: 4, offset: 0B]+0 S4 A32])) D:\LHX\7.5 contest\t1.cpp:40 90 {*movsi_internal}
     (nil))
(insn:TI 1408 168 1409 19 (set (reg:SI 4 si [orig:290 D.83220 ] [290])
        (reg:SI 1 dx [orig:291 MEM[symbol: a, index: _39, step: 4, offset: 0B] ] [291])) D:\LHX\7.5 contest\t1.cpp:40 90 {*movsi_internal}
     (nil))
(insn 1409 1408 1410 19 (set (reg:SI 5 di [ D.83220+4 ])
        (reg:SI 1 dx [orig:291 MEM[symbol: a, index: _39, step: 4, offset: 0B] ] [291])) D:\LHX\7.5 contest\t1.cpp:40 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [orig:291 MEM[symbol: a, index: _39, step: 4, offset: 0B] ] [291])
        (nil)))
(insn:TI 1410 1409 1307 19 (parallel [
            (set (reg:SI 5 di [ D.83220+4 ])
                (ashiftrt:SI (reg:SI 5 di [ D.83220+4 ])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) D:\LHX\7.5 contest\t1.cpp:40 523 {ashrsi3_cvt}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn:TI 1307 1410 1149 19 (set (mem/c:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [45 %sfp+-32 S4 A64])
        (reg:SI 0 ax [293])) D:\LHX\7.5 contest\t1.cpp:40 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [293])
        (nil)))
(insn 1149 1307 177 19 (set (reg:SI 0 ax [orig:298 D.83220 ] [298])
        (const_int 19260817 [0x125e591])) D:\LHX\7.5 contest\t1.cpp:40 90 {*movsi_internal}
     (nil))
(insn:TI 177 1149 1411 19 (parallel [
            (set (reg:DI 0 ax [orig:298 D.83220 ] [298])
                (mult:DI (zero_extend:DI (reg:SI 0 ax [orig:298 D.83220 ] [298]))
                    (zero_extend:DI (mem:SI (plus:SI (mult:SI (reg/v:SI 2 cx [orig:94 i ] [94])
                                    (const_int 8 [0x8]))
                                (const:SI (plus:SI (symbol_ref:SI ("pre") [flags 0x2]  <var_decl 06e5d8a0 pre>)
                                        (const_int -8 [0xfffffffffffffff8])))) [34 MEM[symbol: pre, index: _39, step: 8, offset: 4294967288B]+0 S4 A64]))))
            (clobber (reg:CC 17 flags))
        ]) D:\LHX\7.5 contest\t1.cpp:40 323 {*umulsidi3_1}
     (expr_list:REG_DEAD (reg/v:SI 2 cx [orig:94 i ] [94])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn:TI 1411 177 179 19 (set (reg:SI 2 cx [ D.83220+4 ])
        (reg:SI 1 dx [ D.83220+4 ])) D:\LHX\7.5 contest\t1.cpp:40 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [ D.83220+4 ])
        (nil)))
(insn 179 1411 1413 19 (parallel [
            (set (reg:SI 2 cx [ D.83220+4 ])
                (plus:SI (reg:SI 2 cx [ D.83220+4 ])
                    (mem/c:SI (plus:SI (reg/f:SI 6 bp)
                            (const_int -56 [0xffffffffffffffc8])) [45 %sfp+-32 S4 A64])))
            (clobber (reg:CC 17 flags))
        ]) D:\LHX\7.5 contest\t1.cpp:40 220 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 1413 179 1414 19 (parallel [
            (set (reg:CC 17 flags)
                (unspec:CC [
                        (reg:SI 4 si [301])
                        (reg:SI 0 ax [orig:298 D.83220 ] [298])
                    ] UNSPEC_ADD_CARRY))
            (set (reg:SI 4 si [301])
                (plus:SI (reg:SI 4 si [301])
                    (reg:SI 0 ax [orig:298 D.83220 ] [298])))
        ]) D:\LHX\7.5 contest\t1.cpp:40 217 {*addsi3_cc}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:298 D.83220 ] [298])
        (nil)))
(insn:TI 1414 1413 1320 19 (parallel [
            (set (reg:SI 5 di [+4 ])
                (plus:SI (reg:SI 5 di [+4 ])
                    (plus:SI (ltu:SI (reg:CC 17 flags)
                            (const_int 0 [0]))
                        (reg:SI 2 cx [ D.83220+4 ]))))
            (clobber (reg:CC 17 flags))
        ]) D:\LHX\7.5 contest\t1.cpp:40 289 {*addsi3_carry}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (expr_list:REG_DEAD (reg:SI 2 cx [ D.83220+4 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 1320 1414 1301 19 (set (reg/v:SI 2 cx [orig:94 i ] [94])
        (mem/c:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [45 %sfp+-24 S4 A64])) D:\LHX\7.5 contest\t1.cpp:40 90 {*movsi_internal}
     (nil))
(insn:TI 1301 1320 1417 19 (set (reg/v:SI 0 ax [orig:94 i ] [94])
        (reg/v:SI 2 cx [orig:94 i ] [94])) D:\LHX\7.5 contest\t1.cpp:39 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 2 cx [orig:94 i ] [94])
        (nil)))
(insn 1417 1301 1418 19 (set (mem:SI (plus:SI (mult:SI (reg/v:SI 2 cx [orig:94 i ] [94])
                    (const_int 8 [0x8]))
                (symbol_ref:SI ("pre") [flags 0x2]  <var_decl 06e5d8a0 pre>)) [34 MEM[symbol: pre, index: _39, step: 8, offset: 0B]+0 S4 A64])
        (reg:SI 4 si [301])) D:\LHX\7.5 contest\t1.cpp:40 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [301])
        (nil)))
(insn 1418 1417 183 19 (set (mem:SI (plus:SI (mult:SI (reg/v:SI 2 cx [orig:94 i ] [94])
                    (const_int 8 [0x8]))
                (const:SI (plus:SI (symbol_ref:SI ("pre") [flags 0x2]  <var_decl 06e5d8a0 pre>)
                        (const_int 4 [0x4])))) [34 MEM[symbol: pre, index: _39, step: 8, offset: 0B]+4 S4 A32])
        (reg:SI 5 di [orig:1+4 ] [1])) D:\LHX\7.5 contest\t1.cpp:40 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 5 di [orig:1+4 ] [1])
        (nil)))
(insn:TI 183 1418 185 19 (parallel [
            (set (reg/v:SI 0 ax [orig:94 i ] [94])
                (plus:SI (reg/v:SI 0 ax [orig:94 i ] [94])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) D:\LHX\7.5 contest\t1.cpp:39 220 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn:TI 185 183 1319 19 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 0 ax [orig:94 i ] [94])
            (reg:SI 3 bx [orig:240 D.83218 ] [240]))) D:\LHX\7.5 contest\t1.cpp:39 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg/v:SI 0 ax [orig:94 i ] [94])
        (nil)))
(insn 1319 185 186 19 (set (mem/c:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [45 %sfp+-24 S4 A64])
        (reg/v:SI 0 ax [orig:94 i ] [94])) D:\LHX\7.5 contest\t1.cpp:39 90 {*movsi_internal}
     (nil))
(jump_insn:TI 186 1319 784 19 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 184)
            (pc))) D:\LHX\7.5 contest\t1.cpp:39 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 9900 (nil)))
 -> 184)
;;  succ:       19 [99.0%]  (DFS_BACK,CAN_FALLTHRU)
;;              20 [1.0%]  (FALLTHRU,CAN_FALLTHRU,LOOP_EXIT)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame]

;; basic block 20, loop depth 0, count 0, freq 9, maybe hot
;;  prev block 19, next block 21, flags: (REACHABLE, RTL)
;;  pred:       19 [1.0%]  (FALLTHRU,CAN_FALLTHRU,LOOP_EXIT)
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 4 [si] 5 [di]
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 4 [si] 5 [di]
;; live  kill	
(note 784 186 199 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(note 199 784 13 20 NOTE_INSN_DELETED)
(insn:TI 13 199 1076 20 (set (reg/v:SI 4 si [orig:101 i ] [101])
        (mem/c:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -60 [0xffffffffffffffc4])) [45 %sfp+-36 S4 A32])) D:\LHX\7.5 contest\t1.cpp:38 90 {*movsi_internal}
     (nil))
(insn:TI 1076 13 207 20 (set (reg/v:SI 5 di [orig:101 i ] [101])
        (reg/v:SI 4 si [orig:101 i ] [101])) D:\LHX\7.5 contest\t1.cpp:43 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 4 si [orig:101 i ] [101])
        (nil)))
;;  succ:       21 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 5 [di] 6 [bp] 7 [sp] 20 [frame]

;; basic block 21, loop depth 0, count 0, freq 900, maybe hot
;;  prev block 20, next block 22, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       20 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              21 [99.0%]  (DFS_BACK,CAN_FALLTHRU)
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 17 [flags]
;; live  in  	 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 17 [flags]
;; live  kill	 17 [flags]
(code_label 207 1076 187 21 127 "" [1 uses])
(note 187 207 1246 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(note 1246 187 194 21 NOTE_INSN_DELETED)
(note 194 1246 1325 21 NOTE_INSN_DELETED)
(note 1325 194 201 21 NOTE_INSN_DELETED)
(note 201 1325 1298 21 NOTE_INSN_DELETED)
(note 1298 201 195 21 NOTE_INSN_DELETED)
(insn:TI 195 1298 191 21 (parallel [
            (set (reg:SI 0 ax [307])
                (mult:SI (mem:SI (plus:SI (mult:SI (reg/v:SI 5 di [orig:101 i ] [101])
                                (const_int 8 [0x8]))
                            (const:SI (plus:SI (symbol_ref:SI ("suf") [flags 0x2]  <var_decl 06e5d9c0 suf>)
                                    (const_int 12 [0xc])))) [34 MEM[symbol: suf, index: _411, step: 8, offset: 8B]+4 S4 A32])
                    (const_int 19260817 [0x125e591])))
            (clobber (reg:CC 17 flags))
        ]) D:\LHX\7.5 contest\t1.cpp:43 306 {*mulsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn:TI 191 195 1397 21 (set (reg:SI 1 dx [orig:305 MEM[symbol: a, index: _411, step: 4, offset: 0B] ] [305])
        (mem:SI (plus:SI (mult:SI (reg/v:SI 5 di [orig:101 i ] [101])
                    (const_int 4 [0x4]))
                (symbol_ref:SI ("a") [flags 0x2]  <var_decl 06e5d780 a>)) [21 MEM[symbol: a, index: _411, step: 4, offset: 0B]+0 S4 A32])) D:\LHX\7.5 contest\t1.cpp:43 90 {*movsi_internal}
     (nil))
(insn:TI 1397 191 1398 21 (set (reg:SI 3 bx [orig:304 D.83220 ] [304])
        (reg:SI 1 dx [orig:305 MEM[symbol: a, index: _411, step: 4, offset: 0B] ] [305])) D:\LHX\7.5 contest\t1.cpp:43 90 {*movsi_internal}
     (nil))
(insn 1398 1397 1399 21 (set (reg:SI 4 si [ D.83220+4 ])
        (reg:SI 1 dx [orig:305 MEM[symbol: a, index: _411, step: 4, offset: 0B] ] [305])) D:\LHX\7.5 contest\t1.cpp:43 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [orig:305 MEM[symbol: a, index: _411, step: 4, offset: 0B] ] [305])
        (nil)))
(insn:TI 1399 1398 1299 21 (parallel [
            (set (reg:SI 4 si [ D.83220+4 ])
                (ashiftrt:SI (reg:SI 4 si [ D.83220+4 ])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) D:\LHX\7.5 contest\t1.cpp:43 523 {ashrsi3_cvt}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn:TI 1299 1399 1154 21 (set (mem/c:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [45 %sfp+-24 S4 A64])
        (reg:SI 0 ax [307])) D:\LHX\7.5 contest\t1.cpp:43 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [307])
        (nil)))
(insn 1154 1299 200 21 (set (reg:SI 0 ax [orig:312 D.83220 ] [312])
        (const_int 19260817 [0x125e591])) D:\LHX\7.5 contest\t1.cpp:43 90 {*movsi_internal}
     (nil))
(insn:TI 200 1154 1400 21 (parallel [
            (set (reg:DI 0 ax [orig:312 D.83220 ] [312])
                (mult:DI (zero_extend:DI (reg:SI 0 ax [orig:312 D.83220 ] [312]))
                    (zero_extend:DI (mem:SI (plus:SI (mult:SI (reg/v:SI 5 di [orig:101 i ] [101])
                                    (const_int 8 [0x8]))
                                (const:SI (plus:SI (symbol_ref:SI ("suf") [flags 0x2]  <var_decl 06e5d9c0 suf>)
                                        (const_int 8 [0x8])))) [34 MEM[symbol: suf, index: _411, step: 8, offset: 8B]+0 S4 A64]))))
            (clobber (reg:CC 17 flags))
        ]) D:\LHX\7.5 contest\t1.cpp:43 323 {*umulsidi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn:TI 1400 200 202 21 (set (reg:SI 2 cx [ D.83220+4 ])
        (reg:SI 1 dx [ D.83220+4 ])) D:\LHX\7.5 contest\t1.cpp:43 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [ D.83220+4 ])
        (nil)))
(insn 202 1400 1402 21 (parallel [
            (set (reg:SI 2 cx [ D.83220+4 ])
                (plus:SI (reg:SI 2 cx [ D.83220+4 ])
                    (mem/c:SI (plus:SI (reg/f:SI 6 bp)
                            (const_int -48 [0xffffffffffffffd0])) [45 %sfp+-24 S4 A64])))
            (clobber (reg:CC 17 flags))
        ]) D:\LHX\7.5 contest\t1.cpp:43 220 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 1402 202 1406 21 (parallel [
            (set (reg:CC 17 flags)
                (unspec:CC [
                        (reg:SI 3 bx [315])
                        (reg:SI 0 ax [orig:312 D.83220 ] [312])
                    ] UNSPEC_ADD_CARRY))
            (set (reg:SI 3 bx [315])
                (plus:SI (reg:SI 3 bx [315])
                    (reg:SI 0 ax [orig:312 D.83220 ] [312])))
        ]) D:\LHX\7.5 contest\t1.cpp:43 217 {*addsi3_cc}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:312 D.83220 ] [312])
        (nil)))
(insn:TI 1406 1402 1403 21 (set (mem:SI (plus:SI (mult:SI (reg/v:SI 5 di [orig:101 i ] [101])
                    (const_int 8 [0x8]))
                (symbol_ref:SI ("suf") [flags 0x2]  <var_decl 06e5d9c0 suf>)) [34 MEM[symbol: suf, index: _411, step: 8, offset: 0B]+0 S4 A64])
        (reg:SI 3 bx [315])) D:\LHX\7.5 contest\t1.cpp:43 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 3 bx [315])
        (nil)))
(insn:TI 1403 1406 1407 21 (parallel [
            (set (reg:SI 4 si [+4 ])
                (plus:SI (reg:SI 4 si [+4 ])
                    (plus:SI (ltu:SI (reg:CC 17 flags)
                            (const_int 0 [0]))
                        (reg:SI 2 cx [ D.83220+4 ]))))
            (clobber (reg:CC 17 flags))
        ]) D:\LHX\7.5 contest\t1.cpp:43 289 {*addsi3_carry}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (expr_list:REG_DEAD (reg:SI 2 cx [ D.83220+4 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn:TI 1407 1403 206 21 (set (mem:SI (plus:SI (mult:SI (reg/v:SI 5 di [orig:101 i ] [101])
                    (const_int 8 [0x8]))
                (const:SI (plus:SI (symbol_ref:SI ("suf") [flags 0x2]  <var_decl 06e5d9c0 suf>)
                        (const_int 4 [0x4])))) [34 MEM[symbol: suf, index: _411, step: 8, offset: 0B]+4 S4 A32])
        (reg:SI 4 si [orig:1+4 ] [1])) D:\LHX\7.5 contest\t1.cpp:43 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [orig:1+4 ] [1])
        (nil)))
(insn 206 1407 208 21 (parallel [
            (set (reg/v:SI 5 di [orig:101 i ] [101])
                (plus:SI (reg/v:SI 5 di [orig:101 i ] [101])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) D:\LHX\7.5 contest\t1.cpp:42 220 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn:TI 208 206 209 21 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg/v:SI 5 di [orig:101 i ] [101])
            (const_int 0 [0]))) D:\LHX\7.5 contest\t1.cpp:42 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn:TI 209 208 210 21 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 207)
            (pc))) D:\LHX\7.5 contest\t1.cpp:42 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (int_list:REG_BR_PROB 9900 (nil)))
 -> 207)
;;  succ:       21 [99.0%]  (DFS_BACK,CAN_FALLTHRU)
;;              22 [1.0%]  (FALLTHRU,CAN_FALLTHRU,LOOP_EXIT)
;; lr  out 	 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 5 [di] 6 [bp] 7 [sp] 20 [frame]

;; basic block 22, loop depth 0, count 0, freq 9, maybe hot
;;  prev block 21, next block 23, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       21 [1.0%]  (FALLTHRU,CAN_FALLTHRU,LOOP_EXIT)
;;              17 [1.0%]  (CAN_FALLTHRU)
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 2 [cx] 3 [bx] 5 [di] 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 2 [cx] 3 [bx] 5 [di] 17 [flags]
;; live  kill	
(code_label 210 209 211 22 125 "" [1 uses])
(note 211 210 602 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(note 602 211 1158 22 NOTE_INSN_DELETED)
(note 1158 602 1297 22 NOTE_INSN_DELETED)
(note 1297 1158 1503 22 NOTE_INSN_DELETED)
(insn:TI 1503 1297 212 22 (set (reg:SI 0 ax)
        (mem/c:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -60 [0xffffffffffffffc4])) [45 %sfp+-36 S4 A32])) D:\LHX\7.5 contest\t1.cpp:45 90 {*movsi_internal}
     (nil))
(insn 212 1503 15 22 (set (mem/c:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [21 j+0 S4 A32])
        (const_int 1 [0x1])) D:\LHX\7.5 contest\t1.cpp:45 90 {*movsi_internal}
     (nil))
(insn 15 212 221 22 (set (reg:SI 3 bx [orig:125 D.83218 ] [125])
        (const_int 1 [0x1])) D:\LHX\7.5 contest\t1.cpp:45 90 {*movsi_internal}
     (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))
(insn:TI 221 15 1079 22 (set (reg:SI 2 cx [orig:252 D.83218 ] [252])
        (mem/c:SI (symbol_ref:SI ("ans") [flags 0x2]  <var_decl 06eeb600 ans>) [21 ans+0 S4 A32])) 90 {*movsi_internal}
     (nil))
(insn 1079 221 1504 22 (set (reg:SI 5 di [orig:449 D.83218 ] [449])
        (mem/c:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -60 [0xffffffffffffffc4])) [45 %sfp+-36 S4 A32])) 90 {*movsi_internal}
     (nil))
(insn:TI 1504 1079 214 22 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax)
            (const_int 0 [0]))) D:\LHX\7.5 contest\t1.cpp:45 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(jump_insn:TI 214 1504 1590 22 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 941)
            (pc))) D:\LHX\7.5 contest\t1.cpp:45 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (int_list:REG_BR_PROB 9100 (nil)))
 -> 941)
;;  succ:       25 [91.0%]  (CAN_FALLTHRU)
;;              23 [9.0%]  (FALLTHRU)
;; lr  out 	 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 20 [frame]

;; basic block 23, loop depth 0, count 0, freq 1
;;  prev block 22, next block 24, flags: (NEW, RTL, MODIFIED)
;;  pred:       22 [9.0%]  (FALLTHRU)
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
(note 1590 214 1591 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(jump_insn:TI 1591 1590 1592 23 (set (pc)
        (label_ref 759)) 636 {jump}
     (nil)
 -> 759)
;;  succ:       114 [100.0%]  (CAN_FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 20 [frame]

(barrier 1592 1591 608)
;; basic block 24, loop depth 0, count 0, freq 81, maybe hot
;;  prev block 23, next block 25, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       25 [71.0%]  (CAN_FALLTHRU)
;;              96 [86.3%]  (CAN_FALLTHRU)
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 2 [cx] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp]
;; lr  def 	 3 [bx] 17 [flags]
;; live  in  	 2 [cx] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 3 [bx] 17 [flags]
;; live  kill	 17 [flags]
(code_label 608 1592 609 24 130 "" [2 uses])
(note 609 608 1225 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1225 609 611 24 (set (reg:SI 3 bx [orig:125 D.83218 ] [125])
        (mem/c:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -60 [0xffffffffffffffc4])) [45 %sfp+-36 S4 A32])) D:\LHX\7.5 contest\t1.cpp:45 90 {*movsi_internal}
     (nil))
(insn:TI 611 1225 615 24 (parallel [
            (set (reg:SI 3 bx [orig:125 D.83218 ] [125])
                (plus:SI (reg:SI 3 bx [orig:125 D.83218 ] [125])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) D:\LHX\7.5 contest\t1.cpp:45 220 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:SI (reg/f:SI 20 frame)
                        (const_int -4 [0xfffffffffffffffc])) [21 j+0 S4 A32])
                (const_int 1 [0x1]))
            (nil))))
(insn:TI 615 611 612 24 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 5 di [orig:449 D.83218 ] [449])
            (reg:SI 3 bx [orig:125 D.83218 ] [125]))) D:\LHX\7.5 contest\t1.cpp:45 7 {*cmpsi_1}
     (nil))
(insn 612 615 616 24 (set (mem/c:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [21 j+0 S4 A32])
        (reg:SI 3 bx [orig:125 D.83218 ] [125])) D:\LHX\7.5 contest\t1.cpp:45 90 {*movsi_internal}
     (nil))
(jump_insn:TI 616 612 941 24 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 617)
            (pc))) D:\LHX\7.5 contest\t1.cpp:45 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (int_list:REG_BR_PROB 900 (nil)))
 -> 617)
;;  succ:       25 [91.0%]  (FALLTHRU,DFS_BACK,CAN_FALLTHRU)
;;              98 [9.0%]  (CAN_FALLTHRU,LOOP_EXIT)
;; lr  out 	 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 20 [frame]

;; basic block 25, loop depth 0, count 0, freq 92, maybe hot
;;  prev block 24, next block 26, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       22 [91.0%]  (CAN_FALLTHRU)
;;              24 [91.0%]  (FALLTHRU,DFS_BACK,CAN_FALLTHRU)
;;              97 [91.0%]  (DFS_BACK,CAN_FALLTHRU)
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 3 [bx] 17 [flags]
;; live  in  	 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 17 [flags]
;; live  kill	 17 [flags]
(code_label 941 616 940 25 209 "" [2 uses])
(note 940 941 1159 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1159 940 1395 25 (set (reg:SI 0 ax [orig:317 D.83218 ] [317])
        (reg:SI 5 di [orig:449 D.83218 ] [449])) D:\LHX\7.5 contest\t1.cpp:46 90 {*movsi_internal}
     (nil))
(insn:TI 1395 1159 1396 25 (parallel [
            (set (reg:SI 1 dx [318])
                (ashiftrt:SI (reg:SI 0 ax [orig:317 D.83218 ] [317])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) D:\LHX\7.5 contest\t1.cpp:46 523 {ashrsi3_cvt}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn:TI 1396 1395 895 25 (parallel [
            (set (reg:SI 0 ax [orig:317 D.83218 ] [317])
                (div:SI (reg:SI 0 ax [orig:317 D.83218 ] [317])
                    (reg:SI 3 bx [orig:125 D.83218 ] [125])))
            (set (reg:SI 1 dx [318])
                (mod:SI (reg:SI 0 ax [orig:317 D.83218 ] [317])
                    (reg:SI 3 bx [orig:125 D.83218 ] [125])))
            (use (reg:SI 1 dx [318]))
            (clobber (reg:CC 17 flags))
        ]) D:\LHX\7.5 contest\t1.cpp:46 341 {*divmodsi4_noext}
     (expr_list:REG_DEAD (reg:SI 3 bx [orig:125 D.83218 ] [125])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_UNUSED (reg:SI 1 dx [318])
                (nil)))))
(insn:TI 895 1396 1161 25 (set (reg:SI 3 bx [orig:451 j ] [451])
        (mem/c:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [21 j+0 S4 A32])) 90 {*movsi_internal}
     (nil))
(insn:TI 1161 895 224 25 (set (mem/c:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -60 [0xffffffffffffffc4])) [45 %sfp+-36 S4 A32])
        (reg:SI 3 bx [orig:451 j ] [451])) 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 3 bx [orig:451 j ] [451])
        (nil)))
(insn:TI 224 1161 225 25 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 0 ax [orig:317 D.83218 ] [317])
            (reg:SI 2 cx [orig:252 D.83218 ] [252]))) D:\LHX\7.5 contest\t1.cpp:46 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:317 D.83218 ] [317])
        (nil)))
(jump_insn:TI 225 224 226 25 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 608)
            (pc))) D:\LHX\7.5 contest\t1.cpp:46 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (int_list:REG_BR_PROB 7100 (nil)))
 -> 608)
;;  succ:       24 [71.0%]  (CAN_FALLTHRU)
;;              26 [29.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 2 [cx] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 2 [cx] 5 [di] 6 [bp] 7 [sp] 20 [frame]

;; basic block 26, loop depth 0, count 0, freq 27, maybe hot
;;  prev block 25, next block 27, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       25 [29.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 2 [cx] 4 [si] 5 [di] 7 [sp] 17 [flags]
;; live  kill	 0 [ax] 17 [flags]
(note 226 225 243 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(note 243 226 228 26 NOTE_INSN_DELETED)
(insn:TI 228 243 230 26 (set (reg/f:SI 0 ax [orig:320 MEM[(struct _Rb_tree_node_base * *)&s + 8B] ] [320])
        (mem/f/c:SI (const:SI (plus:SI (symbol_ref:SI ("s") [flags 0x2]  <var_decl 06d9cd20 s>)
                    (const_int 8 [0x8]))) [6 MEM[(struct _Rb_tree_node_base * *)&s + 8B]+0 S4 A32])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:908 90 {*movsi_internal}
     (expr_list:REG_EQUIV (mem/f/c:SI (const:SI (plus:SI (symbol_ref:SI ("s") [flags 0x2]  <var_decl 06d9cd20 s>)
                    (const_int 8 [0x8]))) [6 MEM[(struct _Rb_tree_node_base * *)&s + 8B]+0 S4 A32])
        (nil)))
(insn 230 228 229 26 (set (reg:SI 2 cx)
        (symbol_ref:SI ("s") [flags 0x2]  <var_decl 06d9cd20 s>)) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:908 90 {*movsi_internal}
     (nil))
(insn:TI 229 230 231 26 (set (mem:SI (reg/f:SI 7 sp) [0  S4 A32])
        (reg/f:SI 0 ax [orig:320 MEM[(struct _Rb_tree_node_base * *)&s + 8B] ] [320])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:908 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 0 ax [orig:320 MEM[(struct _Rb_tree_node_base * *)&s + 8B] ] [320])
        (nil)))
(call_insn:TI 231 229 241 26 (parallel [
            (call (mem:QI (symbol_ref:SI ("_ZNSt8_Rb_treeIySt4pairIKyiESt10_Select1stIS2_ESt4lessIyESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E") [flags 0x3]  <function_decl 06e20200 _M_erase>) [0 _M_erase S1 A8])
                (const_int 4 [0x4]))
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 4 [0x4])))
        ]) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:908 646 {*call_pop}
     (expr_list:REG_DEAD (reg:SI 2 cx)
        (expr_list:REG_ARGS_SIZE (const_int -4 [0xfffffffffffffffc])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 2 cx))
        (expr_list:SI (use (mem/f:SI (reg/f:SI 7 sp) [0  S4 A32]))
            (nil))))
(insn:TI 241 231 232 26 (set (reg:SI 0 ax [orig:451 j ] [451])
        (mem/c:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [21 j+0 S4 A32])) D:\LHX\7.5 contest\t1.cpp:47 90 {*movsi_internal}
     (nil))
(insn 232 241 234 26 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:908 220 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 234 232 236 26 (set (mem/f/c:SI (const:SI (plus:SI (symbol_ref:SI ("s") [flags 0x2]  <var_decl 06d9cd20 s>)
                    (const_int 12 [0xc]))) [6 MEM[(struct _Rb_tree_node_base * &)&s + 12]+0 S4 A32])
        (const:SI (plus:SI (symbol_ref:SI ("s") [flags 0x2]  <var_decl 06d9cd20 s>)
                (const_int 4 [0x4])))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:909 90 {*movsi_internal}
     (nil))
(insn:TI 236 234 238 26 (set (mem/f/c:SI (const:SI (plus:SI (symbol_ref:SI ("s") [flags 0x2]  <var_decl 06d9cd20 s>)
                    (const_int 8 [0x8]))) [6 MEM[(struct _Rb_tree_node_base * &)&s + 8]+0 S4 A32])
        (const_int 0 [0])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:910 90 {*movsi_internal}
     (nil))
(insn 238 236 240 26 (set (mem/f/c:SI (const:SI (plus:SI (symbol_ref:SI ("s") [flags 0x2]  <var_decl 06d9cd20 s>)
                    (const_int 16 [0x10]))) [6 MEM[(struct _Rb_tree_node_base * &)&s + 16]+0 S4 A32])
        (const:SI (plus:SI (symbol_ref:SI ("s") [flags 0x2]  <var_decl 06d9cd20 s>)
                (const_int 4 [0x4])))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:911 90 {*movsi_internal}
     (nil))
(insn:TI 240 238 1393 26 (set (mem/c:SI (const:SI (plus:SI (symbol_ref:SI ("s") [flags 0x2]  <var_decl 06d9cd20 s>)
                    (const_int 20 [0x14]))) [21 MEM[(struct _Rb_tree *)&s]._M_impl._M_node_count+0 S4 A32])
        (const_int 0 [0])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:912 90 {*movsi_internal}
     (nil))
(insn:TI 1393 240 1249 26 (set (reg:SI 4 si [ b+4 ])
        (reg:SI 0 ax [orig:104 b ] [104])) D:\LHX\7.5 contest\t1.cpp:47 90 {*movsi_internal}
     (nil))
(insn 1249 1393 911 26 (set (mem/c:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -60 [0xffffffffffffffc4])) [45 %sfp+-36 S4 A32])
        (reg:SI 0 ax [orig:451 j ] [451])) D:\LHX\7.5 contest\t1.cpp:47 90 {*movsi_internal}
     (nil))
(insn 911 1249 1394 26 (set (reg:SI 5 di [orig:106 D.83218 ] [106])
        (reg:SI 0 ax [orig:451 j ] [451])) D:\LHX\7.5 contest\t1.cpp:47 90 {*movsi_internal}
     (nil))
(insn:TI 1394 911 244 26 (parallel [
            (set (reg:SI 4 si [ b+4 ])
                (ashiftrt:SI (reg:SI 4 si [ b+4 ])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) D:\LHX\7.5 contest\t1.cpp:47 523 {ashrsi3_cvt}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn:TI 244 1394 245 26 (parallel [
            (set (reg:CCZ 17 flags)
                (compare:CCZ (ior:SI (reg:SI 0 ax [503])
                        (reg:SI 4 si [ b+4 ]))
                    (const_int 0 [0])))
            (clobber (reg:SI 0 ax [503]))
        ]) D:\LHX\7.5 contest\t1.cpp:26 425 {*iorsi_3}
     (expr_list:REG_DEAD (reg:SI 0 ax [503])
        (expr_list:REG_UNUSED (reg:SI 0 ax [503])
            (nil))))
(jump_insn:TI 245 244 246 26 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 789)
            (pc))) D:\LHX\7.5 contest\t1.cpp:26 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 900 (nil)))
 -> 789)
;;  succ:       27 [91.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              112 [9.0%]  (CAN_FALLTHRU)
;; lr  out 	 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]

;; basic block 27, loop depth 0, count 0, freq 24, maybe hot
;;  prev block 26, next block 28, flags: (REACHABLE, RTL)
;;  pred:       26 [91.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 17 [flags]
;; live  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 3 [bx]
;; live  kill	 17 [flags]
(note 246 245 1385 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1385 246 1502 27 (set (reg:SI 0 ax [orig:135 a ] [135])
        (const_int 19260817 [0x125e591])) D:\LHX\7.5 contest\t1.cpp:26 90 {*movsi_internal}
     (nil))
(insn 1502 1385 1387 27 (parallel [
            (set (reg:SI 1 dx [ a+4 ])
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) D:\LHX\7.5 contest\t1.cpp:26 82 {*movsi_xor}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 1387 1502 1388 27 (set (mem/c:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [45 %sfp+-32 S4 A64])
        (const_int 1 [0x1])) D:\LHX\7.5 contest\t1.cpp:26 90 {*movsi_internal}
     (nil))
(insn:TI 1388 1387 1389 27 (set (mem/c:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [45 %sfp+-28 S4 A32])
        (const_int 0 [0])) D:\LHX\7.5 contest\t1.cpp:26 90 {*movsi_internal}
     (nil))
(insn 1389 1388 1390 27 (set (reg:SI 2 cx [orig:104 b ] [104])
        (reg:SI 5 di [orig:104 b ] [104])) D:\LHX\7.5 contest\t1.cpp:26 90 {*movsi_internal}
     (nil))
(insn 1390 1389 1081 27 (set (reg:SI 3 bx [ b+4 ])
        (reg:SI 4 si [ b+4 ])) D:\LHX\7.5 contest\t1.cpp:26 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ b+4 ])
        (nil)))
(insn:TI 1081 1390 1391 27 (set (mem/c:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -72 [0xffffffffffffffb8])) [45 %sfp+-48 S4 A64])
        (reg:SI 5 di [orig:106 D.83218 ] [106])) D:\LHX\7.5 contest\t1.cpp:26 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 5 di [orig:106 D.83218 ] [106])
        (nil)))
(insn 1391 1081 1392 27 (set (mem/c:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [45 %sfp+-24 S4 A64])
        (reg:SI 0 ax [orig:135 a ] [135])) D:\LHX\7.5 contest\t1.cpp:26 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:135 a ] [135])
        (nil)))
(insn:TI 1392 1391 271 27 (set (mem/c:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [45 %sfp+-20 S4 A32])
        (reg:SI 1 dx [ a+4 ])) D:\LHX\7.5 contest\t1.cpp:26 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [ a+4 ])
        (nil)))
;;  succ:       28 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame]

;; basic block 28, loop depth 0, count 0, freq 270, maybe hot
;;  prev block 27, next block 29, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       27 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              30 [91.0%]  (DFS_BACK,CAN_FALLTHRU)
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 2 [cx] 6 [bp] 7 [sp]
;; lr  def 	 4 [si] 17 [flags]
;; live  in  	 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 4 [si] 17 [flags]
;; live  kill	 17 [flags]
(code_label 271 1392 247 28 133 "" [1 uses])
(note 247 271 1167 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1167 247 248 28 (set (reg:SI 4 si [orig:439 D.83220 ] [439])
        (reg:SI 2 cx [orig:104 b ] [104])) D:\LHX\7.5 contest\t1.cpp:27 90 {*movsi_internal}
     (nil))
(insn:TI 248 1167 251 28 (parallel [
            (set (reg:SI 4 si [orig:439 D.83220 ] [439])
                (and:SI (reg:SI 4 si [orig:439 D.83220 ] [439])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) D:\LHX\7.5 contest\t1.cpp:27 370 {*andsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn:TI 251 248 252 28 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 4 si [orig:439 D.83220 ] [439])
            (const_int 0 [0]))) D:\LHX\7.5 contest\t1.cpp:27 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 4 si [orig:439 D.83220 ] [439])
        (nil)))
(jump_insn:TI 252 251 253 28 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 261)
            (pc))) D:\LHX\7.5 contest\t1.cpp:27 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 261)
;;  succ:       29 [50.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              30 [50.0%]  (CAN_FALLTHRU)
;; lr  out 	 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame]

;; basic block 29, loop depth 0, count 0, freq 135, maybe hot
;;  prev block 28, next block 30, flags: (REACHABLE, RTL)
;;  pred:       28 [50.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 4 [si] 5 [di] 17 [flags]
;; live  in  	 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di]
;; live  kill	 17 [flags]
(note 253 252 1327 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(note 1327 253 258 29 NOTE_INSN_DELETED)
(note 258 1327 1382 29 NOTE_INSN_DELETED)
(insn:TI 1382 258 1381 29 (set (reg:SI 1 dx [ tmod+4 ])
        (mem/c:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [45 %sfp+-28 S4 A32])) D:\LHX\7.5 contest\t1.cpp:27 90 {*movsi_internal}
     (nil))
(insn 1381 1382 1498 29 (set (reg:SI 0 ax [orig:136 tmod ] [136])
        (mem/c:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [45 %sfp+-32 S4 A64])) D:\LHX\7.5 contest\t1.cpp:27 90 {*movsi_internal}
     (nil))
(insn:TI 1498 1381 1500 29 (set (reg:SI 5 di [328])
        (mem/c:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [45 %sfp+-24 S4 A64])) D:\LHX\7.5 contest\t1.cpp:27 90 {*movsi_internal}
     (nil))
(insn 1500 1498 1499 29 (set (reg:SI 4 si [329])
        (mem/c:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [45 %sfp+-20 S4 A32])) D:\LHX\7.5 contest\t1.cpp:27 90 {*movsi_internal}
     (nil))
(insn:TI 1499 1500 1501 29 (parallel [
            (set (reg:SI 5 di [328])
                (mult:SI (reg:SI 5 di [328])
                    (reg:SI 1 dx [ tmod+4 ])))
            (clobber (reg:CC 17 flags))
        ]) D:\LHX\7.5 contest\t1.cpp:27 306 {*mulsi3_1}
     (expr_list:REG_DEAD (reg:SI 1 dx [ tmod+4 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn:TI 1501 1499 1174 29 (parallel [
            (set (reg:SI 4 si [329])
                (mult:SI (reg:SI 4 si [329])
                    (reg:SI 0 ax [orig:136 tmod ] [136])))
            (clobber (reg:CC 17 flags))
        ]) D:\LHX\7.5 contest\t1.cpp:27 306 {*mulsi3_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:136 tmod ] [136])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 1174 1501 257 29 (set (reg:SI 0 ax [orig:136 tmod ] [136])
        (mem/c:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [45 %sfp+-32 S4 A64])) D:\LHX\7.5 contest\t1.cpp:27 90 {*movsi_internal}
     (nil))
(insn:TI 257 1174 256 29 (parallel [
            (set (reg/v:DI 0 ax [orig:136 tmod ] [136])
                (mult:DI (zero_extend:DI (reg:SI 0 ax [orig:136 tmod ] [136]))
                    (zero_extend:DI (mem/c:SI (plus:SI (reg/f:SI 6 bp)
                                (const_int -48 [0xffffffffffffffd0])) [45 %sfp+-24 S4 A64]))))
            (clobber (reg:CC 17 flags))
        ]) D:\LHX\7.5 contest\t1.cpp:27 323 {*umulsidi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn:TI 256 257 1384 29 (parallel [
            (set (reg:SI 4 si [330])
                (plus:SI (reg:SI 4 si [329])
                    (reg:SI 5 di [328])))
            (clobber (reg:CC 17 flags))
        ]) D:\LHX\7.5 contest\t1.cpp:27 220 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 5 di [328])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn:TI 1384 256 259 29 (set (mem/c:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [45 %sfp+-28 S4 A32])
        (reg:SI 1 dx [ tmod+4 ])) D:\LHX\7.5 contest\t1.cpp:27 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [ tmod+4 ])
        (nil)))
(insn 259 1384 1383 29 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 6 bp)
                        (const_int -52 [0xffffffffffffffcc])) [45 %sfp+-28 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 6 bp)
                            (const_int -52 [0xffffffffffffffcc])) [45 %sfp+-28 S4 A32])
                    (reg:SI 4 si [330])))
            (clobber (reg:CC 17 flags))
        ]) D:\LHX\7.5 contest\t1.cpp:27 220 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 4 si [330])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn:TI 1383 259 261 29 (set (mem/c:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [45 %sfp+-32 S4 A64])
        (reg:SI 0 ax [orig:136 tmod ] [136])) D:\LHX\7.5 contest\t1.cpp:27 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:136 tmod ] [136])
        (nil)))
;;  succ:       30 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame]

;; basic block 30, loop depth 0, count 0, freq 270, maybe hot
;;  prev block 29, next block 31, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       28 [50.0%]  (CAN_FALLTHRU)
;;              29 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 2 [cx] 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 17 [flags]
;; live  in  	 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 17 [flags]
;; live  kill	 0 [ax] 17 [flags]
(code_label 261 1383 262 30 132 "" [1 uses])
(note 262 261 1329 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(note 1329 262 267 30 NOTE_INSN_DELETED)
(note 267 1329 272 30 NOTE_INSN_DELETED)
(note 272 267 1378 30 NOTE_INSN_DELETED)
(insn:TI 1378 272 1494 30 (set (reg:SI 1 dx [ a+4 ])
        (mem/c:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [45 %sfp+-20 S4 A32])) D:\LHX\7.5 contest\t1.cpp:28 90 {*movsi_internal}
     (nil))
(insn 1494 1378 1295 30 (set (reg:SI 4 si [332])
        (mem/c:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [45 %sfp+-24 S4 A64])) D:\LHX\7.5 contest\t1.cpp:28 90 {*movsi_internal}
     (nil))
(insn:TI 1295 1494 1496 30 (set (reg:SI 0 ax [orig:135 a ] [135])
        (mem/c:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [45 %sfp+-24 S4 A64])) D:\LHX\7.5 contest\t1.cpp:28 90 {*movsi_internal}
     (nil))
(insn:TI 1496 1295 1495 30 (parallel [
            (set (reg:SI 2 cx [orig:104 b ] [104])
                (ior:SI (lshiftrt:SI (reg:SI 2 cx [orig:104 b ] [104])
                        (const_int 1 [0x1]))
                    (ashift:SI (reg:SI 3 bx [ b+4 ])
                        (minus:QI (const_int 32 [0x20])
                            (const_int 1 [0x1])))))
            (clobber (reg:CC 17 flags))
        ]) D:\LHX\7.5 contest\t1.cpp:28 521 {x86_shrd}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn:TI 1495 1496 1497 30 (parallel [
            (set (reg:SI 4 si [332])
                (mult:SI (reg:SI 4 si [332])
                    (reg:SI 1 dx [ a+4 ])))
            (clobber (reg:CC 17 flags))
        ]) D:\LHX\7.5 contest\t1.cpp:28 306 {*mulsi3_1}
     (expr_list:REG_DEAD (reg:SI 1 dx [ a+4 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 1497 1495 266 30 (parallel [
            (set (reg:SI 3 bx [ b+4 ])
                (lshiftrt:SI (reg:SI 3 bx [ b+4 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) D:\LHX\7.5 contest\t1.cpp:28 529 {*lshrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn:TI 266 1497 265 30 (parallel [
            (set (reg/v:DI 0 ax [orig:135 a ] [135])
                (mult:DI (zero_extend:DI (reg:SI 0 ax [orig:135 a ] [135]))
                    (zero_extend:DI (reg:SI 0 ax))))
            (clobber (reg:CC 17 flags))
        ]) D:\LHX\7.5 contest\t1.cpp:28 323 {*umulsidi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn:TI 265 266 1379 30 (parallel [
            (set (reg:SI 4 si [334])
                (ashift:SI (reg:SI 4 si [332])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) D:\LHX\7.5 contest\t1.cpp:28 496 {*ashlsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn:TI 1379 265 1178 30 (set (mem/c:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [45 %sfp+-24 S4 A64])
        (reg:SI 0 ax [orig:135 a ] [135])) D:\LHX\7.5 contest\t1.cpp:28 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:135 a ] [135])
        (nil)))
(insn 1178 1379 1380 30 (set (reg:SI 0 ax [504])
        (reg:SI 3 bx [ b+4 ])) D:\LHX\7.5 contest\t1.cpp:26 90 {*movsi_internal}
     (nil))
(insn 1380 1178 268 30 (set (mem/c:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [45 %sfp+-20 S4 A32])
        (reg:SI 1 dx [ a+4 ])) D:\LHX\7.5 contest\t1.cpp:28 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [ a+4 ])
        (nil)))
(insn:TI 268 1380 273 30 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 6 bp)
                        (const_int -44 [0xffffffffffffffd4])) [45 %sfp+-20 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 6 bp)
                            (const_int -44 [0xffffffffffffffd4])) [45 %sfp+-20 S4 A32])
                    (reg:SI 4 si [334])))
            (clobber (reg:CC 17 flags))
        ]) D:\LHX\7.5 contest\t1.cpp:28 220 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 4 si [334])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 273 268 274 30 (parallel [
            (set (reg:CCZ 17 flags)
                (compare:CCZ (ior:SI (reg:SI 0 ax [504])
                        (reg:SI 2 cx [orig:104 b ] [104]))
                    (const_int 0 [0])))
            (clobber (reg:SI 0 ax [504]))
        ]) D:\LHX\7.5 contest\t1.cpp:26 425 {*iorsi_3}
     (expr_list:REG_DEAD (reg:SI 0 ax [504])
        (expr_list:REG_UNUSED (reg:SI 0 ax [504])
            (nil))))
(jump_insn:TI 274 273 995 30 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 271)
            (pc))) D:\LHX\7.5 contest\t1.cpp:26 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 9100 (nil)))
 -> 271)
;;  succ:       28 [91.0%]  (DFS_BACK,CAN_FALLTHRU)
;;              31 [9.0%]  (FALLTHRU,CAN_FALLTHRU,LOOP_EXIT)
;; lr  out 	 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame]

;; basic block 31, loop depth 0, count 0, freq 24, maybe hot
;;  prev block 30, next block 32, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       30 [9.0%]  (FALLTHRU,CAN_FALLTHRU,LOOP_EXIT)
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 5 [di]
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 5 [di]
;; live  kill	
(note 995 274 1083 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1083 995 275 31 (set (reg:SI 5 di [orig:106 D.83218 ] [106])
        (mem/c:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -72 [0xffffffffffffffb8])) [45 %sfp+-48 S4 A64])) 90 {*movsi_internal}
     (nil))
;;  succ:       32 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 5 [di] 6 [bp] 7 [sp] 20 [frame]

;; basic block 32, loop depth 0, count 0, freq 27, maybe hot
;;  prev block 31, next block 33, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       31 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              112 [100.0%]  (CAN_FALLTHRU)
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
;; live  in  	 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 17 [flags]
;; live  kill	
(code_label 275 1083 276 32 131 "" [1 uses])
(note 276 275 1252 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1252 276 277 32 (set (reg:SI 0 ax [orig:451 j ] [451])
        (mem/c:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -60 [0xffffffffffffffc4])) [45 %sfp+-36 S4 A32])) D:\LHX\7.5 contest\t1.cpp:49 90 {*movsi_internal}
     (nil))
(insn 277 1252 278 32 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 0 ax [orig:451 j ] [451])
            (mem/c:SI (symbol_ref:SI ("n") [flags 0x2]  <var_decl 06e5d660 n>) [21 n+0 S4 A32]))) D:\LHX\7.5 contest\t1.cpp:49 7 {*cmpsi_1}
     (nil))
(jump_insn:TI 278 277 279 32 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 791)
            (pc))) D:\LHX\7.5 contest\t1.cpp:49 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (int_list:REG_BR_PROB 900 (nil)))
 -> 791)
;;  succ:       33 [91.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              111 [9.0%]  (CAN_FALLTHRU)
;; lr  out 	 0 [ax] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 0 [ax] 5 [di] 6 [bp] 7 [sp] 20 [frame]

;; basic block 33, loop depth 0, count 0, freq 24, maybe hot
;;  prev block 32, next block 34, flags: (REACHABLE, RTL)
;;  pred:       32 [91.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 2 [cx] 3 [bx] 17 [flags]
;; live  in  	 0 [ax] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 2 [cx] 3 [bx]
;; live  kill	 17 [flags]
(note 279 278 1493 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1493 279 899 33 (parallel [
            (set (reg/f:SI 2 cx [orig:189 __i$_M_node ] [189])
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) D:\LHX\7.5 contest\t1.cpp:49 82 {*movsi_xor}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 899 1493 21 33 (set (reg:SI 3 bx [450])
        (plus:SI (reg:SI 0 ax [orig:451 j ] [451])
            (const_int 1 [0x1]))) 213 {*leasi}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:451 j ] [451])
        (nil)))
(insn 21 899 22 33 (set (mem/c:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -80 [0xffffffffffffffb0])) [45 %sfp+-56 S4 A32])
        (const_int 0 [0])) D:\LHX\7.5 contest\t1.cpp:49 90 {*movsi_internal}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
(insn:TI 22 21 1085 33 (set (mem/c:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [45 %sfp+-24 S4 A64])
        (const_int 1 [0x1])) D:\LHX\7.5 contest\t1.cpp:49 90 {*movsi_internal}
     (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))
(insn 1085 22 575 33 (set (mem/c:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -60 [0xffffffffffffffc4])) [45 %sfp+-36 S4 A32])
        (reg/f:SI 2 cx [orig:189 __i$_M_node ] [189])) 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 2 cx [orig:189 __i$_M_node ] [189])
        (nil)))
;;  succ:       34 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 20 [frame]

;; basic block 34, loop depth 0, count 0, freq 270, maybe hot
;;  prev block 33, next block 35, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       33 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              54 [100.0%]  (DFS_BACK,CAN_FALLTHRU)
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 3 [bx] 5 [di] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 17 [flags]
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 17 [flags]
;; live  kill	 17 [flags]
(code_label 575 1085 280 34 170 "" [1 uses])
(note 280 575 1255 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(note 1255 280 1336 34 NOTE_INSN_DELETED)
(note 1336 1255 1335 34 NOTE_INSN_DELETED)
(note 1335 1336 284 34 NOTE_INSN_DELETED)
(note 284 1335 286 34 NOTE_INSN_DELETED)
(note 286 284 1333 34 NOTE_INSN_DELETED)
(note 1333 286 290 34 NOTE_INSN_DELETED)
(note 290 1333 1181 34 NOTE_INSN_DELETED)
(insn:TI 1181 290 1366 34 (set (reg/v:SI 0 ax [orig:123 i ] [123])
        (mem/c:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [45 %sfp+-24 S4 A64])) D:\LHX\7.5 contest\t1.cpp:50 90 {*movsi_internal}
     (nil))
(insn 1366 1181 1364 34 (set (reg:SI 1 dx [ tmod+4 ])
        (mem/c:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [45 %sfp+-28 S4 A32])) D:\LHX\7.5 contest\t1.cpp:50 90 {*movsi_internal}
     (nil))
(insn:TI 1364 1366 1365 34 (set (reg:SI 2 cx [339])
        (plus:SI (reg/v:SI 0 ax [orig:123 i ] [123])
            (const_int -1 [0xffffffffffffffff]))) D:\LHX\7.5 contest\t1.cpp:50 213 {*leasi}
     (expr_list:REG_DEAD (reg/v:SI 0 ax [orig:123 i ] [123])
        (nil)))
(insn 1365 1364 1487 34 (set (reg:SI 0 ax [orig:136 tmod ] [136])
        (mem/c:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [45 %sfp+-32 S4 A64])) D:\LHX\7.5 contest\t1.cpp:50 90 {*movsi_internal}
     (nil))
(insn:TI 1487 1365 1488 34 (set (reg:SI 4 si [340])
        (mem:SI (plus:SI (mult:SI (reg:SI 2 cx [339])
                    (const_int 8 [0x8]))
                (symbol_ref:SI ("pre") [flags 0x2]  <var_decl 06e5d8a0 pre>)) [34 pre S4 A64])) D:\LHX\7.5 contest\t1.cpp:50 90 {*movsi_internal}
     (nil))
(insn:TI 1488 1487 1489 34 (parallel [
            (set (reg:SI 4 si [340])
                (mult:SI (reg:SI 4 si [340])
                    (reg:SI 1 dx [ tmod+4 ])))
            (clobber (reg:CC 17 flags))
        ]) D:\LHX\7.5 contest\t1.cpp:50 306 {*mulsi3_1}
     (expr_list:REG_DEAD (reg:SI 1 dx [ tmod+4 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 1489 1488 1490 34 (set (reg:SI 1 dx [342])
        (mem:SI (plus:SI (mult:SI (reg:SI 2 cx [339])
                    (const_int 8 [0x8]))
                (const:SI (plus:SI (symbol_ref:SI ("pre") [flags 0x2]  <var_decl 06e5d8a0 pre>)
                        (const_int 4 [0x4])))) [34 pre S4 A32])) D:\LHX\7.5 contest\t1.cpp:50 90 {*movsi_internal}
     (nil))
(insn:TI 1490 1489 1187 34 (parallel [
            (set (reg:SI 1 dx [342])
                (mult:SI (reg:SI 1 dx [342])
                    (reg:SI 0 ax [orig:136 tmod ] [136])))
            (clobber (reg:CC 17 flags))
        ]) D:\LHX\7.5 contest\t1.cpp:50 306 {*mulsi3_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:136 tmod ] [136])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 1187 1490 288 34 (set (reg:SI 0 ax [orig:345 D.83220 ] [345])
        (mem/c:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [45 %sfp+-32 S4 A64])) D:\LHX\7.5 contest\t1.cpp:50 90 {*movsi_internal}
     (nil))
(insn:TI 288 1187 289 34 (parallel [
            (set (reg:SI 4 si [344])
                (plus:SI (reg:SI 4 si [340])
                    (reg:SI 1 dx [342])))
            (clobber (reg:CC 17 flags))
        ]) D:\LHX\7.5 contest\t1.cpp:50 220 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 1 dx [342])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn:TI 289 288 291 34 (parallel [
            (set (reg:DI 0 ax [orig:345 D.83220 ] [345])
                (mult:DI (zero_extend:DI (reg:SI 0 ax [orig:345 D.83220 ] [345]))
                    (zero_extend:DI (mem:SI (plus:SI (mult:SI (reg:SI 2 cx [339])
                                    (const_int 8 [0x8]))
                                (symbol_ref:SI ("pre") [flags 0x2]  <var_decl 06e5d8a0 pre>)) [34 pre S4 A64]))))
            (clobber (reg:CC 17 flags))
        ]) D:\LHX\7.5 contest\t1.cpp:50 323 {*umulsidi3_1}
     (expr_list:REG_DEAD (reg:SI 2 cx [339])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn:TI 291 289 1367 34 (parallel [
            (set (reg:SI 1 dx [ D.83220+4 ])
                (plus:SI (reg:SI 1 dx [ D.83220+4 ])
                    (reg:SI 4 si [344])))
            (clobber (reg:CC 17 flags))
        ]) D:\LHX\7.5 contest\t1.cpp:50 220 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 4 si [344])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 1367 291 1368 34 (set (reg:SI 4 si [347])
        (mem:SI (plus:SI (mult:SI (reg:SI 5 di [orig:106 D.83218 ] [106])
                    (const_int 8 [0x8]))
                (symbol_ref:SI ("pre") [flags 0x2]  <var_decl 06e5d8a0 pre>)) [34 pre S4 A64])) D:\LHX\7.5 contest\t1.cpp:50 90 {*movsi_internal}
     (nil))
(insn 1368 1367 1369 34 (set (reg:SI 5 di [+4 ])
        (mem:SI (plus:SI (mult:SI (reg:SI 5 di [orig:106 D.83218 ] [106])
                    (const_int 8 [0x8]))
                (const:SI (plus:SI (symbol_ref:SI ("pre") [flags 0x2]  <var_decl 06e5d8a0 pre>)
                        (const_int 4 [0x4])))) [34 pre S4 A32])) D:\LHX\7.5 contest\t1.cpp:50 90 {*movsi_internal}
     (nil))
(insn:TI 1369 1368 1189 34 (parallel [
            (set (reg:CC 17 flags)
                (compare:CC (reg:SI 4 si [347])
                    (reg:SI 0 ax [orig:345 D.83220 ] [345])))
            (set (reg:SI 4 si [orig:112 t1 ] [112])
                (minus:SI (reg:SI 4 si [347])
                    (reg:SI 0 ax [orig:345 D.83220 ] [345])))
        ]) D:\LHX\7.5 contest\t1.cpp:50 282 {*subsi_3}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:345 D.83220 ] [345])
        (nil)))
(insn 1189 1369 1370 34 (set (reg/v:SI 0 ax [orig:123 i ] [123])
        (mem/c:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [45 %sfp+-24 S4 A64])) D:\LHX\7.5 contest\t1.cpp:51 90 {*movsi_internal}
     (nil))
(insn:TI 1370 1189 1371 34 (parallel [
            (set (reg:SI 5 di [ t1+4 ])
                (minus:SI (reg:SI 5 di [+4 ])
                    (plus:SI (ltu:SI (reg:CC 17 flags)
                            (const_int 0 [0]))
                        (reg:SI 1 dx [ D.83220+4 ]))))
            (clobber (reg:CC 17 flags))
        ]) D:\LHX\7.5 contest\t1.cpp:50 290 {*subsi3_carry}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (expr_list:REG_DEAD (reg:SI 1 dx [ D.83220+4 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn:TI 1371 1370 1372 34 (set (reg:SI 1 dx [ D.83220+4 ])
        (mem:SI (plus:SI (mult:SI (reg/v:SI 0 ax [orig:123 i ] [123])
                    (const_int 8 [0x8]))
                (const:SI (plus:SI (symbol_ref:SI ("suf") [flags 0x2]  <var_decl 06e5d9c0 suf>)
                        (const_int 4 [0x4])))) [34 suf S4 A32])) D:\LHX\7.5 contest\t1.cpp:51 90 {*movsi_internal}
     (nil))
(insn 1372 1371 1373 34 (set (reg:SI 0 ax [orig:113 D.83220 ] [113])
        (mem:SI (plus:SI (mult:SI (reg/v:SI 0 ax [orig:123 i ] [123])
                    (const_int 8 [0x8]))
                (symbol_ref:SI ("suf") [flags 0x2]  <var_decl 06e5d9c0 suf>)) [34 suf S4 A64])) D:\LHX\7.5 contest\t1.cpp:51 90 {*movsi_internal}
     (nil))
(insn:TI 1373 1372 863 34 (set (mem/c:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -72 [0xffffffffffffffb8])) [45 %sfp+-48 S4 A64])
        (reg:SI 0 ax [orig:113 D.83220 ] [113])) D:\LHX\7.5 contest\t1.cpp:51 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:113 D.83220 ] [113])
        (nil)))
(insn 863 1373 1374 34 (set (reg:SI 0 ax [orig:427 D.83220 ] [427])
        (mem:SI (plus:SI (mult:SI (reg:SI 3 bx [450])
                    (const_int 8 [0x8]))
                (symbol_ref:SI ("suf") [flags 0x2]  <var_decl 06e5d9c0 suf>)) [34 suf S4 A64])) D:\LHX\7.5 contest\t1.cpp:51 90 {*movsi_internal}
     (nil))
(insn:TI 1374 863 1191 34 (set (mem/c:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -68 [0xffffffffffffffbc])) [45 %sfp+-44 S4 A32])
        (reg:SI 1 dx [ D.83220+4 ])) D:\LHX\7.5 contest\t1.cpp:51 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [ D.83220+4 ])
        (nil)))
(insn:TI 1191 1374 864 34 (set (mem/c:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [45 %sfp+-40 S4 A32])
        (reg:SI 0 ax [orig:427 D.83220 ] [427])) D:\LHX\7.5 contest\t1.cpp:51 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:427 D.83220 ] [427])
        (nil)))
(insn 864 1191 890 34 (set (reg:SI 0 ax [orig:428 D.83220+4 ] [428])
        (mem:SI (plus:SI (mult:SI (reg:SI 3 bx [450])
                    (const_int 8 [0x8]))
                (const:SI (plus:SI (symbol_ref:SI ("suf") [flags 0x2]  <var_decl 06e5d9c0 suf>)
                        (const_int 4 [0x4])))) [34 suf S4 A32])) D:\LHX\7.5 contest\t1.cpp:51 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 3 bx [450])
        (nil)))
(insn 890 864 1192 34 (set (reg/f:SI 3 bx [orig:203 __i$_M_node ] [203])
        (const:SI (plus:SI (symbol_ref:SI ("s") [flags 0x2]  <var_decl 06d9cd20 s>)
                (const_int 4 [0x4])))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1260 90 {*movsi_internal}
     (nil))
(insn:TI 1192 890 1491 34 (set (mem/c:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -76 [0xffffffffffffffb4])) [45 %sfp+-52 S4 A32])
        (reg:SI 0 ax [orig:428 D.83220+4 ] [428])) D:\LHX\7.5 contest\t1.cpp:51 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:428 D.83220+4 ] [428])
        (nil)))
(insn 1491 1192 1492 34 (set (reg:SI 0 ax)
        (mem/c:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -60 [0xffffffffffffffc4])) [45 %sfp+-36 S4 A32])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1260 90 {*movsi_internal}
     (nil))
(insn:TI 1492 1491 301 34 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax)
            (const_int 0 [0]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1260 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(jump_insn:TI 301 1492 302 34 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 661)
            (pc))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1260 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 900 (nil)))
 -> 661)
;;  succ:       35 [91.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              45 [9.0%]  (CAN_FALLTHRU)
;; lr  out 	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]

;; basic block 35, loop depth 0, count 0, freq 245, maybe hot
;;  prev block 34, next block 36, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       34 [91.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 35 artificial_defs: { }
;; bb 35 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 2 [cx]
;; live  in  	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 2 [cx]
;; live  kill	
(note 302 301 1088 35 [bb 35] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1088 302 1593 35 (set (reg/f:SI 2 cx [orig:189 __i$_M_node ] [189])
        (mem/c:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -60 [0xffffffffffffffc4])) [45 %sfp+-36 S4 A32])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1260 90 {*movsi_internal}
     (nil))
(jump_insn 1593 1088 1594 35 (set (pc)
        (label_ref 320)) 636 {jump}
     (nil)
 -> 320)
;;  succ:       39 [100.0%]  (CAN_FALLTHRU)
;; lr  out 	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]

(barrier 1594 1593 1596)
;; basic block 36, loop depth 0, count 0, freq 1363, maybe hot
;;  prev block 35, next block 37, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       39 [50.0%]  (CAN_FALLTHRU)
;; bb 36 artificial_defs: { }
;; bb 36 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 17 [flags]
;; lr  def 	
;; live  in  	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 20 [frame]
;; live  gen 	
;; live  kill	
(code_label 1596 1594 818 36 239 "" [1 uses])
(note 818 1596 307 36 [bb 36] NOTE_INSN_BASIC_BLOCK)
(jump_insn:TI 307 818 819 36 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 852)
            (pc))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1261 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 852)
;;  succ:       38 [50.0%]  (CAN_FALLTHRU)
;;              37 [50.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]

;; basic block 37, loop depth 0, count 0, freq 682, maybe hot
;;  prev block 36, next block 38, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       36 [50.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 37 artificial_defs: { }
;; bb 37 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 2 [cx] 4 [si] 6 [bp] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 17 [flags]
;; live  kill	
(note 819 307 308 37 [bb 37] NOTE_INSN_BASIC_BLOCK)
(insn:TI 308 819 309 37 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 4 si [orig:112 t1 ] [112])
            (mem:SI (plus:SI (reg/f:SI 2 cx [orig:189 __i$_M_node ] [189])
                    (const_int 16 [0x10])) [34 MEM[(const long long unsigned int &)__i$_M_node_423 + 16]+0 S4 A64]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1261 7 {*cmpsi_1}
     (nil))
(jump_insn:TI 309 308 852 37 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 315)
            (pc))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1261 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 315)
;;  succ:       40 [50.0%]  (CAN_FALLTHRU)
;;              38 [50.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]

;; basic block 38, loop depth 0, count 0, freq 1363, maybe hot
;; Invalid sum of incoming frequencies 1023, should be 1363
;;  prev block 37, next block 39, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       37 [50.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              36 [50.0%]  (CAN_FALLTHRU)
;; bb 38 artificial_defs: { }
;; bb 38 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 2 [cx] 6 [bp] 7 [sp]
;; lr  def 	 2 [cx] 3 [bx] 17 [flags]
;; live  in  	 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 2 [cx] 3 [bx] 17 [flags]
;; live  kill	
(code_label 852 309 311 38 198 "" [1 uses])
(note 311 852 312 38 [bb 38] NOTE_INSN_BASIC_BLOCK)
(note 312 311 24 38 NOTE_INSN_DELETED)
(insn:TI 24 312 25 38 (set (reg/f:SI 3 bx [orig:203 __i$_M_node ] [203])
        (reg/f:SI 2 cx [orig:189 __i$_M_node ] [189])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1261 90 {*movsi_internal}
     (nil))
(insn 25 24 321 38 (set (reg/f:SI 2 cx [orig:189 __i$_M_node ] [189])
        (mem/f:SI (plus:SI (reg/f:SI 2 cx [orig:189 __i$_M_node ] [189])
                (const_int 8 [0x8])) [6 MEM[(struct _Rb_tree_node_base * *)__i$_M_node_423 + 8B]+0 S4 A32])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1262 90 {*movsi_internal}
     (nil))
(insn:TI 321 25 322 38 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:SI 2 cx [orig:189 __i$_M_node ] [189])
            (const_int 0 [0]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1260 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn:TI 322 321 320 38 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 1595)
            (pc))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1260 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 900 (nil)))
 -> 1595)
;;  succ:       39 [91.0%]  (FALLTHRU,DFS_BACK,CAN_FALLTHRU)
;;              41 [9.0%]  (CAN_FALLTHRU,LOOP_EXIT)
;; lr  out 	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]

;; basic block 39, loop depth 0, count 0, freq 2725, maybe hot
;;  prev block 38, next block 40, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       40 [91.0%]  (DFS_BACK,CAN_FALLTHRU)
;;              38 [91.0%]  (FALLTHRU,DFS_BACK,CAN_FALLTHRU)
;;              35 [100.0%]  (CAN_FALLTHRU)
;; bb 39 artificial_defs: { }
;; bb 39 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 2 [cx] 5 [di] 6 [bp] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 17 [flags]
;; live  kill	
(code_label 320 322 303 39 139 "" [2 uses])
(note 303 320 304 39 [bb 39] NOTE_INSN_BASIC_BLOCK)
(insn:TI 304 303 305 39 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 5 di [ t1+4 ])
            (mem:SI (plus:SI (reg/f:SI 2 cx [orig:189 __i$_M_node ] [189])
                    (const_int 20 [0x14])) [34 MEM[(const long long unsigned int &)__i$_M_node_423 + 16]+4 S4 A32]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1261 7 {*cmpsi_1}
     (nil))
(jump_insn:TI 305 304 315 39 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 1596)
            (pc))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1261 596 {*jcc_1}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 1596)
;;  succ:       40 [50.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              36 [50.0%]  (CAN_FALLTHRU)
;; lr  out 	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 20 [frame]
;; live  out 	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 20 [frame]

;; basic block 40, loop depth 0, count 0, freq 1363, maybe hot
;; Invalid sum of incoming frequencies 1704, should be 1363
;;  prev block 39, next block 41, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       39 [50.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              37 [50.0%]  (CAN_FALLTHRU)
;; bb 40 artificial_defs: { }
;; bb 40 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 2 [cx] 6 [bp] 7 [sp]
;; lr  def 	 2 [cx] 17 [flags]
;; live  in  	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 2 [cx] 17 [flags]
;; live  kill	
(code_label 315 305 316 40 136 "" [1 uses])
(note 316 315 317 40 [bb 40] NOTE_INSN_BASIC_BLOCK)
(insn:TI 317 316 1572 40 (set (reg/f:SI 2 cx [orig:189 __i$_M_node ] [189])
        (mem/f:SI (plus:SI (reg/f:SI 2 cx [orig:189 __i$_M_node ] [189])
                (const_int 12 [0xc])) [6 MEM[(struct _Rb_tree_node_base * *)__i$_M_node_423 + 12B]+0 S4 A32])) 90 {*movsi_internal}
     (nil))
(insn:TI 1572 317 1573 40 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:SI 2 cx [orig:189 __i$_M_node ] [189])
            (const_int 0 [0]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1260 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn:TI 1573 1572 1595 40 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 320)
            (pc))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1260 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 9100 (nil)))
 -> 320)
;;  succ:       39 [91.0%]  (DFS_BACK,CAN_FALLTHRU)
;;              41 [9.0%]  (FALLTHRU,CAN_FALLTHRU,LOOP_EXIT)
;; lr  out 	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]

;; basic block 41, loop depth 0, count 0, freq 245, maybe hot
;;  prev block 40, next block 42, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       38 [9.0%]  (CAN_FALLTHRU,LOOP_EXIT)
;;              40 [9.0%]  (FALLTHRU,CAN_FALLTHRU,LOOP_EXIT)
;; bb 41 artificial_defs: { }
;; bb 41 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 17 [flags]
;; live  kill	
(code_label 1595 1573 323 41 238 "" [1 uses])
(note 323 1595 324 41 [bb 41] NOTE_INSN_BASIC_BLOCK)
(insn:TI 324 323 325 41 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:SI 3 bx [orig:203 __i$_M_node ] [203])
            (const:SI (plus:SI (symbol_ref:SI ("s") [flags 0x2]  <var_decl 06d9cd20 s>)
                    (const_int 4 [0x4]))))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_map.h:498 7 {*cmpsi_1}
     (nil))
(jump_insn:TI 325 324 326 41 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 661)
            (pc))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_map.h:498 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 671 (nil)))
 -> 661)
;;  succ:       45 [6.7%]  (CAN_FALLTHRU)
;;              42 [93.3%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]

;; basic block 42, loop depth 0, count 0, freq 229, maybe hot
;;  prev block 41, next block 43, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       41 [93.3%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 42 artificial_defs: { }
;; bb 42 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 3 [bx] 5 [di] 6 [bp] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 17 [flags]
;; live  kill	
(note 326 325 327 42 [bb 42] NOTE_INSN_BASIC_BLOCK)
(insn:TI 327 326 328 42 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 5 di [ t1+4 ])
            (mem:SI (plus:SI (reg/f:SI 3 bx [orig:203 __i$_M_node ] [203])
                    (const_int 20 [0x14])) [34 MEM[(const long long unsigned int &)__i$_M_node_446 + 16]+4 S4 A32]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_map.h:498 7 {*cmpsi_1}
     (nil))
(jump_insn:TI 328 327 821 42 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 661)
            (pc))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_map.h:498 596 {*jcc_1}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 661)
;;  succ:       45 [50.0%]  (CAN_FALLTHRU)
;;              43 [50.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 20 [frame]
;; live  out 	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 20 [frame]

;; basic block 43, loop depth 0, count 0, freq 115, maybe hot
;;  prev block 42, next block 44, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       42 [50.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 43 artificial_defs: { }
;; bb 43 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 17 [flags]
;; lr  def 	
;; live  in  	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 20 [frame]
;; live  gen 	
;; live  kill	
(note 821 328 330 43 [bb 43] NOTE_INSN_BASIC_BLOCK)
(jump_insn:TI 330 821 822 43 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 381)
            (pc))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_map.h:498 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 381)
;;  succ:       52 [50.0%]  (CAN_FALLTHRU)
;;              44 [50.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]

;; basic block 44, loop depth 0, count 0, freq 58, maybe hot
;;  prev block 43, next block 45, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       43 [50.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 44 artificial_defs: { }
;; bb 44 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 3 [bx] 4 [si] 6 [bp] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 17 [flags]
;; live  kill	
(note 822 330 331 44 [bb 44] NOTE_INSN_BASIC_BLOCK)
(insn:TI 331 822 332 44 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 4 si [orig:112 t1 ] [112])
            (mem:SI (plus:SI (reg/f:SI 3 bx [orig:203 __i$_M_node ] [203])
                    (const_int 16 [0x10])) [34 MEM[(const long long unsigned int &)__i$_M_node_446 + 16]+0 S4 A64]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_map.h:498 7 {*cmpsi_1}
     (nil))
(jump_insn:TI 332 331 661 44 (set (pc)
        (if_then_else (geu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 381)
            (pc))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_map.h:498 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 381)
;;  succ:       45 [50.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              52 [50.0%]  (CAN_FALLTHRU)
;; lr  out 	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]

;; basic block 45, loop depth 0, count 0, freq 156, maybe hot
;;  prev block 44, next block 46, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       34 [9.0%]  (CAN_FALLTHRU)
;;              41 [6.7%]  (CAN_FALLTHRU)
;;              42 [50.0%]  (CAN_FALLTHRU)
;;              44 [50.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 45 artificial_defs: { }
;; bb 45 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;; live  in  	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 7 [sp] 17 [flags]
;; live  kill	 17 [flags]
(code_label 661 332 662 45 135 "" [3 uses])
(note 662 661 664 45 [bb 45] NOTE_INSN_BASIC_BLOCK)
(insn:TI 664 662 1269 45 (set (mem:SI (reg/f:SI 7 sp) [0  S4 A32])
        (const_int 32 [0x20])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/ext/new_allocator.h:104 90 {*movsi_internal}
     (nil))
(insn 1269 664 665 45 (set (mem/c:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -60 [0xffffffffffffffc4])) [45 %sfp+-36 S4 A32])
        (reg:SI 3 bx [orig:258 __pos ] [258])) 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 3 bx [orig:258 __pos ] [258])
        (nil)))
(call_insn:TI 665 1269 1270 45 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("_Znwj") [flags 0x43]  <function_decl 01938d00 operator new>) [0 operator new S1 A8])
            (const_int 4 [0x4]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/ext/new_allocator.h:104 648 {*call_value}
     (nil)
    (expr_list:SI (use (mem:SI (reg/f:SI 7 sp) [0  S4 A32]))
        (nil)))
(insn:TI 1270 665 1353 45 (set (reg/v:SI 1 dx [orig:258 __pos ] [258])
        (mem/c:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -60 [0xffffffffffffffc4])) [45 %sfp+-36 S4 A32])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1794 90 {*movsi_internal}
     (nil))
(insn 1353 1270 666 45 (set (mem:SI (plus:SI (reg/f:SI 0 ax [orig:203 __i$_M_node ] [203])
                (const_int 16 [0x10])) [34 MEM[(struct pair *)__i$_M_node_205 + 16B].first+0 S4 A64])
        (reg:SI 4 si [orig:112 t1 ] [112])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/tuple:1102 90 {*movsi_internal}
     (nil))
(insn 666 1353 1354 45 (set (reg/f:SI 3 bx [orig:203 __i$_M_node ] [203])
        (reg:SI 0 ax)) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/ext/new_allocator.h:104 90 {*movsi_internal}
     (nil))
(insn:TI 1354 666 668 45 (set (mem:SI (plus:SI (reg/f:SI 0 ax [orig:203 __i$_M_node ] [203])
                (const_int 20 [0x14])) [34 MEM[(struct pair *)__i$_M_node_205 + 16B].first+4 S4 A32])
        (reg:SI 5 di [ t1+4 ])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/tuple:1102 90 {*movsi_internal}
     (nil))
(insn 668 1354 1355 45 (set (mem:SI (plus:SI (reg/f:SI 0 ax [orig:203 __i$_M_node ] [203])
                (const_int 24 [0x18])) [21 MEM[(struct pair *)__i$_M_node_205 + 16B].second+0 S4 A64])
        (const_int 0 [0])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/tuple:1102 90 {*movsi_internal}
     (nil))
(insn 1355 668 672 45 (set (reg/f:SI 0 ax [orig:421 D.83232 ] [421])
        (plus:SI (reg/f:SI 0 ax [orig:203 __i$_M_node ] [203])
            (const_int 16 [0x10]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/ext/aligned_buffer.h:53 213 {*leasi}
     (nil))
(insn:TI 672 1355 670 45 (set (reg:SI 2 cx)
        (symbol_ref:SI ("s") [flags 0x2]  <var_decl 06d9cd20 s>)) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1794 90 {*movsi_internal}
     (nil))
(insn:TI 670 672 671 45 (set (mem:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [0  S4 A32])
        (reg/f:SI 0 ax [orig:421 D.83232 ] [421])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1794 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 0 ax [orig:421 D.83232 ] [421])
        (nil)))
(insn 671 670 673 45 (set (mem:SI (reg/f:SI 7 sp) [0  S4 A32])
        (reg/v:SI 1 dx [orig:258 __pos ] [258])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1794 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 1 dx [orig:258 __pos ] [258])
        (nil)))
(call_insn:TI 673 671 674 45 (parallel [
            (set (reg:DI 0 ax)
                (call (mem:QI (symbol_ref:SI ("_ZNSt8_Rb_treeIySt4pairIKyiESt10_Select1stIS2_ESt4lessIyESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERS1_") [flags 0x3]  <function_decl 06e17d80 _M_get_insert_hint_unique_pos>) [0 _M_get_insert_hint_unique_pos S1 A8])
                    (const_int 8 [0x8])))
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 8 [0x8])))
        ]) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1794 653 {*call_value_pop}
     (expr_list:REG_DEAD (reg:SI 2 cx)
        (expr_list:REG_ARGS_SIZE (const_int -8 [0xfffffffffffffff8])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 2 cx))
        (expr_list:SI (use (mem:SI (reg/f:SI 7 sp) [0  S4 A32]))
            (expr_list:SI (use (mem/f:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 4 [0x4])) [0  S4 A32]))
                (nil)))))
(insn:TI 674 673 679 45 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1794 220 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 679 674 680 45 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:438 __res+4 ] [438])
            (const_int 0 [0]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1796 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn:TI 680 679 337 45 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 1597)
            (pc))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1796 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 2163 (nil)))
 -> 1597)
;;  succ:       46 [78.4%]  (FALLTHRU,CAN_FALLTHRU)
;;              101 [21.6%]  (CAN_FALLTHRU)
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]

;; basic block 46, loop depth 0, count 0, freq 18, maybe hot
;; Invalid sum of incoming frequencies 122, should be 18
;;  prev block 45, next block 47, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       45 [78.4%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 46 artificial_defs: { }
;; bb 46 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 17 [flags]
;; live  kill	
(note 337 680 338 46 [bb 46] NOTE_INSN_BASIC_BLOCK)
(note 338 337 339 46 NOTE_INSN_DELETED)
(note 339 338 340 46 NOTE_INSN_DELETED)
(insn:TI 340 339 27 46 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:437 __res ] [437])
            (const_int 0 [0]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1694 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:437 __res ] [437])
        (nil)))
(insn 27 340 341 46 (set (reg:SI 0 ax)
        (const_int 1 [0x1])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1694 90 {*movsi_internal}
     (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))
(jump_insn:TI 341 27 824 46 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 358)
            (pc))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1694 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 507 (nil)))
 -> 358)
;;  succ:       51 [5.1%]  (CAN_FALLTHRU)
;;              47 [94.9%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]

;; basic block 47, loop depth 0, count 0, freq 17, maybe hot
;;  prev block 46, next block 48, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       46 [94.9%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 47 artificial_defs: { }
;; bb 47 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 1 [dx] 6 [bp] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 17 [flags]
;; live  kill	
(note 824 341 342 47 [bb 47] NOTE_INSN_BASIC_BLOCK)
(note 342 824 343 47 NOTE_INSN_DELETED)
(note 343 342 344 47 NOTE_INSN_DELETED)
(insn:TI 344 343 345 47 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:438 __res+4 ] [438])
            (const:SI (plus:SI (symbol_ref:SI ("s") [flags 0x2]  <var_decl 06d9cd20 s>)
                    (const_int 4 [0x4]))))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1694 7 {*cmpsi_1}
     (nil))
(jump_insn:TI 345 344 346 47 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 358)
            (pc))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1694 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 534 (nil)))
 -> 358)
;;  succ:       51 [5.3%]  (CAN_FALLTHRU)
;;              48 [94.7%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]

;; basic block 48, loop depth 0, count 0, freq 16, maybe hot
;;  prev block 47, next block 49, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       47 [94.7%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 48 artificial_defs: { }
;; bb 48 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 1 [dx] 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 2 [cx] 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 2 [cx] 17 [flags]
;; live  kill	
(note 346 345 866 48 [bb 48] NOTE_INSN_BASIC_BLOCK)
(note 866 346 865 48 NOTE_INSN_DELETED)
(insn:TI 865 866 1281 48 (set (reg:SI 2 cx [orig:441 MEM[(const long long unsigned int &)__i$_M_node_205 + 16] ] [441])
        (mem:SI (plus:SI (reg/f:SI 3 bx [orig:203 __i$_M_node ] [203])
                (const_int 16 [0x10])) [34 MEM[(const long long unsigned int &)__i$_M_node_205 + 16]+0 S4 A64])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1694 90 {*movsi_internal}
     (nil))
(insn:TI 1281 865 1193 48 (set (mem/c:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -60 [0xffffffffffffffc4])) [45 %sfp+-36 S4 A32])
        (reg:SI 2 cx [orig:441 MEM[(const long long unsigned int &)__i$_M_node_205 + 16] ] [441])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1694 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 2 cx [orig:441 MEM[(const long long unsigned int &)__i$_M_node_205 + 16] ] [441])
        (nil)))
(insn 1193 1281 349 48 (set (reg:SI 2 cx [547])
        (mem:SI (plus:SI (reg:SI 1 dx [orig:438 __res+4 ] [438])
                (const_int 20 [0x14])) [34 MEM[(const long long unsigned int &)__res$second_203 + 16]+4 S4 A32])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1694 90 {*movsi_internal}
     (nil))
(insn:TI 349 1193 350 48 (set (reg:CC 17 flags)
        (compare:CC (mem:SI (plus:SI (reg/f:SI 3 bx [orig:203 __i$_M_node ] [203])
                    (const_int 20 [0x14])) [34 MEM[(const long long unsigned int &)__i$_M_node_205 + 16]+4 S4 A32])
            (reg:SI 2 cx [547]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1694 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 2 cx [547])
        (nil)))
(jump_insn:TI 350 349 825 48 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 358)
            (pc))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1694 596 {*jcc_1}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 358)
;;  succ:       51 [50.0%]  (CAN_FALLTHRU)
;;              49 [50.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 20 [frame]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 20 [frame]

;; basic block 49, loop depth 0, count 0, freq 8, maybe hot
;;  prev block 48, next block 50, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       48 [50.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 49 artificial_defs: { }
;; bb 49 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 17 [flags]
;; lr  def 	
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 20 [frame]
;; live  gen 	
;; live  kill	
(note 825 350 352 49 [bb 49] NOTE_INSN_BASIC_BLOCK)
(jump_insn:TI 352 825 826 49 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 355)
            (pc))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1694 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 355)
;;  succ:       55 [50.0%]  (CAN_FALLTHRU)
;;              50 [50.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]

;; basic block 50, loop depth 0, count 0, freq 4
;;  prev block 49, next block 51, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       49 [50.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 50 artificial_defs: { }
;; bb 50 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 1 [dx] 6 [bp] 7 [sp]
;; lr  def 	 2 [cx] 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 2 [cx] 17 [flags]
;; live  kill	
(note 826 352 1289 50 [bb 50] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1289 826 353 50 (set (reg:SI 2 cx [orig:441 MEM[(const long long unsigned int &)__i$_M_node_205 + 16] ] [441])
        (mem/c:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -60 [0xffffffffffffffc4])) [45 %sfp+-36 S4 A32])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1694 90 {*movsi_internal}
     (nil))
(insn 353 1289 354 50 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 2 cx [orig:441 MEM[(const long long unsigned int &)__i$_M_node_205 + 16] ] [441])
            (mem:SI (plus:SI (reg:SI 1 dx [orig:438 __res+4 ] [438])
                    (const_int 16 [0x10])) [34 MEM[(const long long unsigned int &)__res$second_203 + 16]+0 S4 A64]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1694 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 2 cx [orig:441 MEM[(const long long unsigned int &)__i$_M_node_205 + 16] ] [441])
        (nil)))
(jump_insn:TI 354 353 358 50 (set (pc)
        (if_then_else (geu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 355)
            (pc))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1694 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 355)
;;  succ:       51 [50.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              55 [50.0%]  (CAN_FALLTHRU)
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]

;; basic block 51, loop depth 0, count 0, freq 82, maybe hot
;;  prev block 50, next block 52, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       47 [5.3%]  (CAN_FALLTHRU)
;;              50 [50.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              48 [50.0%]  (CAN_FALLTHRU)
;;              46 [5.1%]  (CAN_FALLTHRU)
;;              55 [100.0%]  (CAN_FALLTHRU)
;; bb 51 artificial_defs: { }
;; bb 51 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	 17 [flags]
(code_label 358 354 359 51 142 "" [4 uses])
(note 359 358 371 51 [bb 51] NOTE_INSN_BASIC_BLOCK)
(note 371 359 372 51 NOTE_INSN_DELETED)
(note 372 371 360 51 NOTE_INSN_DELETED)
(insn:TI 360 372 361 51 (set (mem:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [0  S4 A32])
        (const:SI (plus:SI (symbol_ref:SI ("s") [flags 0x2]  <var_decl 06d9cd20 s>)
                (const_int 4 [0x4])))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1696 90 {*movsi_internal}
     (nil))
(insn 361 360 362 51 (set (mem:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [0  S4 A32])
        (reg:SI 1 dx [orig:438 __res+4 ] [438])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1696 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [orig:438 __res+4 ] [438])
        (nil)))
(insn:TI 362 361 364 51 (set (mem:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [0  S4 A32])
        (reg/f:SI 3 bx [orig:203 __i$_M_node ] [203])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1696 90 {*movsi_internal}
     (nil))
(insn 364 362 365 51 (set (mem:SI (reg/f:SI 7 sp) [0  S4 A32])
        (reg:SI 0 ax [orig:356 __insert_left ] [356])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1697 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:356 __insert_left ] [356])
        (nil)))
(call_insn:TI 365 364 373 51 (call (mem:QI (symbol_ref:SI ("_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_") [flags 0x43]  <function_decl 06b77200 _Rb_tree_insert_and_rebalance>) [0 _Rb_tree_insert_and_rebalance S1 A8])
        (const_int 16 [0x10])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1696 641 {*call}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (mem:SI (reg/f:SI 7 sp) [0  S4 A32]))
        (expr_list:SI (use (mem/f:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 4 [0x4])) [0  S4 A32]))
            (expr_list:SI (use (mem/f:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 8 [0x8])) [0  S4 A32]))
                (expr_list:SI (use (mem/f:SI (plus:SI (reg/f:SI 7 sp)
                                (const_int 12 [0xc])) [0  S4 A32]))
                    (nil))))))
(insn:TI 373 365 381 51 (parallel [
            (set (mem/c:SI (const:SI (plus:SI (symbol_ref:SI ("s") [flags 0x2]  <var_decl 06d9cd20 s>)
                            (const_int 20 [0x14]))) [21 MEM[(struct _Rb_tree *)&s]._M_impl._M_node_count+0 S4 A32])
                (plus:SI (mem/c:SI (const:SI (plus:SI (symbol_ref:SI ("s") [flags 0x2]  <var_decl 06d9cd20 s>)
                                (const_int 20 [0x14]))) [21 MEM[(struct _Rb_tree *)&s]._M_impl._M_node_count+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1698 220 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
;;  succ:       52 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]

;; basic block 52, loop depth 0, count 0, freq 270, maybe hot
;;  prev block 51, next block 53, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       51 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              44 [50.0%]  (CAN_FALLTHRU)
;;              43 [50.0%]  (CAN_FALLTHRU)
;;              101 [100.0%]  (CAN_FALLTHRU)
;; bb 52 artificial_defs: { }
;; bb 52 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 2 [cx] 17 [flags]
;; live  in  	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 2 [cx] 17 [flags]
;; live  kill	
(code_label 381 373 382 52 141 "" [3 uses])
(note 382 381 1484 52 [bb 52] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1484 382 1485 52 (set (reg:SI 2 cx)
        (mem:SI (plus:SI (reg/f:SI 3 bx [orig:203 __i$_M_node ] [203])
                (const_int 24 [0x18])) [21 MEM[(mapped_type &)__i$_M_node_351 + 24]+0 S4 A32])) D:\LHX\7.5 contest\t1.cpp:53 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 3 bx [orig:203 __i$_M_node ] [203])
        (nil)))
(insn:TI 1485 1484 384 52 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 2 cx)
            (const_int 0 [0]))) D:\LHX\7.5 contest\t1.cpp:53 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 2 cx)
        (nil)))
(jump_insn:TI 384 1485 721 52 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 1598)
            (pc))) D:\LHX\7.5 contest\t1.cpp:53 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 2900 (nil)))
 -> 1598)
;;  succ:       57 [29.0%]  (CAN_FALLTHRU)
;;              53 [71.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]

;; basic block 53, loop depth 0, count 0, freq 270, maybe hot
;;  prev block 52, next block 54, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       91 [50.0%]  (CAN_FALLTHRU)
;;              68 [50.0%]  (CAN_FALLTHRU)
;;              52 [71.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              85 [100.0%]  (CAN_FALLTHRU)
;; bb 53 artificial_defs: { }
;; bb 53 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 3 [bx] 5 [di] 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 3 [bx] 5 [di] 17 [flags]
;; live  kill	 17 [flags]
(code_label 721 384 565 53 181 "" [3 uses])
(note 565 721 1215 53 [bb 53] NOTE_INSN_BASIC_BLOCK)
(note 1215 565 1284 53 NOTE_INSN_DELETED)
(note 1284 1215 1338 53 NOTE_INSN_DELETED)
(note 1338 1284 566 53 NOTE_INSN_DELETED)
(insn:TI 566 1338 567 53 (set (reg:SI 0 ax [orig:451 j ] [451])
        (mem/c:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [21 j+0 S4 A32])) D:\LHX\7.5 contest\t1.cpp:49 90 {*movsi_internal}
     (nil))
(insn 567 566 1285 53 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 6 bp)
                        (const_int -48 [0xffffffffffffffd0])) [45 %sfp+-24 S4 A64])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 6 bp)
                            (const_int -48 [0xffffffffffffffd0])) [45 %sfp+-24 S4 A64])
                    (reg:SI 0 ax [orig:451 j ] [451])))
            (clobber (reg:CC 17 flags))
        ]) D:\LHX\7.5 contest\t1.cpp:49 220 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn:TI 1285 567 1356 53 (set (reg/v:SI 5 di [orig:123 i ] [123])
        (mem/c:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [45 %sfp+-24 S4 A64])) D:\LHX\7.5 contest\t1.cpp:49 90 {*movsi_internal}
     (nil))
(insn:TI 1356 1285 1357 53 (set (reg:SI 3 bx [450])
        (plus:SI (reg:SI 0 ax [orig:451 j ] [451])
            (reg/v:SI 5 di [orig:123 i ] [123]))) D:\LHX\7.5 contest\t1.cpp:49 213 {*leasi}
     (expr_list:REG_DEAD (reg/v:SI 5 di [orig:123 i ] [123])
        (nil)))
(insn:TI 1357 1356 570 53 (set (reg:SI 5 di [orig:106 D.83218 ] [106])
        (plus:SI (reg:SI 3 bx [450])
            (const_int -1 [0xffffffffffffffff]))) D:\LHX\7.5 contest\t1.cpp:49 213 {*leasi}
     (nil))
(insn 570 1357 571 53 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 5 di [orig:106 D.83218 ] [106])
            (mem/c:SI (symbol_ref:SI ("n") [flags 0x2]  <var_decl 06e5d660 n>) [21 n+0 S4 A32]))) D:\LHX\7.5 contest\t1.cpp:49 7 {*cmpsi_1}
     (nil))
(jump_insn:TI 571 570 572 53 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 1117)
            (pc))) D:\LHX\7.5 contest\t1.cpp:49 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (int_list:REG_BR_PROB 900 (nil)))
 -> 1117)
;;  succ:       54 [91.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              94 [9.0%]  (CAN_FALLTHRU,LOOP_EXIT)
;; lr  out 	 0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 20 [frame]

;; basic block 54, loop depth 0, count 0, freq 246, maybe hot
;;  prev block 53, next block 55, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       53 [91.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 54 artificial_defs: { }
;; bb 54 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax]
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax]
;; live  kill	
(note 572 571 574 54 [bb 54] NOTE_INSN_BASIC_BLOCK)
(insn:TI 574 572 1339 54 (set (reg/f:SI 0 ax [orig:189 __i$_M_node ] [189])
        (mem/f/c:SI (const:SI (plus:SI (symbol_ref:SI ("s") [flags 0x2]  <var_decl 06d9cd20 s>)
                    (const_int 8 [0x8]))) [6 MEM[(struct _Rb_tree_node_base * *)&s + 8B]+0 S4 A32])) 90 {*movsi_internal}
     (nil))
(insn:TI 1339 574 1599 54 (set (mem/c:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -60 [0xffffffffffffffc4])) [45 %sfp+-36 S4 A32])
        (reg/f:SI 0 ax [orig:189 __i$_M_node ] [189])) 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 0 ax [orig:189 __i$_M_node ] [189])
        (nil)))
(jump_insn 1599 1339 1600 54 (set (pc)
        (label_ref 575)) 636 {jump}
     (nil)
 -> 575)
;;  succ:       34 [100.0%]  (DFS_BACK,CAN_FALLTHRU)
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 20 [frame]

(barrier 1600 1599 355)
;; basic block 55, loop depth 0, count 0, freq 6, maybe hot
;;  prev block 54, next block 56, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       49 [50.0%]  (CAN_FALLTHRU)
;;              50 [50.0%]  (CAN_FALLTHRU)
;; bb 55 artificial_defs: { }
;; bb 55 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
;; live  in  	 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax]
;; live  kill	 17 [flags]
(code_label 355 1600 827 55 144 "" [2 uses])
(note 827 355 1486 55 [bb 55] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1486 827 1601 55 (parallel [
            (set (reg:SI 0 ax)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1694 82 {*movsi_xor}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(jump_insn 1601 1486 1602 55 (set (pc)
        (label_ref 358)) 636 {jump}
     (nil)
 -> 358)
;;  succ:       51 [100.0%]  (CAN_FALLTHRU)
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]

(barrier 1602 1601 783)
;; basic block 56, loop depth 0, count 0, freq 81, maybe hot
;;  prev block 55, next block 57, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       10 [9.0%]  (CAN_FALLTHRU)
;; bb 56 artificial_defs: { }
;; bb 56 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
;; live  in  	 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
(code_label 783 1602 782 56 187 "" [1 uses])
(note 782 783 880 56 [bb 56] NOTE_INSN_BASIC_BLOCK)
(insn:TI 880 782 1603 56 (set (mem/c:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [45 %sfp+-24 S4 A64])
        (const_int 0 [0])) D:\LHX\7.5 contest\t1.cpp:11 90 {*movsi_internal}
     (nil))
(jump_insn 1603 880 1604 56 (set (pc)
        (label_ref 752)) 636 {jump}
     (nil)
 -> 752)
;;  succ:       14 [100.0%]  (CAN_FALLTHRU)
;; lr  out 	 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame]

(barrier 1604 1603 1598)
;; basic block 57, loop depth 0, count 0, freq 78, maybe hot
;;  prev block 56, next block 58, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       52 [29.0%]  (CAN_FALLTHRU)
;; bb 57 artificial_defs: { }
;; bb 57 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 17 [flags]
;; live  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 17 [flags]
;; live  kill	 17 [flags]
(code_label 1598 1604 385 57 241 "" [1 uses])
(note 385 1598 1337 57 [bb 57] NOTE_INSN_BASIC_BLOCK)
(note 1337 385 390 57 NOTE_INSN_DELETED)
(note 390 1337 1358 57 NOTE_INSN_DELETED)
(insn:TI 1358 390 1359 57 (set (reg:SI 0 ax [orig:136 tmod ] [136])
        (mem/c:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [45 %sfp+-32 S4 A64])) D:\LHX\7.5 contest\t1.cpp:51 90 {*movsi_internal}
     (nil))
(insn 1359 1358 1194 57 (set (reg:SI 1 dx [ tmod+4 ])
        (mem/c:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [45 %sfp+-28 S4 A32])) D:\LHX\7.5 contest\t1.cpp:51 90 {*movsi_internal}
     (nil))
(insn:TI 1194 1359 1260 57 (set (reg:SI 2 cx [363])
        (mem/c:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -76 [0xffffffffffffffb4])) [45 %sfp+-52 S4 A32])) D:\LHX\7.5 contest\t1.cpp:51 90 {*movsi_internal}
     (nil))
(insn 1260 1194 386 57 (set (reg:SI 3 bx [orig:427 D.83220 ] [427])
        (mem/c:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [45 %sfp+-40 S4 A32])) D:\LHX\7.5 contest\t1.cpp:51 90 {*movsi_internal}
     (nil))
(insn:TI 386 1260 1196 57 (parallel [
            (set (reg:SI 2 cx [363])
                (mult:SI (reg:SI 2 cx [363])
                    (reg:SI 0 ax [orig:136 tmod ] [136])))
            (clobber (reg:CC 17 flags))
        ]) D:\LHX\7.5 contest\t1.cpp:51 306 {*mulsi3_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:136 tmod ] [136])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 1196 386 387 57 (set (reg:SI 0 ax [364])
        (reg:SI 1 dx [ tmod+4 ])) D:\LHX\7.5 contest\t1.cpp:51 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [ tmod+4 ])
        (nil)))
(insn:TI 387 1196 388 57 (parallel [
            (set (reg:SI 0 ax [364])
                (mult:SI (reg:SI 0 ax [364])
                    (reg:SI 3 bx [orig:427 D.83220 ] [427])))
            (clobber (reg:CC 17 flags))
        ]) D:\LHX\7.5 contest\t1.cpp:51 306 {*mulsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn:TI 388 387 1200 57 (parallel [
            (set (reg:SI 2 cx [365])
                (plus:SI (reg:SI 2 cx [363])
                    (reg:SI 0 ax [364])))
            (clobber (reg:CC 17 flags))
        ]) D:\LHX\7.5 contest\t1.cpp:51 220 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [364])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 1200 388 1361 57 (set (reg:SI 0 ax [orig:366 D.83220 ] [366])
        (reg:SI 3 bx [orig:427 D.83220 ] [427])) D:\LHX\7.5 contest\t1.cpp:51 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 3 bx [orig:427 D.83220 ] [427])
        (nil)))
(insn 1361 1200 389 57 (set (reg:SI 3 bx [ t2+4 ])
        (mem/c:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -68 [0xffffffffffffffbc])) [45 %sfp+-44 S4 A32])) D:\LHX\7.5 contest\t1.cpp:51 90 {*movsi_internal}
     (nil))
(insn:TI 389 1361 391 57 (parallel [
            (set (reg:DI 0 ax [orig:366 D.83220 ] [366])
                (mult:DI (zero_extend:DI (reg:SI 0 ax [orig:366 D.83220 ] [366]))
                    (zero_extend:DI (mem/c:SI (plus:SI (reg/f:SI 6 bp)
                                (const_int -56 [0xffffffffffffffc8])) [45 %sfp+-32 S4 A64]))))
            (clobber (reg:CC 17 flags))
        ]) D:\LHX\7.5 contest\t1.cpp:51 323 {*umulsidi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn:TI 391 389 1360 57 (parallel [
            (set (reg:SI 1 dx [ D.83220+4 ])
                (plus:SI (reg:SI 1 dx [ D.83220+4 ])
                    (reg:SI 2 cx [365])))
            (clobber (reg:CC 17 flags))
        ]) D:\LHX\7.5 contest\t1.cpp:51 220 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 2 cx [365])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 1360 391 1362 57 (set (reg:SI 2 cx [orig:117 t2 ] [117])
        (mem/c:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -72 [0xffffffffffffffb8])) [45 %sfp+-48 S4 A64])) D:\LHX\7.5 contest\t1.cpp:51 90 {*movsi_internal}
     (nil))
(insn:TI 1362 1360 395 57 (parallel [
            (set (reg:CC 17 flags)
                (compare:CC (reg:SI 2 cx [orig:117 t2 ] [117])
                    (reg:SI 0 ax [orig:366 D.83220 ] [366])))
            (set (reg:SI 2 cx [orig:117 t2 ] [117])
                (minus:SI (reg:SI 2 cx [orig:117 t2 ] [117])
                    (reg:SI 0 ax [orig:366 D.83220 ] [366])))
        ]) D:\LHX\7.5 contest\t1.cpp:51 282 {*subsi_3}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:366 D.83220 ] [366])
        (nil)))
(insn 395 1362 1363 57 (set (reg/f:SI 0 ax [orig:448 __i$_M_node ] [448])
        (mem/f/c:SI (const:SI (plus:SI (symbol_ref:SI ("s") [flags 0x2]  <var_decl 06d9cd20 s>)
                    (const_int 8 [0x8]))) [6 MEM[(struct _Rb_tree_node_base * *)&s + 8B]+0 S4 A32])) 90 {*movsi_internal}
     (nil))
(insn:TI 1363 395 889 57 (parallel [
            (set (reg:SI 3 bx [ t2+4 ])
                (minus:SI (reg:SI 3 bx [ t2+4 ])
                    (plus:SI (ltu:SI (reg:CC 17 flags)
                            (const_int 0 [0]))
                        (reg:SI 1 dx [ D.83220+4 ]))))
            (clobber (reg:CC 17 flags))
        ]) D:\LHX\7.5 contest\t1.cpp:51 290 {*subsi3_carry}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (expr_list:REG_DEAD (reg:SI 1 dx [ D.83220+4 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 889 1363 396 57 (set (reg/f:SI 1 dx [orig:186 __i$_M_node ] [186])
        (const:SI (plus:SI (symbol_ref:SI ("s") [flags 0x2]  <var_decl 06d9cd20 s>)
                (const_int 4 [0x4])))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1260 90 {*movsi_internal}
     (nil))
(insn:TI 396 889 1259 57 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:SI 0 ax [orig:448 __i$_M_node ] [448])
            (const_int 0 [0]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1260 3 {*cmpsi_ccno_1}
     (nil))
(insn 1259 396 397 57 (set (mem/c:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -60 [0xffffffffffffffc4])) [45 %sfp+-36 S4 A32])
        (reg/f:SI 0 ax [orig:448 __i$_M_node ] [448])) 90 {*movsi_internal}
     (nil))
(jump_insn:TI 397 1259 1605 57 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 416)
            (pc))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1260 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 9100 (nil)))
 -> 416)
;;  succ:       62 [91.0%]  (CAN_FALLTHRU)
;;              58 [9.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]

;; basic block 58, loop depth 0, count 0, freq 7, maybe hot
;;  prev block 57, next block 59, flags: (NEW, RTL, MODIFIED)
;;  pred:       57 [9.0%]  (FALLTHRU)
;; bb 58 artificial_defs: { }
;; bb 58 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
;; live  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
(note 1605 397 1606 58 [bb 58] NOTE_INSN_BASIC_BLOCK)
(jump_insn:TI 1606 1605 1607 58 (set (pc)
        (label_ref 685)) 636 {jump}
     (nil)
 -> 685)
;;  succ:       86 [100.0%]  (CAN_FALLTHRU)
;; lr  out 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]

(barrier 1607 1606 1609)
;; basic block 59, loop depth 0, count 0, freq 395, maybe hot
;;  prev block 58, next block 60, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       62 [50.0%]  (CAN_FALLTHRU)
;; bb 59 artificial_defs: { }
;; bb 59 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 17 [flags]
;; lr  def 	
;; live  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 20 [frame]
;; live  gen 	
;; live  kill	
(code_label 1609 1607 829 59 243 "" [1 uses])
(note 829 1609 403 59 [bb 59] NOTE_INSN_BASIC_BLOCK)
(jump_insn:TI 403 829 830 59 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 853)
            (pc))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1261 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 853)
;;  succ:       61 [50.0%]  (CAN_FALLTHRU)
;;              60 [50.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]

;; basic block 60, loop depth 0, count 0, freq 198, maybe hot
;;  prev block 59, next block 61, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       59 [50.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 60 artificial_defs: { }
;; bb 60 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 0 [ax] 2 [cx] 6 [bp] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 17 [flags]
;; live  kill	
(note 830 403 404 60 [bb 60] NOTE_INSN_BASIC_BLOCK)
(insn:TI 404 830 405 60 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 2 cx [orig:117 t2 ] [117])
            (mem:SI (plus:SI (reg/f:SI 0 ax [orig:187 __i$_M_node ] [187])
                    (const_int 16 [0x10])) [34 MEM[(const long long unsigned int &)__i$_M_node_425 + 16]+0 S4 A64]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1261 7 {*cmpsi_1}
     (nil))
(jump_insn:TI 405 404 853 60 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 411)
            (pc))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1261 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 411)
;;  succ:       63 [50.0%]  (CAN_FALLTHRU)
;;              61 [50.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]

;; basic block 61, loop depth 0, count 0, freq 395, maybe hot
;;  prev block 60, next block 62, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       60 [50.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              59 [50.0%]  (CAN_FALLTHRU)
;; bb 61 artificial_defs: { }
;; bb 61 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 17 [flags]
;; live  in  	 0 [ax] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 17 [flags]
;; live  kill	
(code_label 853 405 407 61 199 "" [1 uses])
(note 407 853 408 61 [bb 61] NOTE_INSN_BASIC_BLOCK)
(note 408 407 30 61 NOTE_INSN_DELETED)
(insn:TI 30 408 31 61 (set (reg/f:SI 1 dx [orig:186 __i$_M_node ] [186])
        (reg/f:SI 0 ax [orig:187 __i$_M_node ] [187])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1261 90 {*movsi_internal}
     (nil))
(insn 31 30 417 61 (set (reg/f:SI 0 ax [orig:187 __i$_M_node ] [187])
        (mem/f:SI (plus:SI (reg/f:SI 0 ax [orig:187 __i$_M_node ] [187])
                (const_int 8 [0x8])) [6 MEM[(struct _Rb_tree_node_base * *)__i$_M_node_425 + 8B]+0 S4 A32])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1262 90 {*movsi_internal}
     (nil))
(insn:TI 417 31 418 61 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:SI 0 ax [orig:187 __i$_M_node ] [187])
            (const_int 0 [0]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1260 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn:TI 418 417 416 61 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 1608)
            (pc))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1260 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 900 (nil)))
 -> 1608)
;;  succ:       62 [91.0%]  (FALLTHRU,DFS_BACK,CAN_FALLTHRU)
;;              64 [9.0%]  (CAN_FALLTHRU,LOOP_EXIT)
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]

;; basic block 62, loop depth 0, count 0, freq 790, maybe hot
;;  prev block 61, next block 63, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       57 [91.0%]  (CAN_FALLTHRU)
;;              61 [91.0%]  (FALLTHRU,DFS_BACK,CAN_FALLTHRU)
;;              63 [91.0%]  (DFS_BACK,CAN_FALLTHRU)
;; bb 62 artificial_defs: { }
;; bb 62 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 0 [ax] 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 17 [flags]
;; live  kill	
(code_label 416 418 399 62 151 "" [2 uses])
(note 399 416 400 62 [bb 62] NOTE_INSN_BASIC_BLOCK)
(insn:TI 400 399 401 62 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 3 bx [ t2+4 ])
            (mem:SI (plus:SI (reg/f:SI 0 ax [orig:187 __i$_M_node ] [187])
                    (const_int 20 [0x14])) [34 MEM[(const long long unsigned int &)__i$_M_node_425 + 16]+4 S4 A32]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1261 7 {*cmpsi_1}
     (nil))
(jump_insn:TI 401 400 411 62 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 1609)
            (pc))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1261 596 {*jcc_1}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 1609)
;;  succ:       63 [50.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              59 [50.0%]  (CAN_FALLTHRU)
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 20 [frame]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 20 [frame]

;; basic block 63, loop depth 0, count 0, freq 395, maybe hot
;;  prev block 62, next block 64, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       62 [50.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              60 [50.0%]  (CAN_FALLTHRU)
;; bb 63 artificial_defs: { }
;; bb 63 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 17 [flags]
;; live  kill	
(code_label 411 401 412 63 148 "" [1 uses])
(note 412 411 413 63 [bb 63] NOTE_INSN_BASIC_BLOCK)
(insn:TI 413 412 1576 63 (set (reg/f:SI 0 ax [orig:187 __i$_M_node ] [187])
        (mem/f:SI (plus:SI (reg/f:SI 0 ax [orig:187 __i$_M_node ] [187])
                (const_int 12 [0xc])) [6 MEM[(struct _Rb_tree_node_base * *)__i$_M_node_425 + 12B]+0 S4 A32])) 90 {*movsi_internal}
     (nil))
(insn:TI 1576 413 1577 63 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:SI 0 ax [orig:187 __i$_M_node ] [187])
            (const_int 0 [0]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1260 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn:TI 1577 1576 1608 63 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 416)
            (pc))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1260 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 9100 (nil)))
 -> 416)
;;  succ:       62 [91.0%]  (DFS_BACK,CAN_FALLTHRU)
;;              64 [9.0%]  (FALLTHRU,CAN_FALLTHRU,LOOP_EXIT)
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]

;; basic block 64, loop depth 0, count 0, freq 71, maybe hot
;;  prev block 63, next block 65, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       61 [9.0%]  (CAN_FALLTHRU,LOOP_EXIT)
;;              63 [9.0%]  (FALLTHRU,CAN_FALLTHRU,LOOP_EXIT)
;; bb 64 artificial_defs: { }
;; bb 64 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 1 [dx] 6 [bp] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 17 [flags]
;; live  kill	
(code_label 1608 1577 419 64 242 "" [1 uses])
(note 419 1608 420 64 [bb 64] NOTE_INSN_BASIC_BLOCK)
(insn:TI 420 419 421 64 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:SI 1 dx [orig:186 __i$_M_node ] [186])
            (const:SI (plus:SI (symbol_ref:SI ("s") [flags 0x2]  <var_decl 06d9cd20 s>)
                    (const_int 4 [0x4]))))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_map.h:498 7 {*cmpsi_1}
     (nil))
(jump_insn:TI 421 420 422 64 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 685)
            (pc))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_map.h:498 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 662 (nil)))
 -> 685)
;;  succ:       86 [6.6%]  (CAN_FALLTHRU)
;;              65 [93.4%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]

;; basic block 65, loop depth 0, count 0, freq 66, maybe hot
;;  prev block 64, next block 66, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       64 [93.4%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 65 artificial_defs: { }
;; bb 65 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 1 [dx] 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 17 [flags]
;; live  kill	
(note 422 421 423 65 [bb 65] NOTE_INSN_BASIC_BLOCK)
(insn:TI 423 422 424 65 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 3 bx [ t2+4 ])
            (mem:SI (plus:SI (reg/f:SI 1 dx [orig:186 __i$_M_node ] [186])
                    (const_int 20 [0x14])) [34 MEM[(const long long unsigned int &)__i$_M_node_447 + 16]+4 S4 A32]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_map.h:498 7 {*cmpsi_1}
     (nil))
(jump_insn:TI 424 423 832 65 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 685)
            (pc))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_map.h:498 596 {*jcc_1}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 685)
;;  succ:       86 [50.0%]  (CAN_FALLTHRU)
;;              66 [50.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 20 [frame]
;; live  out 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 20 [frame]

;; basic block 66, loop depth 0, count 0, freq 33, maybe hot
;;  prev block 65, next block 67, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       65 [50.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 66 artificial_defs: { }
;; bb 66 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 17 [flags]
;; lr  def 	
;; live  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 20 [frame]
;; live  gen 	
;; live  kill	
(note 832 424 426 66 [bb 66] NOTE_INSN_BASIC_BLOCK)
(jump_insn:TI 426 832 833 66 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 767)
            (pc))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_map.h:498 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 767)
;;  succ:       68 [50.0%]  (CAN_FALLTHRU)
;;              67 [50.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]

;; basic block 67, loop depth 0, count 0, freq 17, maybe hot
;;  prev block 66, next block 68, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       66 [50.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 67 artificial_defs: { }
;; bb 67 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 1 [dx] 2 [cx] 6 [bp] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 17 [flags]
;; live  kill	
(note 833 426 427 67 [bb 67] NOTE_INSN_BASIC_BLOCK)
(insn:TI 427 833 428 67 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 2 cx [orig:117 t2 ] [117])
            (mem:SI (plus:SI (reg/f:SI 1 dx [orig:186 __i$_M_node ] [186])
                    (const_int 16 [0x10])) [34 MEM[(const long long unsigned int &)__i$_M_node_447 + 16]+0 S4 A64]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_map.h:498 7 {*cmpsi_1}
     (nil))
(jump_insn:TI 428 427 767 67 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 685)
            (pc))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_map.h:498 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 685)
;;  succ:       86 [50.0%]  (CAN_FALLTHRU)
;;              68 [50.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]

;; basic block 68, loop depth 0, count 0, freq 33, maybe hot
;;  prev block 67, next block 69, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       66 [50.0%]  (CAN_FALLTHRU)
;;              67 [50.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 68 artificial_defs: { }
;; bb 68 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 1 [dx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
;; live  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 17 [flags]
;; live  kill	
(code_label 767 428 768 68 153 "" [1 uses])
(note 768 767 1473 68 [bb 68] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1473 768 1474 68 (set (reg:SI 0 ax)
        (mem:SI (plus:SI (reg/f:SI 1 dx [orig:186 __i$_M_node ] [186])
                (const_int 24 [0x18])) [21 MEM[(mapped_type &)__i$_M_node_347 + 24]+0 S4 A32])) D:\LHX\7.5 contest\t1.cpp:53 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 1 dx [orig:186 __i$_M_node ] [186])
        (nil)))
(insn:TI 1474 1473 771 68 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax)
            (const_int 0 [0]))) D:\LHX\7.5 contest\t1.cpp:53 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(jump_insn:TI 771 1474 762 68 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 721)
            (pc))) D:\LHX\7.5 contest\t1.cpp:53 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 721)
;;  succ:       69 [50.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              53 [50.0%]  (CAN_FALLTHRU)
;; lr  out 	 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]

;; basic block 69, loop depth 0, count 0, freq 0
;;  prev block 68, next block 70, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       68 [50.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 69 artificial_defs: { }
;; bb 69 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax]
;; live  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax]
;; live  kill	
(note 762 771 891 69 [bb 69] NOTE_INSN_BASIC_BLOCK)
(insn:TI 891 762 713 69 (set (reg/f:SI 0 ax [orig:165 __i$_M_node ] [165])
        (mem/c:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -60 [0xffffffffffffffc4])) [45 %sfp+-36 S4 A32])) 90 {*movsi_internal}
     (expr_list:REG_EQUAL (mem/f/c:SI (const:SI (plus:SI (symbol_ref:SI ("s") [flags 0x2]  <var_decl 06d9cd20 s>)
                    (const_int 8 [0x8]))) [6 MEM[(struct _Rb_tree_node_base * *)&s + 8B]+0 S4 A32])
        (nil)))
;;  succ:       70 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 0 [ax] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]

;; basic block 70, loop depth 0, count 0, freq 71, maybe hot
;;  prev block 69, next block 71, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       92 [91.0%]  (CAN_FALLTHRU)
;;              69 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 70 artificial_defs: { }
;; bb 70 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 3 [bx]
;; live  in  	 0 [ax] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 3 [bx]
;; live  kill	
(code_label 713 891 482 70 180 "" [1 uses])
(note 482 713 888 70 [bb 70] NOTE_INSN_BASIC_BLOCK)
(insn:TI 888 482 1610 70 (set (reg/f:SI 3 bx [orig:181 __i$_M_node ] [181])
        (const:SI (plus:SI (symbol_ref:SI ("s") [flags 0x2]  <var_decl 06d9cd20 s>)
                (const_int 4 [0x4])))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1794 90 {*movsi_internal}
     (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("s") [flags 0x2]  <var_decl 06d9cd20 s>)
                (const_int 4 [0x4])))
        (nil)))
(jump_insn 1610 888 1611 70 (set (pc)
        (label_ref 500)) 636 {jump}
     (nil)
 -> 500)
;;  succ:       74 [100.0%]  (CAN_FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 0 [ax] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]

(barrier 1611 1610 1613)
;; basic block 71, loop depth 0, count 0, freq 395, maybe hot
;;  prev block 70, next block 72, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       74 [50.0%]  (CAN_FALLTHRU)
;; bb 71 artificial_defs: { }
;; bb 71 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 17 [flags]
;; lr  def 	
;; live  in  	 0 [ax] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 20 [frame]
;; live  gen 	
;; live  kill	
(code_label 1613 1611 840 71 245 "" [1 uses])
(note 840 1613 487 71 [bb 71] NOTE_INSN_BASIC_BLOCK)
(jump_insn:TI 487 840 841 71 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 854)
            (pc))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1261 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 854)
;;  succ:       73 [50.0%]  (CAN_FALLTHRU)
;;              72 [50.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 0 [ax] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]

;; basic block 72, loop depth 0, count 0, freq 198, maybe hot
;;  prev block 71, next block 73, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       71 [50.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 72 artificial_defs: { }
;; bb 72 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 0 [ax] 4 [si] 6 [bp] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 0 [ax] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 17 [flags]
;; live  kill	
(note 841 487 488 72 [bb 72] NOTE_INSN_BASIC_BLOCK)
(insn:TI 488 841 489 72 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 4 si [orig:112 t1 ] [112])
            (mem:SI (plus:SI (reg/f:SI 0 ax [orig:165 __i$_M_node ] [165])
                    (const_int 16 [0x10])) [34 MEM[(const long long unsigned int &)__i$_M_node_427 + 16]+0 S4 A64]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1261 7 {*cmpsi_1}
     (nil))
(jump_insn:TI 489 488 854 72 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 495)
            (pc))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1261 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 495)
;;  succ:       75 [50.0%]  (CAN_FALLTHRU)
;;              73 [50.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 0 [ax] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]

;; basic block 73, loop depth 0, count 0, freq 395, maybe hot
;;  prev block 72, next block 74, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       72 [50.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              71 [50.0%]  (CAN_FALLTHRU)
;; bb 73 artificial_defs: { }
;; bb 73 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 3 [bx] 17 [flags]
;; live  in  	 0 [ax] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 3 [bx] 17 [flags]
;; live  kill	
(code_label 854 489 491 73 200 "" [1 uses])
(note 491 854 492 73 [bb 73] NOTE_INSN_BASIC_BLOCK)
(note 492 491 36 73 NOTE_INSN_DELETED)
(insn:TI 36 492 37 73 (set (reg/f:SI 3 bx [orig:181 __i$_M_node ] [181])
        (reg/f:SI 0 ax [orig:165 __i$_M_node ] [165])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1261 90 {*movsi_internal}
     (nil))
(insn 37 36 501 73 (set (reg/f:SI 0 ax [orig:165 __i$_M_node ] [165])
        (mem/f:SI (plus:SI (reg/f:SI 0 ax [orig:165 __i$_M_node ] [165])
                (const_int 8 [0x8])) [6 MEM[(struct _Rb_tree_node_base * *)__i$_M_node_427 + 8B]+0 S4 A32])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1262 90 {*movsi_internal}
     (nil))
(insn:TI 501 37 502 73 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:SI 0 ax [orig:165 __i$_M_node ] [165])
            (const_int 0 [0]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1260 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn:TI 502 501 500 73 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 1612)
            (pc))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1260 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 900 (nil)))
 -> 1612)
;;  succ:       74 [91.0%]  (FALLTHRU,DFS_BACK,CAN_FALLTHRU)
;;              76 [9.0%]  (CAN_FALLTHRU,LOOP_EXIT)
;; lr  out 	 0 [ax] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 0 [ax] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]

;; basic block 74, loop depth 0, count 0, freq 790, maybe hot
;;  prev block 73, next block 75, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       75 [91.0%]  (DFS_BACK,CAN_FALLTHRU)
;;              73 [91.0%]  (FALLTHRU,DFS_BACK,CAN_FALLTHRU)
;;              70 [100.0%]  (CAN_FALLTHRU)
;; bb 74 artificial_defs: { }
;; bb 74 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 0 [ax] 5 [di] 6 [bp] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 0 [ax] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 17 [flags]
;; live  kill	
(code_label 500 502 483 74 162 "" [2 uses])
(note 483 500 484 74 [bb 74] NOTE_INSN_BASIC_BLOCK)
(insn:TI 484 483 485 74 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 5 di [ t1+4 ])
            (mem:SI (plus:SI (reg/f:SI 0 ax [orig:165 __i$_M_node ] [165])
                    (const_int 20 [0x14])) [34 MEM[(const long long unsigned int &)__i$_M_node_427 + 16]+4 S4 A32]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1261 7 {*cmpsi_1}
     (nil))
(jump_insn:TI 485 484 495 74 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 1613)
            (pc))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1261 596 {*jcc_1}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 1613)
;;  succ:       75 [50.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              71 [50.0%]  (CAN_FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 20 [frame]
;; live  out 	 0 [ax] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 20 [frame]

;; basic block 75, loop depth 0, count 0, freq 395, maybe hot
;;  prev block 74, next block 76, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       74 [50.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              72 [50.0%]  (CAN_FALLTHRU)
;; bb 75 artificial_defs: { }
;; bb 75 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
;; live  in  	 0 [ax] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 17 [flags]
;; live  kill	
(code_label 495 485 496 75 159 "" [1 uses])
(note 496 495 497 75 [bb 75] NOTE_INSN_BASIC_BLOCK)
(insn:TI 497 496 1580 75 (set (reg/f:SI 0 ax [orig:165 __i$_M_node ] [165])
        (mem/f:SI (plus:SI (reg/f:SI 0 ax [orig:165 __i$_M_node ] [165])
                (const_int 12 [0xc])) [6 MEM[(struct _Rb_tree_node_base * *)__i$_M_node_427 + 12B]+0 S4 A32])) 90 {*movsi_internal}
     (nil))
(insn:TI 1580 497 1581 75 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:SI 0 ax [orig:165 __i$_M_node ] [165])
            (const_int 0 [0]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1260 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn:TI 1581 1580 1612 75 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 500)
            (pc))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1260 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 9100 (nil)))
 -> 500)
;;  succ:       74 [91.0%]  (DFS_BACK,CAN_FALLTHRU)
;;              76 [9.0%]  (FALLTHRU,CAN_FALLTHRU,LOOP_EXIT)
;; lr  out 	 0 [ax] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 0 [ax] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]

;; basic block 76, loop depth 0, count 0, freq 71, maybe hot
;;  prev block 75, next block 77, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       73 [9.0%]  (CAN_FALLTHRU,LOOP_EXIT)
;;              75 [9.0%]  (FALLTHRU,CAN_FALLTHRU,LOOP_EXIT)
;; bb 76 artificial_defs: { }
;; bb 76 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 17 [flags]
;; live  kill	
(code_label 1612 1581 503 76 244 "" [1 uses])
(note 503 1612 504 76 [bb 76] NOTE_INSN_BASIC_BLOCK)
(insn:TI 504 503 505 76 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:SI 3 bx [orig:181 __i$_M_node ] [181])
            (const:SI (plus:SI (symbol_ref:SI ("s") [flags 0x2]  <var_decl 06d9cd20 s>)
                    (const_int 4 [0x4]))))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_map.h:498 7 {*cmpsi_1}
     (nil))
(jump_insn:TI 505 504 506 76 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 724)
            (pc))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_map.h:498 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 1040 (nil)))
 -> 724)
;;  succ:       80 [10.4%]  (CAN_FALLTHRU)
;;              77 [89.6%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]

;; basic block 77, loop depth 0, count 0, freq 66, maybe hot
;;  prev block 76, next block 78, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       76 [89.6%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 77 artificial_defs: { }
;; bb 77 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 3 [bx] 5 [di] 6 [bp] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 17 [flags]
;; live  kill	
(note 506 505 507 77 [bb 77] NOTE_INSN_BASIC_BLOCK)
(insn:TI 507 506 508 77 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 5 di [ t1+4 ])
            (mem:SI (plus:SI (reg/f:SI 3 bx [orig:181 __i$_M_node ] [181])
                    (const_int 20 [0x14])) [34 MEM[(const long long unsigned int &)__i$_M_node_448 + 16]+4 S4 A32]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_map.h:498 7 {*cmpsi_1}
     (nil))
(jump_insn:TI 508 507 843 77 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 724)
            (pc))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_map.h:498 596 {*jcc_1}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 724)
;;  succ:       80 [50.0%]  (CAN_FALLTHRU)
;;              78 [50.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 20 [frame]
;; live  out 	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 20 [frame]

;; basic block 78, loop depth 0, count 0, freq 33, maybe hot
;;  prev block 77, next block 79, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       77 [50.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 78 artificial_defs: { }
;; bb 78 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 17 [flags]
;; lr  def 	
;; live  in  	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 20 [frame]
;; live  gen 	
;; live  kill	
(note 843 508 510 78 [bb 78] NOTE_INSN_BASIC_BLOCK)
(jump_insn:TI 510 843 844 78 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 561)
            (pc))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_map.h:498 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 561)
;;  succ:       85 [50.0%]  (CAN_FALLTHRU)
;;              79 [50.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]

;; basic block 79, loop depth 0, count 0, freq 17, maybe hot
;;  prev block 78, next block 80, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       78 [50.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 79 artificial_defs: { }
;; bb 79 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 3 [bx] 4 [si] 6 [bp] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 17 [flags]
;; live  kill	
(note 844 510 511 79 [bb 79] NOTE_INSN_BASIC_BLOCK)
(insn:TI 511 844 512 79 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 4 si [orig:112 t1 ] [112])
            (mem:SI (plus:SI (reg/f:SI 3 bx [orig:181 __i$_M_node ] [181])
                    (const_int 16 [0x10])) [34 MEM[(const long long unsigned int &)__i$_M_node_448 + 16]+0 S4 A64]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_map.h:498 7 {*cmpsi_1}
     (nil))
(jump_insn:TI 512 511 724 79 (set (pc)
        (if_then_else (geu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 561)
            (pc))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_map.h:498 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 561)
;;  succ:       80 [50.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              85 [50.0%]  (CAN_FALLTHRU)
;; lr  out 	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]

;; basic block 80, loop depth 0, count 0, freq 45, maybe hot
;;  prev block 79, next block 81, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       79 [50.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              76 [10.4%]  (CAN_FALLTHRU)
;;              77 [50.0%]  (CAN_FALLTHRU)
;;              93 [100.0%]  (CAN_FALLTHRU)
;; bb 80 artificial_defs: { }
;; bb 80 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;; live  in  	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 7 [sp] 17 [flags]
;; live  kill	 17 [flags]
(code_label 724 512 725 80 163 "" [3 uses])
(note 725 724 727 80 [bb 80] NOTE_INSN_BASIC_BLOCK)
(insn:TI 727 725 1278 80 (set (mem:SI (reg/f:SI 7 sp) [0  S4 A32])
        (const_int 32 [0x20])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/ext/new_allocator.h:104 90 {*movsi_internal}
     (nil))
(insn 1278 727 728 80 (set (mem/c:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -60 [0xffffffffffffffc4])) [45 %sfp+-36 S4 A32])
        (reg:SI 3 bx [orig:254 __pos ] [254])) 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 3 bx [orig:254 __pos ] [254])
        (nil)))
(call_insn:TI 728 1278 1279 80 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("_Znwj") [flags 0x43]  <function_decl 01938d00 operator new>) [0 operator new S1 A8])
            (const_int 4 [0x4]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/ext/new_allocator.h:104 648 {*call_value}
     (nil)
    (expr_list:SI (use (mem:SI (reg/f:SI 7 sp) [0  S4 A32]))
        (nil)))
(insn:TI 1279 728 1344 80 (set (reg/v:SI 1 dx [orig:254 __pos ] [254])
        (mem/c:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -60 [0xffffffffffffffc4])) [45 %sfp+-36 S4 A32])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1794 90 {*movsi_internal}
     (nil))
(insn 1344 1279 729 80 (set (mem:SI (plus:SI (reg/f:SI 0 ax [orig:181 __i$_M_node ] [181])
                (const_int 16 [0x10])) [34 MEM[(struct pair *)__i$_M_node_277 + 16B].first+0 S4 A64])
        (reg:SI 4 si [orig:112 t1 ] [112])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/tuple:1102 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [orig:112 t1 ] [112])
        (nil)))
(insn 729 1344 1345 80 (set (reg/f:SI 3 bx [orig:181 __i$_M_node ] [181])
        (reg:SI 0 ax)) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/ext/new_allocator.h:104 90 {*movsi_internal}
     (nil))
(insn:TI 1345 729 731 80 (set (mem:SI (plus:SI (reg/f:SI 0 ax [orig:181 __i$_M_node ] [181])
                (const_int 20 [0x14])) [34 MEM[(struct pair *)__i$_M_node_277 + 16B].first+4 S4 A32])
        (reg:SI 5 di [ t1+4 ])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/tuple:1102 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 5 di [ t1+4 ])
        (nil)))
(insn 731 1345 1346 80 (set (mem:SI (plus:SI (reg/f:SI 0 ax [orig:181 __i$_M_node ] [181])
                (const_int 24 [0x18])) [21 MEM[(struct pair *)__i$_M_node_277 + 16B].second+0 S4 A64])
        (const_int 0 [0])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/tuple:1102 90 {*movsi_internal}
     (nil))
(insn 1346 731 735 80 (set (reg/f:SI 0 ax [orig:424 D.83232 ] [424])
        (plus:SI (reg/f:SI 0 ax [orig:181 __i$_M_node ] [181])
            (const_int 16 [0x10]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/ext/aligned_buffer.h:53 213 {*leasi}
     (nil))
(insn:TI 735 1346 733 80 (set (reg:SI 2 cx)
        (symbol_ref:SI ("s") [flags 0x2]  <var_decl 06d9cd20 s>)) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1794 90 {*movsi_internal}
     (nil))
(insn:TI 733 735 734 80 (set (mem:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [0  S4 A32])
        (reg/f:SI 0 ax [orig:424 D.83232 ] [424])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1794 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 0 ax [orig:424 D.83232 ] [424])
        (nil)))
(insn 734 733 736 80 (set (mem:SI (reg/f:SI 7 sp) [0  S4 A32])
        (reg/v:SI 1 dx [orig:254 __pos ] [254])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1794 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 1 dx [orig:254 __pos ] [254])
        (nil)))
(call_insn:TI 736 734 737 80 (parallel [
            (set (reg:DI 0 ax)
                (call (mem:QI (symbol_ref:SI ("_ZNSt8_Rb_treeIySt4pairIKyiESt10_Select1stIS2_ESt4lessIyESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERS1_") [flags 0x3]  <function_decl 06e17d80 _M_get_insert_hint_unique_pos>) [0 _M_get_insert_hint_unique_pos S1 A8])
                    (const_int 8 [0x8])))
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 8 [0x8])))
        ]) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1794 653 {*call_value_pop}
     (expr_list:REG_DEAD (reg:SI 2 cx)
        (expr_list:REG_ARGS_SIZE (const_int -8 [0xfffffffffffffff8])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 2 cx))
        (expr_list:SI (use (mem:SI (reg/f:SI 7 sp) [0  S4 A32]))
            (expr_list:SI (use (mem/f:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 4 [0x4])) [0  S4 A32]))
                (nil)))))
(insn:TI 737 736 742 80 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1794 220 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 742 737 743 80 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:434 __res+4 ] [434])
            (const_int 0 [0]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1796 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn:TI 743 742 517 80 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 1614)
            (pc))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1796 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 2163 (nil)))
 -> 1614)
;;  succ:       81 [78.4%]  (FALLTHRU,CAN_FALLTHRU)
;;              104 [21.6%]  (CAN_FALLTHRU)
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame]

;; basic block 81, loop depth 0, count 0, freq 5
;;  prev block 80, next block 82, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       80 [78.4%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 81 artificial_defs: { }
;; bb 81 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 17 [flags]
;; live  kill	
(note 517 743 518 81 [bb 81] NOTE_INSN_BASIC_BLOCK)
(note 518 517 519 81 NOTE_INSN_DELETED)
(note 519 518 520 81 NOTE_INSN_DELETED)
(insn:TI 520 519 39 81 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:433 __res ] [433])
            (const_int 0 [0]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1694 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:433 __res ] [433])
        (nil)))
(insn 39 520 521 81 (set (reg:SI 0 ax)
        (const_int 1 [0x1])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1694 90 {*movsi_internal}
     (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))
(jump_insn:TI 521 39 846 81 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 538)
            (pc))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1694 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 507 (nil)))
 -> 538)
;;  succ:       84 [5.1%]  (CAN_FALLTHRU)
;;              82 [94.9%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame]

;; basic block 82, loop depth 0, count 0, freq 5
;;  prev block 81, next block 83, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       81 [94.9%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 82 artificial_defs: { }
;; bb 82 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 1 [dx] 6 [bp] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 17 [flags]
;; live  kill	
(note 846 521 522 82 [bb 82] NOTE_INSN_BASIC_BLOCK)
(note 522 846 523 82 NOTE_INSN_DELETED)
(note 523 522 524 82 NOTE_INSN_DELETED)
(insn:TI 524 523 525 82 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:434 __res+4 ] [434])
            (const:SI (plus:SI (symbol_ref:SI ("s") [flags 0x2]  <var_decl 06d9cd20 s>)
                    (const_int 4 [0x4]))))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1694 7 {*cmpsi_1}
     (nil))
(jump_insn:TI 525 524 526 82 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 538)
            (pc))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1694 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 534 (nil)))
 -> 538)
;;  succ:       84 [5.3%]  (CAN_FALLTHRU)
;;              83 [94.7%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame]

;; basic block 83, loop depth 0, count 0, freq 5
;;  prev block 82, next block 84, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       82 [94.7%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 83 artificial_defs: { }
;; bb 83 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 1 [dx] 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 2 [cx] 5 [di] 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 2 [cx] 5 [di] 17 [flags]
;; live  kill	
(note 526 525 870 83 [bb 83] NOTE_INSN_BASIC_BLOCK)
(note 870 526 1212 83 NOTE_INSN_DELETED)
(insn:TI 1212 870 529 83 (set (reg:SI 5 di [561])
        (mem:SI (plus:SI (reg:SI 1 dx [orig:434 __res+4 ] [434])
                (const_int 20 [0x14])) [34 MEM[(const long long unsigned int &)__res$second_275 + 16]+4 S4 A32])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1694 90 {*movsi_internal}
     (nil))
(insn 529 1212 869 83 (set (reg:CC 17 flags)
        (compare:CC (mem:SI (plus:SI (reg/f:SI 3 bx [orig:181 __i$_M_node ] [181])
                    (const_int 20 [0x14])) [34 MEM[(const long long unsigned int &)__i$_M_node_277 + 16]+4 S4 A32])
            (reg:SI 5 di [561]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1694 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 5 di [561])
        (nil)))
(insn:TI 869 529 530 83 (set (reg:SI 2 cx [orig:445 MEM[(const long long unsigned int &)__i$_M_node_277 + 16] ] [445])
        (mem:SI (plus:SI (reg/f:SI 3 bx [orig:181 __i$_M_node ] [181])
                (const_int 16 [0x10])) [34 MEM[(const long long unsigned int &)__i$_M_node_277 + 16]+0 S4 A64])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1694 90 {*movsi_internal}
     (nil))
(jump_insn:TI 530 869 538 83 (set (pc)
        (if_then_else (geu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 1615)
            (pc))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1694 596 {*jcc_1}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 1615)
;;  succ:       84 [50.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              108 [50.0%]  (CAN_FALLTHRU)
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 17 [flags] 20 [frame]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 17 [flags] 20 [frame]

;; basic block 84, loop depth 0, count 0, freq 24, maybe hot
;;  prev block 83, next block 85, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       82 [5.3%]  (CAN_FALLTHRU)
;;              109 [50.0%]  (CAN_FALLTHRU)
;;              83 [50.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              81 [5.1%]  (CAN_FALLTHRU)
;;              110 [100.0%]  (CAN_FALLTHRU)
;; bb 84 artificial_defs: { }
;; bb 84 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	 17 [flags]
(code_label 538 530 539 84 166 "" [4 uses])
(note 539 538 551 84 [bb 84] NOTE_INSN_BASIC_BLOCK)
(note 551 539 552 84 NOTE_INSN_DELETED)
(note 552 551 540 84 NOTE_INSN_DELETED)
(insn:TI 540 552 541 84 (set (mem:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [0  S4 A32])
        (const:SI (plus:SI (symbol_ref:SI ("s") [flags 0x2]  <var_decl 06d9cd20 s>)
                (const_int 4 [0x4])))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1696 90 {*movsi_internal}
     (nil))
(insn 541 540 542 84 (set (mem:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [0  S4 A32])
        (reg:SI 1 dx [orig:434 __res+4 ] [434])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1696 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [orig:434 __res+4 ] [434])
        (nil)))
(insn:TI 542 541 544 84 (set (mem:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [0  S4 A32])
        (reg/f:SI 3 bx [orig:181 __i$_M_node ] [181])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1696 90 {*movsi_internal}
     (nil))
(insn 544 542 545 84 (set (mem:SI (reg/f:SI 7 sp) [0  S4 A32])
        (reg:SI 0 ax [orig:386 __insert_left ] [386])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1697 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:386 __insert_left ] [386])
        (nil)))
(call_insn:TI 545 544 553 84 (call (mem:QI (symbol_ref:SI ("_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_") [flags 0x43]  <function_decl 06b77200 _Rb_tree_insert_and_rebalance>) [0 _Rb_tree_insert_and_rebalance S1 A8])
        (const_int 16 [0x10])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1696 641 {*call}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (mem:SI (reg/f:SI 7 sp) [0  S4 A32]))
        (expr_list:SI (use (mem/f:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 4 [0x4])) [0  S4 A32]))
            (expr_list:SI (use (mem/f:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 8 [0x8])) [0  S4 A32]))
                (expr_list:SI (use (mem/f:SI (plus:SI (reg/f:SI 7 sp)
                                (const_int 12 [0xc])) [0  S4 A32]))
                    (nil))))))
(insn:TI 553 545 561 84 (parallel [
            (set (mem/c:SI (const:SI (plus:SI (symbol_ref:SI ("s") [flags 0x2]  <var_decl 06d9cd20 s>)
                            (const_int 20 [0x14]))) [21 MEM[(struct _Rb_tree *)&s]._M_impl._M_node_count+0 S4 A32])
                (plus:SI (mem/c:SI (const:SI (plus:SI (symbol_ref:SI ("s") [flags 0x2]  <var_decl 06d9cd20 s>)
                                (const_int 20 [0x14]))) [21 MEM[(struct _Rb_tree *)&s]._M_impl._M_node_count+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1698 220 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
;;  succ:       85 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame]

;; basic block 85, loop depth 0, count 0, freq 78, maybe hot
;;  prev block 84, next block 86, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       84 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              79 [50.0%]  (CAN_FALLTHRU)
;;              78 [50.0%]  (CAN_FALLTHRU)
;;              104 [100.0%]  (CAN_FALLTHRU)
;; bb 85 artificial_defs: { }
;; bb 85 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	 17 [flags]
(code_label 561 553 562 85 165 "" [3 uses])
(note 562 561 1213 85 [bb 85] NOTE_INSN_BASIC_BLOCK)
(note 1213 562 1286 85 NOTE_INSN_DELETED)
(note 1286 1213 1287 85 NOTE_INSN_DELETED)
(note 1287 1286 1214 85 NOTE_INSN_DELETED)
(note 1214 1287 563 85 NOTE_INSN_DELETED)
(insn:TI 563 1214 564 85 (set (mem:SI (plus:SI (reg/f:SI 3 bx [orig:181 __i$_M_node ] [181])
                (const_int 24 [0x18])) [21 MEM[(mapped_type &)__i$_M_node_365 + 24]+0 S4 A32])
        (const_int 1 [0x1])) D:\LHX\7.5 contest\t1.cpp:53 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 3 bx [orig:181 __i$_M_node ] [181])
        (nil)))
(insn 564 563 1616 85 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 6 bp)
                        (const_int -80 [0xffffffffffffffb0])) [45 %sfp+-56 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 6 bp)
                            (const_int -80 [0xffffffffffffffb0])) [45 %sfp+-56 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) D:\LHX\7.5 contest\t1.cpp:53 220 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(jump_insn 1616 564 1617 85 (set (pc)
        (label_ref 721)) 636 {jump}
     (nil)
 -> 721)
;;  succ:       53 [100.0%]  (CAN_FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 20 [frame]

(barrier 1617 1616 685)
;; basic block 86, loop depth 0, count 0, freq 45, maybe hot
;;  prev block 85, next block 87, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       67 [50.0%]  (CAN_FALLTHRU)
;;              64 [6.6%]  (CAN_FALLTHRU)
;;              65 [50.0%]  (CAN_FALLTHRU)
;;              58 [100.0%]  (CAN_FALLTHRU)
;; bb 86 artificial_defs: { }
;; bb 86 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 1 [dx] 2 [cx] 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;; live  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 7 [sp] 17 [flags]
;; live  kill	 17 [flags]
(code_label 685 1617 686 86 147 "" [4 uses])
(note 686 685 688 86 [bb 86] NOTE_INSN_BASIC_BLOCK)
(insn:TI 688 686 1276 86 (set (mem:SI (reg/f:SI 7 sp) [0  S4 A32])
        (const_int 32 [0x20])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/ext/new_allocator.h:104 90 {*movsi_internal}
     (nil))
(insn 1276 688 1347 86 (set (mem/c:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [45 %sfp+-40 S4 A32])
        (reg/f:SI 1 dx [orig:186 __i$_M_node ] [186])) 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 1 dx [orig:186 __i$_M_node ] [186])
        (nil)))
(insn:TI 1347 1276 1348 86 (set (mem/c:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -72 [0xffffffffffffffb8])) [45 %sfp+-48 S4 A64])
        (reg:SI 2 cx [orig:117 t2 ] [117])) 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 2 cx [orig:117 t2 ] [117])
        (nil)))
(insn 1348 1347 689 86 (set (mem/c:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -68 [0xffffffffffffffbc])) [45 %sfp+-44 S4 A32])
        (reg:SI 3 bx [ t2+4 ])) 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 3 bx [ t2+4 ])
        (nil)))
(call_insn:TI 689 1348 1349 86 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("_Znwj") [flags 0x43]  <function_decl 01938d00 operator new>) [0 operator new S1 A8])
            (const_int 4 [0x4]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/ext/new_allocator.h:104 648 {*call_value}
     (nil)
    (expr_list:SI (use (mem:SI (reg/f:SI 7 sp) [0  S4 A32]))
        (nil)))
(insn:TI 1349 689 1350 86 (set (reg:SI 2 cx [orig:117 t2 ] [117])
        (mem/c:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -72 [0xffffffffffffffb8])) [45 %sfp+-48 S4 A64])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/tuple:1102 90 {*movsi_internal}
     (nil))
(insn 1350 1349 1277 86 (set (reg:SI 3 bx [ t2+4 ])
        (mem/c:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -68 [0xffffffffffffffbc])) [45 %sfp+-44 S4 A32])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/tuple:1102 90 {*movsi_internal}
     (nil))
(insn:TI 1277 1350 692 86 (set (reg/f:SI 1 dx [orig:186 __i$_M_node ] [186])
        (mem/c:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [45 %sfp+-40 S4 A32])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1794 90 {*movsi_internal}
     (nil))
(insn 692 1277 1273 86 (set (mem:SI (plus:SI (reg/f:SI 0 ax [orig:209 __i$_M_node ] [209])
                (const_int 24 [0x18])) [21 MEM[(struct pair *)__i$_M_node_241 + 16B].second+0 S4 A64])
        (const_int 0 [0])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/tuple:1102 90 {*movsi_internal}
     (nil))
(insn:TI 1273 692 693 86 (set (mem/c:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -60 [0xffffffffffffffc4])) [45 %sfp+-36 S4 A32])
        (reg/f:SI 0 ax [orig:209 __i$_M_node ] [209])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/ext/new_allocator.h:104 90 {*movsi_internal}
     (nil))
(insn 693 1273 1351 86 (parallel [
            (set (reg/f:SI 0 ax [orig:422 D.83232 ] [422])
                (plus:SI (reg/f:SI 0 ax [orig:209 __i$_M_node ] [209])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/ext/aligned_buffer.h:53 220 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUIV (mem:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 4 [0x4])) [0  S4 A32])
            (nil))))
(insn:TI 1351 693 1352 86 (set (mem:SI (reg/f:SI 0 ax [orig:209 __i$_M_node ] [209]) [34 MEM[(struct pair *)__i$_M_node_241 + 16B].first+0 S4 A64])
        (reg:SI 2 cx [orig:117 t2 ] [117])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/tuple:1102 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 2 cx [orig:117 t2 ] [117])
        (nil)))
(insn 1352 1351 696 86 (set (mem:SI (plus:SI (reg/f:SI 0 ax [orig:209 __i$_M_node ] [209])
                (const_int 4 [0x4])) [34 MEM[(struct pair *)__i$_M_node_241 + 16B].first+4 S4 A32])
        (reg:SI 3 bx [ t2+4 ])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/tuple:1102 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 3 bx [ t2+4 ])
        (nil)))
(insn 696 1352 694 86 (set (reg:SI 2 cx)
        (symbol_ref:SI ("s") [flags 0x2]  <var_decl 06d9cd20 s>)) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1794 90 {*movsi_internal}
     (nil))
(insn:TI 694 696 695 86 (set (mem:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [0  S4 A32])
        (reg/f:SI 0 ax [orig:422 D.83232 ] [422])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1794 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 0 ax [orig:422 D.83232 ] [422])
        (nil)))
(insn 695 694 697 86 (set (mem:SI (reg/f:SI 7 sp) [0  S4 A32])
        (reg/f:SI 1 dx [orig:186 __i$_M_node ] [186])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1794 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 1 dx [orig:186 __i$_M_node ] [186])
        (nil)))
(call_insn:TI 697 695 698 86 (parallel [
            (set (reg:DI 0 ax)
                (call (mem:QI (symbol_ref:SI ("_ZNSt8_Rb_treeIySt4pairIKyiESt10_Select1stIS2_ESt4lessIyESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERS1_") [flags 0x3]  <function_decl 06e17d80 _M_get_insert_hint_unique_pos>) [0 _M_get_insert_hint_unique_pos S1 A8])
                    (const_int 8 [0x8])))
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 8 [0x8])))
        ]) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1794 653 {*call_value_pop}
     (expr_list:REG_DEAD (reg:SI 2 cx)
        (expr_list:REG_ARGS_SIZE (const_int -8 [0xfffffffffffffff8])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 2 cx))
        (expr_list:SI (use (mem:SI (reg/f:SI 7 sp) [0  S4 A32]))
            (expr_list:SI (use (mem/f:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 4 [0x4])) [0  S4 A32]))
                (nil)))))
(insn:TI 698 697 703 86 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1794 220 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 703 698 704 86 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:436 __res+4 ] [436])
            (const_int 0 [0]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1796 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn:TI 704 703 433 86 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 1618)
            (pc))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1796 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 2163 (nil)))
 -> 1618)
;;  succ:       87 [78.4%]  (FALLTHRU,CAN_FALLTHRU)
;;              103 [21.6%]  (CAN_FALLTHRU)
;; lr  out 	 0 [ax] 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 0 [ax] 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]

;; basic block 87, loop depth 0, count 0, freq 5
;;  prev block 86, next block 88, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       86 [78.4%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 87 artificial_defs: { }
;; bb 87 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 17 [flags]
;; live  kill	
(note 433 704 434 87 [bb 87] NOTE_INSN_BASIC_BLOCK)
(note 434 433 435 87 NOTE_INSN_DELETED)
(note 435 434 436 87 NOTE_INSN_DELETED)
(insn:TI 436 435 33 87 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:435 __res ] [435])
            (const_int 0 [0]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1694 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:435 __res ] [435])
        (nil)))
(insn 33 436 437 87 (set (reg:SI 0 ax)
        (const_int 1 [0x1])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1694 90 {*movsi_internal}
     (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))
(jump_insn:TI 437 33 835 87 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 454)
            (pc))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1694 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 507 (nil)))
 -> 454)
;;  succ:       90 [5.1%]  (CAN_FALLTHRU)
;;              88 [94.9%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 0 [ax] 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]

;; basic block 88, loop depth 0, count 0, freq 5
;;  prev block 87, next block 89, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       87 [94.9%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 88 artificial_defs: { }
;; bb 88 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 1 [dx] 6 [bp] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 17 [flags]
;; live  kill	
(note 835 437 438 88 [bb 88] NOTE_INSN_BASIC_BLOCK)
(note 438 835 439 88 NOTE_INSN_DELETED)
(note 439 438 440 88 NOTE_INSN_DELETED)
(insn:TI 440 439 441 88 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:436 __res+4 ] [436])
            (const:SI (plus:SI (symbol_ref:SI ("s") [flags 0x2]  <var_decl 06d9cd20 s>)
                    (const_int 4 [0x4]))))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1694 7 {*cmpsi_1}
     (nil))
(jump_insn:TI 441 440 442 88 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 454)
            (pc))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1694 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 534 (nil)))
 -> 454)
;;  succ:       90 [5.3%]  (CAN_FALLTHRU)
;;              89 [94.7%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 0 [ax] 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]

;; basic block 89, loop depth 0, count 0, freq 5
;;  prev block 88, next block 90, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       88 [94.7%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 89 artificial_defs: { }
;; bb 89 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 1 [dx] 6 [bp] 7 [sp]
;; lr  def 	 2 [cx] 3 [bx] 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 2 [cx] 3 [bx] 17 [flags]
;; live  kill	
(note 442 441 868 89 [bb 89] NOTE_INSN_BASIC_BLOCK)
(note 868 442 1263 89 NOTE_INSN_DELETED)
(insn:TI 1263 868 867 89 (set (reg/f:SI 3 bx [orig:209 __i$_M_node ] [209])
        (mem/c:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -60 [0xffffffffffffffc4])) [45 %sfp+-36 S4 A32])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1694 90 {*movsi_internal}
     (nil))
(insn:TI 867 1263 1280 89 (set (reg:SI 2 cx [orig:443 MEM[(const long long unsigned int &)__i$_M_node_241 + 16] ] [443])
        (mem:SI (plus:SI (reg/f:SI 3 bx [orig:209 __i$_M_node ] [209])
                (const_int 16 [0x10])) [34 MEM[(const long long unsigned int &)__i$_M_node_241 + 16]+0 S4 A64])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1694 90 {*movsi_internal}
     (nil))
(insn:TI 1280 867 1208 89 (set (mem/c:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -72 [0xffffffffffffffb8])) [45 %sfp+-48 S4 A64])
        (reg:SI 2 cx [orig:443 MEM[(const long long unsigned int &)__i$_M_node_241 + 16] ] [443])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1694 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 2 cx [orig:443 MEM[(const long long unsigned int &)__i$_M_node_241 + 16] ] [443])
        (nil)))
(insn 1208 1280 445 89 (set (reg:SI 2 cx [557])
        (mem:SI (plus:SI (reg:SI 1 dx [orig:436 __res+4 ] [436])
                (const_int 20 [0x14])) [34 MEM[(const long long unsigned int &)__res$second_239 + 16]+4 S4 A32])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1694 90 {*movsi_internal}
     (nil))
(insn:TI 445 1208 446 89 (set (reg:CC 17 flags)
        (compare:CC (mem:SI (plus:SI (reg/f:SI 3 bx [orig:209 __i$_M_node ] [209])
                    (const_int 20 [0x14])) [34 MEM[(const long long unsigned int &)__i$_M_node_241 + 16]+4 S4 A32])
            (reg:SI 2 cx [557]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1694 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg/f:SI 3 bx [orig:209 __i$_M_node ] [209])
        (expr_list:REG_DEAD (reg:SI 2 cx [557])
            (nil))))
(jump_insn:TI 446 445 454 89 (set (pc)
        (if_then_else (geu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 1619)
            (pc))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1694 596 {*jcc_1}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 1619)
;;  succ:       90 [50.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              105 [50.0%]  (CAN_FALLTHRU)
;; lr  out 	 0 [ax] 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 20 [frame]
;; live  out 	 0 [ax] 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 20 [frame]

;; basic block 90, loop depth 0, count 0, freq 24, maybe hot
;;  prev block 89, next block 91, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       88 [5.3%]  (CAN_FALLTHRU)
;;              106 [50.0%]  (CAN_FALLTHRU)
;;              89 [50.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              87 [5.1%]  (CAN_FALLTHRU)
;;              107 [100.0%]  (CAN_FALLTHRU)
;; bb 90 artificial_defs: { }
;; bb 90 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 0 [ax] 1 [dx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;; live  in  	 0 [ax] 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 3 [bx]
;; live  kill	 17 [flags]
(code_label 454 446 455 90 154 "" [4 uses])
(note 455 454 467 90 [bb 90] NOTE_INSN_BASIC_BLOCK)
(note 467 455 468 90 NOTE_INSN_DELETED)
(note 468 467 1209 90 NOTE_INSN_DELETED)
(insn:TI 1209 468 456 90 (set (reg/f:SI 3 bx [orig:209 __i$_M_node ] [209])
        (mem/c:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -60 [0xffffffffffffffc4])) [45 %sfp+-36 S4 A32])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1696 90 {*movsi_internal}
     (nil))
(insn 456 1209 457 90 (set (mem:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 12 [0xc])) [0  S4 A32])
        (const:SI (plus:SI (symbol_ref:SI ("s") [flags 0x2]  <var_decl 06d9cd20 s>)
                (const_int 4 [0x4])))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1696 90 {*movsi_internal}
     (nil))
(insn:TI 457 456 460 90 (set (mem:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [0  S4 A32])
        (reg:SI 1 dx [orig:436 __res+4 ] [436])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1696 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [orig:436 __res+4 ] [436])
        (nil)))
(insn 460 457 458 90 (set (mem:SI (reg/f:SI 7 sp) [0  S4 A32])
        (reg:SI 0 ax [orig:374 __insert_left ] [374])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1697 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:374 __insert_left ] [374])
        (nil)))
(insn:TI 458 460 461 90 (set (mem:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [0  S4 A32])
        (reg/f:SI 3 bx [orig:209 __i$_M_node ] [209])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1696 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 3 bx [orig:209 __i$_M_node ] [209])
        (nil)))
(call_insn:TI 461 458 469 90 (call (mem:QI (symbol_ref:SI ("_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_") [flags 0x43]  <function_decl 06b77200 _Rb_tree_insert_and_rebalance>) [0 _Rb_tree_insert_and_rebalance S1 A8])
        (const_int 16 [0x10])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1696 641 {*call}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (mem:SI (reg/f:SI 7 sp) [0  S4 A32]))
        (expr_list:SI (use (mem/f:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 4 [0x4])) [0  S4 A32]))
            (expr_list:SI (use (mem/f:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 8 [0x8])) [0  S4 A32]))
                (expr_list:SI (use (mem/f:SI (plus:SI (reg/f:SI 7 sp)
                                (const_int 12 [0xc])) [0  S4 A32]))
                    (nil))))))
(insn:TI 469 461 475 90 (parallel [
            (set (mem/c:SI (const:SI (plus:SI (symbol_ref:SI ("s") [flags 0x2]  <var_decl 06d9cd20 s>)
                            (const_int 20 [0x14]))) [21 MEM[(struct _Rb_tree *)&s]._M_impl._M_node_count+0 S4 A32])
                (plus:SI (mem/c:SI (const:SI (plus:SI (symbol_ref:SI ("s") [flags 0x2]  <var_decl 06d9cd20 s>)
                                (const_int 20 [0x14]))) [21 MEM[(struct _Rb_tree *)&s]._M_impl._M_node_count+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1698 220 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
;;  succ:       91 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]

;; basic block 91, loop depth 0, count 0, freq 30, maybe hot
;;  prev block 90, next block 92, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       90 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              103 [100.0%]  (CAN_FALLTHRU)
;; bb 91 artificial_defs: { }
;; bb 91 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 17 [flags]
;; live  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 17 [flags]
;; live  kill	
(code_label 475 469 476 91 157 "" [1 uses])
(note 476 475 1211 91 [bb 91] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1211 476 1481 91 (set (reg/f:SI 0 ax [orig:209 __i$_M_node ] [209])
        (mem/c:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -60 [0xffffffffffffffc4])) [45 %sfp+-36 S4 A32])) D:\LHX\7.5 contest\t1.cpp:53 90 {*movsi_internal}
     (nil))
(insn:TI 1481 1211 1482 91 (set (reg:SI 1 dx)
        (mem:SI (plus:SI (reg/f:SI 0 ax [orig:209 __i$_M_node ] [209])
                (const_int 24 [0x18])) [21 MEM[(mapped_type &)__i$_M_node_368 + 24]+0 S4 A32])) D:\LHX\7.5 contest\t1.cpp:53 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 0 ax [orig:209 __i$_M_node ] [209])
        (nil)))
(insn:TI 1482 1481 478 91 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx)
            (const_int 0 [0]))) D:\LHX\7.5 contest\t1.cpp:53 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 1 dx)
        (nil)))
(jump_insn:TI 478 1482 710 91 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 721)
            (pc))) D:\LHX\7.5 contest\t1.cpp:53 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 721)
;;  succ:       92 [50.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              53 [50.0%]  (CAN_FALLTHRU)
;; lr  out 	 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]

;; basic block 92, loop depth 0, count 0, freq 39, maybe hot
;;  prev block 91, next block 93, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       91 [50.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 92 artificial_defs: { }
;; bb 92 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
;; live  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 17 [flags]
;; live  kill	
(note 710 478 712 92 [bb 92] NOTE_INSN_BASIC_BLOCK)
(insn:TI 712 710 714 92 (set (reg/f:SI 0 ax [orig:165 __i$_M_node ] [165])
        (mem/f/c:SI (const:SI (plus:SI (symbol_ref:SI ("s") [flags 0x2]  <var_decl 06d9cd20 s>)
                    (const_int 8 [0x8]))) [6 MEM[(struct _Rb_tree_node_base * *)&s + 8B]+0 S4 A32])) 90 {*movsi_internal}
     (nil))
(insn:TI 714 712 715 92 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:SI 0 ax [orig:165 __i$_M_node ] [165])
            (const_int 0 [0]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1260 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn:TI 715 714 718 92 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 713)
            (pc))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1260 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 9100 (nil)))
 -> 713)
;;  succ:       70 [91.0%]  (CAN_FALLTHRU)
;;              93 [9.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 0 [ax] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]

;; basic block 93, loop depth 0, count 0, freq 4
;;  prev block 92, next block 94, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       92 [9.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 93 artificial_defs: { }
;; bb 93 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 3 [bx]
;; live  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 3 [bx]
;; live  kill	
(note 718 715 885 93 [bb 93] NOTE_INSN_BASIC_BLOCK)
(insn:TI 885 718 1620 93 (set (reg/f:SI 3 bx [orig:181 __i$_M_node ] [181])
        (const:SI (plus:SI (symbol_ref:SI ("s") [flags 0x2]  <var_decl 06d9cd20 s>)
                (const_int 4 [0x4])))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1260 90 {*movsi_internal}
     (nil))
(jump_insn 1620 885 1621 93 (set (pc)
        (label_ref 724)) 636 {jump}
     (nil)
 -> 724)
;;  succ:       80 [100.0%]  (CAN_FALLTHRU)
;; lr  out 	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]

(barrier 1621 1620 1117)
;; basic block 94, loop depth 0, count 0, freq 24, maybe hot
;;  prev block 93, next block 95, flags: (REACHABLE, RTL)
;;  pred:       53 [9.0%]  (CAN_FALLTHRU,LOOP_EXIT)
;; bb 94 artificial_defs: { }
;; bb 94 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
(code_label 1117 1621 1116 94 232 "" [1 uses])
(note 1116 1117 1104 94 [bb 94] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1104 1116 578 94 (set (mem/c:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -60 [0xffffffffffffffc4])) [45 %sfp+-36 S4 A32])
        (reg:SI 0 ax [orig:451 j ] [451])) 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:451 j ] [451])
        (nil)))
;;  succ:       95 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 95, loop depth 0, count 0, freq 27, maybe hot
;;  prev block 94, next block 96, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       94 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              111 [100.0%]  (CAN_FALLTHRU)
;; bb 95 artificial_defs: { }
;; bb 95 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 2 [cx] 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 2 [cx] 17 [flags]
;; live  kill	
(code_label 578 1104 579 95 134 "" [1 uses])
(note 579 578 1218 95 [bb 95] NOTE_INSN_BASIC_BLOCK)
(note 1218 579 1283 95 NOTE_INSN_DELETED)
(note 1283 1218 580 95 NOTE_INSN_DELETED)
(insn:TI 580 1283 581 95 (set (reg:SI 2 cx [orig:252 D.83218 ] [252])
        (mem/c:SI (symbol_ref:SI ("ans") [flags 0x2]  <var_decl 06eeb600 ans>) [21 ans+0 S4 A32])) D:\LHX\7.5 contest\t1.cpp:56 90 {*movsi_internal}
     (nil))
(insn 581 580 582 95 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 2 cx [orig:252 D.83218 ] [252])
            (mem/c:SI (plus:SI (reg/f:SI 6 bp)
                    (const_int -80 [0xffffffffffffffb0])) [45 %sfp+-56 S4 A32]))) D:\LHX\7.5 contest\t1.cpp:56 7 {*cmpsi_1}
     (nil))
(jump_insn:TI 582 581 598 95 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 1622)
            (pc))) D:\LHX\7.5 contest\t1.cpp:56 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (int_list:REG_BR_PROB 2900 (nil)))
 -> 1622)
;;  succ:       102 [29.0%]  (CAN_FALLTHRU)
;;              96 [71.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 2 [cx] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 2 [cx] 6 [bp] 7 [sp] 20 [frame]

;; basic block 96, loop depth 0, count 0, freq 19, maybe hot
;;  prev block 95, next block 97, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       95 [71.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 96 artificial_defs: { }
;; bb 96 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 2 [cx] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 2 [cx] 6 [bp] 7 [sp]
;; lr  def 	 5 [di] 17 [flags]
;; live  in  	 2 [cx] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 5 [di] 17 [flags]
;; live  kill	
(note 598 582 1222 96 [bb 96] NOTE_INSN_BASIC_BLOCK)
(note 1222 598 1282 96 NOTE_INSN_DELETED)
(note 1282 1222 599 96 NOTE_INSN_DELETED)
(insn:TI 599 1282 903 96 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:SI (reg/f:SI 6 bp)
                    (const_int -80 [0xffffffffffffffb0])) [45 %sfp+-56 S4 A32])
            (reg:SI 2 cx [orig:252 D.83218 ] [252]))) D:\LHX\7.5 contest\t1.cpp:60 7 {*cmpsi_1}
     (nil))
(insn 903 599 600 96 (set (reg:SI 5 di [orig:449 D.83218 ] [449])
        (mem/c:SI (symbol_ref:SI ("n") [flags 0x2]  <var_decl 06e5d660 n>) [21 n+0 S4 A32])) 90 {*movsi_internal}
     (nil))
(jump_insn:TI 600 903 1469 96 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 608)
            (pc))) D:\LHX\7.5 contest\t1.cpp:60 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 8629 (nil)))
 -> 608)
;;  succ:       97 [13.7%]  (FALLTHRU,CAN_FALLTHRU)
;;              24 [86.3%]  (CAN_FALLTHRU)
;; lr  out 	 2 [cx] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 2 [cx] 5 [di] 6 [bp] 7 [sp] 20 [frame]

;; basic block 97, loop depth 0, count 0, freq 11, maybe hot
;;  prev block 96, next block 98, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       96 [13.7%]  (FALLTHRU,CAN_FALLTHRU)
;;              102 [100.0%]  (CAN_FALLTHRU)
;; bb 97 artificial_defs: { }
;; bb 97 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 2 [cx] 3 [bx] 5 [di] 7 [sp] 17 [flags]
;; live  kill	 17 [flags]
(code_label 1469 600 601 97 234 "" [1 uses])
(note 601 1469 1223 97 [bb 97] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1223 601 604 97 (set (reg:SI 0 ax [570])
        (plus:SI (reg/f:SI 6 bp)
            (const_int -28 [0xffffffffffffffe4]))) D:\LHX\7.5 contest\t1.cpp:60 213 {*leasi}
     (nil))
(insn 604 1223 603 97 (set (reg:SI 2 cx)
        (symbol_ref:SI ("num") [flags 0x2]  <var_decl 06e5dae0 num>)) D:\LHX\7.5 contest\t1.cpp:60 90 {*movsi_internal}
     (nil))
(insn:TI 603 604 605 97 (set (mem/f:SI (reg/f:SI 7 sp) [0  S4 A32])
        (reg:SI 0 ax [570])) D:\LHX\7.5 contest\t1.cpp:60 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [570])
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 20 frame)
                (const_int -4 [0xfffffffffffffffc]))
            (nil))))
(call_insn:TI 605 603 905 97 (parallel [
            (call (mem:QI (symbol_ref:SI ("_ZNSt6vectorIiSaIiEE9push_backERKi") [flags 0x3]  <function_decl 06ec8400 push_back>) [0 push_back S1 A8])
                (const_int 4 [0x4]))
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 4 [0x4])))
        ]) D:\LHX\7.5 contest\t1.cpp:60 646 {*call_pop}
     (expr_list:REG_DEAD (reg:SI 2 cx)
        (expr_list:REG_ARGS_SIZE (const_int -4 [0xfffffffffffffffc])
            (nil)))
    (expr_list:SI (use (reg:SI 2 cx))
        (expr_list:SI (use (mem/f:SI (reg/f:SI 7 sp) [0  S4 A32]))
            (nil))))
(insn:TI 905 605 904 97 (set (reg:SI 0 ax [orig:451 j ] [451])
        (mem/c:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [21 j+0 S4 A32])) 90 {*movsi_internal}
     (nil))
(insn 904 905 606 97 (set (reg:SI 5 di [orig:449 D.83218 ] [449])
        (mem/c:SI (symbol_ref:SI ("n") [flags 0x2]  <var_decl 06e5d660 n>) [21 n+0 S4 A32])) 90 {*movsi_internal}
     (nil))
(insn 606 904 607 97 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) D:\LHX\7.5 contest\t1.cpp:60 220 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn:TI 607 606 1224 97 (set (reg:SI 2 cx [orig:252 D.83218 ] [252])
        (mem/c:SI (symbol_ref:SI ("ans") [flags 0x2]  <var_decl 06eeb600 ans>) [21 ans+0 S4 A32])) 90 {*movsi_internal}
     (nil))
(insn:TI 1224 607 1584 97 (set (mem/c:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -60 [0xffffffffffffffc4])) [45 %sfp+-36 S4 A32])
        (reg:SI 0 ax [orig:451 j ] [451])) 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:451 j ] [451])
        (nil)))
(insn 1584 1224 1585 97 (set (reg:SI 3 bx [orig:125 D.83218 ] [125])
        (mem/c:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -60 [0xffffffffffffffc4])) [45 %sfp+-36 S4 A32])) D:\LHX\7.5 contest\t1.cpp:45 90 {*movsi_internal}
     (nil))
(insn:TI 1585 1584 1587 97 (parallel [
            (set (reg:SI 3 bx [orig:125 D.83218 ] [125])
                (plus:SI (reg:SI 3 bx [orig:125 D.83218 ] [125])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) D:\LHX\7.5 contest\t1.cpp:45 220 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:SI (reg/f:SI 20 frame)
                        (const_int -4 [0xfffffffffffffffc])) [21 j+0 S4 A32])
                (const_int 1 [0x1]))
            (nil))))
(insn:TI 1587 1585 1586 97 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 5 di [orig:449 D.83218 ] [449])
            (reg:SI 3 bx [orig:125 D.83218 ] [125]))) D:\LHX\7.5 contest\t1.cpp:45 7 {*cmpsi_1}
     (nil))
(insn 1586 1587 1588 97 (set (mem/c:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [21 j+0 S4 A32])
        (reg:SI 3 bx [orig:125 D.83218 ] [125])) D:\LHX\7.5 contest\t1.cpp:45 90 {*movsi_internal}
     (nil))
(jump_insn:TI 1588 1586 617 97 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 941)
            (pc))) D:\LHX\7.5 contest\t1.cpp:45 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (int_list:REG_BR_PROB 9100 (nil)))
 -> 941)
;;  succ:       25 [91.0%]  (DFS_BACK,CAN_FALLTHRU)
;;              98 [9.0%]  (FALLTHRU,CAN_FALLTHRU,LOOP_EXIT)
;; lr  out 	 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 20 [frame]

;; basic block 98, loop depth 0, count 0, freq 9, maybe hot
;;  prev block 97, next block 99, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       24 [9.0%]  (CAN_FALLTHRU,LOOP_EXIT)
;;              97 [9.0%]  (FALLTHRU,CAN_FALLTHRU,LOOP_EXIT)
;;              114 [100.0%]  (CAN_FALLTHRU)
;; bb 98 artificial_defs: { }
;; bb 98 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 2 [cx] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 2 [cx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;; live  in  	 2 [cx] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 17 [flags]
;; live  kill	 17 [flags]
(code_label 617 1588 618 98 129 "" [2 uses])
(note 618 617 631 98 [bb 98] NOTE_INSN_BASIC_BLOCK)
(note 631 618 621 98 NOTE_INSN_DELETED)
(insn:TI 621 631 622 98 (set (reg/f:SI 0 ax [orig:404 MEM[(int * *)&num + 4B] ] [404])
        (mem/f/c:SI (const:SI (plus:SI (symbol_ref:SI ("num") [flags 0x2]  <var_decl 06e5dae0 num>)
                    (const_int 4 [0x4]))) [6 MEM[(int * *)&num + 4B]+0 S4 A32])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_vector.h:655 90 {*movsi_internal}
     (expr_list:REG_EQUIV (mem/f/c:SI (const:SI (plus:SI (symbol_ref:SI ("num") [flags 0x2]  <var_decl 06e5dae0 num>)
                    (const_int 4 [0x4]))) [6 MEM[(int * *)&num + 4B]+0 S4 A32])
        (nil)))
(insn 622 621 1479 98 (parallel [
            (set (reg:SI 0 ax [orig:403 D.83218 ] [403])
                (minus:SI (reg/f:SI 0 ax [orig:404 MEM[(int * *)&num + 4B] ] [404])
                    (mem/f/c:SI (symbol_ref:SI ("num") [flags 0x2]  <var_decl 06e5dae0 num>) [6 MEM[(int * *)&num]+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_vector.h:655 263 {*subsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 1479 622 625 98 (parallel [
            (set (reg/v:SI 3 bx [orig:132 i ] [132])
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) D:\LHX\7.5 contest\t1.cpp:63 82 {*movsi_xor}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn:TI 625 1479 626 98 (set (mem:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [0  S4 A32])
        (reg:SI 2 cx [orig:252 D.83218 ] [252])) D:\LHX\7.5 contest\t1.cpp:62 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 2 cx [orig:252 D.83218 ] [252])
        (nil)))
(insn 626 625 623 98 (set (mem:SI (reg/f:SI 7 sp) [0  S4 A32])
        (symbol_ref/f:SI ("*LC0") [flags 0x2]  <var_decl 07609ae0 *LC0>)) D:\LHX\7.5 contest\t1.cpp:62 90 {*movsi_internal}
     (nil))
(insn:TI 623 626 624 98 (parallel [
            (set (reg:SI 0 ax [orig:406 D.83218 ] [406])
                (ashiftrt:SI (reg:SI 0 ax [orig:403 D.83218 ] [403])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_vector.h:655 530 {*ashrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn:TI 624 623 627 98 (set (mem:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 8 [0x8])) [0  S4 A32])
        (reg:SI 0 ax [orig:406 D.83218 ] [406])) D:\LHX\7.5 contest\t1.cpp:62 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:406 D.83218 ] [406])
        (nil)))
(call_insn:TI 627 624 629 98 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("_ZL6printfPKcz") [flags 0x3]  <function_decl 018c8600 printf>) [0 printf S1 A8])
            (const_int 12 [0xc]))) D:\LHX\7.5 contest\t1.cpp:62 648 {*call_value}
     (expr_list:REG_UNUSED (reg:SI 0 ax)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:SI (use (mem/f:SI (reg/f:SI 7 sp) [0  S4 A32]))
        (expr_list:SI (use (mem:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 4 [0x4])) [0  S4 A32]))
            (expr_list:SI (use (mem:SI (plus:SI (reg/f:SI 7 sp)
                            (const_int 8 [0x8])) [0  S4 A32]))
                (nil)))))
(insn:TI 629 627 1227 98 (set (reg/f:SI 1 dx [orig:129 D.83222 ] [129])
        (mem/f/c:SI (symbol_ref:SI ("num") [flags 0x2]  <var_decl 06e5dae0 num>) [6 MEM[(int * *)&num]+0 S4 A32])) 90 {*movsi_internal}
     (nil))
(insn 1227 629 632 98 (set (reg:SI 0 ax [orig:409 D.83218 ] [409])
        (mem/f/c:SI (const:SI (plus:SI (symbol_ref:SI ("num") [flags 0x2]  <var_decl 06e5dae0 num>)
                    (const_int 4 [0x4]))) [6 MEM[(int * *)&num + 4B]+0 S4 A32])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_vector.h:655 90 {*movsi_internal}
     (nil))
(insn:TI 632 1227 633 98 (parallel [
            (set (reg:SI 0 ax [orig:409 D.83218 ] [409])
                (minus:SI (reg:SI 0 ax [orig:409 D.83218 ] [409])
                    (reg/f:SI 1 dx [orig:129 D.83222 ] [129])))
            (clobber (reg:CC 17 flags))
        ]) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_vector.h:655 263 {*subsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn:TI 633 632 634 98 (parallel [
            (set (reg:SI 0 ax [orig:412 D.83218 ] [412])
                (ashiftrt:SI (reg:SI 0 ax [orig:409 D.83218 ] [409])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_vector.h:655 530 {*ashrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn:TI 634 633 635 98 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:412 D.83218 ] [412])
            (const_int 0 [0]))) D:\LHX\7.5 contest\t1.cpp:63 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:412 D.83218 ] [412])
        (nil)))
(jump_insn:TI 635 634 939 98 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 1032)
            (pc))) D:\LHX\7.5 contest\t1.cpp:63 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 900 (nil)))
 -> 1032)
;;  succ:       99 [91.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              100 [9.0%]  (CAN_FALLTHRU)
;; lr  out 	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame]

;; basic block 99, loop depth 0, count 0, freq 92, maybe hot
;;  prev block 98, next block 100, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       98 [91.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              99 [91.0%]  (DFS_BACK,CAN_FALLTHRU)
;; bb 99 artificial_defs: { }
;; bb 99 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 1 [dx] 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;; live  in  	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 17 [flags]
;; live  kill	 17 [flags]
(code_label 939 635 938 99 208 "" [1 uses])
(note 938 939 652 99 [bb 99] NOTE_INSN_BASIC_BLOCK)
(note 652 938 643 99 NOTE_INSN_DELETED)
(insn:TI 643 652 645 99 (set (reg:SI 0 ax [orig:414 *_120 ] [414])
        (mem:SI (plus:SI (mult:SI (reg/v:SI 3 bx [orig:132 i ] [132])
                    (const_int 4 [0x4]))
                (reg/f:SI 1 dx [orig:129 D.83222 ] [129])) [21 *_120+0 S4 A32])) D:\LHX\7.5 contest\t1.cpp:63 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 1 dx [orig:129 D.83222 ] [129])
        (expr_list:REG_EQUIV (mem:SI (plus:SI (reg/f:SI 7 sp)
                    (const_int 4 [0x4])) [0  S4 A32])
            (nil))))
(insn 645 643 647 99 (set (mem:SI (reg/f:SI 7 sp) [0  S4 A32])
        (symbol_ref/f:SI ("*LC1") [flags 0x2]  <var_decl 07609b40 *LC1>)) D:\LHX\7.5 contest\t1.cpp:63 90 {*movsi_internal}
     (nil))
(insn 647 645 644 99 (parallel [
            (set (reg/v:SI 3 bx [orig:132 i ] [132])
                (plus:SI (reg/v:SI 3 bx [orig:132 i ] [132])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) D:\LHX\7.5 contest\t1.cpp:63 220 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn:TI 644 647 646 99 (set (mem:SI (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4])) [0  S4 A32])
        (reg:SI 0 ax [orig:414 *_120 ] [414])) D:\LHX\7.5 contest\t1.cpp:63 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:414 *_120 ] [414])
        (nil)))
(call_insn:TI 646 644 649 99 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("_ZL6printfPKcz") [flags 0x3]  <function_decl 018c8600 printf>) [0 printf S1 A8])
            (const_int 8 [0x8]))) D:\LHX\7.5 contest\t1.cpp:63 648 {*call_value}
     (expr_list:REG_UNUSED (reg:SI 0 ax)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:SI (use (mem/f:SI (reg/f:SI 7 sp) [0  S4 A32]))
        (expr_list:SI (use (mem:SI (plus:SI (reg/f:SI 7 sp)
                        (const_int 4 [0x4])) [0  S4 A32]))
            (nil))))
(insn:TI 649 646 1229 99 (set (reg/f:SI 1 dx [orig:129 D.83222 ] [129])
        (mem/f/c:SI (symbol_ref:SI ("num") [flags 0x2]  <var_decl 06e5dae0 num>) [6 MEM[(int * *)&num]+0 S4 A32])) 90 {*movsi_internal}
     (nil))
(insn 1229 649 653 99 (set (reg:SI 0 ax [orig:417 D.83218 ] [417])
        (mem/f/c:SI (const:SI (plus:SI (symbol_ref:SI ("num") [flags 0x2]  <var_decl 06e5dae0 num>)
                    (const_int 4 [0x4]))) [6 MEM[(int * *)&num + 4B]+0 S4 A32])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_vector.h:655 90 {*movsi_internal}
     (nil))
(insn:TI 653 1229 654 99 (parallel [
            (set (reg:SI 0 ax [orig:417 D.83218 ] [417])
                (minus:SI (reg:SI 0 ax [orig:417 D.83218 ] [417])
                    (reg/f:SI 1 dx [orig:129 D.83222 ] [129])))
            (clobber (reg:CC 17 flags))
        ]) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_vector.h:655 263 {*subsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn:TI 654 653 655 99 (parallel [
            (set (reg:SI 0 ax [orig:420 D.83218 ] [420])
                (ashiftrt:SI (reg:SI 0 ax [orig:417 D.83218 ] [417])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_vector.h:655 530 {*ashrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn:TI 655 654 656 99 (set (reg:CC 17 flags)
        (compare:CC (reg/v:SI 3 bx [orig:132 i ] [132])
            (reg:SI 0 ax [orig:420 D.83218 ] [420]))) D:\LHX\7.5 contest\t1.cpp:63 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:420 D.83218 ] [420])
        (nil)))
(jump_insn:TI 656 655 1032 99 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 939)
            (pc))) D:\LHX\7.5 contest\t1.cpp:63 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 9100 (nil)))
 -> 939)
;;  succ:       99 [91.0%]  (DFS_BACK,CAN_FALLTHRU)
;;              100 [9.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame]

;; basic block 100, loop depth 0, count 0, freq 9, maybe hot
;;  prev block 99, next block 101, flags: (REACHABLE, RTL)
;;  pred:       98 [9.0%]  (CAN_FALLTHRU)
;;              99 [9.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 100 artificial_defs: { }
;; bb 100 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;; live  kill	 17 [flags]
(code_label 1032 656 778 100 227 "" [1 uses])
(note 778 1032 1651 100 [bb 100] NOTE_INSN_BASIC_BLOCK)
(note 1651 778 1459 100 NOTE_INSN_EPILOGUE_BEG)
(insn:TI 1459 1651 1472 100 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 6 bp)
                    (const_int -16 [0xfffffffffffffff0])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0  A8]))
        ]) D:\LHX\7.5 contest\t1.cpp:64 943 {pro_epilogue_adjust_stack_si_add}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 1472 1459 777 100 (parallel [
            (set (reg/i:SI 0 ax)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) D:\LHX\7.5 contest\t1.cpp:64 82 {*movsi_xor}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 777 1472 1460 100 (use (reg/i:SI 0 ax)) D:\LHX\7.5 contest\t1.cpp:64 -1
     (nil))
(insn/f:TI 1460 777 1461 100 (set (reg:SI 2 cx)
        (mem:SI (post_inc:SI (reg/f:SI 7 sp)) [0  S4 A8])) D:\LHX\7.5 contest\t1.cpp:64 74 {*popsi1}
     (expr_list:REG_CFA_DEF_CFA (reg:SI 2 cx)
        (expr_list:REG_CFA_RESTORE (reg:SI 2 cx)
            (nil))))
(insn/f:TI 1461 1460 1462 100 (set (reg:SI 3 bx)
        (mem:SI (post_inc:SI (reg/f:SI 7 sp)) [0  S4 A8])) D:\LHX\7.5 contest\t1.cpp:64 74 {*popsi1}
     (expr_list:REG_CFA_RESTORE (reg:SI 3 bx)
        (nil)))
(insn/f:TI 1462 1461 1463 100 (set (reg:SI 4 si)
        (mem:SI (post_inc:SI (reg/f:SI 7 sp)) [0  S4 A8])) D:\LHX\7.5 contest\t1.cpp:64 74 {*popsi1}
     (expr_list:REG_CFA_RESTORE (reg:SI 4 si)
        (nil)))
(insn/f:TI 1463 1462 1464 100 (set (reg:SI 5 di)
        (mem:SI (post_inc:SI (reg/f:SI 7 sp)) [0  S4 A8])) D:\LHX\7.5 contest\t1.cpp:64 74 {*popsi1}
     (expr_list:REG_CFA_RESTORE (reg:SI 5 di)
        (nil)))
(insn/f:TI 1464 1463 1465 100 (set (reg/f:SI 6 bp)
        (mem:SI (post_inc:SI (reg/f:SI 7 sp)) [0  S4 A8])) D:\LHX\7.5 contest\t1.cpp:64 74 {*popsi1}
     (expr_list:REG_CFA_RESTORE (reg/f:SI 6 bp)
        (nil)))
(insn/f:TI 1465 1464 1466 100 (set (reg/f:SI 7 sp)
        (plus:SI (reg:SI 2 cx)
            (const_int -4 [0xfffffffffffffffc]))) D:\LHX\7.5 contest\t1.cpp:64 213 {*leasi}
     (expr_list:REG_DEAD (reg:SI 2 cx)
        (expr_list:REG_CFA_DEF_CFA (plus:SI (reg/f:SI 7 sp)
                (const_int 4 [0x4]))
            (nil))))
(jump_insn:TI 1466 1465 1467 100 (simple_return) D:\LHX\7.5 contest\t1.cpp:64 658 {simple_return_internal}
     (nil)
 -> simple_return)
;;  succ:       EXIT [100.0%] 
;; lr  out 	 0 [ax] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 0 [ax] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]

(barrier 1467 1466 1597)
;; basic block 101, loop depth 0, count 0, freq 23, maybe hot
;;  prev block 100, next block 102, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       45 [21.6%]  (CAN_FALLTHRU)
;; bb 101 artificial_defs: { }
;; bb 101 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 0 [ax] 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;; live  in  	 0 [ax] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 3 [bx]
;; live  kill	
(code_label 1597 1467 376 101 240 "" [1 uses])
(note 376 1597 377 101 [bb 101] NOTE_INSN_BASIC_BLOCK)
(insn:TI 377 376 1256 101 (set (mem:SI (reg/f:SI 7 sp) [0  S4 A32])
        (reg/f:SI 3 bx [orig:203 __i$_M_node ] [203])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/ext/new_allocator.h:110 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 3 bx [orig:203 __i$_M_node ] [203])
        (nil)))
(insn 1256 377 378 101 (set (mem/c:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -60 [0xffffffffffffffc4])) [45 %sfp+-36 S4 A32])
        (reg:SI 0 ax [orig:437 __res ] [437])) 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:437 __res ] [437])
        (nil)))
(call_insn:TI 378 1256 1257 101 (call (mem:QI (symbol_ref:SI ("_ZdlPv") [flags 0x43]  <function_decl 01938e00 operator delete>) [0 operator delete S1 A8])
        (const_int 4 [0x4])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/ext/new_allocator.h:110 641 {*call}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (mem/f:SI (reg/f:SI 7 sp) [0  S4 A32]))
        (nil)))
(insn:TI 1257 378 28 101 (set (reg:SI 0 ax [orig:437 __res ] [437])
        (mem/c:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -60 [0xffffffffffffffc4])) [45 %sfp+-36 S4 A32])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1794 90 {*movsi_internal}
     (nil))
(insn:TI 28 1257 1623 101 (set (reg/f:SI 3 bx [orig:203 __i$_M_node ] [203])
        (reg:SI 0 ax [orig:437 __res ] [437])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1794 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:437 __res ] [437])
        (nil)))
(jump_insn 1623 28 1624 101 (set (pc)
        (label_ref 381)) 636 {jump}
     (nil)
 -> 381)
;;  succ:       52 [100.0%]  (CAN_FALLTHRU)
;; lr  out 	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]

(barrier 1624 1623 1622)
;; basic block 102, loop depth 0, count 0, freq 8, maybe hot
;;  prev block 101, next block 103, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       95 [29.0%]  (CAN_FALLTHRU)
;; bb 102 artificial_defs: { }
;; bb 102 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax]
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax]
;; live  kill	
(code_label 1622 1624 583 102 250 "" [1 uses])
(note 583 1622 1219 102 [bb 102] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1219 583 584 102 (set (reg/v:SI 0 ax [orig:83 tmp ] [83])
        (mem/c:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -80 [0xffffffffffffffb0])) [45 %sfp+-56 S4 A32])) D:\LHX\7.5 contest\t1.cpp:57 90 {*movsi_internal}
     (nil))
(insn:TI 584 1219 587 102 (set (mem/c:SI (symbol_ref:SI ("ans") [flags 0x2]  <var_decl 06eeb600 ans>) [21 ans+0 S4 A32])
        (reg/v:SI 0 ax [orig:83 tmp ] [83])) D:\LHX\7.5 contest\t1.cpp:57 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 0 ax [orig:83 tmp ] [83])
        (nil)))
(insn 587 584 588 102 (set (reg/f:SI 0 ax [orig:397 num.D.72607._M_impl._M_start ] [397])
        (mem/f/c:SI (symbol_ref:SI ("num") [flags 0x2]  <var_decl 06e5dae0 num>) [6 num.D.72607._M_impl._M_start+0 S4 A32])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_vector.h:1439 90 {*movsi_internal}
     (expr_list:REG_EQUIV (mem/f/c:SI (symbol_ref:SI ("num") [flags 0x2]  <var_decl 06e5dae0 num>) [6 num.D.72607._M_impl._M_start+0 S4 A32])
        (nil)))
(insn:TI 588 587 1625 102 (set (mem/f/c:SI (const:SI (plus:SI (symbol_ref:SI ("num") [flags 0x2]  <var_decl 06e5dae0 num>)
                    (const_int 4 [0x4]))) [6 MEM[(int * *)&num + 4B]+0 S4 A32])
        (reg/f:SI 0 ax [orig:397 num.D.72607._M_impl._M_start ] [397])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_vector.h:1439 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 0 ax [orig:397 num.D.72607._M_impl._M_start ] [397])
        (nil)))
(jump_insn 1625 588 1626 102 (set (pc)
        (label_ref 1469)) 636 {jump}
     (nil)
 -> 1469)
;;  succ:       97 [100.0%]  (CAN_FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 20 [frame]

(barrier 1626 1625 1618)
;; basic block 103, loop depth 0, count 0, freq 7, maybe hot
;;  prev block 102, next block 104, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       86 [21.6%]  (CAN_FALLTHRU)
;; bb 103 artificial_defs: { }
;; bb 103 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;; live  in  	 0 [ax] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax]
;; live  kill	
(code_label 1618 1626 472 103 248 "" [1 uses])
(note 472 1618 1264 103 [bb 103] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1264 472 1210 103 (set (mem/c:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -72 [0xffffffffffffffb8])) [45 %sfp+-48 S4 A64])
        (reg:SI 0 ax [orig:435 __res ] [435])) 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:435 __res ] [435])
        (nil)))
(insn 1210 1264 473 103 (set (reg/f:SI 0 ax [orig:209 __i$_M_node ] [209])
        (mem/c:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -60 [0xffffffffffffffc4])) [45 %sfp+-36 S4 A32])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/ext/new_allocator.h:110 90 {*movsi_internal}
     (nil))
(insn:TI 473 1210 474 103 (set (mem:SI (reg/f:SI 7 sp) [0  S4 A32])
        (reg/f:SI 0 ax [orig:209 __i$_M_node ] [209])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/ext/new_allocator.h:110 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 0 ax [orig:209 __i$_M_node ] [209])
        (nil)))
(call_insn:TI 474 473 1265 103 (call (mem:QI (symbol_ref:SI ("_ZdlPv") [flags 0x43]  <function_decl 01938e00 operator delete>) [0 operator delete S1 A8])
        (const_int 4 [0x4])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/ext/new_allocator.h:110 641 {*call}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (mem/f:SI (reg/f:SI 7 sp) [0  S4 A32]))
        (nil)))
(insn:TI 1265 474 34 103 (set (reg:SI 0 ax [orig:435 __res ] [435])
        (mem/c:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -72 [0xffffffffffffffb8])) [45 %sfp+-48 S4 A64])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1794 90 {*movsi_internal}
     (nil))
(insn:TI 34 1265 1627 103 (set (mem/c:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -60 [0xffffffffffffffc4])) [45 %sfp+-36 S4 A32])
        (reg:SI 0 ax [orig:435 __res ] [435])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1794 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:435 __res ] [435])
        (nil)))
(jump_insn 1627 34 1628 103 (set (pc)
        (label_ref 475)) 636 {jump}
     (nil)
 -> 475)
;;  succ:       91 [100.0%]  (CAN_FALLTHRU)
;; lr  out 	 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]

(barrier 1628 1627 1614)
;; basic block 104, loop depth 0, count 0, freq 7, maybe hot
;;  prev block 103, next block 105, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       80 [21.6%]  (CAN_FALLTHRU)
;; bb 104 artificial_defs: { }
;; bb 104 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 0 [ax] 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax] 3 [bx]
;; live  kill	
(code_label 1614 1628 556 104 246 "" [1 uses])
(note 556 1614 557 104 [bb 104] NOTE_INSN_BASIC_BLOCK)
(insn:TI 557 556 1266 104 (set (mem:SI (reg/f:SI 7 sp) [0  S4 A32])
        (reg/f:SI 3 bx [orig:181 __i$_M_node ] [181])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/ext/new_allocator.h:110 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 3 bx [orig:181 __i$_M_node ] [181])
        (nil)))
(insn 1266 557 558 104 (set (mem/c:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -60 [0xffffffffffffffc4])) [45 %sfp+-36 S4 A32])
        (reg:SI 0 ax [orig:433 __res ] [433])) 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:433 __res ] [433])
        (nil)))
(call_insn:TI 558 1266 1267 104 (call (mem:QI (symbol_ref:SI ("_ZdlPv") [flags 0x43]  <function_decl 01938e00 operator delete>) [0 operator delete S1 A8])
        (const_int 4 [0x4])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/ext/new_allocator.h:110 641 {*call}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (mem/f:SI (reg/f:SI 7 sp) [0  S4 A32]))
        (nil)))
(insn:TI 1267 558 40 104 (set (reg:SI 0 ax [orig:433 __res ] [433])
        (mem/c:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -60 [0xffffffffffffffc4])) [45 %sfp+-36 S4 A32])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1794 90 {*movsi_internal}
     (nil))
(insn:TI 40 1267 1629 104 (set (reg/f:SI 3 bx [orig:181 __i$_M_node ] [181])
        (reg:SI 0 ax [orig:433 __res ] [433])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1794 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:433 __res ] [433])
        (nil)))
(jump_insn 1629 40 1630 104 (set (pc)
        (label_ref 561)) 636 {jump}
     (nil)
 -> 561)
;;  succ:       85 [100.0%]  (CAN_FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame]

(barrier 1630 1629 1619)
;; basic block 105, loop depth 0, count 0, freq 3
;;  prev block 104, next block 106, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       89 [50.0%]  (CAN_FALLTHRU)
;; bb 105 artificial_defs: { }
;; bb 105 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 17 [flags]
;; lr  def 	
;; live  in  	 0 [ax] 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 20 [frame]
;; live  gen 	
;; live  kill	
(code_label 1619 1630 836 105 249 "" [1 uses])
(note 836 1619 448 105 [bb 105] NOTE_INSN_BASIC_BLOCK)
(jump_insn:TI 448 836 837 105 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 451)
            (pc))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1694 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 451)
;;  succ:       107 [50.0%]  (CAN_FALLTHRU)
;;              106 [50.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 0 [ax] 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]

;; basic block 106, loop depth 0, count 0, freq 2
;;  prev block 105, next block 107, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       105 [50.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 106 artificial_defs: { }
;; bb 106 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 1 [dx] 6 [bp] 7 [sp]
;; lr  def 	 3 [bx] 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 3 [bx] 17 [flags]
;; live  kill	
(note 837 448 1288 106 [bb 106] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1288 837 449 106 (set (reg:SI 3 bx [orig:443 MEM[(const long long unsigned int &)__i$_M_node_241 + 16] ] [443])
        (mem/c:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -72 [0xffffffffffffffb8])) [45 %sfp+-48 S4 A64])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1694 90 {*movsi_internal}
     (nil))
(insn 449 1288 450 106 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 3 bx [orig:443 MEM[(const long long unsigned int &)__i$_M_node_241 + 16] ] [443])
            (mem:SI (plus:SI (reg:SI 1 dx [orig:436 __res+4 ] [436])
                    (const_int 16 [0x10])) [34 MEM[(const long long unsigned int &)__res$second_239 + 16]+0 S4 A64]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1694 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 3 bx [orig:443 MEM[(const long long unsigned int &)__i$_M_node_241 + 16] ] [443])
        (nil)))
(jump_insn:TI 450 449 451 106 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 454)
            (pc))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1694 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 454)
;;  succ:       90 [50.0%]  (CAN_FALLTHRU)
;;              107 [50.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 0 [ax] 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]

;; basic block 107, loop depth 0, count 0, freq 3
;;  prev block 106, next block 108, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       105 [50.0%]  (CAN_FALLTHRU)
;;              106 [50.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 107 artificial_defs: { }
;; bb 107 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
;; live  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax]
;; live  kill	 17 [flags]
(code_label 451 450 838 107 156 "" [1 uses])
(note 838 451 1483 107 [bb 107] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1483 838 1631 107 (parallel [
            (set (reg:SI 0 ax)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1694 82 {*movsi_xor}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(jump_insn 1631 1483 1632 107 (set (pc)
        (label_ref 454)) 636 {jump}
     (nil)
 -> 454)
;;  succ:       90 [100.0%]  (CAN_FALLTHRU)
;; lr  out 	 0 [ax] 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 0 [ax] 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]

(barrier 1632 1631 1615)
;; basic block 108, loop depth 0, count 0, freq 3
;;  prev block 107, next block 109, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       83 [50.0%]  (CAN_FALLTHRU)
;; bb 108 artificial_defs: { }
;; bb 108 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 17 [flags] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 17 [flags]
;; lr  def 	
;; live  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 17 [flags] 20 [frame]
;; live  gen 	
;; live  kill	
(code_label 1615 1632 847 108 247 "" [1 uses])
(note 847 1615 532 108 [bb 108] NOTE_INSN_BASIC_BLOCK)
(jump_insn:TI 532 847 848 108 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 535)
            (pc))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1694 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 535)
;;  succ:       110 [50.0%]  (CAN_FALLTHRU)
;;              109 [50.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame]

;; basic block 109, loop depth 0, count 0, freq 2
;;  prev block 108, next block 110, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       108 [50.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 109 artificial_defs: { }
;; bb 109 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 1 [dx] 2 [cx] 6 [bp] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 17 [flags]
;; live  kill	
(note 848 532 533 109 [bb 109] NOTE_INSN_BASIC_BLOCK)
(insn:TI 533 848 534 109 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 2 cx [orig:445 MEM[(const long long unsigned int &)__i$_M_node_277 + 16] ] [445])
            (mem:SI (plus:SI (reg:SI 1 dx [orig:434 __res+4 ] [434])
                    (const_int 16 [0x10])) [34 MEM[(const long long unsigned int &)__res$second_275 + 16]+0 S4 A64]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1694 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 2 cx [orig:445 MEM[(const long long unsigned int &)__i$_M_node_277 + 16] ] [445])
        (nil)))
(jump_insn:TI 534 533 535 109 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 538)
            (pc))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1694 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 538)
;;  succ:       84 [50.0%]  (CAN_FALLTHRU)
;;              110 [50.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame]

;; basic block 110, loop depth 0, count 0, freq 3
;;  prev block 109, next block 111, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       108 [50.0%]  (CAN_FALLTHRU)
;;              109 [50.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 110 artificial_defs: { }
;; bb 110 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
;; live  in  	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 0 [ax]
;; live  kill	 17 [flags]
(code_label 535 534 849 110 168 "" [1 uses])
(note 849 535 1480 110 [bb 110] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1480 849 1633 110 (parallel [
            (set (reg:SI 0 ax)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:1694 82 {*movsi_xor}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(jump_insn 1633 1480 1634 110 (set (pc)
        (label_ref 538)) 636 {jump}
     (nil)
 -> 538)
;;  succ:       84 [100.0%]  (CAN_FALLTHRU)
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame]

(barrier 1634 1633 791)
;; basic block 111, loop depth 0, count 0, freq 2
;;  prev block 110, next block 112, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       32 [9.0%]  (CAN_FALLTHRU)
;; bb 111 artificial_defs: { }
;; bb 111 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
(code_label 791 1634 790 111 189 "" [1 uses])
(note 790 791 41 111 [bb 111] NOTE_INSN_BASIC_BLOCK)
(insn:TI 41 790 1635 111 (set (mem/c:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -80 [0xffffffffffffffb0])) [45 %sfp+-56 S4 A32])
        (const_int 0 [0])) D:\LHX\7.5 contest\t1.cpp:47 90 {*movsi_internal}
     (nil))
(jump_insn 1635 41 1636 111 (set (pc)
        (label_ref 578)) 636 {jump}
     (nil)
 -> 578)
;;  succ:       95 [100.0%]  (CAN_FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 20 [frame]

(barrier 1636 1635 789)
;; basic block 112, loop depth 0, count 0, freq 2
;;  prev block 111, next block 113, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       26 [9.0%]  (CAN_FALLTHRU)
;; bb 112 artificial_defs: { }
;; bb 112 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
;; live  in  	 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
(code_label 789 1636 788 112 188 "" [1 uses])
(note 788 789 1375 112 [bb 112] NOTE_INSN_BASIC_BLOCK)
(insn:TI 1375 788 1376 112 (set (mem/c:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [45 %sfp+-32 S4 A64])
        (const_int 1 [0x1])) D:\LHX\7.5 contest\t1.cpp:25 90 {*movsi_internal}
     (nil))
(insn 1376 1375 1637 112 (set (mem/c:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [45 %sfp+-28 S4 A32])
        (const_int 0 [0])) D:\LHX\7.5 contest\t1.cpp:25 90 {*movsi_internal}
     (nil))
(jump_insn 1637 1376 1638 112 (set (pc)
        (label_ref 275)) 636 {jump}
     (nil)
 -> 275)
;;  succ:       32 [100.0%]  (CAN_FALLTHRU)
;; lr  out 	 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 5 [di] 6 [bp] 7 [sp] 20 [frame]

(barrier 1638 1637 756)
;; basic block 113, loop depth 0, count 0, freq 0
;;  prev block 112, next block 114, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       8 [1.0%]  (CAN_FALLTHRU)
;; bb 113 artificial_defs: { }
;; bb 113 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
(code_label 756 1638 757 113 119 "" [1 uses])
(note 757 756 758 113 [bb 113] NOTE_INSN_BASIC_BLOCK)
(insn:TI 758 757 759 113 (set (mem/c:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [21 j+0 S4 A32])
        (const_int 1 [0x1])) D:\LHX\7.5 contest\t1.cpp:45 90 {*movsi_internal}
     (nil))
;;  succ:       114 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 114, loop depth 0, count 0, freq 1
;;  prev block 113, next block 115, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       113 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              23 [100.0%]  (CAN_FALLTHRU)
;; bb 114 artificial_defs: { }
;; bb 114 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 2 [cx]
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 2 [cx]
;; live  kill	
(code_label 759 758 215 114 184 "" [1 uses])
(note 215 759 216 114 [bb 114] NOTE_INSN_BASIC_BLOCK)
(insn:TI 216 215 1639 114 (set (reg:SI 2 cx [orig:252 D.83218 ] [252])
        (mem/c:SI (symbol_ref:SI ("ans") [flags 0x2]  <var_decl 06eeb600 ans>) [21 ans+0 S4 A32])) 90 {*movsi_internal}
     (nil))
(jump_insn 1639 216 1640 114 (set (pc)
        (label_ref 617)) 636 {jump}
     (nil)
 -> 617)
;;  succ:       98 [100.0%]  (CAN_FALLTHRU)
;; lr  out 	 2 [cx] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 2 [cx] 6 [bp] 7 [sp] 20 [frame]

(barrier 1640 1639 780)
;; basic block 115, loop depth 0, count 0, freq 1
;;  prev block 114, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [9.0%]  (CAN_FALLTHRU)
;; bb 115 artificial_defs: { }
;; bb 115 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 1 [dx] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 3 [bx]
;; live  in  	 1 [dx] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	 3 [bx]
;; live  kill	
(code_label 780 1640 779 115 186 "" [1 uses])
(note 779 780 877 115 [bb 115] NOTE_INSN_BASIC_BLOCK)
(insn:TI 877 779 878 115 (set (reg:SI 3 bx [orig:429 flag ] [429])
        (const_int 1 [0x1])) D:\LHX\7.5 contest\t1.cpp:11 90 {*movsi_internal}
     (nil))
(insn 878 877 1641 115 (set (mem/c:SI (plus:SI (reg/f:SI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [45 %sfp+-24 S4 A64])
        (const_int 0 [0])) D:\LHX\7.5 contest\t1.cpp:11 90 {*movsi_internal}
     (nil))
(jump_insn 1641 878 1642 115 (set (pc)
        (label_ref 748)) 636 {jump}
     (nil)
 -> 748)
;;  succ:       6 [100.0%]  (CAN_FALLTHRU)
;; lr  out 	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; live  out 	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 20 [frame]

(barrier 1642 1641 1120)
(note 1120 1642 0 NOTE_INSN_DELETED)

;; Function (static initializers for D:\LHX\7.5 contest\t1.cpp) (_GLOBAL__sub_I_s, funcdef_no=6112, decl_uid=80904, symbol_order=4233) (executed once)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;;   ======================================================
;;   -- basic block 2 from 32 to 38 -- after reload
;;   ======================================================

;;	  0--> b  0: i  32{sp=sp-0x1c;clobber flags;clobber [scratch];}:athlon-direct,athlon-ieu
;;	  0--> b  0: i   5cx=`_ZStL8__ioinit'                     :athlon-direct,athlon-ieu
;;	  1--> b  0: i   6call [`_ZNSt8ios_base4InitC1Ev']        :athlon-vector,athlon-ieu
;;	  2--> b  0: i   7[sp]=`__tcf_0'                          :athlon-direct,athlon-agu,athlon-store
;;	  3--> b  0: i   8ax=call [`atexit']                      :athlon-vector,athlon-ieu
;;	  4--> b  0: i  19[sp]=`__tcf_1'                          :athlon-direct,athlon-agu,athlon-store
;;	  4--> b  0: i  10[const(`s'+0x4)]=0                      :athlon-direct,athlon-agu,athlon-store
;;	  5--> b  0: i  12[const(`s'+0x8)]=0                      :athlon-direct,athlon-agu,athlon-store
;;	  5--> b  0: i  14[const(`s'+0x14)]=0                     :athlon-direct,athlon-agu,athlon-store
;;	  6--> b  0: i  16[const(`s'+0xc)]=const(`s'+0x4)         :athlon-direct,athlon-agu,athlon-store
;;	  6--> b  0: i  18[const(`s'+0x10)]=const(`s'+0x4)        :athlon-direct,athlon-agu,athlon-store
;;	  7--> b  0: i  20ax=call [`atexit']                      :athlon-vector,athlon-ieu
;;	  8--> b  0: i  27[sp]=`__tcf_2'                          :athlon-direct,athlon-agu,athlon-store
;;	  8--> b  0: i  22[`num']=0                               :athlon-direct,athlon-agu,athlon-store
;;	  9--> b  0: i  24[const(`num'+0x4)]=0                    :athlon-direct,athlon-agu,athlon-store
;;	  9--> b  0: i  26[const(`num'+0x8)]=0                    :athlon-direct,athlon-agu,athlon-store
;;	 10--> b  0: i  28ax=call [`atexit']                      :athlon-vector,athlon-ieu
;;	 11--> b  0: i  37{sp=sp+0x1c;clobber flags;clobber [scratch];}:athlon-direct,athlon-ieu
;;	 12--> b  0: i  38simple_return                           :athlon-vector,athlon-ieu,athlon-ieu
;;	Ready list (final):  
;;   total time = 12
;;   new head = 32
;;   new tail = 38



starting the processing of deferred insns
ending the processing of deferred insns


(static initializers for D:\LHX\7.5 contest\t1.cpp)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 29 [mm0] 30 [mm1] 31 [mm2]
;;  exit block uses 	 7 [sp]
;;  regs ever live 	 0[ax] 2[cx] 7[sp] 17[flags]
;;  ref usage 	r0={5d} r1={5d} r2={6d,1u} r7={3d,16u} r8={4d} r9={4d} r10={4d} r11={4d} r12={4d} r13={4d} r14={4d} r15={4d} r17={6d} r18={4d} r19={4d} r21={5d} r22={5d} r23={5d} r24={4d} r25={4d} r26={4d} r27={4d} r28={4d} r29={5d} r30={5d} r31={5d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={4d} r38={4d} r39={4d} r40={4d} r41={4d} r42={4d} r43={4d} r44={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r76={4d} 
;;    total ref usage 312{295d,17u,0e} in 19{15 regular + 4 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;; live  in  	 7 [sp]
;; live  gen 	 0 [ax] 2 [cx] 7 [sp]
;; live  kill	 17 [flags]
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 32 2 NOTE_INSN_FUNCTION_BEG)
(insn/f:TI 32 2 33 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -28 [0xffffffffffffffe4])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0  A8]))
        ]) D:\LHX\7.5 contest\t1.cpp:64 943 {pro_epilogue_adjust_stack_si_add}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -28 [0xffffffffffffffe4])))
            (nil))))
(note 33 32 5 2 NOTE_INSN_PROLOGUE_END)
(insn 5 33 6 2 (set (reg:SI 2 cx)
        (symbol_ref:SI ("_ZStL8__ioinit") [flags 0x2]  <var_decl 035d1180 __ioinit>)) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/iostream:74 90 {*movsi_internal}
     (nil))
(call_insn:TI 6 5 7 2 (call (mem:QI (symbol_ref:SI ("_ZNSt8ios_base4InitC1Ev") [flags 0x43]  <function_decl 032bbb80 __comp_ctor >) [0 __comp_ctor  S1 A8])
        (const_int 0 [0])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/iostream:74 641 {*call}
     (expr_list:REG_DEAD (reg:SI 2 cx)
        (nil))
    (expr_list:SI (use (reg:SI 2 cx))
        (nil)))
(insn:TI 7 6 8 2 (set (mem:SI (reg/f:SI 7 sp) [0  S4 A32])
        (symbol_ref:SI ("__tcf_0") [flags 0x3]  <function_decl 0737aa00 __tcf_0>)) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/iostream:74 90 {*movsi_internal}
     (nil))
(call_insn:TI 8 7 19 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("atexit") [flags 0x43]  <function_decl 0737aa80 atexit>) [0 atexit S1 A8])
            (const_int 4 [0x4]))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/iostream:74 648 {*call_value}
     (expr_list:REG_UNUSED (reg:SI 0 ax)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:SI (use (mem/f:SI (reg/f:SI 7 sp) [0  S4 A32]))
        (nil)))
(insn:TI 19 8 10 2 (set (mem:SI (reg/f:SI 7 sp) [0  S4 A32])
        (symbol_ref:SI ("__tcf_1") [flags 0x3]  <function_decl 0737ac80 __tcf_1>)) D:\LHX\7.5 contest\t1.cpp:20 90 {*movsi_internal}
     (nil))
(insn 10 19 12 2 (set (mem/c:SI (const:SI (plus:SI (symbol_ref:SI ("s") [flags 0x2]  <var_decl 06d9cd20 s>)
                    (const_int 4 [0x4]))) [20 MEM[(struct _Rb_tree_impl *)&s]._M_header._M_color+0 S4 A32])
        (const_int 0 [0])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:463 90 {*movsi_internal}
     (nil))
(insn:TI 12 10 14 2 (set (mem/f/c:SI (const:SI (plus:SI (symbol_ref:SI ("s") [flags 0x2]  <var_decl 06d9cd20 s>)
                    (const_int 8 [0x8]))) [6 MEM[(struct _Rb_tree_impl *)&s]._M_header._M_parent+0 S4 A32])
        (const_int 0 [0])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:463 90 {*movsi_internal}
     (nil))
(insn 14 12 16 2 (set (mem/c:SI (const:SI (plus:SI (symbol_ref:SI ("s") [flags 0x2]  <var_decl 06d9cd20 s>)
                    (const_int 20 [0x14]))) [21 MEM[(struct _Rb_tree_impl *)&s]._M_node_count+0 S4 A32])
        (const_int 0 [0])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:463 90 {*movsi_internal}
     (nil))
(insn:TI 16 14 18 2 (set (mem/f/c:SI (const:SI (plus:SI (symbol_ref:SI ("s") [flags 0x2]  <var_decl 06d9cd20 s>)
                    (const_int 12 [0xc]))) [6 MEM[(struct _Rb_tree_impl *)&s]._M_header._M_left+0 S4 A32])
        (const:SI (plus:SI (symbol_ref:SI ("s") [flags 0x2]  <var_decl 06d9cd20 s>)
                (const_int 4 [0x4])))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:484 90 {*movsi_internal}
     (nil))
(insn 18 16 20 2 (set (mem/f/c:SI (const:SI (plus:SI (symbol_ref:SI ("s") [flags 0x2]  <var_decl 06d9cd20 s>)
                    (const_int 16 [0x10]))) [6 MEM[(struct _Rb_tree_impl *)&s]._M_header._M_right+0 S4 A32])
        (const:SI (plus:SI (symbol_ref:SI ("s") [flags 0x2]  <var_decl 06d9cd20 s>)
                (const_int 4 [0x4])))) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_tree.h:485 90 {*movsi_internal}
     (nil))
(call_insn:TI 20 18 27 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("atexit") [flags 0x43]  <function_decl 0737aa80 atexit>) [0 atexit S1 A8])
            (const_int 4 [0x4]))) D:\LHX\7.5 contest\t1.cpp:20 648 {*call_value}
     (expr_list:REG_UNUSED (reg:SI 0 ax)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:SI (use (mem/f:SI (reg/f:SI 7 sp) [0  S4 A32]))
        (nil)))
(insn:TI 27 20 22 2 (set (mem:SI (reg/f:SI 7 sp) [0  S4 A32])
        (symbol_ref:SI ("__tcf_2") [flags 0x3]  <function_decl 0737ad00 __tcf_2>)) D:\LHX\7.5 contest\t1.cpp:23 90 {*movsi_internal}
     (nil))
(insn 22 27 24 2 (set (mem/f/c:SI (symbol_ref:SI ("num") [flags 0x2]  <var_decl 06e5dae0 num>) [6 MEM[(struct _Vector_impl *)&num]._M_start+0 S4 A32])
        (const_int 0 [0])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_vector.h:87 90 {*movsi_internal}
     (nil))
(insn:TI 24 22 26 2 (set (mem/f/c:SI (const:SI (plus:SI (symbol_ref:SI ("num") [flags 0x2]  <var_decl 06e5dae0 num>)
                    (const_int 4 [0x4]))) [6 MEM[(struct _Vector_impl *)&num]._M_finish+0 S4 A32])
        (const_int 0 [0])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_vector.h:87 90 {*movsi_internal}
     (nil))
(insn 26 24 28 2 (set (mem/f/c:SI (const:SI (plus:SI (symbol_ref:SI ("num") [flags 0x2]  <var_decl 06e5dae0 num>)
                    (const_int 8 [0x8]))) [6 MEM[(struct _Vector_impl *)&num]._M_end_of_storage+0 S4 A32])
        (const_int 0 [0])) D:/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++/bits/stl_vector.h:87 90 {*movsi_internal}
     (nil))
(call_insn:TI 28 26 40 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("atexit") [flags 0x43]  <function_decl 0737aa80 atexit>) [0 atexit S1 A8])
            (const_int 4 [0x4]))) D:\LHX\7.5 contest\t1.cpp:23 648 {*call_value}
     (expr_list:REG_UNUSED (reg:SI 0 ax)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:SI (use (mem/f:SI (reg/f:SI 7 sp) [0  S4 A32]))
        (nil)))
(note 40 28 37 2 NOTE_INSN_EPILOGUE_BEG)
(insn/f:TI 37 40 38 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 28 [0x1c])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0  A8]))
        ]) D:\LHX\7.5 contest\t1.cpp:64 943 {pro_epilogue_adjust_stack_si_add}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 28 [0x1c])))
            (nil))))
(jump_insn:TI 38 37 39 2 (simple_return) D:\LHX\7.5 contest\t1.cpp:64 658 {simple_return_internal}
     (nil)
 -> simple_return)
;;  succ:       EXIT [100.0%] 
;; lr  out 	 7 [sp]
;; live  out 	 7 [sp]

(barrier 39 38 31)
(note 31 39 0 NOTE_INSN_DELETED)
